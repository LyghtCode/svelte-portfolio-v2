var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __esm = (fn, res) => function __init() {
  return fn && (res = (0, fn[Object.keys(fn)[0]])(fn = 0)), res;
};
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[Object.keys(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all) => {
  __markAsModule(target);
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && key !== "default")
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toModule = (module2) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", module2 && module2.__esModule && "default" in module2 ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};

// node_modules/@sveltejs/kit/dist/install-fetch.js
function dataUriToBuffer(uri) {
  if (!/^data:/i.test(uri)) {
    throw new TypeError('`uri` does not appear to be a Data URI (must begin with "data:")');
  }
  uri = uri.replace(/\r?\n/g, "");
  const firstComma = uri.indexOf(",");
  if (firstComma === -1 || firstComma <= 4) {
    throw new TypeError("malformed data: URI");
  }
  const meta = uri.substring(5, firstComma).split(";");
  let charset = "";
  let base64 = false;
  const type = meta[0] || "text/plain";
  let typeFull = type;
  for (let i = 1; i < meta.length; i++) {
    if (meta[i] === "base64") {
      base64 = true;
    } else {
      typeFull += `;${meta[i]}`;
      if (meta[i].indexOf("charset=") === 0) {
        charset = meta[i].substring(8);
      }
    }
  }
  if (!meta[0] && !charset.length) {
    typeFull += ";charset=US-ASCII";
    charset = "US-ASCII";
  }
  const encoding = base64 ? "base64" : "ascii";
  const data = unescape(uri.substring(firstComma + 1));
  const buffer = Buffer.from(data, encoding);
  buffer.type = type;
  buffer.typeFull = typeFull;
  buffer.charset = charset;
  return buffer;
}
async function* toIterator(parts, clone2 = true) {
  for (const part of parts) {
    if ("stream" in part) {
      yield* part.stream();
    } else if (ArrayBuffer.isView(part)) {
      if (clone2) {
        let position = part.byteOffset;
        const end = part.byteOffset + part.byteLength;
        while (position !== end) {
          const size = Math.min(end - position, POOL_SIZE);
          const chunk = part.buffer.slice(position, position + size);
          position += chunk.byteLength;
          yield new Uint8Array(chunk);
        }
      } else {
        yield part;
      }
    } else {
      let position = 0;
      while (position !== part.size) {
        const chunk = part.slice(position, Math.min(part.size, position + POOL_SIZE));
        const buffer = await chunk.arrayBuffer();
        position += buffer.byteLength;
        yield new Uint8Array(buffer);
      }
    }
  }
}
function isFormData(object2) {
  return typeof object2 === "object" && typeof object2.append === "function" && typeof object2.set === "function" && typeof object2.get === "function" && typeof object2.getAll === "function" && typeof object2.delete === "function" && typeof object2.keys === "function" && typeof object2.values === "function" && typeof object2.entries === "function" && typeof object2.constructor === "function" && object2[NAME] === "FormData";
}
function getHeader(boundary, name, field) {
  let header = "";
  header += `${dashes}${boundary}${carriage}`;
  header += `Content-Disposition: form-data; name="${name}"`;
  if (isBlob(field)) {
    header += `; filename="${field.name}"${carriage}`;
    header += `Content-Type: ${field.type || "application/octet-stream"}`;
  }
  return `${header}${carriage.repeat(2)}`;
}
async function* formDataIterator(form, boundary) {
  for (const [name, value] of form) {
    yield getHeader(boundary, name, value);
    if (isBlob(value)) {
      yield* value.stream();
    } else {
      yield value;
    }
    yield carriage;
  }
  yield getFooter(boundary);
}
function getFormDataLength(form, boundary) {
  let length = 0;
  for (const [name, value] of form) {
    length += Buffer.byteLength(getHeader(boundary, name, value));
    length += isBlob(value) ? value.size : Buffer.byteLength(String(value));
    length += carriageLength;
  }
  length += Buffer.byteLength(getFooter(boundary));
  return length;
}
async function consumeBody(data) {
  if (data[INTERNALS$2].disturbed) {
    throw new TypeError(`body used already for: ${data.url}`);
  }
  data[INTERNALS$2].disturbed = true;
  if (data[INTERNALS$2].error) {
    throw data[INTERNALS$2].error;
  }
  let { body } = data;
  if (body === null) {
    return Buffer.alloc(0);
  }
  if (isBlob(body)) {
    body = import_stream.default.Readable.from(body.stream());
  }
  if (Buffer.isBuffer(body)) {
    return body;
  }
  if (!(body instanceof import_stream.default)) {
    return Buffer.alloc(0);
  }
  const accum = [];
  let accumBytes = 0;
  try {
    for await (const chunk of body) {
      if (data.size > 0 && accumBytes + chunk.length > data.size) {
        const error2 = new FetchError(`content size at ${data.url} over limit: ${data.size}`, "max-size");
        body.destroy(error2);
        throw error2;
      }
      accumBytes += chunk.length;
      accum.push(chunk);
    }
  } catch (error2) {
    const error_ = error2 instanceof FetchBaseError ? error2 : new FetchError(`Invalid response body while trying to fetch ${data.url}: ${error2.message}`, "system", error2);
    throw error_;
  }
  if (body.readableEnded === true || body._readableState.ended === true) {
    try {
      if (accum.every((c) => typeof c === "string")) {
        return Buffer.from(accum.join(""));
      }
      return Buffer.concat(accum, accumBytes);
    } catch (error2) {
      throw new FetchError(`Could not create Buffer from response body for ${data.url}: ${error2.message}`, "system", error2);
    }
  } else {
    throw new FetchError(`Premature close of server response while trying to fetch ${data.url}`);
  }
}
function fromRawHeaders(headers = []) {
  return new Headers(headers.reduce((result, value, index, array) => {
    if (index % 2 === 0) {
      result.push(array.slice(index, index + 2));
    }
    return result;
  }, []).filter(([name, value]) => {
    try {
      validateHeaderName(name);
      validateHeaderValue(name, String(value));
      return true;
    } catch {
      return false;
    }
  }));
}
async function fetch(url, options_) {
  return new Promise((resolve2, reject) => {
    const request = new Request(url, options_);
    const options2 = getNodeRequestOptions(request);
    if (!supportedSchemas.has(options2.protocol)) {
      throw new TypeError(`node-fetch cannot load ${url}. URL scheme "${options2.protocol.replace(/:$/, "")}" is not supported.`);
    }
    if (options2.protocol === "data:") {
      const data = dataUriToBuffer$1(request.url);
      const response2 = new Response(data, { headers: { "Content-Type": data.typeFull } });
      resolve2(response2);
      return;
    }
    const send = (options2.protocol === "https:" ? import_https.default : import_http.default).request;
    const { signal } = request;
    let response = null;
    const abort = () => {
      const error2 = new AbortError("The operation was aborted.");
      reject(error2);
      if (request.body && request.body instanceof import_stream.default.Readable) {
        request.body.destroy(error2);
      }
      if (!response || !response.body) {
        return;
      }
      response.body.emit("error", error2);
    };
    if (signal && signal.aborted) {
      abort();
      return;
    }
    const abortAndFinalize = () => {
      abort();
      finalize();
    };
    const request_ = send(options2);
    if (signal) {
      signal.addEventListener("abort", abortAndFinalize);
    }
    const finalize = () => {
      request_.abort();
      if (signal) {
        signal.removeEventListener("abort", abortAndFinalize);
      }
    };
    request_.on("error", (error2) => {
      reject(new FetchError(`request to ${request.url} failed, reason: ${error2.message}`, "system", error2));
      finalize();
    });
    fixResponseChunkedTransferBadEnding(request_, (error2) => {
      response.body.destroy(error2);
    });
    if (process.version < "v14") {
      request_.on("socket", (s2) => {
        let endedWithEventsCount;
        s2.prependListener("end", () => {
          endedWithEventsCount = s2._eventsCount;
        });
        s2.prependListener("close", (hadError) => {
          if (response && endedWithEventsCount < s2._eventsCount && !hadError) {
            const error2 = new Error("Premature close");
            error2.code = "ERR_STREAM_PREMATURE_CLOSE";
            response.body.emit("error", error2);
          }
        });
      });
    }
    request_.on("response", (response_) => {
      request_.setTimeout(0);
      const headers = fromRawHeaders(response_.rawHeaders);
      if (isRedirect(response_.statusCode)) {
        const location2 = headers.get("Location");
        const locationURL = location2 === null ? null : new URL(location2, request.url);
        switch (request.redirect) {
          case "error":
            reject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, "no-redirect"));
            finalize();
            return;
          case "manual":
            if (locationURL !== null) {
              headers.set("Location", locationURL);
            }
            break;
          case "follow": {
            if (locationURL === null) {
              break;
            }
            if (request.counter >= request.follow) {
              reject(new FetchError(`maximum redirect reached at: ${request.url}`, "max-redirect"));
              finalize();
              return;
            }
            const requestOptions = {
              headers: new Headers(request.headers),
              follow: request.follow,
              counter: request.counter + 1,
              agent: request.agent,
              compress: request.compress,
              method: request.method,
              body: request.body,
              signal: request.signal,
              size: request.size
            };
            if (response_.statusCode !== 303 && request.body && options_.body instanceof import_stream.default.Readable) {
              reject(new FetchError("Cannot follow redirect with body being a readable stream", "unsupported-redirect"));
              finalize();
              return;
            }
            if (response_.statusCode === 303 || (response_.statusCode === 301 || response_.statusCode === 302) && request.method === "POST") {
              requestOptions.method = "GET";
              requestOptions.body = void 0;
              requestOptions.headers.delete("content-length");
            }
            resolve2(fetch(new Request(locationURL, requestOptions)));
            finalize();
            return;
          }
          default:
            return reject(new TypeError(`Redirect option '${request.redirect}' is not a valid value of RequestRedirect`));
        }
      }
      if (signal) {
        response_.once("end", () => {
          signal.removeEventListener("abort", abortAndFinalize);
        });
      }
      let body = (0, import_stream.pipeline)(response_, new import_stream.PassThrough(), reject);
      if (process.version < "v12.10") {
        response_.on("aborted", abortAndFinalize);
      }
      const responseOptions = {
        url: request.url,
        status: response_.statusCode,
        statusText: response_.statusMessage,
        headers,
        size: request.size,
        counter: request.counter,
        highWaterMark: request.highWaterMark
      };
      const codings = headers.get("Content-Encoding");
      if (!request.compress || request.method === "HEAD" || codings === null || response_.statusCode === 204 || response_.statusCode === 304) {
        response = new Response(body, responseOptions);
        resolve2(response);
        return;
      }
      const zlibOptions = {
        flush: import_zlib.default.Z_SYNC_FLUSH,
        finishFlush: import_zlib.default.Z_SYNC_FLUSH
      };
      if (codings === "gzip" || codings === "x-gzip") {
        body = (0, import_stream.pipeline)(body, import_zlib.default.createGunzip(zlibOptions), reject);
        response = new Response(body, responseOptions);
        resolve2(response);
        return;
      }
      if (codings === "deflate" || codings === "x-deflate") {
        const raw = (0, import_stream.pipeline)(response_, new import_stream.PassThrough(), reject);
        raw.once("data", (chunk) => {
          body = (chunk[0] & 15) === 8 ? (0, import_stream.pipeline)(body, import_zlib.default.createInflate(), reject) : (0, import_stream.pipeline)(body, import_zlib.default.createInflateRaw(), reject);
          response = new Response(body, responseOptions);
          resolve2(response);
        });
        return;
      }
      if (codings === "br") {
        body = (0, import_stream.pipeline)(body, import_zlib.default.createBrotliDecompress(), reject);
        response = new Response(body, responseOptions);
        resolve2(response);
        return;
      }
      response = new Response(body, responseOptions);
      resolve2(response);
    });
    writeToStream(request_, request);
  });
}
function fixResponseChunkedTransferBadEnding(request, errorCallback) {
  const LAST_CHUNK = Buffer.from("0\r\n\r\n");
  let isChunkedTransfer = false;
  let properLastChunkReceived = false;
  let previousChunk;
  request.on("response", (response) => {
    const { headers } = response;
    isChunkedTransfer = headers["transfer-encoding"] === "chunked" && !headers["content-length"];
  });
  request.on("socket", (socket) => {
    const onSocketClose = () => {
      if (isChunkedTransfer && !properLastChunkReceived) {
        const error2 = new Error("Premature close");
        error2.code = "ERR_STREAM_PREMATURE_CLOSE";
        errorCallback(error2);
      }
    };
    socket.prependListener("close", onSocketClose);
    request.on("abort", () => {
      socket.removeListener("close", onSocketClose);
    });
    socket.on("data", (buf) => {
      properLastChunkReceived = Buffer.compare(buf.slice(-5), LAST_CHUNK) === 0;
      if (!properLastChunkReceived && previousChunk) {
        properLastChunkReceived = Buffer.compare(previousChunk.slice(-3), LAST_CHUNK.slice(0, 3)) === 0 && Buffer.compare(buf.slice(-2), LAST_CHUNK.slice(3)) === 0;
      }
      previousChunk = buf;
    });
  });
}
var import_http, import_https, import_zlib, import_stream, import_util, import_crypto, import_url, commonjsGlobal, src, dataUriToBuffer$1, ponyfill_es2018, POOL_SIZE$1, POOL_SIZE, _Blob, Blob2, Blob$1, FetchBaseError, FetchError, NAME, isURLSearchParameters, isBlob, isAbortSignal, carriage, dashes, carriageLength, getFooter, getBoundary, INTERNALS$2, Body, clone, extractContentType, getTotalBytes, writeToStream, validateHeaderName, validateHeaderValue, Headers, redirectStatus, isRedirect, INTERNALS$1, Response, getSearch, INTERNALS, isRequest, Request, getNodeRequestOptions, AbortError, supportedSchemas;
var init_install_fetch = __esm({
  "node_modules/@sveltejs/kit/dist/install-fetch.js"() {
    init_shims();
    import_http = __toModule(require("http"));
    import_https = __toModule(require("https"));
    import_zlib = __toModule(require("zlib"));
    import_stream = __toModule(require("stream"));
    import_util = __toModule(require("util"));
    import_crypto = __toModule(require("crypto"));
    import_url = __toModule(require("url"));
    commonjsGlobal = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
    src = dataUriToBuffer;
    dataUriToBuffer$1 = src;
    ponyfill_es2018 = { exports: {} };
    (function(module2, exports) {
      (function(global2, factory) {
        factory(exports);
      })(commonjsGlobal, function(exports2) {
        const SymbolPolyfill = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? Symbol : (description5) => `Symbol(${description5})`;
        function noop2() {
          return void 0;
        }
        function getGlobals() {
          if (typeof self !== "undefined") {
            return self;
          } else if (typeof window !== "undefined") {
            return window;
          } else if (typeof commonjsGlobal !== "undefined") {
            return commonjsGlobal;
          }
          return void 0;
        }
        const globals = getGlobals();
        function typeIsObject(x) {
          return typeof x === "object" && x !== null || typeof x === "function";
        }
        const rethrowAssertionErrorRejection = noop2;
        const originalPromise = Promise;
        const originalPromiseThen = Promise.prototype.then;
        const originalPromiseResolve = Promise.resolve.bind(originalPromise);
        const originalPromiseReject = Promise.reject.bind(originalPromise);
        function newPromise(executor) {
          return new originalPromise(executor);
        }
        function promiseResolvedWith(value) {
          return originalPromiseResolve(value);
        }
        function promiseRejectedWith(reason) {
          return originalPromiseReject(reason);
        }
        function PerformPromiseThen(promise, onFulfilled, onRejected) {
          return originalPromiseThen.call(promise, onFulfilled, onRejected);
        }
        function uponPromise(promise, onFulfilled, onRejected) {
          PerformPromiseThen(PerformPromiseThen(promise, onFulfilled, onRejected), void 0, rethrowAssertionErrorRejection);
        }
        function uponFulfillment(promise, onFulfilled) {
          uponPromise(promise, onFulfilled);
        }
        function uponRejection(promise, onRejected) {
          uponPromise(promise, void 0, onRejected);
        }
        function transformPromiseWith(promise, fulfillmentHandler, rejectionHandler) {
          return PerformPromiseThen(promise, fulfillmentHandler, rejectionHandler);
        }
        function setPromiseIsHandledToTrue(promise) {
          PerformPromiseThen(promise, void 0, rethrowAssertionErrorRejection);
        }
        const queueMicrotask = (() => {
          const globalQueueMicrotask = globals && globals.queueMicrotask;
          if (typeof globalQueueMicrotask === "function") {
            return globalQueueMicrotask;
          }
          const resolvedPromise = promiseResolvedWith(void 0);
          return (fn) => PerformPromiseThen(resolvedPromise, fn);
        })();
        function reflectCall(F, V, args) {
          if (typeof F !== "function") {
            throw new TypeError("Argument is not a function");
          }
          return Function.prototype.apply.call(F, V, args);
        }
        function promiseCall(F, V, args) {
          try {
            return promiseResolvedWith(reflectCall(F, V, args));
          } catch (value) {
            return promiseRejectedWith(value);
          }
        }
        const QUEUE_MAX_ARRAY_SIZE = 16384;
        class SimpleQueue {
          constructor() {
            this._cursor = 0;
            this._size = 0;
            this._front = {
              _elements: [],
              _next: void 0
            };
            this._back = this._front;
            this._cursor = 0;
            this._size = 0;
          }
          get length() {
            return this._size;
          }
          push(element) {
            const oldBack = this._back;
            let newBack = oldBack;
            if (oldBack._elements.length === QUEUE_MAX_ARRAY_SIZE - 1) {
              newBack = {
                _elements: [],
                _next: void 0
              };
            }
            oldBack._elements.push(element);
            if (newBack !== oldBack) {
              this._back = newBack;
              oldBack._next = newBack;
            }
            ++this._size;
          }
          shift() {
            const oldFront = this._front;
            let newFront = oldFront;
            const oldCursor = this._cursor;
            let newCursor = oldCursor + 1;
            const elements = oldFront._elements;
            const element = elements[oldCursor];
            if (newCursor === QUEUE_MAX_ARRAY_SIZE) {
              newFront = oldFront._next;
              newCursor = 0;
            }
            --this._size;
            this._cursor = newCursor;
            if (oldFront !== newFront) {
              this._front = newFront;
            }
            elements[oldCursor] = void 0;
            return element;
          }
          forEach(callback) {
            let i = this._cursor;
            let node = this._front;
            let elements = node._elements;
            while (i !== elements.length || node._next !== void 0) {
              if (i === elements.length) {
                node = node._next;
                elements = node._elements;
                i = 0;
                if (elements.length === 0) {
                  break;
                }
              }
              callback(elements[i]);
              ++i;
            }
          }
          peek() {
            const front = this._front;
            const cursor = this._cursor;
            return front._elements[cursor];
          }
        }
        function ReadableStreamReaderGenericInitialize(reader, stream) {
          reader._ownerReadableStream = stream;
          stream._reader = reader;
          if (stream._state === "readable") {
            defaultReaderClosedPromiseInitialize(reader);
          } else if (stream._state === "closed") {
            defaultReaderClosedPromiseInitializeAsResolved(reader);
          } else {
            defaultReaderClosedPromiseInitializeAsRejected(reader, stream._storedError);
          }
        }
        function ReadableStreamReaderGenericCancel(reader, reason) {
          const stream = reader._ownerReadableStream;
          return ReadableStreamCancel(stream, reason);
        }
        function ReadableStreamReaderGenericRelease(reader) {
          if (reader._ownerReadableStream._state === "readable") {
            defaultReaderClosedPromiseReject(reader, new TypeError(`Reader was released and can no longer be used to monitor the stream's closedness`));
          } else {
            defaultReaderClosedPromiseResetToRejected(reader, new TypeError(`Reader was released and can no longer be used to monitor the stream's closedness`));
          }
          reader._ownerReadableStream._reader = void 0;
          reader._ownerReadableStream = void 0;
        }
        function readerLockException(name) {
          return new TypeError("Cannot " + name + " a stream using a released reader");
        }
        function defaultReaderClosedPromiseInitialize(reader) {
          reader._closedPromise = newPromise((resolve2, reject) => {
            reader._closedPromise_resolve = resolve2;
            reader._closedPromise_reject = reject;
          });
        }
        function defaultReaderClosedPromiseInitializeAsRejected(reader, reason) {
          defaultReaderClosedPromiseInitialize(reader);
          defaultReaderClosedPromiseReject(reader, reason);
        }
        function defaultReaderClosedPromiseInitializeAsResolved(reader) {
          defaultReaderClosedPromiseInitialize(reader);
          defaultReaderClosedPromiseResolve(reader);
        }
        function defaultReaderClosedPromiseReject(reader, reason) {
          if (reader._closedPromise_reject === void 0) {
            return;
          }
          setPromiseIsHandledToTrue(reader._closedPromise);
          reader._closedPromise_reject(reason);
          reader._closedPromise_resolve = void 0;
          reader._closedPromise_reject = void 0;
        }
        function defaultReaderClosedPromiseResetToRejected(reader, reason) {
          defaultReaderClosedPromiseInitializeAsRejected(reader, reason);
        }
        function defaultReaderClosedPromiseResolve(reader) {
          if (reader._closedPromise_resolve === void 0) {
            return;
          }
          reader._closedPromise_resolve(void 0);
          reader._closedPromise_resolve = void 0;
          reader._closedPromise_reject = void 0;
        }
        const AbortSteps = SymbolPolyfill("[[AbortSteps]]");
        const ErrorSteps = SymbolPolyfill("[[ErrorSteps]]");
        const CancelSteps = SymbolPolyfill("[[CancelSteps]]");
        const PullSteps = SymbolPolyfill("[[PullSteps]]");
        const NumberIsFinite = Number.isFinite || function(x) {
          return typeof x === "number" && isFinite(x);
        };
        const MathTrunc = Math.trunc || function(v) {
          return v < 0 ? Math.ceil(v) : Math.floor(v);
        };
        function isDictionary(x) {
          return typeof x === "object" || typeof x === "function";
        }
        function assertDictionary(obj, context) {
          if (obj !== void 0 && !isDictionary(obj)) {
            throw new TypeError(`${context} is not an object.`);
          }
        }
        function assertFunction(x, context) {
          if (typeof x !== "function") {
            throw new TypeError(`${context} is not a function.`);
          }
        }
        function isObject(x) {
          return typeof x === "object" && x !== null || typeof x === "function";
        }
        function assertObject(x, context) {
          if (!isObject(x)) {
            throw new TypeError(`${context} is not an object.`);
          }
        }
        function assertRequiredArgument(x, position, context) {
          if (x === void 0) {
            throw new TypeError(`Parameter ${position} is required in '${context}'.`);
          }
        }
        function assertRequiredField(x, field, context) {
          if (x === void 0) {
            throw new TypeError(`${field} is required in '${context}'.`);
          }
        }
        function convertUnrestrictedDouble(value) {
          return Number(value);
        }
        function censorNegativeZero(x) {
          return x === 0 ? 0 : x;
        }
        function integerPart(x) {
          return censorNegativeZero(MathTrunc(x));
        }
        function convertUnsignedLongLongWithEnforceRange(value, context) {
          const lowerBound = 0;
          const upperBound = Number.MAX_SAFE_INTEGER;
          let x = Number(value);
          x = censorNegativeZero(x);
          if (!NumberIsFinite(x)) {
            throw new TypeError(`${context} is not a finite number`);
          }
          x = integerPart(x);
          if (x < lowerBound || x > upperBound) {
            throw new TypeError(`${context} is outside the accepted range of ${lowerBound} to ${upperBound}, inclusive`);
          }
          if (!NumberIsFinite(x) || x === 0) {
            return 0;
          }
          return x;
        }
        function assertReadableStream(x, context) {
          if (!IsReadableStream(x)) {
            throw new TypeError(`${context} is not a ReadableStream.`);
          }
        }
        function AcquireReadableStreamDefaultReader(stream) {
          return new ReadableStreamDefaultReader(stream);
        }
        function ReadableStreamAddReadRequest(stream, readRequest) {
          stream._reader._readRequests.push(readRequest);
        }
        function ReadableStreamFulfillReadRequest(stream, chunk, done) {
          const reader = stream._reader;
          const readRequest = reader._readRequests.shift();
          if (done) {
            readRequest._closeSteps();
          } else {
            readRequest._chunkSteps(chunk);
          }
        }
        function ReadableStreamGetNumReadRequests(stream) {
          return stream._reader._readRequests.length;
        }
        function ReadableStreamHasDefaultReader(stream) {
          const reader = stream._reader;
          if (reader === void 0) {
            return false;
          }
          if (!IsReadableStreamDefaultReader(reader)) {
            return false;
          }
          return true;
        }
        class ReadableStreamDefaultReader {
          constructor(stream) {
            assertRequiredArgument(stream, 1, "ReadableStreamDefaultReader");
            assertReadableStream(stream, "First parameter");
            if (IsReadableStreamLocked(stream)) {
              throw new TypeError("This stream has already been locked for exclusive reading by another reader");
            }
            ReadableStreamReaderGenericInitialize(this, stream);
            this._readRequests = new SimpleQueue();
          }
          get closed() {
            if (!IsReadableStreamDefaultReader(this)) {
              return promiseRejectedWith(defaultReaderBrandCheckException("closed"));
            }
            return this._closedPromise;
          }
          cancel(reason = void 0) {
            if (!IsReadableStreamDefaultReader(this)) {
              return promiseRejectedWith(defaultReaderBrandCheckException("cancel"));
            }
            if (this._ownerReadableStream === void 0) {
              return promiseRejectedWith(readerLockException("cancel"));
            }
            return ReadableStreamReaderGenericCancel(this, reason);
          }
          read() {
            if (!IsReadableStreamDefaultReader(this)) {
              return promiseRejectedWith(defaultReaderBrandCheckException("read"));
            }
            if (this._ownerReadableStream === void 0) {
              return promiseRejectedWith(readerLockException("read from"));
            }
            let resolvePromise;
            let rejectPromise;
            const promise = newPromise((resolve2, reject) => {
              resolvePromise = resolve2;
              rejectPromise = reject;
            });
            const readRequest = {
              _chunkSteps: (chunk) => resolvePromise({ value: chunk, done: false }),
              _closeSteps: () => resolvePromise({ value: void 0, done: true }),
              _errorSteps: (e) => rejectPromise(e)
            };
            ReadableStreamDefaultReaderRead(this, readRequest);
            return promise;
          }
          releaseLock() {
            if (!IsReadableStreamDefaultReader(this)) {
              throw defaultReaderBrandCheckException("releaseLock");
            }
            if (this._ownerReadableStream === void 0) {
              return;
            }
            if (this._readRequests.length > 0) {
              throw new TypeError("Tried to release a reader lock when that reader has pending read() calls un-settled");
            }
            ReadableStreamReaderGenericRelease(this);
          }
        }
        Object.defineProperties(ReadableStreamDefaultReader.prototype, {
          cancel: { enumerable: true },
          read: { enumerable: true },
          releaseLock: { enumerable: true },
          closed: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(ReadableStreamDefaultReader.prototype, SymbolPolyfill.toStringTag, {
            value: "ReadableStreamDefaultReader",
            configurable: true
          });
        }
        function IsReadableStreamDefaultReader(x) {
          if (!typeIsObject(x)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x, "_readRequests")) {
            return false;
          }
          return x instanceof ReadableStreamDefaultReader;
        }
        function ReadableStreamDefaultReaderRead(reader, readRequest) {
          const stream = reader._ownerReadableStream;
          stream._disturbed = true;
          if (stream._state === "closed") {
            readRequest._closeSteps();
          } else if (stream._state === "errored") {
            readRequest._errorSteps(stream._storedError);
          } else {
            stream._readableStreamController[PullSteps](readRequest);
          }
        }
        function defaultReaderBrandCheckException(name) {
          return new TypeError(`ReadableStreamDefaultReader.prototype.${name} can only be used on a ReadableStreamDefaultReader`);
        }
        const AsyncIteratorPrototype = Object.getPrototypeOf(Object.getPrototypeOf(async function* () {
        }).prototype);
        class ReadableStreamAsyncIteratorImpl {
          constructor(reader, preventCancel) {
            this._ongoingPromise = void 0;
            this._isFinished = false;
            this._reader = reader;
            this._preventCancel = preventCancel;
          }
          next() {
            const nextSteps = () => this._nextSteps();
            this._ongoingPromise = this._ongoingPromise ? transformPromiseWith(this._ongoingPromise, nextSteps, nextSteps) : nextSteps();
            return this._ongoingPromise;
          }
          return(value) {
            const returnSteps = () => this._returnSteps(value);
            return this._ongoingPromise ? transformPromiseWith(this._ongoingPromise, returnSteps, returnSteps) : returnSteps();
          }
          _nextSteps() {
            if (this._isFinished) {
              return Promise.resolve({ value: void 0, done: true });
            }
            const reader = this._reader;
            if (reader._ownerReadableStream === void 0) {
              return promiseRejectedWith(readerLockException("iterate"));
            }
            let resolvePromise;
            let rejectPromise;
            const promise = newPromise((resolve2, reject) => {
              resolvePromise = resolve2;
              rejectPromise = reject;
            });
            const readRequest = {
              _chunkSteps: (chunk) => {
                this._ongoingPromise = void 0;
                queueMicrotask(() => resolvePromise({ value: chunk, done: false }));
              },
              _closeSteps: () => {
                this._ongoingPromise = void 0;
                this._isFinished = true;
                ReadableStreamReaderGenericRelease(reader);
                resolvePromise({ value: void 0, done: true });
              },
              _errorSteps: (reason) => {
                this._ongoingPromise = void 0;
                this._isFinished = true;
                ReadableStreamReaderGenericRelease(reader);
                rejectPromise(reason);
              }
            };
            ReadableStreamDefaultReaderRead(reader, readRequest);
            return promise;
          }
          _returnSteps(value) {
            if (this._isFinished) {
              return Promise.resolve({ value, done: true });
            }
            this._isFinished = true;
            const reader = this._reader;
            if (reader._ownerReadableStream === void 0) {
              return promiseRejectedWith(readerLockException("finish iterating"));
            }
            if (!this._preventCancel) {
              const result = ReadableStreamReaderGenericCancel(reader, value);
              ReadableStreamReaderGenericRelease(reader);
              return transformPromiseWith(result, () => ({ value, done: true }));
            }
            ReadableStreamReaderGenericRelease(reader);
            return promiseResolvedWith({ value, done: true });
          }
        }
        const ReadableStreamAsyncIteratorPrototype = {
          next() {
            if (!IsReadableStreamAsyncIterator(this)) {
              return promiseRejectedWith(streamAsyncIteratorBrandCheckException("next"));
            }
            return this._asyncIteratorImpl.next();
          },
          return(value) {
            if (!IsReadableStreamAsyncIterator(this)) {
              return promiseRejectedWith(streamAsyncIteratorBrandCheckException("return"));
            }
            return this._asyncIteratorImpl.return(value);
          }
        };
        if (AsyncIteratorPrototype !== void 0) {
          Object.setPrototypeOf(ReadableStreamAsyncIteratorPrototype, AsyncIteratorPrototype);
        }
        function AcquireReadableStreamAsyncIterator(stream, preventCancel) {
          const reader = AcquireReadableStreamDefaultReader(stream);
          const impl = new ReadableStreamAsyncIteratorImpl(reader, preventCancel);
          const iterator = Object.create(ReadableStreamAsyncIteratorPrototype);
          iterator._asyncIteratorImpl = impl;
          return iterator;
        }
        function IsReadableStreamAsyncIterator(x) {
          if (!typeIsObject(x)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x, "_asyncIteratorImpl")) {
            return false;
          }
          try {
            return x._asyncIteratorImpl instanceof ReadableStreamAsyncIteratorImpl;
          } catch (_a) {
            return false;
          }
        }
        function streamAsyncIteratorBrandCheckException(name) {
          return new TypeError(`ReadableStreamAsyncIterator.${name} can only be used on a ReadableSteamAsyncIterator`);
        }
        const NumberIsNaN = Number.isNaN || function(x) {
          return x !== x;
        };
        function CreateArrayFromList(elements) {
          return elements.slice();
        }
        function CopyDataBlockBytes(dest, destOffset, src2, srcOffset, n) {
          new Uint8Array(dest).set(new Uint8Array(src2, srcOffset, n), destOffset);
        }
        function TransferArrayBuffer(O) {
          return O;
        }
        function IsDetachedBuffer(O) {
          return false;
        }
        function ArrayBufferSlice(buffer, begin, end) {
          if (buffer.slice) {
            return buffer.slice(begin, end);
          }
          const length = end - begin;
          const slice = new ArrayBuffer(length);
          CopyDataBlockBytes(slice, 0, buffer, begin, length);
          return slice;
        }
        function IsNonNegativeNumber(v) {
          if (typeof v !== "number") {
            return false;
          }
          if (NumberIsNaN(v)) {
            return false;
          }
          if (v < 0) {
            return false;
          }
          return true;
        }
        function CloneAsUint8Array(O) {
          const buffer = ArrayBufferSlice(O.buffer, O.byteOffset, O.byteOffset + O.byteLength);
          return new Uint8Array(buffer);
        }
        function DequeueValue(container) {
          const pair = container._queue.shift();
          container._queueTotalSize -= pair.size;
          if (container._queueTotalSize < 0) {
            container._queueTotalSize = 0;
          }
          return pair.value;
        }
        function EnqueueValueWithSize(container, value, size) {
          if (!IsNonNegativeNumber(size) || size === Infinity) {
            throw new RangeError("Size must be a finite, non-NaN, non-negative number.");
          }
          container._queue.push({ value, size });
          container._queueTotalSize += size;
        }
        function PeekQueueValue(container) {
          const pair = container._queue.peek();
          return pair.value;
        }
        function ResetQueue(container) {
          container._queue = new SimpleQueue();
          container._queueTotalSize = 0;
        }
        class ReadableStreamBYOBRequest {
          constructor() {
            throw new TypeError("Illegal constructor");
          }
          get view() {
            if (!IsReadableStreamBYOBRequest(this)) {
              throw byobRequestBrandCheckException("view");
            }
            return this._view;
          }
          respond(bytesWritten) {
            if (!IsReadableStreamBYOBRequest(this)) {
              throw byobRequestBrandCheckException("respond");
            }
            assertRequiredArgument(bytesWritten, 1, "respond");
            bytesWritten = convertUnsignedLongLongWithEnforceRange(bytesWritten, "First parameter");
            if (this._associatedReadableByteStreamController === void 0) {
              throw new TypeError("This BYOB request has been invalidated");
            }
            if (IsDetachedBuffer(this._view.buffer))
              ;
            ReadableByteStreamControllerRespond(this._associatedReadableByteStreamController, bytesWritten);
          }
          respondWithNewView(view) {
            if (!IsReadableStreamBYOBRequest(this)) {
              throw byobRequestBrandCheckException("respondWithNewView");
            }
            assertRequiredArgument(view, 1, "respondWithNewView");
            if (!ArrayBuffer.isView(view)) {
              throw new TypeError("You can only respond with array buffer views");
            }
            if (this._associatedReadableByteStreamController === void 0) {
              throw new TypeError("This BYOB request has been invalidated");
            }
            if (IsDetachedBuffer(view.buffer))
              ;
            ReadableByteStreamControllerRespondWithNewView(this._associatedReadableByteStreamController, view);
          }
        }
        Object.defineProperties(ReadableStreamBYOBRequest.prototype, {
          respond: { enumerable: true },
          respondWithNewView: { enumerable: true },
          view: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(ReadableStreamBYOBRequest.prototype, SymbolPolyfill.toStringTag, {
            value: "ReadableStreamBYOBRequest",
            configurable: true
          });
        }
        class ReadableByteStreamController {
          constructor() {
            throw new TypeError("Illegal constructor");
          }
          get byobRequest() {
            if (!IsReadableByteStreamController(this)) {
              throw byteStreamControllerBrandCheckException("byobRequest");
            }
            return ReadableByteStreamControllerGetBYOBRequest(this);
          }
          get desiredSize() {
            if (!IsReadableByteStreamController(this)) {
              throw byteStreamControllerBrandCheckException("desiredSize");
            }
            return ReadableByteStreamControllerGetDesiredSize(this);
          }
          close() {
            if (!IsReadableByteStreamController(this)) {
              throw byteStreamControllerBrandCheckException("close");
            }
            if (this._closeRequested) {
              throw new TypeError("The stream has already been closed; do not close it again!");
            }
            const state = this._controlledReadableByteStream._state;
            if (state !== "readable") {
              throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be closed`);
            }
            ReadableByteStreamControllerClose(this);
          }
          enqueue(chunk) {
            if (!IsReadableByteStreamController(this)) {
              throw byteStreamControllerBrandCheckException("enqueue");
            }
            assertRequiredArgument(chunk, 1, "enqueue");
            if (!ArrayBuffer.isView(chunk)) {
              throw new TypeError("chunk must be an array buffer view");
            }
            if (chunk.byteLength === 0) {
              throw new TypeError("chunk must have non-zero byteLength");
            }
            if (chunk.buffer.byteLength === 0) {
              throw new TypeError(`chunk's buffer must have non-zero byteLength`);
            }
            if (this._closeRequested) {
              throw new TypeError("stream is closed or draining");
            }
            const state = this._controlledReadableByteStream._state;
            if (state !== "readable") {
              throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be enqueued to`);
            }
            ReadableByteStreamControllerEnqueue(this, chunk);
          }
          error(e = void 0) {
            if (!IsReadableByteStreamController(this)) {
              throw byteStreamControllerBrandCheckException("error");
            }
            ReadableByteStreamControllerError(this, e);
          }
          [CancelSteps](reason) {
            ReadableByteStreamControllerClearPendingPullIntos(this);
            ResetQueue(this);
            const result = this._cancelAlgorithm(reason);
            ReadableByteStreamControllerClearAlgorithms(this);
            return result;
          }
          [PullSteps](readRequest) {
            const stream = this._controlledReadableByteStream;
            if (this._queueTotalSize > 0) {
              const entry = this._queue.shift();
              this._queueTotalSize -= entry.byteLength;
              ReadableByteStreamControllerHandleQueueDrain(this);
              const view = new Uint8Array(entry.buffer, entry.byteOffset, entry.byteLength);
              readRequest._chunkSteps(view);
              return;
            }
            const autoAllocateChunkSize = this._autoAllocateChunkSize;
            if (autoAllocateChunkSize !== void 0) {
              let buffer;
              try {
                buffer = new ArrayBuffer(autoAllocateChunkSize);
              } catch (bufferE) {
                readRequest._errorSteps(bufferE);
                return;
              }
              const pullIntoDescriptor = {
                buffer,
                bufferByteLength: autoAllocateChunkSize,
                byteOffset: 0,
                byteLength: autoAllocateChunkSize,
                bytesFilled: 0,
                elementSize: 1,
                viewConstructor: Uint8Array,
                readerType: "default"
              };
              this._pendingPullIntos.push(pullIntoDescriptor);
            }
            ReadableStreamAddReadRequest(stream, readRequest);
            ReadableByteStreamControllerCallPullIfNeeded(this);
          }
        }
        Object.defineProperties(ReadableByteStreamController.prototype, {
          close: { enumerable: true },
          enqueue: { enumerable: true },
          error: { enumerable: true },
          byobRequest: { enumerable: true },
          desiredSize: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(ReadableByteStreamController.prototype, SymbolPolyfill.toStringTag, {
            value: "ReadableByteStreamController",
            configurable: true
          });
        }
        function IsReadableByteStreamController(x) {
          if (!typeIsObject(x)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x, "_controlledReadableByteStream")) {
            return false;
          }
          return x instanceof ReadableByteStreamController;
        }
        function IsReadableStreamBYOBRequest(x) {
          if (!typeIsObject(x)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x, "_associatedReadableByteStreamController")) {
            return false;
          }
          return x instanceof ReadableStreamBYOBRequest;
        }
        function ReadableByteStreamControllerCallPullIfNeeded(controller) {
          const shouldPull = ReadableByteStreamControllerShouldCallPull(controller);
          if (!shouldPull) {
            return;
          }
          if (controller._pulling) {
            controller._pullAgain = true;
            return;
          }
          controller._pulling = true;
          const pullPromise = controller._pullAlgorithm();
          uponPromise(pullPromise, () => {
            controller._pulling = false;
            if (controller._pullAgain) {
              controller._pullAgain = false;
              ReadableByteStreamControllerCallPullIfNeeded(controller);
            }
          }, (e) => {
            ReadableByteStreamControllerError(controller, e);
          });
        }
        function ReadableByteStreamControllerClearPendingPullIntos(controller) {
          ReadableByteStreamControllerInvalidateBYOBRequest(controller);
          controller._pendingPullIntos = new SimpleQueue();
        }
        function ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor) {
          let done = false;
          if (stream._state === "closed") {
            done = true;
          }
          const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);
          if (pullIntoDescriptor.readerType === "default") {
            ReadableStreamFulfillReadRequest(stream, filledView, done);
          } else {
            ReadableStreamFulfillReadIntoRequest(stream, filledView, done);
          }
        }
        function ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor) {
          const bytesFilled = pullIntoDescriptor.bytesFilled;
          const elementSize = pullIntoDescriptor.elementSize;
          return new pullIntoDescriptor.viewConstructor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, bytesFilled / elementSize);
        }
        function ReadableByteStreamControllerEnqueueChunkToQueue(controller, buffer, byteOffset, byteLength) {
          controller._queue.push({ buffer, byteOffset, byteLength });
          controller._queueTotalSize += byteLength;
        }
        function ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) {
          const elementSize = pullIntoDescriptor.elementSize;
          const currentAlignedBytes = pullIntoDescriptor.bytesFilled - pullIntoDescriptor.bytesFilled % elementSize;
          const maxBytesToCopy = Math.min(controller._queueTotalSize, pullIntoDescriptor.byteLength - pullIntoDescriptor.bytesFilled);
          const maxBytesFilled = pullIntoDescriptor.bytesFilled + maxBytesToCopy;
          const maxAlignedBytes = maxBytesFilled - maxBytesFilled % elementSize;
          let totalBytesToCopyRemaining = maxBytesToCopy;
          let ready = false;
          if (maxAlignedBytes > currentAlignedBytes) {
            totalBytesToCopyRemaining = maxAlignedBytes - pullIntoDescriptor.bytesFilled;
            ready = true;
          }
          const queue = controller._queue;
          while (totalBytesToCopyRemaining > 0) {
            const headOfQueue = queue.peek();
            const bytesToCopy = Math.min(totalBytesToCopyRemaining, headOfQueue.byteLength);
            const destStart = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;
            CopyDataBlockBytes(pullIntoDescriptor.buffer, destStart, headOfQueue.buffer, headOfQueue.byteOffset, bytesToCopy);
            if (headOfQueue.byteLength === bytesToCopy) {
              queue.shift();
            } else {
              headOfQueue.byteOffset += bytesToCopy;
              headOfQueue.byteLength -= bytesToCopy;
            }
            controller._queueTotalSize -= bytesToCopy;
            ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesToCopy, pullIntoDescriptor);
            totalBytesToCopyRemaining -= bytesToCopy;
          }
          return ready;
        }
        function ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, size, pullIntoDescriptor) {
          pullIntoDescriptor.bytesFilled += size;
        }
        function ReadableByteStreamControllerHandleQueueDrain(controller) {
          if (controller._queueTotalSize === 0 && controller._closeRequested) {
            ReadableByteStreamControllerClearAlgorithms(controller);
            ReadableStreamClose(controller._controlledReadableByteStream);
          } else {
            ReadableByteStreamControllerCallPullIfNeeded(controller);
          }
        }
        function ReadableByteStreamControllerInvalidateBYOBRequest(controller) {
          if (controller._byobRequest === null) {
            return;
          }
          controller._byobRequest._associatedReadableByteStreamController = void 0;
          controller._byobRequest._view = null;
          controller._byobRequest = null;
        }
        function ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller) {
          while (controller._pendingPullIntos.length > 0) {
            if (controller._queueTotalSize === 0) {
              return;
            }
            const pullIntoDescriptor = controller._pendingPullIntos.peek();
            if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)) {
              ReadableByteStreamControllerShiftPendingPullInto(controller);
              ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor);
            }
          }
        }
        function ReadableByteStreamControllerPullInto(controller, view, readIntoRequest) {
          const stream = controller._controlledReadableByteStream;
          let elementSize = 1;
          if (view.constructor !== DataView) {
            elementSize = view.constructor.BYTES_PER_ELEMENT;
          }
          const ctor = view.constructor;
          const buffer = TransferArrayBuffer(view.buffer);
          const pullIntoDescriptor = {
            buffer,
            bufferByteLength: buffer.byteLength,
            byteOffset: view.byteOffset,
            byteLength: view.byteLength,
            bytesFilled: 0,
            elementSize,
            viewConstructor: ctor,
            readerType: "byob"
          };
          if (controller._pendingPullIntos.length > 0) {
            controller._pendingPullIntos.push(pullIntoDescriptor);
            ReadableStreamAddReadIntoRequest(stream, readIntoRequest);
            return;
          }
          if (stream._state === "closed") {
            const emptyView = new ctor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, 0);
            readIntoRequest._closeSteps(emptyView);
            return;
          }
          if (controller._queueTotalSize > 0) {
            if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)) {
              const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);
              ReadableByteStreamControllerHandleQueueDrain(controller);
              readIntoRequest._chunkSteps(filledView);
              return;
            }
            if (controller._closeRequested) {
              const e = new TypeError("Insufficient bytes to fill elements in the given buffer");
              ReadableByteStreamControllerError(controller, e);
              readIntoRequest._errorSteps(e);
              return;
            }
          }
          controller._pendingPullIntos.push(pullIntoDescriptor);
          ReadableStreamAddReadIntoRequest(stream, readIntoRequest);
          ReadableByteStreamControllerCallPullIfNeeded(controller);
        }
        function ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor) {
          const stream = controller._controlledReadableByteStream;
          if (ReadableStreamHasBYOBReader(stream)) {
            while (ReadableStreamGetNumReadIntoRequests(stream) > 0) {
              const pullIntoDescriptor = ReadableByteStreamControllerShiftPendingPullInto(controller);
              ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor);
            }
          }
        }
        function ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, pullIntoDescriptor) {
          ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesWritten, pullIntoDescriptor);
          if (pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize) {
            return;
          }
          ReadableByteStreamControllerShiftPendingPullInto(controller);
          const remainderSize = pullIntoDescriptor.bytesFilled % pullIntoDescriptor.elementSize;
          if (remainderSize > 0) {
            const end = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;
            const remainder = ArrayBufferSlice(pullIntoDescriptor.buffer, end - remainderSize, end);
            ReadableByteStreamControllerEnqueueChunkToQueue(controller, remainder, 0, remainder.byteLength);
          }
          pullIntoDescriptor.bytesFilled -= remainderSize;
          ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor);
          ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);
        }
        function ReadableByteStreamControllerRespondInternal(controller, bytesWritten) {
          const firstDescriptor = controller._pendingPullIntos.peek();
          ReadableByteStreamControllerInvalidateBYOBRequest(controller);
          const state = controller._controlledReadableByteStream._state;
          if (state === "closed") {
            ReadableByteStreamControllerRespondInClosedState(controller);
          } else {
            ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, firstDescriptor);
          }
          ReadableByteStreamControllerCallPullIfNeeded(controller);
        }
        function ReadableByteStreamControllerShiftPendingPullInto(controller) {
          const descriptor = controller._pendingPullIntos.shift();
          return descriptor;
        }
        function ReadableByteStreamControllerShouldCallPull(controller) {
          const stream = controller._controlledReadableByteStream;
          if (stream._state !== "readable") {
            return false;
          }
          if (controller._closeRequested) {
            return false;
          }
          if (!controller._started) {
            return false;
          }
          if (ReadableStreamHasDefaultReader(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {
            return true;
          }
          if (ReadableStreamHasBYOBReader(stream) && ReadableStreamGetNumReadIntoRequests(stream) > 0) {
            return true;
          }
          const desiredSize = ReadableByteStreamControllerGetDesiredSize(controller);
          if (desiredSize > 0) {
            return true;
          }
          return false;
        }
        function ReadableByteStreamControllerClearAlgorithms(controller) {
          controller._pullAlgorithm = void 0;
          controller._cancelAlgorithm = void 0;
        }
        function ReadableByteStreamControllerClose(controller) {
          const stream = controller._controlledReadableByteStream;
          if (controller._closeRequested || stream._state !== "readable") {
            return;
          }
          if (controller._queueTotalSize > 0) {
            controller._closeRequested = true;
            return;
          }
          if (controller._pendingPullIntos.length > 0) {
            const firstPendingPullInto = controller._pendingPullIntos.peek();
            if (firstPendingPullInto.bytesFilled > 0) {
              const e = new TypeError("Insufficient bytes to fill elements in the given buffer");
              ReadableByteStreamControllerError(controller, e);
              throw e;
            }
          }
          ReadableByteStreamControllerClearAlgorithms(controller);
          ReadableStreamClose(stream);
        }
        function ReadableByteStreamControllerEnqueue(controller, chunk) {
          const stream = controller._controlledReadableByteStream;
          if (controller._closeRequested || stream._state !== "readable") {
            return;
          }
          const buffer = chunk.buffer;
          const byteOffset = chunk.byteOffset;
          const byteLength = chunk.byteLength;
          const transferredBuffer = TransferArrayBuffer(buffer);
          if (controller._pendingPullIntos.length > 0) {
            const firstPendingPullInto = controller._pendingPullIntos.peek();
            if (IsDetachedBuffer(firstPendingPullInto.buffer))
              ;
            firstPendingPullInto.buffer = TransferArrayBuffer(firstPendingPullInto.buffer);
          }
          ReadableByteStreamControllerInvalidateBYOBRequest(controller);
          if (ReadableStreamHasDefaultReader(stream)) {
            if (ReadableStreamGetNumReadRequests(stream) === 0) {
              ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);
            } else {
              const transferredView = new Uint8Array(transferredBuffer, byteOffset, byteLength);
              ReadableStreamFulfillReadRequest(stream, transferredView, false);
            }
          } else if (ReadableStreamHasBYOBReader(stream)) {
            ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);
            ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);
          } else {
            ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);
          }
          ReadableByteStreamControllerCallPullIfNeeded(controller);
        }
        function ReadableByteStreamControllerError(controller, e) {
          const stream = controller._controlledReadableByteStream;
          if (stream._state !== "readable") {
            return;
          }
          ReadableByteStreamControllerClearPendingPullIntos(controller);
          ResetQueue(controller);
          ReadableByteStreamControllerClearAlgorithms(controller);
          ReadableStreamError(stream, e);
        }
        function ReadableByteStreamControllerGetBYOBRequest(controller) {
          if (controller._byobRequest === null && controller._pendingPullIntos.length > 0) {
            const firstDescriptor = controller._pendingPullIntos.peek();
            const view = new Uint8Array(firstDescriptor.buffer, firstDescriptor.byteOffset + firstDescriptor.bytesFilled, firstDescriptor.byteLength - firstDescriptor.bytesFilled);
            const byobRequest = Object.create(ReadableStreamBYOBRequest.prototype);
            SetUpReadableStreamBYOBRequest(byobRequest, controller, view);
            controller._byobRequest = byobRequest;
          }
          return controller._byobRequest;
        }
        function ReadableByteStreamControllerGetDesiredSize(controller) {
          const state = controller._controlledReadableByteStream._state;
          if (state === "errored") {
            return null;
          }
          if (state === "closed") {
            return 0;
          }
          return controller._strategyHWM - controller._queueTotalSize;
        }
        function ReadableByteStreamControllerRespond(controller, bytesWritten) {
          const firstDescriptor = controller._pendingPullIntos.peek();
          const state = controller._controlledReadableByteStream._state;
          if (state === "closed") {
            if (bytesWritten !== 0) {
              throw new TypeError("bytesWritten must be 0 when calling respond() on a closed stream");
            }
          } else {
            if (bytesWritten === 0) {
              throw new TypeError("bytesWritten must be greater than 0 when calling respond() on a readable stream");
            }
            if (firstDescriptor.bytesFilled + bytesWritten > firstDescriptor.byteLength) {
              throw new RangeError("bytesWritten out of range");
            }
          }
          firstDescriptor.buffer = TransferArrayBuffer(firstDescriptor.buffer);
          ReadableByteStreamControllerRespondInternal(controller, bytesWritten);
        }
        function ReadableByteStreamControllerRespondWithNewView(controller, view) {
          const firstDescriptor = controller._pendingPullIntos.peek();
          const state = controller._controlledReadableByteStream._state;
          if (state === "closed") {
            if (view.byteLength !== 0) {
              throw new TypeError("The view's length must be 0 when calling respondWithNewView() on a closed stream");
            }
          } else {
            if (view.byteLength === 0) {
              throw new TypeError("The view's length must be greater than 0 when calling respondWithNewView() on a readable stream");
            }
          }
          if (firstDescriptor.byteOffset + firstDescriptor.bytesFilled !== view.byteOffset) {
            throw new RangeError("The region specified by view does not match byobRequest");
          }
          if (firstDescriptor.bufferByteLength !== view.buffer.byteLength) {
            throw new RangeError("The buffer of view has different capacity than byobRequest");
          }
          if (firstDescriptor.bytesFilled + view.byteLength > firstDescriptor.byteLength) {
            throw new RangeError("The region specified by view is larger than byobRequest");
          }
          firstDescriptor.buffer = TransferArrayBuffer(view.buffer);
          ReadableByteStreamControllerRespondInternal(controller, view.byteLength);
        }
        function SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize) {
          controller._controlledReadableByteStream = stream;
          controller._pullAgain = false;
          controller._pulling = false;
          controller._byobRequest = null;
          controller._queue = controller._queueTotalSize = void 0;
          ResetQueue(controller);
          controller._closeRequested = false;
          controller._started = false;
          controller._strategyHWM = highWaterMark;
          controller._pullAlgorithm = pullAlgorithm;
          controller._cancelAlgorithm = cancelAlgorithm;
          controller._autoAllocateChunkSize = autoAllocateChunkSize;
          controller._pendingPullIntos = new SimpleQueue();
          stream._readableStreamController = controller;
          const startResult = startAlgorithm();
          uponPromise(promiseResolvedWith(startResult), () => {
            controller._started = true;
            ReadableByteStreamControllerCallPullIfNeeded(controller);
          }, (r) => {
            ReadableByteStreamControllerError(controller, r);
          });
        }
        function SetUpReadableByteStreamControllerFromUnderlyingSource(stream, underlyingByteSource, highWaterMark) {
          const controller = Object.create(ReadableByteStreamController.prototype);
          let startAlgorithm = () => void 0;
          let pullAlgorithm = () => promiseResolvedWith(void 0);
          let cancelAlgorithm = () => promiseResolvedWith(void 0);
          if (underlyingByteSource.start !== void 0) {
            startAlgorithm = () => underlyingByteSource.start(controller);
          }
          if (underlyingByteSource.pull !== void 0) {
            pullAlgorithm = () => underlyingByteSource.pull(controller);
          }
          if (underlyingByteSource.cancel !== void 0) {
            cancelAlgorithm = (reason) => underlyingByteSource.cancel(reason);
          }
          const autoAllocateChunkSize = underlyingByteSource.autoAllocateChunkSize;
          if (autoAllocateChunkSize === 0) {
            throw new TypeError("autoAllocateChunkSize must be greater than 0");
          }
          SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize);
        }
        function SetUpReadableStreamBYOBRequest(request, controller, view) {
          request._associatedReadableByteStreamController = controller;
          request._view = view;
        }
        function byobRequestBrandCheckException(name) {
          return new TypeError(`ReadableStreamBYOBRequest.prototype.${name} can only be used on a ReadableStreamBYOBRequest`);
        }
        function byteStreamControllerBrandCheckException(name) {
          return new TypeError(`ReadableByteStreamController.prototype.${name} can only be used on a ReadableByteStreamController`);
        }
        function AcquireReadableStreamBYOBReader(stream) {
          return new ReadableStreamBYOBReader(stream);
        }
        function ReadableStreamAddReadIntoRequest(stream, readIntoRequest) {
          stream._reader._readIntoRequests.push(readIntoRequest);
        }
        function ReadableStreamFulfillReadIntoRequest(stream, chunk, done) {
          const reader = stream._reader;
          const readIntoRequest = reader._readIntoRequests.shift();
          if (done) {
            readIntoRequest._closeSteps(chunk);
          } else {
            readIntoRequest._chunkSteps(chunk);
          }
        }
        function ReadableStreamGetNumReadIntoRequests(stream) {
          return stream._reader._readIntoRequests.length;
        }
        function ReadableStreamHasBYOBReader(stream) {
          const reader = stream._reader;
          if (reader === void 0) {
            return false;
          }
          if (!IsReadableStreamBYOBReader(reader)) {
            return false;
          }
          return true;
        }
        class ReadableStreamBYOBReader {
          constructor(stream) {
            assertRequiredArgument(stream, 1, "ReadableStreamBYOBReader");
            assertReadableStream(stream, "First parameter");
            if (IsReadableStreamLocked(stream)) {
              throw new TypeError("This stream has already been locked for exclusive reading by another reader");
            }
            if (!IsReadableByteStreamController(stream._readableStreamController)) {
              throw new TypeError("Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte source");
            }
            ReadableStreamReaderGenericInitialize(this, stream);
            this._readIntoRequests = new SimpleQueue();
          }
          get closed() {
            if (!IsReadableStreamBYOBReader(this)) {
              return promiseRejectedWith(byobReaderBrandCheckException("closed"));
            }
            return this._closedPromise;
          }
          cancel(reason = void 0) {
            if (!IsReadableStreamBYOBReader(this)) {
              return promiseRejectedWith(byobReaderBrandCheckException("cancel"));
            }
            if (this._ownerReadableStream === void 0) {
              return promiseRejectedWith(readerLockException("cancel"));
            }
            return ReadableStreamReaderGenericCancel(this, reason);
          }
          read(view) {
            if (!IsReadableStreamBYOBReader(this)) {
              return promiseRejectedWith(byobReaderBrandCheckException("read"));
            }
            if (!ArrayBuffer.isView(view)) {
              return promiseRejectedWith(new TypeError("view must be an array buffer view"));
            }
            if (view.byteLength === 0) {
              return promiseRejectedWith(new TypeError("view must have non-zero byteLength"));
            }
            if (view.buffer.byteLength === 0) {
              return promiseRejectedWith(new TypeError(`view's buffer must have non-zero byteLength`));
            }
            if (IsDetachedBuffer(view.buffer))
              ;
            if (this._ownerReadableStream === void 0) {
              return promiseRejectedWith(readerLockException("read from"));
            }
            let resolvePromise;
            let rejectPromise;
            const promise = newPromise((resolve2, reject) => {
              resolvePromise = resolve2;
              rejectPromise = reject;
            });
            const readIntoRequest = {
              _chunkSteps: (chunk) => resolvePromise({ value: chunk, done: false }),
              _closeSteps: (chunk) => resolvePromise({ value: chunk, done: true }),
              _errorSteps: (e) => rejectPromise(e)
            };
            ReadableStreamBYOBReaderRead(this, view, readIntoRequest);
            return promise;
          }
          releaseLock() {
            if (!IsReadableStreamBYOBReader(this)) {
              throw byobReaderBrandCheckException("releaseLock");
            }
            if (this._ownerReadableStream === void 0) {
              return;
            }
            if (this._readIntoRequests.length > 0) {
              throw new TypeError("Tried to release a reader lock when that reader has pending read() calls un-settled");
            }
            ReadableStreamReaderGenericRelease(this);
          }
        }
        Object.defineProperties(ReadableStreamBYOBReader.prototype, {
          cancel: { enumerable: true },
          read: { enumerable: true },
          releaseLock: { enumerable: true },
          closed: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(ReadableStreamBYOBReader.prototype, SymbolPolyfill.toStringTag, {
            value: "ReadableStreamBYOBReader",
            configurable: true
          });
        }
        function IsReadableStreamBYOBReader(x) {
          if (!typeIsObject(x)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x, "_readIntoRequests")) {
            return false;
          }
          return x instanceof ReadableStreamBYOBReader;
        }
        function ReadableStreamBYOBReaderRead(reader, view, readIntoRequest) {
          const stream = reader._ownerReadableStream;
          stream._disturbed = true;
          if (stream._state === "errored") {
            readIntoRequest._errorSteps(stream._storedError);
          } else {
            ReadableByteStreamControllerPullInto(stream._readableStreamController, view, readIntoRequest);
          }
        }
        function byobReaderBrandCheckException(name) {
          return new TypeError(`ReadableStreamBYOBReader.prototype.${name} can only be used on a ReadableStreamBYOBReader`);
        }
        function ExtractHighWaterMark(strategy, defaultHWM) {
          const { highWaterMark } = strategy;
          if (highWaterMark === void 0) {
            return defaultHWM;
          }
          if (NumberIsNaN(highWaterMark) || highWaterMark < 0) {
            throw new RangeError("Invalid highWaterMark");
          }
          return highWaterMark;
        }
        function ExtractSizeAlgorithm(strategy) {
          const { size } = strategy;
          if (!size) {
            return () => 1;
          }
          return size;
        }
        function convertQueuingStrategy(init2, context) {
          assertDictionary(init2, context);
          const highWaterMark = init2 === null || init2 === void 0 ? void 0 : init2.highWaterMark;
          const size = init2 === null || init2 === void 0 ? void 0 : init2.size;
          return {
            highWaterMark: highWaterMark === void 0 ? void 0 : convertUnrestrictedDouble(highWaterMark),
            size: size === void 0 ? void 0 : convertQueuingStrategySize(size, `${context} has member 'size' that`)
          };
        }
        function convertQueuingStrategySize(fn, context) {
          assertFunction(fn, context);
          return (chunk) => convertUnrestrictedDouble(fn(chunk));
        }
        function convertUnderlyingSink(original, context) {
          assertDictionary(original, context);
          const abort = original === null || original === void 0 ? void 0 : original.abort;
          const close = original === null || original === void 0 ? void 0 : original.close;
          const start = original === null || original === void 0 ? void 0 : original.start;
          const type = original === null || original === void 0 ? void 0 : original.type;
          const write = original === null || original === void 0 ? void 0 : original.write;
          return {
            abort: abort === void 0 ? void 0 : convertUnderlyingSinkAbortCallback(abort, original, `${context} has member 'abort' that`),
            close: close === void 0 ? void 0 : convertUnderlyingSinkCloseCallback(close, original, `${context} has member 'close' that`),
            start: start === void 0 ? void 0 : convertUnderlyingSinkStartCallback(start, original, `${context} has member 'start' that`),
            write: write === void 0 ? void 0 : convertUnderlyingSinkWriteCallback(write, original, `${context} has member 'write' that`),
            type
          };
        }
        function convertUnderlyingSinkAbortCallback(fn, original, context) {
          assertFunction(fn, context);
          return (reason) => promiseCall(fn, original, [reason]);
        }
        function convertUnderlyingSinkCloseCallback(fn, original, context) {
          assertFunction(fn, context);
          return () => promiseCall(fn, original, []);
        }
        function convertUnderlyingSinkStartCallback(fn, original, context) {
          assertFunction(fn, context);
          return (controller) => reflectCall(fn, original, [controller]);
        }
        function convertUnderlyingSinkWriteCallback(fn, original, context) {
          assertFunction(fn, context);
          return (chunk, controller) => promiseCall(fn, original, [chunk, controller]);
        }
        function assertWritableStream(x, context) {
          if (!IsWritableStream(x)) {
            throw new TypeError(`${context} is not a WritableStream.`);
          }
        }
        function isAbortSignal2(value) {
          if (typeof value !== "object" || value === null) {
            return false;
          }
          try {
            return typeof value.aborted === "boolean";
          } catch (_a) {
            return false;
          }
        }
        const supportsAbortController = typeof AbortController === "function";
        function createAbortController() {
          if (supportsAbortController) {
            return new AbortController();
          }
          return void 0;
        }
        class WritableStream {
          constructor(rawUnderlyingSink = {}, rawStrategy = {}) {
            if (rawUnderlyingSink === void 0) {
              rawUnderlyingSink = null;
            } else {
              assertObject(rawUnderlyingSink, "First parameter");
            }
            const strategy = convertQueuingStrategy(rawStrategy, "Second parameter");
            const underlyingSink = convertUnderlyingSink(rawUnderlyingSink, "First parameter");
            InitializeWritableStream(this);
            const type = underlyingSink.type;
            if (type !== void 0) {
              throw new RangeError("Invalid type is specified");
            }
            const sizeAlgorithm = ExtractSizeAlgorithm(strategy);
            const highWaterMark = ExtractHighWaterMark(strategy, 1);
            SetUpWritableStreamDefaultControllerFromUnderlyingSink(this, underlyingSink, highWaterMark, sizeAlgorithm);
          }
          get locked() {
            if (!IsWritableStream(this)) {
              throw streamBrandCheckException$2("locked");
            }
            return IsWritableStreamLocked(this);
          }
          abort(reason = void 0) {
            if (!IsWritableStream(this)) {
              return promiseRejectedWith(streamBrandCheckException$2("abort"));
            }
            if (IsWritableStreamLocked(this)) {
              return promiseRejectedWith(new TypeError("Cannot abort a stream that already has a writer"));
            }
            return WritableStreamAbort(this, reason);
          }
          close() {
            if (!IsWritableStream(this)) {
              return promiseRejectedWith(streamBrandCheckException$2("close"));
            }
            if (IsWritableStreamLocked(this)) {
              return promiseRejectedWith(new TypeError("Cannot close a stream that already has a writer"));
            }
            if (WritableStreamCloseQueuedOrInFlight(this)) {
              return promiseRejectedWith(new TypeError("Cannot close an already-closing stream"));
            }
            return WritableStreamClose(this);
          }
          getWriter() {
            if (!IsWritableStream(this)) {
              throw streamBrandCheckException$2("getWriter");
            }
            return AcquireWritableStreamDefaultWriter(this);
          }
        }
        Object.defineProperties(WritableStream.prototype, {
          abort: { enumerable: true },
          close: { enumerable: true },
          getWriter: { enumerable: true },
          locked: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(WritableStream.prototype, SymbolPolyfill.toStringTag, {
            value: "WritableStream",
            configurable: true
          });
        }
        function AcquireWritableStreamDefaultWriter(stream) {
          return new WritableStreamDefaultWriter(stream);
        }
        function CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark = 1, sizeAlgorithm = () => 1) {
          const stream = Object.create(WritableStream.prototype);
          InitializeWritableStream(stream);
          const controller = Object.create(WritableStreamDefaultController.prototype);
          SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm);
          return stream;
        }
        function InitializeWritableStream(stream) {
          stream._state = "writable";
          stream._storedError = void 0;
          stream._writer = void 0;
          stream._writableStreamController = void 0;
          stream._writeRequests = new SimpleQueue();
          stream._inFlightWriteRequest = void 0;
          stream._closeRequest = void 0;
          stream._inFlightCloseRequest = void 0;
          stream._pendingAbortRequest = void 0;
          stream._backpressure = false;
        }
        function IsWritableStream(x) {
          if (!typeIsObject(x)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x, "_writableStreamController")) {
            return false;
          }
          return x instanceof WritableStream;
        }
        function IsWritableStreamLocked(stream) {
          if (stream._writer === void 0) {
            return false;
          }
          return true;
        }
        function WritableStreamAbort(stream, reason) {
          var _a;
          if (stream._state === "closed" || stream._state === "errored") {
            return promiseResolvedWith(void 0);
          }
          stream._writableStreamController._abortReason = reason;
          (_a = stream._writableStreamController._abortController) === null || _a === void 0 ? void 0 : _a.abort();
          const state = stream._state;
          if (state === "closed" || state === "errored") {
            return promiseResolvedWith(void 0);
          }
          if (stream._pendingAbortRequest !== void 0) {
            return stream._pendingAbortRequest._promise;
          }
          let wasAlreadyErroring = false;
          if (state === "erroring") {
            wasAlreadyErroring = true;
            reason = void 0;
          }
          const promise = newPromise((resolve2, reject) => {
            stream._pendingAbortRequest = {
              _promise: void 0,
              _resolve: resolve2,
              _reject: reject,
              _reason: reason,
              _wasAlreadyErroring: wasAlreadyErroring
            };
          });
          stream._pendingAbortRequest._promise = promise;
          if (!wasAlreadyErroring) {
            WritableStreamStartErroring(stream, reason);
          }
          return promise;
        }
        function WritableStreamClose(stream) {
          const state = stream._state;
          if (state === "closed" || state === "errored") {
            return promiseRejectedWith(new TypeError(`The stream (in ${state} state) is not in the writable state and cannot be closed`));
          }
          const promise = newPromise((resolve2, reject) => {
            const closeRequest = {
              _resolve: resolve2,
              _reject: reject
            };
            stream._closeRequest = closeRequest;
          });
          const writer = stream._writer;
          if (writer !== void 0 && stream._backpressure && state === "writable") {
            defaultWriterReadyPromiseResolve(writer);
          }
          WritableStreamDefaultControllerClose(stream._writableStreamController);
          return promise;
        }
        function WritableStreamAddWriteRequest(stream) {
          const promise = newPromise((resolve2, reject) => {
            const writeRequest = {
              _resolve: resolve2,
              _reject: reject
            };
            stream._writeRequests.push(writeRequest);
          });
          return promise;
        }
        function WritableStreamDealWithRejection(stream, error2) {
          const state = stream._state;
          if (state === "writable") {
            WritableStreamStartErroring(stream, error2);
            return;
          }
          WritableStreamFinishErroring(stream);
        }
        function WritableStreamStartErroring(stream, reason) {
          const controller = stream._writableStreamController;
          stream._state = "erroring";
          stream._storedError = reason;
          const writer = stream._writer;
          if (writer !== void 0) {
            WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, reason);
          }
          if (!WritableStreamHasOperationMarkedInFlight(stream) && controller._started) {
            WritableStreamFinishErroring(stream);
          }
        }
        function WritableStreamFinishErroring(stream) {
          stream._state = "errored";
          stream._writableStreamController[ErrorSteps]();
          const storedError = stream._storedError;
          stream._writeRequests.forEach((writeRequest) => {
            writeRequest._reject(storedError);
          });
          stream._writeRequests = new SimpleQueue();
          if (stream._pendingAbortRequest === void 0) {
            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);
            return;
          }
          const abortRequest = stream._pendingAbortRequest;
          stream._pendingAbortRequest = void 0;
          if (abortRequest._wasAlreadyErroring) {
            abortRequest._reject(storedError);
            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);
            return;
          }
          const promise = stream._writableStreamController[AbortSteps](abortRequest._reason);
          uponPromise(promise, () => {
            abortRequest._resolve();
            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);
          }, (reason) => {
            abortRequest._reject(reason);
            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);
          });
        }
        function WritableStreamFinishInFlightWrite(stream) {
          stream._inFlightWriteRequest._resolve(void 0);
          stream._inFlightWriteRequest = void 0;
        }
        function WritableStreamFinishInFlightWriteWithError(stream, error2) {
          stream._inFlightWriteRequest._reject(error2);
          stream._inFlightWriteRequest = void 0;
          WritableStreamDealWithRejection(stream, error2);
        }
        function WritableStreamFinishInFlightClose(stream) {
          stream._inFlightCloseRequest._resolve(void 0);
          stream._inFlightCloseRequest = void 0;
          const state = stream._state;
          if (state === "erroring") {
            stream._storedError = void 0;
            if (stream._pendingAbortRequest !== void 0) {
              stream._pendingAbortRequest._resolve();
              stream._pendingAbortRequest = void 0;
            }
          }
          stream._state = "closed";
          const writer = stream._writer;
          if (writer !== void 0) {
            defaultWriterClosedPromiseResolve(writer);
          }
        }
        function WritableStreamFinishInFlightCloseWithError(stream, error2) {
          stream._inFlightCloseRequest._reject(error2);
          stream._inFlightCloseRequest = void 0;
          if (stream._pendingAbortRequest !== void 0) {
            stream._pendingAbortRequest._reject(error2);
            stream._pendingAbortRequest = void 0;
          }
          WritableStreamDealWithRejection(stream, error2);
        }
        function WritableStreamCloseQueuedOrInFlight(stream) {
          if (stream._closeRequest === void 0 && stream._inFlightCloseRequest === void 0) {
            return false;
          }
          return true;
        }
        function WritableStreamHasOperationMarkedInFlight(stream) {
          if (stream._inFlightWriteRequest === void 0 && stream._inFlightCloseRequest === void 0) {
            return false;
          }
          return true;
        }
        function WritableStreamMarkCloseRequestInFlight(stream) {
          stream._inFlightCloseRequest = stream._closeRequest;
          stream._closeRequest = void 0;
        }
        function WritableStreamMarkFirstWriteRequestInFlight(stream) {
          stream._inFlightWriteRequest = stream._writeRequests.shift();
        }
        function WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream) {
          if (stream._closeRequest !== void 0) {
            stream._closeRequest._reject(stream._storedError);
            stream._closeRequest = void 0;
          }
          const writer = stream._writer;
          if (writer !== void 0) {
            defaultWriterClosedPromiseReject(writer, stream._storedError);
          }
        }
        function WritableStreamUpdateBackpressure(stream, backpressure) {
          const writer = stream._writer;
          if (writer !== void 0 && backpressure !== stream._backpressure) {
            if (backpressure) {
              defaultWriterReadyPromiseReset(writer);
            } else {
              defaultWriterReadyPromiseResolve(writer);
            }
          }
          stream._backpressure = backpressure;
        }
        class WritableStreamDefaultWriter {
          constructor(stream) {
            assertRequiredArgument(stream, 1, "WritableStreamDefaultWriter");
            assertWritableStream(stream, "First parameter");
            if (IsWritableStreamLocked(stream)) {
              throw new TypeError("This stream has already been locked for exclusive writing by another writer");
            }
            this._ownerWritableStream = stream;
            stream._writer = this;
            const state = stream._state;
            if (state === "writable") {
              if (!WritableStreamCloseQueuedOrInFlight(stream) && stream._backpressure) {
                defaultWriterReadyPromiseInitialize(this);
              } else {
                defaultWriterReadyPromiseInitializeAsResolved(this);
              }
              defaultWriterClosedPromiseInitialize(this);
            } else if (state === "erroring") {
              defaultWriterReadyPromiseInitializeAsRejected(this, stream._storedError);
              defaultWriterClosedPromiseInitialize(this);
            } else if (state === "closed") {
              defaultWriterReadyPromiseInitializeAsResolved(this);
              defaultWriterClosedPromiseInitializeAsResolved(this);
            } else {
              const storedError = stream._storedError;
              defaultWriterReadyPromiseInitializeAsRejected(this, storedError);
              defaultWriterClosedPromiseInitializeAsRejected(this, storedError);
            }
          }
          get closed() {
            if (!IsWritableStreamDefaultWriter(this)) {
              return promiseRejectedWith(defaultWriterBrandCheckException("closed"));
            }
            return this._closedPromise;
          }
          get desiredSize() {
            if (!IsWritableStreamDefaultWriter(this)) {
              throw defaultWriterBrandCheckException("desiredSize");
            }
            if (this._ownerWritableStream === void 0) {
              throw defaultWriterLockException("desiredSize");
            }
            return WritableStreamDefaultWriterGetDesiredSize(this);
          }
          get ready() {
            if (!IsWritableStreamDefaultWriter(this)) {
              return promiseRejectedWith(defaultWriterBrandCheckException("ready"));
            }
            return this._readyPromise;
          }
          abort(reason = void 0) {
            if (!IsWritableStreamDefaultWriter(this)) {
              return promiseRejectedWith(defaultWriterBrandCheckException("abort"));
            }
            if (this._ownerWritableStream === void 0) {
              return promiseRejectedWith(defaultWriterLockException("abort"));
            }
            return WritableStreamDefaultWriterAbort(this, reason);
          }
          close() {
            if (!IsWritableStreamDefaultWriter(this)) {
              return promiseRejectedWith(defaultWriterBrandCheckException("close"));
            }
            const stream = this._ownerWritableStream;
            if (stream === void 0) {
              return promiseRejectedWith(defaultWriterLockException("close"));
            }
            if (WritableStreamCloseQueuedOrInFlight(stream)) {
              return promiseRejectedWith(new TypeError("Cannot close an already-closing stream"));
            }
            return WritableStreamDefaultWriterClose(this);
          }
          releaseLock() {
            if (!IsWritableStreamDefaultWriter(this)) {
              throw defaultWriterBrandCheckException("releaseLock");
            }
            const stream = this._ownerWritableStream;
            if (stream === void 0) {
              return;
            }
            WritableStreamDefaultWriterRelease(this);
          }
          write(chunk = void 0) {
            if (!IsWritableStreamDefaultWriter(this)) {
              return promiseRejectedWith(defaultWriterBrandCheckException("write"));
            }
            if (this._ownerWritableStream === void 0) {
              return promiseRejectedWith(defaultWriterLockException("write to"));
            }
            return WritableStreamDefaultWriterWrite(this, chunk);
          }
        }
        Object.defineProperties(WritableStreamDefaultWriter.prototype, {
          abort: { enumerable: true },
          close: { enumerable: true },
          releaseLock: { enumerable: true },
          write: { enumerable: true },
          closed: { enumerable: true },
          desiredSize: { enumerable: true },
          ready: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(WritableStreamDefaultWriter.prototype, SymbolPolyfill.toStringTag, {
            value: "WritableStreamDefaultWriter",
            configurable: true
          });
        }
        function IsWritableStreamDefaultWriter(x) {
          if (!typeIsObject(x)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x, "_ownerWritableStream")) {
            return false;
          }
          return x instanceof WritableStreamDefaultWriter;
        }
        function WritableStreamDefaultWriterAbort(writer, reason) {
          const stream = writer._ownerWritableStream;
          return WritableStreamAbort(stream, reason);
        }
        function WritableStreamDefaultWriterClose(writer) {
          const stream = writer._ownerWritableStream;
          return WritableStreamClose(stream);
        }
        function WritableStreamDefaultWriterCloseWithErrorPropagation(writer) {
          const stream = writer._ownerWritableStream;
          const state = stream._state;
          if (WritableStreamCloseQueuedOrInFlight(stream) || state === "closed") {
            return promiseResolvedWith(void 0);
          }
          if (state === "errored") {
            return promiseRejectedWith(stream._storedError);
          }
          return WritableStreamDefaultWriterClose(writer);
        }
        function WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, error2) {
          if (writer._closedPromiseState === "pending") {
            defaultWriterClosedPromiseReject(writer, error2);
          } else {
            defaultWriterClosedPromiseResetToRejected(writer, error2);
          }
        }
        function WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, error2) {
          if (writer._readyPromiseState === "pending") {
            defaultWriterReadyPromiseReject(writer, error2);
          } else {
            defaultWriterReadyPromiseResetToRejected(writer, error2);
          }
        }
        function WritableStreamDefaultWriterGetDesiredSize(writer) {
          const stream = writer._ownerWritableStream;
          const state = stream._state;
          if (state === "errored" || state === "erroring") {
            return null;
          }
          if (state === "closed") {
            return 0;
          }
          return WritableStreamDefaultControllerGetDesiredSize(stream._writableStreamController);
        }
        function WritableStreamDefaultWriterRelease(writer) {
          const stream = writer._ownerWritableStream;
          const releasedError = new TypeError(`Writer was released and can no longer be used to monitor the stream's closedness`);
          WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, releasedError);
          WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, releasedError);
          stream._writer = void 0;
          writer._ownerWritableStream = void 0;
        }
        function WritableStreamDefaultWriterWrite(writer, chunk) {
          const stream = writer._ownerWritableStream;
          const controller = stream._writableStreamController;
          const chunkSize = WritableStreamDefaultControllerGetChunkSize(controller, chunk);
          if (stream !== writer._ownerWritableStream) {
            return promiseRejectedWith(defaultWriterLockException("write to"));
          }
          const state = stream._state;
          if (state === "errored") {
            return promiseRejectedWith(stream._storedError);
          }
          if (WritableStreamCloseQueuedOrInFlight(stream) || state === "closed") {
            return promiseRejectedWith(new TypeError("The stream is closing or closed and cannot be written to"));
          }
          if (state === "erroring") {
            return promiseRejectedWith(stream._storedError);
          }
          const promise = WritableStreamAddWriteRequest(stream);
          WritableStreamDefaultControllerWrite(controller, chunk, chunkSize);
          return promise;
        }
        const closeSentinel = {};
        class WritableStreamDefaultController {
          constructor() {
            throw new TypeError("Illegal constructor");
          }
          get abortReason() {
            if (!IsWritableStreamDefaultController(this)) {
              throw defaultControllerBrandCheckException$2("abortReason");
            }
            return this._abortReason;
          }
          get signal() {
            if (!IsWritableStreamDefaultController(this)) {
              throw defaultControllerBrandCheckException$2("signal");
            }
            if (this._abortController === void 0) {
              throw new TypeError("WritableStreamDefaultController.prototype.signal is not supported");
            }
            return this._abortController.signal;
          }
          error(e = void 0) {
            if (!IsWritableStreamDefaultController(this)) {
              throw defaultControllerBrandCheckException$2("error");
            }
            const state = this._controlledWritableStream._state;
            if (state !== "writable") {
              return;
            }
            WritableStreamDefaultControllerError(this, e);
          }
          [AbortSteps](reason) {
            const result = this._abortAlgorithm(reason);
            WritableStreamDefaultControllerClearAlgorithms(this);
            return result;
          }
          [ErrorSteps]() {
            ResetQueue(this);
          }
        }
        Object.defineProperties(WritableStreamDefaultController.prototype, {
          error: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(WritableStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {
            value: "WritableStreamDefaultController",
            configurable: true
          });
        }
        function IsWritableStreamDefaultController(x) {
          if (!typeIsObject(x)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x, "_controlledWritableStream")) {
            return false;
          }
          return x instanceof WritableStreamDefaultController;
        }
        function SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm) {
          controller._controlledWritableStream = stream;
          stream._writableStreamController = controller;
          controller._queue = void 0;
          controller._queueTotalSize = void 0;
          ResetQueue(controller);
          controller._abortReason = void 0;
          controller._abortController = createAbortController();
          controller._started = false;
          controller._strategySizeAlgorithm = sizeAlgorithm;
          controller._strategyHWM = highWaterMark;
          controller._writeAlgorithm = writeAlgorithm;
          controller._closeAlgorithm = closeAlgorithm;
          controller._abortAlgorithm = abortAlgorithm;
          const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);
          WritableStreamUpdateBackpressure(stream, backpressure);
          const startResult = startAlgorithm();
          const startPromise = promiseResolvedWith(startResult);
          uponPromise(startPromise, () => {
            controller._started = true;
            WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);
          }, (r) => {
            controller._started = true;
            WritableStreamDealWithRejection(stream, r);
          });
        }
        function SetUpWritableStreamDefaultControllerFromUnderlyingSink(stream, underlyingSink, highWaterMark, sizeAlgorithm) {
          const controller = Object.create(WritableStreamDefaultController.prototype);
          let startAlgorithm = () => void 0;
          let writeAlgorithm = () => promiseResolvedWith(void 0);
          let closeAlgorithm = () => promiseResolvedWith(void 0);
          let abortAlgorithm = () => promiseResolvedWith(void 0);
          if (underlyingSink.start !== void 0) {
            startAlgorithm = () => underlyingSink.start(controller);
          }
          if (underlyingSink.write !== void 0) {
            writeAlgorithm = (chunk) => underlyingSink.write(chunk, controller);
          }
          if (underlyingSink.close !== void 0) {
            closeAlgorithm = () => underlyingSink.close();
          }
          if (underlyingSink.abort !== void 0) {
            abortAlgorithm = (reason) => underlyingSink.abort(reason);
          }
          SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm);
        }
        function WritableStreamDefaultControllerClearAlgorithms(controller) {
          controller._writeAlgorithm = void 0;
          controller._closeAlgorithm = void 0;
          controller._abortAlgorithm = void 0;
          controller._strategySizeAlgorithm = void 0;
        }
        function WritableStreamDefaultControllerClose(controller) {
          EnqueueValueWithSize(controller, closeSentinel, 0);
          WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);
        }
        function WritableStreamDefaultControllerGetChunkSize(controller, chunk) {
          try {
            return controller._strategySizeAlgorithm(chunk);
          } catch (chunkSizeE) {
            WritableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);
            return 1;
          }
        }
        function WritableStreamDefaultControllerGetDesiredSize(controller) {
          return controller._strategyHWM - controller._queueTotalSize;
        }
        function WritableStreamDefaultControllerWrite(controller, chunk, chunkSize) {
          try {
            EnqueueValueWithSize(controller, chunk, chunkSize);
          } catch (enqueueE) {
            WritableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);
            return;
          }
          const stream = controller._controlledWritableStream;
          if (!WritableStreamCloseQueuedOrInFlight(stream) && stream._state === "writable") {
            const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);
            WritableStreamUpdateBackpressure(stream, backpressure);
          }
          WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);
        }
        function WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller) {
          const stream = controller._controlledWritableStream;
          if (!controller._started) {
            return;
          }
          if (stream._inFlightWriteRequest !== void 0) {
            return;
          }
          const state = stream._state;
          if (state === "erroring") {
            WritableStreamFinishErroring(stream);
            return;
          }
          if (controller._queue.length === 0) {
            return;
          }
          const value = PeekQueueValue(controller);
          if (value === closeSentinel) {
            WritableStreamDefaultControllerProcessClose(controller);
          } else {
            WritableStreamDefaultControllerProcessWrite(controller, value);
          }
        }
        function WritableStreamDefaultControllerErrorIfNeeded(controller, error2) {
          if (controller._controlledWritableStream._state === "writable") {
            WritableStreamDefaultControllerError(controller, error2);
          }
        }
        function WritableStreamDefaultControllerProcessClose(controller) {
          const stream = controller._controlledWritableStream;
          WritableStreamMarkCloseRequestInFlight(stream);
          DequeueValue(controller);
          const sinkClosePromise = controller._closeAlgorithm();
          WritableStreamDefaultControllerClearAlgorithms(controller);
          uponPromise(sinkClosePromise, () => {
            WritableStreamFinishInFlightClose(stream);
          }, (reason) => {
            WritableStreamFinishInFlightCloseWithError(stream, reason);
          });
        }
        function WritableStreamDefaultControllerProcessWrite(controller, chunk) {
          const stream = controller._controlledWritableStream;
          WritableStreamMarkFirstWriteRequestInFlight(stream);
          const sinkWritePromise = controller._writeAlgorithm(chunk);
          uponPromise(sinkWritePromise, () => {
            WritableStreamFinishInFlightWrite(stream);
            const state = stream._state;
            DequeueValue(controller);
            if (!WritableStreamCloseQueuedOrInFlight(stream) && state === "writable") {
              const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);
              WritableStreamUpdateBackpressure(stream, backpressure);
            }
            WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);
          }, (reason) => {
            if (stream._state === "writable") {
              WritableStreamDefaultControllerClearAlgorithms(controller);
            }
            WritableStreamFinishInFlightWriteWithError(stream, reason);
          });
        }
        function WritableStreamDefaultControllerGetBackpressure(controller) {
          const desiredSize = WritableStreamDefaultControllerGetDesiredSize(controller);
          return desiredSize <= 0;
        }
        function WritableStreamDefaultControllerError(controller, error2) {
          const stream = controller._controlledWritableStream;
          WritableStreamDefaultControllerClearAlgorithms(controller);
          WritableStreamStartErroring(stream, error2);
        }
        function streamBrandCheckException$2(name) {
          return new TypeError(`WritableStream.prototype.${name} can only be used on a WritableStream`);
        }
        function defaultControllerBrandCheckException$2(name) {
          return new TypeError(`WritableStreamDefaultController.prototype.${name} can only be used on a WritableStreamDefaultController`);
        }
        function defaultWriterBrandCheckException(name) {
          return new TypeError(`WritableStreamDefaultWriter.prototype.${name} can only be used on a WritableStreamDefaultWriter`);
        }
        function defaultWriterLockException(name) {
          return new TypeError("Cannot " + name + " a stream using a released writer");
        }
        function defaultWriterClosedPromiseInitialize(writer) {
          writer._closedPromise = newPromise((resolve2, reject) => {
            writer._closedPromise_resolve = resolve2;
            writer._closedPromise_reject = reject;
            writer._closedPromiseState = "pending";
          });
        }
        function defaultWriterClosedPromiseInitializeAsRejected(writer, reason) {
          defaultWriterClosedPromiseInitialize(writer);
          defaultWriterClosedPromiseReject(writer, reason);
        }
        function defaultWriterClosedPromiseInitializeAsResolved(writer) {
          defaultWriterClosedPromiseInitialize(writer);
          defaultWriterClosedPromiseResolve(writer);
        }
        function defaultWriterClosedPromiseReject(writer, reason) {
          if (writer._closedPromise_reject === void 0) {
            return;
          }
          setPromiseIsHandledToTrue(writer._closedPromise);
          writer._closedPromise_reject(reason);
          writer._closedPromise_resolve = void 0;
          writer._closedPromise_reject = void 0;
          writer._closedPromiseState = "rejected";
        }
        function defaultWriterClosedPromiseResetToRejected(writer, reason) {
          defaultWriterClosedPromiseInitializeAsRejected(writer, reason);
        }
        function defaultWriterClosedPromiseResolve(writer) {
          if (writer._closedPromise_resolve === void 0) {
            return;
          }
          writer._closedPromise_resolve(void 0);
          writer._closedPromise_resolve = void 0;
          writer._closedPromise_reject = void 0;
          writer._closedPromiseState = "resolved";
        }
        function defaultWriterReadyPromiseInitialize(writer) {
          writer._readyPromise = newPromise((resolve2, reject) => {
            writer._readyPromise_resolve = resolve2;
            writer._readyPromise_reject = reject;
          });
          writer._readyPromiseState = "pending";
        }
        function defaultWriterReadyPromiseInitializeAsRejected(writer, reason) {
          defaultWriterReadyPromiseInitialize(writer);
          defaultWriterReadyPromiseReject(writer, reason);
        }
        function defaultWriterReadyPromiseInitializeAsResolved(writer) {
          defaultWriterReadyPromiseInitialize(writer);
          defaultWriterReadyPromiseResolve(writer);
        }
        function defaultWriterReadyPromiseReject(writer, reason) {
          if (writer._readyPromise_reject === void 0) {
            return;
          }
          setPromiseIsHandledToTrue(writer._readyPromise);
          writer._readyPromise_reject(reason);
          writer._readyPromise_resolve = void 0;
          writer._readyPromise_reject = void 0;
          writer._readyPromiseState = "rejected";
        }
        function defaultWriterReadyPromiseReset(writer) {
          defaultWriterReadyPromiseInitialize(writer);
        }
        function defaultWriterReadyPromiseResetToRejected(writer, reason) {
          defaultWriterReadyPromiseInitializeAsRejected(writer, reason);
        }
        function defaultWriterReadyPromiseResolve(writer) {
          if (writer._readyPromise_resolve === void 0) {
            return;
          }
          writer._readyPromise_resolve(void 0);
          writer._readyPromise_resolve = void 0;
          writer._readyPromise_reject = void 0;
          writer._readyPromiseState = "fulfilled";
        }
        const NativeDOMException = typeof DOMException !== "undefined" ? DOMException : void 0;
        function isDOMExceptionConstructor(ctor) {
          if (!(typeof ctor === "function" || typeof ctor === "object")) {
            return false;
          }
          try {
            new ctor();
            return true;
          } catch (_a) {
            return false;
          }
        }
        function createDOMExceptionPolyfill() {
          const ctor = function DOMException2(message, name) {
            this.message = message || "";
            this.name = name || "Error";
            if (Error.captureStackTrace) {
              Error.captureStackTrace(this, this.constructor);
            }
          };
          ctor.prototype = Object.create(Error.prototype);
          Object.defineProperty(ctor.prototype, "constructor", { value: ctor, writable: true, configurable: true });
          return ctor;
        }
        const DOMException$1 = isDOMExceptionConstructor(NativeDOMException) ? NativeDOMException : createDOMExceptionPolyfill();
        function ReadableStreamPipeTo(source, dest, preventClose, preventAbort, preventCancel, signal) {
          const reader = AcquireReadableStreamDefaultReader(source);
          const writer = AcquireWritableStreamDefaultWriter(dest);
          source._disturbed = true;
          let shuttingDown = false;
          let currentWrite = promiseResolvedWith(void 0);
          return newPromise((resolve2, reject) => {
            let abortAlgorithm;
            if (signal !== void 0) {
              abortAlgorithm = () => {
                const error2 = new DOMException$1("Aborted", "AbortError");
                const actions = [];
                if (!preventAbort) {
                  actions.push(() => {
                    if (dest._state === "writable") {
                      return WritableStreamAbort(dest, error2);
                    }
                    return promiseResolvedWith(void 0);
                  });
                }
                if (!preventCancel) {
                  actions.push(() => {
                    if (source._state === "readable") {
                      return ReadableStreamCancel(source, error2);
                    }
                    return promiseResolvedWith(void 0);
                  });
                }
                shutdownWithAction(() => Promise.all(actions.map((action) => action())), true, error2);
              };
              if (signal.aborted) {
                abortAlgorithm();
                return;
              }
              signal.addEventListener("abort", abortAlgorithm);
            }
            function pipeLoop() {
              return newPromise((resolveLoop, rejectLoop) => {
                function next(done) {
                  if (done) {
                    resolveLoop();
                  } else {
                    PerformPromiseThen(pipeStep(), next, rejectLoop);
                  }
                }
                next(false);
              });
            }
            function pipeStep() {
              if (shuttingDown) {
                return promiseResolvedWith(true);
              }
              return PerformPromiseThen(writer._readyPromise, () => {
                return newPromise((resolveRead, rejectRead) => {
                  ReadableStreamDefaultReaderRead(reader, {
                    _chunkSteps: (chunk) => {
                      currentWrite = PerformPromiseThen(WritableStreamDefaultWriterWrite(writer, chunk), void 0, noop2);
                      resolveRead(false);
                    },
                    _closeSteps: () => resolveRead(true),
                    _errorSteps: rejectRead
                  });
                });
              });
            }
            isOrBecomesErrored(source, reader._closedPromise, (storedError) => {
              if (!preventAbort) {
                shutdownWithAction(() => WritableStreamAbort(dest, storedError), true, storedError);
              } else {
                shutdown(true, storedError);
              }
            });
            isOrBecomesErrored(dest, writer._closedPromise, (storedError) => {
              if (!preventCancel) {
                shutdownWithAction(() => ReadableStreamCancel(source, storedError), true, storedError);
              } else {
                shutdown(true, storedError);
              }
            });
            isOrBecomesClosed(source, reader._closedPromise, () => {
              if (!preventClose) {
                shutdownWithAction(() => WritableStreamDefaultWriterCloseWithErrorPropagation(writer));
              } else {
                shutdown();
              }
            });
            if (WritableStreamCloseQueuedOrInFlight(dest) || dest._state === "closed") {
              const destClosed = new TypeError("the destination writable stream closed before all data could be piped to it");
              if (!preventCancel) {
                shutdownWithAction(() => ReadableStreamCancel(source, destClosed), true, destClosed);
              } else {
                shutdown(true, destClosed);
              }
            }
            setPromiseIsHandledToTrue(pipeLoop());
            function waitForWritesToFinish() {
              const oldCurrentWrite = currentWrite;
              return PerformPromiseThen(currentWrite, () => oldCurrentWrite !== currentWrite ? waitForWritesToFinish() : void 0);
            }
            function isOrBecomesErrored(stream, promise, action) {
              if (stream._state === "errored") {
                action(stream._storedError);
              } else {
                uponRejection(promise, action);
              }
            }
            function isOrBecomesClosed(stream, promise, action) {
              if (stream._state === "closed") {
                action();
              } else {
                uponFulfillment(promise, action);
              }
            }
            function shutdownWithAction(action, originalIsError, originalError) {
              if (shuttingDown) {
                return;
              }
              shuttingDown = true;
              if (dest._state === "writable" && !WritableStreamCloseQueuedOrInFlight(dest)) {
                uponFulfillment(waitForWritesToFinish(), doTheRest);
              } else {
                doTheRest();
              }
              function doTheRest() {
                uponPromise(action(), () => finalize(originalIsError, originalError), (newError) => finalize(true, newError));
              }
            }
            function shutdown(isError, error2) {
              if (shuttingDown) {
                return;
              }
              shuttingDown = true;
              if (dest._state === "writable" && !WritableStreamCloseQueuedOrInFlight(dest)) {
                uponFulfillment(waitForWritesToFinish(), () => finalize(isError, error2));
              } else {
                finalize(isError, error2);
              }
            }
            function finalize(isError, error2) {
              WritableStreamDefaultWriterRelease(writer);
              ReadableStreamReaderGenericRelease(reader);
              if (signal !== void 0) {
                signal.removeEventListener("abort", abortAlgorithm);
              }
              if (isError) {
                reject(error2);
              } else {
                resolve2(void 0);
              }
            }
          });
        }
        class ReadableStreamDefaultController {
          constructor() {
            throw new TypeError("Illegal constructor");
          }
          get desiredSize() {
            if (!IsReadableStreamDefaultController(this)) {
              throw defaultControllerBrandCheckException$1("desiredSize");
            }
            return ReadableStreamDefaultControllerGetDesiredSize(this);
          }
          close() {
            if (!IsReadableStreamDefaultController(this)) {
              throw defaultControllerBrandCheckException$1("close");
            }
            if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)) {
              throw new TypeError("The stream is not in a state that permits close");
            }
            ReadableStreamDefaultControllerClose(this);
          }
          enqueue(chunk = void 0) {
            if (!IsReadableStreamDefaultController(this)) {
              throw defaultControllerBrandCheckException$1("enqueue");
            }
            if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)) {
              throw new TypeError("The stream is not in a state that permits enqueue");
            }
            return ReadableStreamDefaultControllerEnqueue(this, chunk);
          }
          error(e = void 0) {
            if (!IsReadableStreamDefaultController(this)) {
              throw defaultControllerBrandCheckException$1("error");
            }
            ReadableStreamDefaultControllerError(this, e);
          }
          [CancelSteps](reason) {
            ResetQueue(this);
            const result = this._cancelAlgorithm(reason);
            ReadableStreamDefaultControllerClearAlgorithms(this);
            return result;
          }
          [PullSteps](readRequest) {
            const stream = this._controlledReadableStream;
            if (this._queue.length > 0) {
              const chunk = DequeueValue(this);
              if (this._closeRequested && this._queue.length === 0) {
                ReadableStreamDefaultControllerClearAlgorithms(this);
                ReadableStreamClose(stream);
              } else {
                ReadableStreamDefaultControllerCallPullIfNeeded(this);
              }
              readRequest._chunkSteps(chunk);
            } else {
              ReadableStreamAddReadRequest(stream, readRequest);
              ReadableStreamDefaultControllerCallPullIfNeeded(this);
            }
          }
        }
        Object.defineProperties(ReadableStreamDefaultController.prototype, {
          close: { enumerable: true },
          enqueue: { enumerable: true },
          error: { enumerable: true },
          desiredSize: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(ReadableStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {
            value: "ReadableStreamDefaultController",
            configurable: true
          });
        }
        function IsReadableStreamDefaultController(x) {
          if (!typeIsObject(x)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x, "_controlledReadableStream")) {
            return false;
          }
          return x instanceof ReadableStreamDefaultController;
        }
        function ReadableStreamDefaultControllerCallPullIfNeeded(controller) {
          const shouldPull = ReadableStreamDefaultControllerShouldCallPull(controller);
          if (!shouldPull) {
            return;
          }
          if (controller._pulling) {
            controller._pullAgain = true;
            return;
          }
          controller._pulling = true;
          const pullPromise = controller._pullAlgorithm();
          uponPromise(pullPromise, () => {
            controller._pulling = false;
            if (controller._pullAgain) {
              controller._pullAgain = false;
              ReadableStreamDefaultControllerCallPullIfNeeded(controller);
            }
          }, (e) => {
            ReadableStreamDefaultControllerError(controller, e);
          });
        }
        function ReadableStreamDefaultControllerShouldCallPull(controller) {
          const stream = controller._controlledReadableStream;
          if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {
            return false;
          }
          if (!controller._started) {
            return false;
          }
          if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {
            return true;
          }
          const desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);
          if (desiredSize > 0) {
            return true;
          }
          return false;
        }
        function ReadableStreamDefaultControllerClearAlgorithms(controller) {
          controller._pullAlgorithm = void 0;
          controller._cancelAlgorithm = void 0;
          controller._strategySizeAlgorithm = void 0;
        }
        function ReadableStreamDefaultControllerClose(controller) {
          if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {
            return;
          }
          const stream = controller._controlledReadableStream;
          controller._closeRequested = true;
          if (controller._queue.length === 0) {
            ReadableStreamDefaultControllerClearAlgorithms(controller);
            ReadableStreamClose(stream);
          }
        }
        function ReadableStreamDefaultControllerEnqueue(controller, chunk) {
          if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {
            return;
          }
          const stream = controller._controlledReadableStream;
          if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {
            ReadableStreamFulfillReadRequest(stream, chunk, false);
          } else {
            let chunkSize;
            try {
              chunkSize = controller._strategySizeAlgorithm(chunk);
            } catch (chunkSizeE) {
              ReadableStreamDefaultControllerError(controller, chunkSizeE);
              throw chunkSizeE;
            }
            try {
              EnqueueValueWithSize(controller, chunk, chunkSize);
            } catch (enqueueE) {
              ReadableStreamDefaultControllerError(controller, enqueueE);
              throw enqueueE;
            }
          }
          ReadableStreamDefaultControllerCallPullIfNeeded(controller);
        }
        function ReadableStreamDefaultControllerError(controller, e) {
          const stream = controller._controlledReadableStream;
          if (stream._state !== "readable") {
            return;
          }
          ResetQueue(controller);
          ReadableStreamDefaultControllerClearAlgorithms(controller);
          ReadableStreamError(stream, e);
        }
        function ReadableStreamDefaultControllerGetDesiredSize(controller) {
          const state = controller._controlledReadableStream._state;
          if (state === "errored") {
            return null;
          }
          if (state === "closed") {
            return 0;
          }
          return controller._strategyHWM - controller._queueTotalSize;
        }
        function ReadableStreamDefaultControllerHasBackpressure(controller) {
          if (ReadableStreamDefaultControllerShouldCallPull(controller)) {
            return false;
          }
          return true;
        }
        function ReadableStreamDefaultControllerCanCloseOrEnqueue(controller) {
          const state = controller._controlledReadableStream._state;
          if (!controller._closeRequested && state === "readable") {
            return true;
          }
          return false;
        }
        function SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm) {
          controller._controlledReadableStream = stream;
          controller._queue = void 0;
          controller._queueTotalSize = void 0;
          ResetQueue(controller);
          controller._started = false;
          controller._closeRequested = false;
          controller._pullAgain = false;
          controller._pulling = false;
          controller._strategySizeAlgorithm = sizeAlgorithm;
          controller._strategyHWM = highWaterMark;
          controller._pullAlgorithm = pullAlgorithm;
          controller._cancelAlgorithm = cancelAlgorithm;
          stream._readableStreamController = controller;
          const startResult = startAlgorithm();
          uponPromise(promiseResolvedWith(startResult), () => {
            controller._started = true;
            ReadableStreamDefaultControllerCallPullIfNeeded(controller);
          }, (r) => {
            ReadableStreamDefaultControllerError(controller, r);
          });
        }
        function SetUpReadableStreamDefaultControllerFromUnderlyingSource(stream, underlyingSource, highWaterMark, sizeAlgorithm) {
          const controller = Object.create(ReadableStreamDefaultController.prototype);
          let startAlgorithm = () => void 0;
          let pullAlgorithm = () => promiseResolvedWith(void 0);
          let cancelAlgorithm = () => promiseResolvedWith(void 0);
          if (underlyingSource.start !== void 0) {
            startAlgorithm = () => underlyingSource.start(controller);
          }
          if (underlyingSource.pull !== void 0) {
            pullAlgorithm = () => underlyingSource.pull(controller);
          }
          if (underlyingSource.cancel !== void 0) {
            cancelAlgorithm = (reason) => underlyingSource.cancel(reason);
          }
          SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm);
        }
        function defaultControllerBrandCheckException$1(name) {
          return new TypeError(`ReadableStreamDefaultController.prototype.${name} can only be used on a ReadableStreamDefaultController`);
        }
        function ReadableStreamTee(stream, cloneForBranch2) {
          if (IsReadableByteStreamController(stream._readableStreamController)) {
            return ReadableByteStreamTee(stream);
          }
          return ReadableStreamDefaultTee(stream);
        }
        function ReadableStreamDefaultTee(stream, cloneForBranch2) {
          const reader = AcquireReadableStreamDefaultReader(stream);
          let reading = false;
          let canceled1 = false;
          let canceled2 = false;
          let reason1;
          let reason2;
          let branch1;
          let branch2;
          let resolveCancelPromise;
          const cancelPromise = newPromise((resolve2) => {
            resolveCancelPromise = resolve2;
          });
          function pullAlgorithm() {
            if (reading) {
              return promiseResolvedWith(void 0);
            }
            reading = true;
            const readRequest = {
              _chunkSteps: (chunk) => {
                queueMicrotask(() => {
                  reading = false;
                  const chunk1 = chunk;
                  const chunk2 = chunk;
                  if (!canceled1) {
                    ReadableStreamDefaultControllerEnqueue(branch1._readableStreamController, chunk1);
                  }
                  if (!canceled2) {
                    ReadableStreamDefaultControllerEnqueue(branch2._readableStreamController, chunk2);
                  }
                });
              },
              _closeSteps: () => {
                reading = false;
                if (!canceled1) {
                  ReadableStreamDefaultControllerClose(branch1._readableStreamController);
                }
                if (!canceled2) {
                  ReadableStreamDefaultControllerClose(branch2._readableStreamController);
                }
                if (!canceled1 || !canceled2) {
                  resolveCancelPromise(void 0);
                }
              },
              _errorSteps: () => {
                reading = false;
              }
            };
            ReadableStreamDefaultReaderRead(reader, readRequest);
            return promiseResolvedWith(void 0);
          }
          function cancel1Algorithm(reason) {
            canceled1 = true;
            reason1 = reason;
            if (canceled2) {
              const compositeReason = CreateArrayFromList([reason1, reason2]);
              const cancelResult = ReadableStreamCancel(stream, compositeReason);
              resolveCancelPromise(cancelResult);
            }
            return cancelPromise;
          }
          function cancel2Algorithm(reason) {
            canceled2 = true;
            reason2 = reason;
            if (canceled1) {
              const compositeReason = CreateArrayFromList([reason1, reason2]);
              const cancelResult = ReadableStreamCancel(stream, compositeReason);
              resolveCancelPromise(cancelResult);
            }
            return cancelPromise;
          }
          function startAlgorithm() {
          }
          branch1 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel1Algorithm);
          branch2 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel2Algorithm);
          uponRejection(reader._closedPromise, (r) => {
            ReadableStreamDefaultControllerError(branch1._readableStreamController, r);
            ReadableStreamDefaultControllerError(branch2._readableStreamController, r);
            if (!canceled1 || !canceled2) {
              resolveCancelPromise(void 0);
            }
          });
          return [branch1, branch2];
        }
        function ReadableByteStreamTee(stream) {
          let reader = AcquireReadableStreamDefaultReader(stream);
          let reading = false;
          let canceled1 = false;
          let canceled2 = false;
          let reason1;
          let reason2;
          let branch1;
          let branch2;
          let resolveCancelPromise;
          const cancelPromise = newPromise((resolve2) => {
            resolveCancelPromise = resolve2;
          });
          function forwardReaderError(thisReader) {
            uponRejection(thisReader._closedPromise, (r) => {
              if (thisReader !== reader) {
                return;
              }
              ReadableByteStreamControllerError(branch1._readableStreamController, r);
              ReadableByteStreamControllerError(branch2._readableStreamController, r);
              if (!canceled1 || !canceled2) {
                resolveCancelPromise(void 0);
              }
            });
          }
          function pullWithDefaultReader() {
            if (IsReadableStreamBYOBReader(reader)) {
              ReadableStreamReaderGenericRelease(reader);
              reader = AcquireReadableStreamDefaultReader(stream);
              forwardReaderError(reader);
            }
            const readRequest = {
              _chunkSteps: (chunk) => {
                queueMicrotask(() => {
                  reading = false;
                  const chunk1 = chunk;
                  let chunk2 = chunk;
                  if (!canceled1 && !canceled2) {
                    try {
                      chunk2 = CloneAsUint8Array(chunk);
                    } catch (cloneE) {
                      ReadableByteStreamControllerError(branch1._readableStreamController, cloneE);
                      ReadableByteStreamControllerError(branch2._readableStreamController, cloneE);
                      resolveCancelPromise(ReadableStreamCancel(stream, cloneE));
                      return;
                    }
                  }
                  if (!canceled1) {
                    ReadableByteStreamControllerEnqueue(branch1._readableStreamController, chunk1);
                  }
                  if (!canceled2) {
                    ReadableByteStreamControllerEnqueue(branch2._readableStreamController, chunk2);
                  }
                });
              },
              _closeSteps: () => {
                reading = false;
                if (!canceled1) {
                  ReadableByteStreamControllerClose(branch1._readableStreamController);
                }
                if (!canceled2) {
                  ReadableByteStreamControllerClose(branch2._readableStreamController);
                }
                if (branch1._readableStreamController._pendingPullIntos.length > 0) {
                  ReadableByteStreamControllerRespond(branch1._readableStreamController, 0);
                }
                if (branch2._readableStreamController._pendingPullIntos.length > 0) {
                  ReadableByteStreamControllerRespond(branch2._readableStreamController, 0);
                }
                if (!canceled1 || !canceled2) {
                  resolveCancelPromise(void 0);
                }
              },
              _errorSteps: () => {
                reading = false;
              }
            };
            ReadableStreamDefaultReaderRead(reader, readRequest);
          }
          function pullWithBYOBReader(view, forBranch2) {
            if (IsReadableStreamDefaultReader(reader)) {
              ReadableStreamReaderGenericRelease(reader);
              reader = AcquireReadableStreamBYOBReader(stream);
              forwardReaderError(reader);
            }
            const byobBranch = forBranch2 ? branch2 : branch1;
            const otherBranch = forBranch2 ? branch1 : branch2;
            const readIntoRequest = {
              _chunkSteps: (chunk) => {
                queueMicrotask(() => {
                  reading = false;
                  const byobCanceled = forBranch2 ? canceled2 : canceled1;
                  const otherCanceled = forBranch2 ? canceled1 : canceled2;
                  if (!otherCanceled) {
                    let clonedChunk;
                    try {
                      clonedChunk = CloneAsUint8Array(chunk);
                    } catch (cloneE) {
                      ReadableByteStreamControllerError(byobBranch._readableStreamController, cloneE);
                      ReadableByteStreamControllerError(otherBranch._readableStreamController, cloneE);
                      resolveCancelPromise(ReadableStreamCancel(stream, cloneE));
                      return;
                    }
                    if (!byobCanceled) {
                      ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);
                    }
                    ReadableByteStreamControllerEnqueue(otherBranch._readableStreamController, clonedChunk);
                  } else if (!byobCanceled) {
                    ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);
                  }
                });
              },
              _closeSteps: (chunk) => {
                reading = false;
                const byobCanceled = forBranch2 ? canceled2 : canceled1;
                const otherCanceled = forBranch2 ? canceled1 : canceled2;
                if (!byobCanceled) {
                  ReadableByteStreamControllerClose(byobBranch._readableStreamController);
                }
                if (!otherCanceled) {
                  ReadableByteStreamControllerClose(otherBranch._readableStreamController);
                }
                if (chunk !== void 0) {
                  if (!byobCanceled) {
                    ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);
                  }
                  if (!otherCanceled && otherBranch._readableStreamController._pendingPullIntos.length > 0) {
                    ReadableByteStreamControllerRespond(otherBranch._readableStreamController, 0);
                  }
                }
                if (!byobCanceled || !otherCanceled) {
                  resolveCancelPromise(void 0);
                }
              },
              _errorSteps: () => {
                reading = false;
              }
            };
            ReadableStreamBYOBReaderRead(reader, view, readIntoRequest);
          }
          function pull1Algorithm() {
            if (reading) {
              return promiseResolvedWith(void 0);
            }
            reading = true;
            const byobRequest = ReadableByteStreamControllerGetBYOBRequest(branch1._readableStreamController);
            if (byobRequest === null) {
              pullWithDefaultReader();
            } else {
              pullWithBYOBReader(byobRequest._view, false);
            }
            return promiseResolvedWith(void 0);
          }
          function pull2Algorithm() {
            if (reading) {
              return promiseResolvedWith(void 0);
            }
            reading = true;
            const byobRequest = ReadableByteStreamControllerGetBYOBRequest(branch2._readableStreamController);
            if (byobRequest === null) {
              pullWithDefaultReader();
            } else {
              pullWithBYOBReader(byobRequest._view, true);
            }
            return promiseResolvedWith(void 0);
          }
          function cancel1Algorithm(reason) {
            canceled1 = true;
            reason1 = reason;
            if (canceled2) {
              const compositeReason = CreateArrayFromList([reason1, reason2]);
              const cancelResult = ReadableStreamCancel(stream, compositeReason);
              resolveCancelPromise(cancelResult);
            }
            return cancelPromise;
          }
          function cancel2Algorithm(reason) {
            canceled2 = true;
            reason2 = reason;
            if (canceled1) {
              const compositeReason = CreateArrayFromList([reason1, reason2]);
              const cancelResult = ReadableStreamCancel(stream, compositeReason);
              resolveCancelPromise(cancelResult);
            }
            return cancelPromise;
          }
          function startAlgorithm() {
            return;
          }
          branch1 = CreateReadableByteStream(startAlgorithm, pull1Algorithm, cancel1Algorithm);
          branch2 = CreateReadableByteStream(startAlgorithm, pull2Algorithm, cancel2Algorithm);
          forwardReaderError(reader);
          return [branch1, branch2];
        }
        function convertUnderlyingDefaultOrByteSource(source, context) {
          assertDictionary(source, context);
          const original = source;
          const autoAllocateChunkSize = original === null || original === void 0 ? void 0 : original.autoAllocateChunkSize;
          const cancel = original === null || original === void 0 ? void 0 : original.cancel;
          const pull = original === null || original === void 0 ? void 0 : original.pull;
          const start = original === null || original === void 0 ? void 0 : original.start;
          const type = original === null || original === void 0 ? void 0 : original.type;
          return {
            autoAllocateChunkSize: autoAllocateChunkSize === void 0 ? void 0 : convertUnsignedLongLongWithEnforceRange(autoAllocateChunkSize, `${context} has member 'autoAllocateChunkSize' that`),
            cancel: cancel === void 0 ? void 0 : convertUnderlyingSourceCancelCallback(cancel, original, `${context} has member 'cancel' that`),
            pull: pull === void 0 ? void 0 : convertUnderlyingSourcePullCallback(pull, original, `${context} has member 'pull' that`),
            start: start === void 0 ? void 0 : convertUnderlyingSourceStartCallback(start, original, `${context} has member 'start' that`),
            type: type === void 0 ? void 0 : convertReadableStreamType(type, `${context} has member 'type' that`)
          };
        }
        function convertUnderlyingSourceCancelCallback(fn, original, context) {
          assertFunction(fn, context);
          return (reason) => promiseCall(fn, original, [reason]);
        }
        function convertUnderlyingSourcePullCallback(fn, original, context) {
          assertFunction(fn, context);
          return (controller) => promiseCall(fn, original, [controller]);
        }
        function convertUnderlyingSourceStartCallback(fn, original, context) {
          assertFunction(fn, context);
          return (controller) => reflectCall(fn, original, [controller]);
        }
        function convertReadableStreamType(type, context) {
          type = `${type}`;
          if (type !== "bytes") {
            throw new TypeError(`${context} '${type}' is not a valid enumeration value for ReadableStreamType`);
          }
          return type;
        }
        function convertReaderOptions(options2, context) {
          assertDictionary(options2, context);
          const mode = options2 === null || options2 === void 0 ? void 0 : options2.mode;
          return {
            mode: mode === void 0 ? void 0 : convertReadableStreamReaderMode(mode, `${context} has member 'mode' that`)
          };
        }
        function convertReadableStreamReaderMode(mode, context) {
          mode = `${mode}`;
          if (mode !== "byob") {
            throw new TypeError(`${context} '${mode}' is not a valid enumeration value for ReadableStreamReaderMode`);
          }
          return mode;
        }
        function convertIteratorOptions(options2, context) {
          assertDictionary(options2, context);
          const preventCancel = options2 === null || options2 === void 0 ? void 0 : options2.preventCancel;
          return { preventCancel: Boolean(preventCancel) };
        }
        function convertPipeOptions(options2, context) {
          assertDictionary(options2, context);
          const preventAbort = options2 === null || options2 === void 0 ? void 0 : options2.preventAbort;
          const preventCancel = options2 === null || options2 === void 0 ? void 0 : options2.preventCancel;
          const preventClose = options2 === null || options2 === void 0 ? void 0 : options2.preventClose;
          const signal = options2 === null || options2 === void 0 ? void 0 : options2.signal;
          if (signal !== void 0) {
            assertAbortSignal(signal, `${context} has member 'signal' that`);
          }
          return {
            preventAbort: Boolean(preventAbort),
            preventCancel: Boolean(preventCancel),
            preventClose: Boolean(preventClose),
            signal
          };
        }
        function assertAbortSignal(signal, context) {
          if (!isAbortSignal2(signal)) {
            throw new TypeError(`${context} is not an AbortSignal.`);
          }
        }
        function convertReadableWritablePair(pair, context) {
          assertDictionary(pair, context);
          const readable2 = pair === null || pair === void 0 ? void 0 : pair.readable;
          assertRequiredField(readable2, "readable", "ReadableWritablePair");
          assertReadableStream(readable2, `${context} has member 'readable' that`);
          const writable3 = pair === null || pair === void 0 ? void 0 : pair.writable;
          assertRequiredField(writable3, "writable", "ReadableWritablePair");
          assertWritableStream(writable3, `${context} has member 'writable' that`);
          return { readable: readable2, writable: writable3 };
        }
        class ReadableStream2 {
          constructor(rawUnderlyingSource = {}, rawStrategy = {}) {
            if (rawUnderlyingSource === void 0) {
              rawUnderlyingSource = null;
            } else {
              assertObject(rawUnderlyingSource, "First parameter");
            }
            const strategy = convertQueuingStrategy(rawStrategy, "Second parameter");
            const underlyingSource = convertUnderlyingDefaultOrByteSource(rawUnderlyingSource, "First parameter");
            InitializeReadableStream(this);
            if (underlyingSource.type === "bytes") {
              if (strategy.size !== void 0) {
                throw new RangeError("The strategy for a byte stream cannot have a size function");
              }
              const highWaterMark = ExtractHighWaterMark(strategy, 0);
              SetUpReadableByteStreamControllerFromUnderlyingSource(this, underlyingSource, highWaterMark);
            } else {
              const sizeAlgorithm = ExtractSizeAlgorithm(strategy);
              const highWaterMark = ExtractHighWaterMark(strategy, 1);
              SetUpReadableStreamDefaultControllerFromUnderlyingSource(this, underlyingSource, highWaterMark, sizeAlgorithm);
            }
          }
          get locked() {
            if (!IsReadableStream(this)) {
              throw streamBrandCheckException$1("locked");
            }
            return IsReadableStreamLocked(this);
          }
          cancel(reason = void 0) {
            if (!IsReadableStream(this)) {
              return promiseRejectedWith(streamBrandCheckException$1("cancel"));
            }
            if (IsReadableStreamLocked(this)) {
              return promiseRejectedWith(new TypeError("Cannot cancel a stream that already has a reader"));
            }
            return ReadableStreamCancel(this, reason);
          }
          getReader(rawOptions = void 0) {
            if (!IsReadableStream(this)) {
              throw streamBrandCheckException$1("getReader");
            }
            const options2 = convertReaderOptions(rawOptions, "First parameter");
            if (options2.mode === void 0) {
              return AcquireReadableStreamDefaultReader(this);
            }
            return AcquireReadableStreamBYOBReader(this);
          }
          pipeThrough(rawTransform, rawOptions = {}) {
            if (!IsReadableStream(this)) {
              throw streamBrandCheckException$1("pipeThrough");
            }
            assertRequiredArgument(rawTransform, 1, "pipeThrough");
            const transform = convertReadableWritablePair(rawTransform, "First parameter");
            const options2 = convertPipeOptions(rawOptions, "Second parameter");
            if (IsReadableStreamLocked(this)) {
              throw new TypeError("ReadableStream.prototype.pipeThrough cannot be used on a locked ReadableStream");
            }
            if (IsWritableStreamLocked(transform.writable)) {
              throw new TypeError("ReadableStream.prototype.pipeThrough cannot be used on a locked WritableStream");
            }
            const promise = ReadableStreamPipeTo(this, transform.writable, options2.preventClose, options2.preventAbort, options2.preventCancel, options2.signal);
            setPromiseIsHandledToTrue(promise);
            return transform.readable;
          }
          pipeTo(destination, rawOptions = {}) {
            if (!IsReadableStream(this)) {
              return promiseRejectedWith(streamBrandCheckException$1("pipeTo"));
            }
            if (destination === void 0) {
              return promiseRejectedWith(`Parameter 1 is required in 'pipeTo'.`);
            }
            if (!IsWritableStream(destination)) {
              return promiseRejectedWith(new TypeError(`ReadableStream.prototype.pipeTo's first argument must be a WritableStream`));
            }
            let options2;
            try {
              options2 = convertPipeOptions(rawOptions, "Second parameter");
            } catch (e) {
              return promiseRejectedWith(e);
            }
            if (IsReadableStreamLocked(this)) {
              return promiseRejectedWith(new TypeError("ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream"));
            }
            if (IsWritableStreamLocked(destination)) {
              return promiseRejectedWith(new TypeError("ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream"));
            }
            return ReadableStreamPipeTo(this, destination, options2.preventClose, options2.preventAbort, options2.preventCancel, options2.signal);
          }
          tee() {
            if (!IsReadableStream(this)) {
              throw streamBrandCheckException$1("tee");
            }
            const branches = ReadableStreamTee(this);
            return CreateArrayFromList(branches);
          }
          values(rawOptions = void 0) {
            if (!IsReadableStream(this)) {
              throw streamBrandCheckException$1("values");
            }
            const options2 = convertIteratorOptions(rawOptions, "First parameter");
            return AcquireReadableStreamAsyncIterator(this, options2.preventCancel);
          }
        }
        Object.defineProperties(ReadableStream2.prototype, {
          cancel: { enumerable: true },
          getReader: { enumerable: true },
          pipeThrough: { enumerable: true },
          pipeTo: { enumerable: true },
          tee: { enumerable: true },
          values: { enumerable: true },
          locked: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(ReadableStream2.prototype, SymbolPolyfill.toStringTag, {
            value: "ReadableStream",
            configurable: true
          });
        }
        if (typeof SymbolPolyfill.asyncIterator === "symbol") {
          Object.defineProperty(ReadableStream2.prototype, SymbolPolyfill.asyncIterator, {
            value: ReadableStream2.prototype.values,
            writable: true,
            configurable: true
          });
        }
        function CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark = 1, sizeAlgorithm = () => 1) {
          const stream = Object.create(ReadableStream2.prototype);
          InitializeReadableStream(stream);
          const controller = Object.create(ReadableStreamDefaultController.prototype);
          SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm);
          return stream;
        }
        function CreateReadableByteStream(startAlgorithm, pullAlgorithm, cancelAlgorithm) {
          const stream = Object.create(ReadableStream2.prototype);
          InitializeReadableStream(stream);
          const controller = Object.create(ReadableByteStreamController.prototype);
          SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, 0, void 0);
          return stream;
        }
        function InitializeReadableStream(stream) {
          stream._state = "readable";
          stream._reader = void 0;
          stream._storedError = void 0;
          stream._disturbed = false;
        }
        function IsReadableStream(x) {
          if (!typeIsObject(x)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x, "_readableStreamController")) {
            return false;
          }
          return x instanceof ReadableStream2;
        }
        function IsReadableStreamLocked(stream) {
          if (stream._reader === void 0) {
            return false;
          }
          return true;
        }
        function ReadableStreamCancel(stream, reason) {
          stream._disturbed = true;
          if (stream._state === "closed") {
            return promiseResolvedWith(void 0);
          }
          if (stream._state === "errored") {
            return promiseRejectedWith(stream._storedError);
          }
          ReadableStreamClose(stream);
          const reader = stream._reader;
          if (reader !== void 0 && IsReadableStreamBYOBReader(reader)) {
            reader._readIntoRequests.forEach((readIntoRequest) => {
              readIntoRequest._closeSteps(void 0);
            });
            reader._readIntoRequests = new SimpleQueue();
          }
          const sourceCancelPromise = stream._readableStreamController[CancelSteps](reason);
          return transformPromiseWith(sourceCancelPromise, noop2);
        }
        function ReadableStreamClose(stream) {
          stream._state = "closed";
          const reader = stream._reader;
          if (reader === void 0) {
            return;
          }
          defaultReaderClosedPromiseResolve(reader);
          if (IsReadableStreamDefaultReader(reader)) {
            reader._readRequests.forEach((readRequest) => {
              readRequest._closeSteps();
            });
            reader._readRequests = new SimpleQueue();
          }
        }
        function ReadableStreamError(stream, e) {
          stream._state = "errored";
          stream._storedError = e;
          const reader = stream._reader;
          if (reader === void 0) {
            return;
          }
          defaultReaderClosedPromiseReject(reader, e);
          if (IsReadableStreamDefaultReader(reader)) {
            reader._readRequests.forEach((readRequest) => {
              readRequest._errorSteps(e);
            });
            reader._readRequests = new SimpleQueue();
          } else {
            reader._readIntoRequests.forEach((readIntoRequest) => {
              readIntoRequest._errorSteps(e);
            });
            reader._readIntoRequests = new SimpleQueue();
          }
        }
        function streamBrandCheckException$1(name) {
          return new TypeError(`ReadableStream.prototype.${name} can only be used on a ReadableStream`);
        }
        function convertQueuingStrategyInit(init2, context) {
          assertDictionary(init2, context);
          const highWaterMark = init2 === null || init2 === void 0 ? void 0 : init2.highWaterMark;
          assertRequiredField(highWaterMark, "highWaterMark", "QueuingStrategyInit");
          return {
            highWaterMark: convertUnrestrictedDouble(highWaterMark)
          };
        }
        const byteLengthSizeFunction = (chunk) => {
          return chunk.byteLength;
        };
        Object.defineProperty(byteLengthSizeFunction, "name", {
          value: "size",
          configurable: true
        });
        class ByteLengthQueuingStrategy {
          constructor(options2) {
            assertRequiredArgument(options2, 1, "ByteLengthQueuingStrategy");
            options2 = convertQueuingStrategyInit(options2, "First parameter");
            this._byteLengthQueuingStrategyHighWaterMark = options2.highWaterMark;
          }
          get highWaterMark() {
            if (!IsByteLengthQueuingStrategy(this)) {
              throw byteLengthBrandCheckException("highWaterMark");
            }
            return this._byteLengthQueuingStrategyHighWaterMark;
          }
          get size() {
            if (!IsByteLengthQueuingStrategy(this)) {
              throw byteLengthBrandCheckException("size");
            }
            return byteLengthSizeFunction;
          }
        }
        Object.defineProperties(ByteLengthQueuingStrategy.prototype, {
          highWaterMark: { enumerable: true },
          size: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(ByteLengthQueuingStrategy.prototype, SymbolPolyfill.toStringTag, {
            value: "ByteLengthQueuingStrategy",
            configurable: true
          });
        }
        function byteLengthBrandCheckException(name) {
          return new TypeError(`ByteLengthQueuingStrategy.prototype.${name} can only be used on a ByteLengthQueuingStrategy`);
        }
        function IsByteLengthQueuingStrategy(x) {
          if (!typeIsObject(x)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x, "_byteLengthQueuingStrategyHighWaterMark")) {
            return false;
          }
          return x instanceof ByteLengthQueuingStrategy;
        }
        const countSizeFunction = () => {
          return 1;
        };
        Object.defineProperty(countSizeFunction, "name", {
          value: "size",
          configurable: true
        });
        class CountQueuingStrategy {
          constructor(options2) {
            assertRequiredArgument(options2, 1, "CountQueuingStrategy");
            options2 = convertQueuingStrategyInit(options2, "First parameter");
            this._countQueuingStrategyHighWaterMark = options2.highWaterMark;
          }
          get highWaterMark() {
            if (!IsCountQueuingStrategy(this)) {
              throw countBrandCheckException("highWaterMark");
            }
            return this._countQueuingStrategyHighWaterMark;
          }
          get size() {
            if (!IsCountQueuingStrategy(this)) {
              throw countBrandCheckException("size");
            }
            return countSizeFunction;
          }
        }
        Object.defineProperties(CountQueuingStrategy.prototype, {
          highWaterMark: { enumerable: true },
          size: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(CountQueuingStrategy.prototype, SymbolPolyfill.toStringTag, {
            value: "CountQueuingStrategy",
            configurable: true
          });
        }
        function countBrandCheckException(name) {
          return new TypeError(`CountQueuingStrategy.prototype.${name} can only be used on a CountQueuingStrategy`);
        }
        function IsCountQueuingStrategy(x) {
          if (!typeIsObject(x)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x, "_countQueuingStrategyHighWaterMark")) {
            return false;
          }
          return x instanceof CountQueuingStrategy;
        }
        function convertTransformer(original, context) {
          assertDictionary(original, context);
          const flush = original === null || original === void 0 ? void 0 : original.flush;
          const readableType = original === null || original === void 0 ? void 0 : original.readableType;
          const start = original === null || original === void 0 ? void 0 : original.start;
          const transform = original === null || original === void 0 ? void 0 : original.transform;
          const writableType = original === null || original === void 0 ? void 0 : original.writableType;
          return {
            flush: flush === void 0 ? void 0 : convertTransformerFlushCallback(flush, original, `${context} has member 'flush' that`),
            readableType,
            start: start === void 0 ? void 0 : convertTransformerStartCallback(start, original, `${context} has member 'start' that`),
            transform: transform === void 0 ? void 0 : convertTransformerTransformCallback(transform, original, `${context} has member 'transform' that`),
            writableType
          };
        }
        function convertTransformerFlushCallback(fn, original, context) {
          assertFunction(fn, context);
          return (controller) => promiseCall(fn, original, [controller]);
        }
        function convertTransformerStartCallback(fn, original, context) {
          assertFunction(fn, context);
          return (controller) => reflectCall(fn, original, [controller]);
        }
        function convertTransformerTransformCallback(fn, original, context) {
          assertFunction(fn, context);
          return (chunk, controller) => promiseCall(fn, original, [chunk, controller]);
        }
        class TransformStream {
          constructor(rawTransformer = {}, rawWritableStrategy = {}, rawReadableStrategy = {}) {
            if (rawTransformer === void 0) {
              rawTransformer = null;
            }
            const writableStrategy = convertQueuingStrategy(rawWritableStrategy, "Second parameter");
            const readableStrategy = convertQueuingStrategy(rawReadableStrategy, "Third parameter");
            const transformer2 = convertTransformer(rawTransformer, "First parameter");
            if (transformer2.readableType !== void 0) {
              throw new RangeError("Invalid readableType specified");
            }
            if (transformer2.writableType !== void 0) {
              throw new RangeError("Invalid writableType specified");
            }
            const readableHighWaterMark = ExtractHighWaterMark(readableStrategy, 0);
            const readableSizeAlgorithm = ExtractSizeAlgorithm(readableStrategy);
            const writableHighWaterMark = ExtractHighWaterMark(writableStrategy, 1);
            const writableSizeAlgorithm = ExtractSizeAlgorithm(writableStrategy);
            let startPromise_resolve;
            const startPromise = newPromise((resolve2) => {
              startPromise_resolve = resolve2;
            });
            InitializeTransformStream(this, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm);
            SetUpTransformStreamDefaultControllerFromTransformer(this, transformer2);
            if (transformer2.start !== void 0) {
              startPromise_resolve(transformer2.start(this._transformStreamController));
            } else {
              startPromise_resolve(void 0);
            }
          }
          get readable() {
            if (!IsTransformStream(this)) {
              throw streamBrandCheckException("readable");
            }
            return this._readable;
          }
          get writable() {
            if (!IsTransformStream(this)) {
              throw streamBrandCheckException("writable");
            }
            return this._writable;
          }
        }
        Object.defineProperties(TransformStream.prototype, {
          readable: { enumerable: true },
          writable: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(TransformStream.prototype, SymbolPolyfill.toStringTag, {
            value: "TransformStream",
            configurable: true
          });
        }
        function InitializeTransformStream(stream, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm) {
          function startAlgorithm() {
            return startPromise;
          }
          function writeAlgorithm(chunk) {
            return TransformStreamDefaultSinkWriteAlgorithm(stream, chunk);
          }
          function abortAlgorithm(reason) {
            return TransformStreamDefaultSinkAbortAlgorithm(stream, reason);
          }
          function closeAlgorithm() {
            return TransformStreamDefaultSinkCloseAlgorithm(stream);
          }
          stream._writable = CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, writableHighWaterMark, writableSizeAlgorithm);
          function pullAlgorithm() {
            return TransformStreamDefaultSourcePullAlgorithm(stream);
          }
          function cancelAlgorithm(reason) {
            TransformStreamErrorWritableAndUnblockWrite(stream, reason);
            return promiseResolvedWith(void 0);
          }
          stream._readable = CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, readableHighWaterMark, readableSizeAlgorithm);
          stream._backpressure = void 0;
          stream._backpressureChangePromise = void 0;
          stream._backpressureChangePromise_resolve = void 0;
          TransformStreamSetBackpressure(stream, true);
          stream._transformStreamController = void 0;
        }
        function IsTransformStream(x) {
          if (!typeIsObject(x)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x, "_transformStreamController")) {
            return false;
          }
          return x instanceof TransformStream;
        }
        function TransformStreamError(stream, e) {
          ReadableStreamDefaultControllerError(stream._readable._readableStreamController, e);
          TransformStreamErrorWritableAndUnblockWrite(stream, e);
        }
        function TransformStreamErrorWritableAndUnblockWrite(stream, e) {
          TransformStreamDefaultControllerClearAlgorithms(stream._transformStreamController);
          WritableStreamDefaultControllerErrorIfNeeded(stream._writable._writableStreamController, e);
          if (stream._backpressure) {
            TransformStreamSetBackpressure(stream, false);
          }
        }
        function TransformStreamSetBackpressure(stream, backpressure) {
          if (stream._backpressureChangePromise !== void 0) {
            stream._backpressureChangePromise_resolve();
          }
          stream._backpressureChangePromise = newPromise((resolve2) => {
            stream._backpressureChangePromise_resolve = resolve2;
          });
          stream._backpressure = backpressure;
        }
        class TransformStreamDefaultController {
          constructor() {
            throw new TypeError("Illegal constructor");
          }
          get desiredSize() {
            if (!IsTransformStreamDefaultController(this)) {
              throw defaultControllerBrandCheckException("desiredSize");
            }
            const readableController = this._controlledTransformStream._readable._readableStreamController;
            return ReadableStreamDefaultControllerGetDesiredSize(readableController);
          }
          enqueue(chunk = void 0) {
            if (!IsTransformStreamDefaultController(this)) {
              throw defaultControllerBrandCheckException("enqueue");
            }
            TransformStreamDefaultControllerEnqueue(this, chunk);
          }
          error(reason = void 0) {
            if (!IsTransformStreamDefaultController(this)) {
              throw defaultControllerBrandCheckException("error");
            }
            TransformStreamDefaultControllerError(this, reason);
          }
          terminate() {
            if (!IsTransformStreamDefaultController(this)) {
              throw defaultControllerBrandCheckException("terminate");
            }
            TransformStreamDefaultControllerTerminate(this);
          }
        }
        Object.defineProperties(TransformStreamDefaultController.prototype, {
          enqueue: { enumerable: true },
          error: { enumerable: true },
          terminate: { enumerable: true },
          desiredSize: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(TransformStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {
            value: "TransformStreamDefaultController",
            configurable: true
          });
        }
        function IsTransformStreamDefaultController(x) {
          if (!typeIsObject(x)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x, "_controlledTransformStream")) {
            return false;
          }
          return x instanceof TransformStreamDefaultController;
        }
        function SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm) {
          controller._controlledTransformStream = stream;
          stream._transformStreamController = controller;
          controller._transformAlgorithm = transformAlgorithm;
          controller._flushAlgorithm = flushAlgorithm;
        }
        function SetUpTransformStreamDefaultControllerFromTransformer(stream, transformer2) {
          const controller = Object.create(TransformStreamDefaultController.prototype);
          let transformAlgorithm = (chunk) => {
            try {
              TransformStreamDefaultControllerEnqueue(controller, chunk);
              return promiseResolvedWith(void 0);
            } catch (transformResultE) {
              return promiseRejectedWith(transformResultE);
            }
          };
          let flushAlgorithm = () => promiseResolvedWith(void 0);
          if (transformer2.transform !== void 0) {
            transformAlgorithm = (chunk) => transformer2.transform(chunk, controller);
          }
          if (transformer2.flush !== void 0) {
            flushAlgorithm = () => transformer2.flush(controller);
          }
          SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm);
        }
        function TransformStreamDefaultControllerClearAlgorithms(controller) {
          controller._transformAlgorithm = void 0;
          controller._flushAlgorithm = void 0;
        }
        function TransformStreamDefaultControllerEnqueue(controller, chunk) {
          const stream = controller._controlledTransformStream;
          const readableController = stream._readable._readableStreamController;
          if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(readableController)) {
            throw new TypeError("Readable side is not in a state that permits enqueue");
          }
          try {
            ReadableStreamDefaultControllerEnqueue(readableController, chunk);
          } catch (e) {
            TransformStreamErrorWritableAndUnblockWrite(stream, e);
            throw stream._readable._storedError;
          }
          const backpressure = ReadableStreamDefaultControllerHasBackpressure(readableController);
          if (backpressure !== stream._backpressure) {
            TransformStreamSetBackpressure(stream, true);
          }
        }
        function TransformStreamDefaultControllerError(controller, e) {
          TransformStreamError(controller._controlledTransformStream, e);
        }
        function TransformStreamDefaultControllerPerformTransform(controller, chunk) {
          const transformPromise = controller._transformAlgorithm(chunk);
          return transformPromiseWith(transformPromise, void 0, (r) => {
            TransformStreamError(controller._controlledTransformStream, r);
            throw r;
          });
        }
        function TransformStreamDefaultControllerTerminate(controller) {
          const stream = controller._controlledTransformStream;
          const readableController = stream._readable._readableStreamController;
          ReadableStreamDefaultControllerClose(readableController);
          const error2 = new TypeError("TransformStream terminated");
          TransformStreamErrorWritableAndUnblockWrite(stream, error2);
        }
        function TransformStreamDefaultSinkWriteAlgorithm(stream, chunk) {
          const controller = stream._transformStreamController;
          if (stream._backpressure) {
            const backpressureChangePromise = stream._backpressureChangePromise;
            return transformPromiseWith(backpressureChangePromise, () => {
              const writable3 = stream._writable;
              const state = writable3._state;
              if (state === "erroring") {
                throw writable3._storedError;
              }
              return TransformStreamDefaultControllerPerformTransform(controller, chunk);
            });
          }
          return TransformStreamDefaultControllerPerformTransform(controller, chunk);
        }
        function TransformStreamDefaultSinkAbortAlgorithm(stream, reason) {
          TransformStreamError(stream, reason);
          return promiseResolvedWith(void 0);
        }
        function TransformStreamDefaultSinkCloseAlgorithm(stream) {
          const readable2 = stream._readable;
          const controller = stream._transformStreamController;
          const flushPromise = controller._flushAlgorithm();
          TransformStreamDefaultControllerClearAlgorithms(controller);
          return transformPromiseWith(flushPromise, () => {
            if (readable2._state === "errored") {
              throw readable2._storedError;
            }
            ReadableStreamDefaultControllerClose(readable2._readableStreamController);
          }, (r) => {
            TransformStreamError(stream, r);
            throw readable2._storedError;
          });
        }
        function TransformStreamDefaultSourcePullAlgorithm(stream) {
          TransformStreamSetBackpressure(stream, false);
          return stream._backpressureChangePromise;
        }
        function defaultControllerBrandCheckException(name) {
          return new TypeError(`TransformStreamDefaultController.prototype.${name} can only be used on a TransformStreamDefaultController`);
        }
        function streamBrandCheckException(name) {
          return new TypeError(`TransformStream.prototype.${name} can only be used on a TransformStream`);
        }
        exports2.ByteLengthQueuingStrategy = ByteLengthQueuingStrategy;
        exports2.CountQueuingStrategy = CountQueuingStrategy;
        exports2.ReadableByteStreamController = ReadableByteStreamController;
        exports2.ReadableStream = ReadableStream2;
        exports2.ReadableStreamBYOBReader = ReadableStreamBYOBReader;
        exports2.ReadableStreamBYOBRequest = ReadableStreamBYOBRequest;
        exports2.ReadableStreamDefaultController = ReadableStreamDefaultController;
        exports2.ReadableStreamDefaultReader = ReadableStreamDefaultReader;
        exports2.TransformStream = TransformStream;
        exports2.TransformStreamDefaultController = TransformStreamDefaultController;
        exports2.WritableStream = WritableStream;
        exports2.WritableStreamDefaultController = WritableStreamDefaultController;
        exports2.WritableStreamDefaultWriter = WritableStreamDefaultWriter;
        Object.defineProperty(exports2, "__esModule", { value: true });
      });
    })(ponyfill_es2018, ponyfill_es2018.exports);
    POOL_SIZE$1 = 65536;
    if (!globalThis.ReadableStream) {
      try {
        const process2 = require("node:process");
        const { emitWarning } = process2;
        try {
          process2.emitWarning = () => {
          };
          Object.assign(globalThis, require("node:stream/web"));
          process2.emitWarning = emitWarning;
        } catch (error2) {
          process2.emitWarning = emitWarning;
          throw error2;
        }
      } catch (error2) {
        Object.assign(globalThis, ponyfill_es2018.exports);
      }
    }
    try {
      const { Blob: Blob3 } = require("buffer");
      if (Blob3 && !Blob3.prototype.stream) {
        Blob3.prototype.stream = function name(params) {
          let position = 0;
          const blob = this;
          return new ReadableStream({
            type: "bytes",
            async pull(ctrl) {
              const chunk = blob.slice(position, Math.min(blob.size, position + POOL_SIZE$1));
              const buffer = await chunk.arrayBuffer();
              position += buffer.byteLength;
              ctrl.enqueue(new Uint8Array(buffer));
              if (position === blob.size) {
                ctrl.close();
              }
            }
          });
        };
      }
    } catch (error2) {
    }
    POOL_SIZE = 65536;
    _Blob = class Blob {
      #parts = [];
      #type = "";
      #size = 0;
      constructor(blobParts = [], options2 = {}) {
        if (typeof blobParts !== "object" || blobParts === null) {
          throw new TypeError("Failed to construct 'Blob': The provided value cannot be converted to a sequence.");
        }
        if (typeof blobParts[Symbol.iterator] !== "function") {
          throw new TypeError("Failed to construct 'Blob': The object must have a callable @@iterator property.");
        }
        if (typeof options2 !== "object" && typeof options2 !== "function") {
          throw new TypeError("Failed to construct 'Blob': parameter 2 cannot convert to dictionary.");
        }
        if (options2 === null)
          options2 = {};
        const encoder = new TextEncoder();
        for (const element of blobParts) {
          let part;
          if (ArrayBuffer.isView(element)) {
            part = new Uint8Array(element.buffer.slice(element.byteOffset, element.byteOffset + element.byteLength));
          } else if (element instanceof ArrayBuffer) {
            part = new Uint8Array(element.slice(0));
          } else if (element instanceof Blob) {
            part = element;
          } else {
            part = encoder.encode(element);
          }
          this.#size += ArrayBuffer.isView(part) ? part.byteLength : part.size;
          this.#parts.push(part);
        }
        const type = options2.type === void 0 ? "" : String(options2.type);
        this.#type = /^[\x20-\x7E]*$/.test(type) ? type : "";
      }
      get size() {
        return this.#size;
      }
      get type() {
        return this.#type;
      }
      async text() {
        const decoder = new TextDecoder();
        let str = "";
        for await (const part of toIterator(this.#parts, false)) {
          str += decoder.decode(part, { stream: true });
        }
        str += decoder.decode();
        return str;
      }
      async arrayBuffer() {
        const data = new Uint8Array(this.size);
        let offset = 0;
        for await (const chunk of toIterator(this.#parts, false)) {
          data.set(chunk, offset);
          offset += chunk.length;
        }
        return data.buffer;
      }
      stream() {
        const it = toIterator(this.#parts, true);
        return new globalThis.ReadableStream({
          type: "bytes",
          async pull(ctrl) {
            const chunk = await it.next();
            chunk.done ? ctrl.close() : ctrl.enqueue(chunk.value);
          },
          async cancel() {
            await it.return();
          }
        });
      }
      slice(start = 0, end = this.size, type = "") {
        const { size } = this;
        let relativeStart = start < 0 ? Math.max(size + start, 0) : Math.min(start, size);
        let relativeEnd = end < 0 ? Math.max(size + end, 0) : Math.min(end, size);
        const span = Math.max(relativeEnd - relativeStart, 0);
        const parts = this.#parts;
        const blobParts = [];
        let added = 0;
        for (const part of parts) {
          if (added >= span) {
            break;
          }
          const size2 = ArrayBuffer.isView(part) ? part.byteLength : part.size;
          if (relativeStart && size2 <= relativeStart) {
            relativeStart -= size2;
            relativeEnd -= size2;
          } else {
            let chunk;
            if (ArrayBuffer.isView(part)) {
              chunk = part.subarray(relativeStart, Math.min(size2, relativeEnd));
              added += chunk.byteLength;
            } else {
              chunk = part.slice(relativeStart, Math.min(size2, relativeEnd));
              added += chunk.size;
            }
            relativeEnd -= size2;
            blobParts.push(chunk);
            relativeStart = 0;
          }
        }
        const blob = new Blob([], { type: String(type).toLowerCase() });
        blob.#size = span;
        blob.#parts = blobParts;
        return blob;
      }
      get [Symbol.toStringTag]() {
        return "Blob";
      }
      static [Symbol.hasInstance](object2) {
        return object2 && typeof object2 === "object" && typeof object2.constructor === "function" && (typeof object2.stream === "function" || typeof object2.arrayBuffer === "function") && /^(Blob|File)$/.test(object2[Symbol.toStringTag]);
      }
    };
    Object.defineProperties(_Blob.prototype, {
      size: { enumerable: true },
      type: { enumerable: true },
      slice: { enumerable: true }
    });
    Blob2 = _Blob;
    Blob$1 = Blob2;
    FetchBaseError = class extends Error {
      constructor(message, type) {
        super(message);
        Error.captureStackTrace(this, this.constructor);
        this.type = type;
      }
      get name() {
        return this.constructor.name;
      }
      get [Symbol.toStringTag]() {
        return this.constructor.name;
      }
    };
    FetchError = class extends FetchBaseError {
      constructor(message, type, systemError) {
        super(message, type);
        if (systemError) {
          this.code = this.errno = systemError.code;
          this.erroredSysCall = systemError.syscall;
        }
      }
    };
    NAME = Symbol.toStringTag;
    isURLSearchParameters = (object2) => {
      return typeof object2 === "object" && typeof object2.append === "function" && typeof object2.delete === "function" && typeof object2.get === "function" && typeof object2.getAll === "function" && typeof object2.has === "function" && typeof object2.set === "function" && typeof object2.sort === "function" && object2[NAME] === "URLSearchParams";
    };
    isBlob = (object2) => {
      return typeof object2 === "object" && typeof object2.arrayBuffer === "function" && typeof object2.type === "string" && typeof object2.stream === "function" && typeof object2.constructor === "function" && /^(Blob|File)$/.test(object2[NAME]);
    };
    isAbortSignal = (object2) => {
      return typeof object2 === "object" && (object2[NAME] === "AbortSignal" || object2[NAME] === "EventTarget");
    };
    carriage = "\r\n";
    dashes = "-".repeat(2);
    carriageLength = Buffer.byteLength(carriage);
    getFooter = (boundary) => `${dashes}${boundary}${dashes}${carriage.repeat(2)}`;
    getBoundary = () => (0, import_crypto.randomBytes)(8).toString("hex");
    INTERNALS$2 = Symbol("Body internals");
    Body = class {
      constructor(body, {
        size = 0
      } = {}) {
        let boundary = null;
        if (body === null) {
          body = null;
        } else if (isURLSearchParameters(body)) {
          body = Buffer.from(body.toString());
        } else if (isBlob(body))
          ;
        else if (Buffer.isBuffer(body))
          ;
        else if (import_util.types.isAnyArrayBuffer(body)) {
          body = Buffer.from(body);
        } else if (ArrayBuffer.isView(body)) {
          body = Buffer.from(body.buffer, body.byteOffset, body.byteLength);
        } else if (body instanceof import_stream.default)
          ;
        else if (isFormData(body)) {
          boundary = `NodeFetchFormDataBoundary${getBoundary()}`;
          body = import_stream.default.Readable.from(formDataIterator(body, boundary));
        } else {
          body = Buffer.from(String(body));
        }
        this[INTERNALS$2] = {
          body,
          boundary,
          disturbed: false,
          error: null
        };
        this.size = size;
        if (body instanceof import_stream.default) {
          body.on("error", (error_) => {
            const error2 = error_ instanceof FetchBaseError ? error_ : new FetchError(`Invalid response body while trying to fetch ${this.url}: ${error_.message}`, "system", error_);
            this[INTERNALS$2].error = error2;
          });
        }
      }
      get body() {
        return this[INTERNALS$2].body;
      }
      get bodyUsed() {
        return this[INTERNALS$2].disturbed;
      }
      async arrayBuffer() {
        const { buffer, byteOffset, byteLength } = await consumeBody(this);
        return buffer.slice(byteOffset, byteOffset + byteLength);
      }
      async blob() {
        const ct = this.headers && this.headers.get("content-type") || this[INTERNALS$2].body && this[INTERNALS$2].body.type || "";
        const buf = await this.buffer();
        return new Blob$1([buf], {
          type: ct
        });
      }
      async json() {
        const buffer = await consumeBody(this);
        return JSON.parse(buffer.toString());
      }
      async text() {
        const buffer = await consumeBody(this);
        return buffer.toString();
      }
      buffer() {
        return consumeBody(this);
      }
    };
    Object.defineProperties(Body.prototype, {
      body: { enumerable: true },
      bodyUsed: { enumerable: true },
      arrayBuffer: { enumerable: true },
      blob: { enumerable: true },
      json: { enumerable: true },
      text: { enumerable: true }
    });
    clone = (instance, highWaterMark) => {
      let p1;
      let p2;
      let { body } = instance;
      if (instance.bodyUsed) {
        throw new Error("cannot clone body after it is used");
      }
      if (body instanceof import_stream.default && typeof body.getBoundary !== "function") {
        p1 = new import_stream.PassThrough({ highWaterMark });
        p2 = new import_stream.PassThrough({ highWaterMark });
        body.pipe(p1);
        body.pipe(p2);
        instance[INTERNALS$2].body = p1;
        body = p2;
      }
      return body;
    };
    extractContentType = (body, request) => {
      if (body === null) {
        return null;
      }
      if (typeof body === "string") {
        return "text/plain;charset=UTF-8";
      }
      if (isURLSearchParameters(body)) {
        return "application/x-www-form-urlencoded;charset=UTF-8";
      }
      if (isBlob(body)) {
        return body.type || null;
      }
      if (Buffer.isBuffer(body) || import_util.types.isAnyArrayBuffer(body) || ArrayBuffer.isView(body)) {
        return null;
      }
      if (body && typeof body.getBoundary === "function") {
        return `multipart/form-data;boundary=${body.getBoundary()}`;
      }
      if (isFormData(body)) {
        return `multipart/form-data; boundary=${request[INTERNALS$2].boundary}`;
      }
      if (body instanceof import_stream.default) {
        return null;
      }
      return "text/plain;charset=UTF-8";
    };
    getTotalBytes = (request) => {
      const { body } = request;
      if (body === null) {
        return 0;
      }
      if (isBlob(body)) {
        return body.size;
      }
      if (Buffer.isBuffer(body)) {
        return body.length;
      }
      if (body && typeof body.getLengthSync === "function") {
        return body.hasKnownLength && body.hasKnownLength() ? body.getLengthSync() : null;
      }
      if (isFormData(body)) {
        return getFormDataLength(request[INTERNALS$2].boundary);
      }
      return null;
    };
    writeToStream = (dest, { body }) => {
      if (body === null) {
        dest.end();
      } else if (isBlob(body)) {
        import_stream.default.Readable.from(body.stream()).pipe(dest);
      } else if (Buffer.isBuffer(body)) {
        dest.write(body);
        dest.end();
      } else {
        body.pipe(dest);
      }
    };
    validateHeaderName = typeof import_http.default.validateHeaderName === "function" ? import_http.default.validateHeaderName : (name) => {
      if (!/^[\^`\-\w!#$%&'*+.|~]+$/.test(name)) {
        const error2 = new TypeError(`Header name must be a valid HTTP token [${name}]`);
        Object.defineProperty(error2, "code", { value: "ERR_INVALID_HTTP_TOKEN" });
        throw error2;
      }
    };
    validateHeaderValue = typeof import_http.default.validateHeaderValue === "function" ? import_http.default.validateHeaderValue : (name, value) => {
      if (/[^\t\u0020-\u007E\u0080-\u00FF]/.test(value)) {
        const error2 = new TypeError(`Invalid character in header content ["${name}"]`);
        Object.defineProperty(error2, "code", { value: "ERR_INVALID_CHAR" });
        throw error2;
      }
    };
    Headers = class extends URLSearchParams {
      constructor(init2) {
        let result = [];
        if (init2 instanceof Headers) {
          const raw = init2.raw();
          for (const [name, values] of Object.entries(raw)) {
            result.push(...values.map((value) => [name, value]));
          }
        } else if (init2 == null)
          ;
        else if (typeof init2 === "object" && !import_util.types.isBoxedPrimitive(init2)) {
          const method = init2[Symbol.iterator];
          if (method == null) {
            result.push(...Object.entries(init2));
          } else {
            if (typeof method !== "function") {
              throw new TypeError("Header pairs must be iterable");
            }
            result = [...init2].map((pair) => {
              if (typeof pair !== "object" || import_util.types.isBoxedPrimitive(pair)) {
                throw new TypeError("Each header pair must be an iterable object");
              }
              return [...pair];
            }).map((pair) => {
              if (pair.length !== 2) {
                throw new TypeError("Each header pair must be a name/value tuple");
              }
              return [...pair];
            });
          }
        } else {
          throw new TypeError("Failed to construct 'Headers': The provided value is not of type '(sequence<sequence<ByteString>> or record<ByteString, ByteString>)");
        }
        result = result.length > 0 ? result.map(([name, value]) => {
          validateHeaderName(name);
          validateHeaderValue(name, String(value));
          return [String(name).toLowerCase(), String(value)];
        }) : void 0;
        super(result);
        return new Proxy(this, {
          get(target, p, receiver) {
            switch (p) {
              case "append":
              case "set":
                return (name, value) => {
                  validateHeaderName(name);
                  validateHeaderValue(name, String(value));
                  return URLSearchParams.prototype[p].call(target, String(name).toLowerCase(), String(value));
                };
              case "delete":
              case "has":
              case "getAll":
                return (name) => {
                  validateHeaderName(name);
                  return URLSearchParams.prototype[p].call(target, String(name).toLowerCase());
                };
              case "keys":
                return () => {
                  target.sort();
                  return new Set(URLSearchParams.prototype.keys.call(target)).keys();
                };
              default:
                return Reflect.get(target, p, receiver);
            }
          }
        });
      }
      get [Symbol.toStringTag]() {
        return this.constructor.name;
      }
      toString() {
        return Object.prototype.toString.call(this);
      }
      get(name) {
        const values = this.getAll(name);
        if (values.length === 0) {
          return null;
        }
        let value = values.join(", ");
        if (/^content-encoding$/i.test(name)) {
          value = value.toLowerCase();
        }
        return value;
      }
      forEach(callback, thisArg = void 0) {
        for (const name of this.keys()) {
          Reflect.apply(callback, thisArg, [this.get(name), name, this]);
        }
      }
      *values() {
        for (const name of this.keys()) {
          yield this.get(name);
        }
      }
      *entries() {
        for (const name of this.keys()) {
          yield [name, this.get(name)];
        }
      }
      [Symbol.iterator]() {
        return this.entries();
      }
      raw() {
        return [...this.keys()].reduce((result, key) => {
          result[key] = this.getAll(key);
          return result;
        }, {});
      }
      [Symbol.for("nodejs.util.inspect.custom")]() {
        return [...this.keys()].reduce((result, key) => {
          const values = this.getAll(key);
          if (key === "host") {
            result[key] = values[0];
          } else {
            result[key] = values.length > 1 ? values : values[0];
          }
          return result;
        }, {});
      }
    };
    Object.defineProperties(Headers.prototype, ["get", "entries", "forEach", "values"].reduce((result, property) => {
      result[property] = { enumerable: true };
      return result;
    }, {}));
    redirectStatus = new Set([301, 302, 303, 307, 308]);
    isRedirect = (code) => {
      return redirectStatus.has(code);
    };
    INTERNALS$1 = Symbol("Response internals");
    Response = class extends Body {
      constructor(body = null, options2 = {}) {
        super(body, options2);
        const status = options2.status != null ? options2.status : 200;
        const headers = new Headers(options2.headers);
        if (body !== null && !headers.has("Content-Type")) {
          const contentType = extractContentType(body);
          if (contentType) {
            headers.append("Content-Type", contentType);
          }
        }
        this[INTERNALS$1] = {
          type: "default",
          url: options2.url,
          status,
          statusText: options2.statusText || "",
          headers,
          counter: options2.counter,
          highWaterMark: options2.highWaterMark
        };
      }
      get type() {
        return this[INTERNALS$1].type;
      }
      get url() {
        return this[INTERNALS$1].url || "";
      }
      get status() {
        return this[INTERNALS$1].status;
      }
      get ok() {
        return this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;
      }
      get redirected() {
        return this[INTERNALS$1].counter > 0;
      }
      get statusText() {
        return this[INTERNALS$1].statusText;
      }
      get headers() {
        return this[INTERNALS$1].headers;
      }
      get highWaterMark() {
        return this[INTERNALS$1].highWaterMark;
      }
      clone() {
        return new Response(clone(this, this.highWaterMark), {
          type: this.type,
          url: this.url,
          status: this.status,
          statusText: this.statusText,
          headers: this.headers,
          ok: this.ok,
          redirected: this.redirected,
          size: this.size
        });
      }
      static redirect(url, status = 302) {
        if (!isRedirect(status)) {
          throw new RangeError('Failed to execute "redirect" on "response": Invalid status code');
        }
        return new Response(null, {
          headers: {
            location: new URL(url).toString()
          },
          status
        });
      }
      static error() {
        const response = new Response(null, { status: 0, statusText: "" });
        response[INTERNALS$1].type = "error";
        return response;
      }
      get [Symbol.toStringTag]() {
        return "Response";
      }
    };
    Object.defineProperties(Response.prototype, {
      type: { enumerable: true },
      url: { enumerable: true },
      status: { enumerable: true },
      ok: { enumerable: true },
      redirected: { enumerable: true },
      statusText: { enumerable: true },
      headers: { enumerable: true },
      clone: { enumerable: true }
    });
    getSearch = (parsedURL) => {
      if (parsedURL.search) {
        return parsedURL.search;
      }
      const lastOffset = parsedURL.href.length - 1;
      const hash2 = parsedURL.hash || (parsedURL.href[lastOffset] === "#" ? "#" : "");
      return parsedURL.href[lastOffset - hash2.length] === "?" ? "?" : "";
    };
    INTERNALS = Symbol("Request internals");
    isRequest = (object2) => {
      return typeof object2 === "object" && typeof object2[INTERNALS] === "object";
    };
    Request = class extends Body {
      constructor(input, init2 = {}) {
        let parsedURL;
        if (isRequest(input)) {
          parsedURL = new URL(input.url);
        } else {
          parsedURL = new URL(input);
          input = {};
        }
        let method = init2.method || input.method || "GET";
        method = method.toUpperCase();
        if ((init2.body != null || isRequest(input)) && input.body !== null && (method === "GET" || method === "HEAD")) {
          throw new TypeError("Request with GET/HEAD method cannot have body");
        }
        const inputBody = init2.body ? init2.body : isRequest(input) && input.body !== null ? clone(input) : null;
        super(inputBody, {
          size: init2.size || input.size || 0
        });
        const headers = new Headers(init2.headers || input.headers || {});
        if (inputBody !== null && !headers.has("Content-Type")) {
          const contentType = extractContentType(inputBody, this);
          if (contentType) {
            headers.append("Content-Type", contentType);
          }
        }
        let signal = isRequest(input) ? input.signal : null;
        if ("signal" in init2) {
          signal = init2.signal;
        }
        if (signal != null && !isAbortSignal(signal)) {
          throw new TypeError("Expected signal to be an instanceof AbortSignal or EventTarget");
        }
        this[INTERNALS] = {
          method,
          redirect: init2.redirect || input.redirect || "follow",
          headers,
          parsedURL,
          signal
        };
        this.follow = init2.follow === void 0 ? input.follow === void 0 ? 20 : input.follow : init2.follow;
        this.compress = init2.compress === void 0 ? input.compress === void 0 ? true : input.compress : init2.compress;
        this.counter = init2.counter || input.counter || 0;
        this.agent = init2.agent || input.agent;
        this.highWaterMark = init2.highWaterMark || input.highWaterMark || 16384;
        this.insecureHTTPParser = init2.insecureHTTPParser || input.insecureHTTPParser || false;
      }
      get method() {
        return this[INTERNALS].method;
      }
      get url() {
        return (0, import_url.format)(this[INTERNALS].parsedURL);
      }
      get headers() {
        return this[INTERNALS].headers;
      }
      get redirect() {
        return this[INTERNALS].redirect;
      }
      get signal() {
        return this[INTERNALS].signal;
      }
      clone() {
        return new Request(this);
      }
      get [Symbol.toStringTag]() {
        return "Request";
      }
    };
    Object.defineProperties(Request.prototype, {
      method: { enumerable: true },
      url: { enumerable: true },
      headers: { enumerable: true },
      redirect: { enumerable: true },
      clone: { enumerable: true },
      signal: { enumerable: true }
    });
    getNodeRequestOptions = (request) => {
      const { parsedURL } = request[INTERNALS];
      const headers = new Headers(request[INTERNALS].headers);
      if (!headers.has("Accept")) {
        headers.set("Accept", "*/*");
      }
      let contentLengthValue = null;
      if (request.body === null && /^(post|put)$/i.test(request.method)) {
        contentLengthValue = "0";
      }
      if (request.body !== null) {
        const totalBytes = getTotalBytes(request);
        if (typeof totalBytes === "number" && !Number.isNaN(totalBytes)) {
          contentLengthValue = String(totalBytes);
        }
      }
      if (contentLengthValue) {
        headers.set("Content-Length", contentLengthValue);
      }
      if (!headers.has("User-Agent")) {
        headers.set("User-Agent", "node-fetch");
      }
      if (request.compress && !headers.has("Accept-Encoding")) {
        headers.set("Accept-Encoding", "gzip,deflate,br");
      }
      let { agent } = request;
      if (typeof agent === "function") {
        agent = agent(parsedURL);
      }
      if (!headers.has("Connection") && !agent) {
        headers.set("Connection", "close");
      }
      const search = getSearch(parsedURL);
      const requestOptions = {
        path: parsedURL.pathname + search,
        pathname: parsedURL.pathname,
        hostname: parsedURL.hostname,
        protocol: parsedURL.protocol,
        port: parsedURL.port,
        hash: parsedURL.hash,
        search: parsedURL.search,
        query: parsedURL.query,
        href: parsedURL.href,
        method: request.method,
        headers: headers[Symbol.for("nodejs.util.inspect.custom")](),
        insecureHTTPParser: request.insecureHTTPParser,
        agent
      };
      return requestOptions;
    };
    AbortError = class extends FetchBaseError {
      constructor(message, type = "aborted") {
        super(message, type);
      }
    };
    supportedSchemas = new Set(["data:", "http:", "https:"]);
  }
});

// node_modules/@sveltejs/adapter-netlify/files/shims.js
var init_shims = __esm({
  "node_modules/@sveltejs/adapter-netlify/files/shims.js"() {
    init_install_fetch();
  }
});

// node_modules/gsap/dist/gsap.js
var require_gsap = __commonJS({
  "node_modules/gsap/dist/gsap.js"(exports, module2) {
    init_shims();
    (function(global2, factory) {
      typeof exports === "object" && typeof module2 !== "undefined" ? factory(exports) : typeof define === "function" && define.amd ? define(["exports"], factory) : (global2 = global2 || self, factory(global2.window = global2.window || {}));
    })(exports, function(exports2) {
      "use strict";
      function _inheritsLoose(subClass, superClass) {
        subClass.prototype = Object.create(superClass.prototype);
        subClass.prototype.constructor = subClass;
        subClass.__proto__ = superClass;
      }
      function _assertThisInitialized(self2) {
        if (self2 === void 0) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return self2;
      }
      var _config = {
        autoSleep: 120,
        force3D: "auto",
        nullTargetWarn: 1,
        units: {
          lineHeight: ""
        }
      }, _defaults = {
        duration: 0.5,
        overwrite: false,
        delay: 0
      }, _suppressOverwrites, _bigNum = 1e8, _tinyNum = 1 / _bigNum, _2PI = Math.PI * 2, _HALF_PI = _2PI / 4, _gsID = 0, _sqrt = Math.sqrt, _cos = Math.cos, _sin = Math.sin, _isString = function _isString2(value) {
        return typeof value === "string";
      }, _isFunction = function _isFunction2(value) {
        return typeof value === "function";
      }, _isNumber = function _isNumber2(value) {
        return typeof value === "number";
      }, _isUndefined = function _isUndefined2(value) {
        return typeof value === "undefined";
      }, _isObject = function _isObject2(value) {
        return typeof value === "object";
      }, _isNotFalse = function _isNotFalse2(value) {
        return value !== false;
      }, _windowExists = function _windowExists2() {
        return typeof window !== "undefined";
      }, _isFuncOrString = function _isFuncOrString2(value) {
        return _isFunction(value) || _isString(value);
      }, _isTypedArray = typeof ArrayBuffer === "function" && ArrayBuffer.isView || function() {
      }, _isArray = Array.isArray, _strictNumExp = /(?:-?\.?\d|\.)+/gi, _numExp = /[-+=.]*\d+[.e\-+]*\d*[e\-+]*\d*/g, _numWithUnitExp = /[-+=.]*\d+[.e-]*\d*[a-z%]*/g, _complexStringNumExp = /[-+=.]*\d+\.?\d*(?:e-|e\+)?\d*/gi, _relExp = /[+-]=-?[.\d]+/, _delimitedValueExp = /[^,'"\[\]\s]+/gi, _unitExp = /[\d.+\-=]+(?:e[-+]\d*)*/i, _globalTimeline, _win, _coreInitted, _doc, _globals = {}, _installScope = {}, _coreReady, _install = function _install2(scope) {
        return (_installScope = _merge(scope, _globals)) && gsap5;
      }, _missingPlugin = function _missingPlugin2(property, value) {
        return console.warn("Invalid property", property, "set to", value, "Missing plugin? gsap.registerPlugin()");
      }, _warn = function _warn2(message, suppress) {
        return !suppress && console.warn(message);
      }, _addGlobal = function _addGlobal2(name, obj) {
        return name && (_globals[name] = obj) && _installScope && (_installScope[name] = obj) || _globals;
      }, _emptyFunc = function _emptyFunc2() {
        return 0;
      }, _reservedProps = {}, _lazyTweens = [], _lazyLookup = {}, _lastRenderedFrame, _plugins = {}, _effects = {}, _nextGCFrame = 30, _harnessPlugins = [], _callbackNames = "", _harness = function _harness2(targets) {
        var target = targets[0], harnessPlugin, i;
        _isObject(target) || _isFunction(target) || (targets = [targets]);
        if (!(harnessPlugin = (target._gsap || {}).harness)) {
          i = _harnessPlugins.length;
          while (i-- && !_harnessPlugins[i].targetTest(target)) {
          }
          harnessPlugin = _harnessPlugins[i];
        }
        i = targets.length;
        while (i--) {
          targets[i] && (targets[i]._gsap || (targets[i]._gsap = new GSCache(targets[i], harnessPlugin))) || targets.splice(i, 1);
        }
        return targets;
      }, _getCache = function _getCache2(target) {
        return target._gsap || _harness(toArray(target))[0]._gsap;
      }, _getProperty = function _getProperty2(target, property, v) {
        return (v = target[property]) && _isFunction(v) ? target[property]() : _isUndefined(v) && target.getAttribute && target.getAttribute(property) || v;
      }, _forEachName = function _forEachName2(names, func) {
        return (names = names.split(",")).forEach(func) || names;
      }, _round = function _round2(value) {
        return Math.round(value * 1e5) / 1e5 || 0;
      }, _roundPrecise = function _roundPrecise2(value) {
        return Math.round(value * 1e7) / 1e7 || 0;
      }, _arrayContainsAny = function _arrayContainsAny2(toSearch, toFind) {
        var l = toFind.length, i = 0;
        for (; toSearch.indexOf(toFind[i]) < 0 && ++i < l; ) {
        }
        return i < l;
      }, _lazyRender = function _lazyRender2() {
        var l = _lazyTweens.length, a = _lazyTweens.slice(0), i, tween;
        _lazyLookup = {};
        _lazyTweens.length = 0;
        for (i = 0; i < l; i++) {
          tween = a[i];
          tween && tween._lazy && (tween.render(tween._lazy[0], tween._lazy[1], true)._lazy = 0);
        }
      }, _lazySafeRender = function _lazySafeRender2(animation, time, suppressEvents, force) {
        _lazyTweens.length && _lazyRender();
        animation.render(time, suppressEvents, force);
        _lazyTweens.length && _lazyRender();
      }, _numericIfPossible = function _numericIfPossible2(value) {
        var n = parseFloat(value);
        return (n || n === 0) && (value + "").match(_delimitedValueExp).length < 2 ? n : _isString(value) ? value.trim() : value;
      }, _passThrough = function _passThrough2(p) {
        return p;
      }, _setDefaults = function _setDefaults2(obj, defaults) {
        for (var p in defaults) {
          p in obj || (obj[p] = defaults[p]);
        }
        return obj;
      }, _setKeyframeDefaults = function _setKeyframeDefaults2(obj, defaults) {
        for (var p in defaults) {
          p in obj || p === "duration" || p === "ease" || (obj[p] = defaults[p]);
        }
      }, _merge = function _merge2(base2, toMerge) {
        for (var p in toMerge) {
          base2[p] = toMerge[p];
        }
        return base2;
      }, _mergeDeep = function _mergeDeep2(base2, toMerge) {
        for (var p in toMerge) {
          p !== "__proto__" && p !== "constructor" && p !== "prototype" && (base2[p] = _isObject(toMerge[p]) ? _mergeDeep2(base2[p] || (base2[p] = {}), toMerge[p]) : toMerge[p]);
        }
        return base2;
      }, _copyExcluding = function _copyExcluding2(obj, excluding) {
        var copy2 = {}, p;
        for (p in obj) {
          p in excluding || (copy2[p] = obj[p]);
        }
        return copy2;
      }, _inheritDefaults = function _inheritDefaults2(vars) {
        var parent = vars.parent || _globalTimeline, func = vars.keyframes ? _setKeyframeDefaults : _setDefaults;
        if (_isNotFalse(vars.inherit)) {
          while (parent) {
            func(vars, parent.vars.defaults);
            parent = parent.parent || parent._dp;
          }
        }
        return vars;
      }, _arraysMatch = function _arraysMatch2(a1, a2) {
        var i = a1.length, match = i === a2.length;
        while (match && i-- && a1[i] === a2[i]) {
        }
        return i < 0;
      }, _addLinkedListItem = function _addLinkedListItem2(parent, child, firstProp, lastProp, sortBy) {
        if (firstProp === void 0) {
          firstProp = "_first";
        }
        if (lastProp === void 0) {
          lastProp = "_last";
        }
        var prev = parent[lastProp], t;
        if (sortBy) {
          t = child[sortBy];
          while (prev && prev[sortBy] > t) {
            prev = prev._prev;
          }
        }
        if (prev) {
          child._next = prev._next;
          prev._next = child;
        } else {
          child._next = parent[firstProp];
          parent[firstProp] = child;
        }
        if (child._next) {
          child._next._prev = child;
        } else {
          parent[lastProp] = child;
        }
        child._prev = prev;
        child.parent = child._dp = parent;
        return child;
      }, _removeLinkedListItem = function _removeLinkedListItem2(parent, child, firstProp, lastProp) {
        if (firstProp === void 0) {
          firstProp = "_first";
        }
        if (lastProp === void 0) {
          lastProp = "_last";
        }
        var prev = child._prev, next = child._next;
        if (prev) {
          prev._next = next;
        } else if (parent[firstProp] === child) {
          parent[firstProp] = next;
        }
        if (next) {
          next._prev = prev;
        } else if (parent[lastProp] === child) {
          parent[lastProp] = prev;
        }
        child._next = child._prev = child.parent = null;
      }, _removeFromParent = function _removeFromParent2(child, onlyIfParentHasAutoRemove) {
        child.parent && (!onlyIfParentHasAutoRemove || child.parent.autoRemoveChildren) && child.parent.remove(child);
        child._act = 0;
      }, _uncache = function _uncache2(animation, child) {
        if (animation && (!child || child._end > animation._dur || child._start < 0)) {
          var a = animation;
          while (a) {
            a._dirty = 1;
            a = a.parent;
          }
        }
        return animation;
      }, _recacheAncestors = function _recacheAncestors2(animation) {
        var parent = animation.parent;
        while (parent && parent.parent) {
          parent._dirty = 1;
          parent.totalDuration();
          parent = parent.parent;
        }
        return animation;
      }, _hasNoPausedAncestors = function _hasNoPausedAncestors2(animation) {
        return !animation || animation._ts && _hasNoPausedAncestors2(animation.parent);
      }, _elapsedCycleDuration = function _elapsedCycleDuration2(animation) {
        return animation._repeat ? _animationCycle(animation._tTime, animation = animation.duration() + animation._rDelay) * animation : 0;
      }, _animationCycle = function _animationCycle2(tTime, cycleDuration) {
        var whole = Math.floor(tTime /= cycleDuration);
        return tTime && whole === tTime ? whole - 1 : whole;
      }, _parentToChildTotalTime = function _parentToChildTotalTime2(parentTime, child) {
        return (parentTime - child._start) * child._ts + (child._ts >= 0 ? 0 : child._dirty ? child.totalDuration() : child._tDur);
      }, _setEnd = function _setEnd2(animation) {
        return animation._end = _roundPrecise(animation._start + (animation._tDur / Math.abs(animation._ts || animation._rts || _tinyNum) || 0));
      }, _alignPlayhead = function _alignPlayhead2(animation, totalTime) {
        var parent = animation._dp;
        if (parent && parent.smoothChildTiming && animation._ts) {
          animation._start = _roundPrecise(parent._time - (animation._ts > 0 ? totalTime / animation._ts : ((animation._dirty ? animation.totalDuration() : animation._tDur) - totalTime) / -animation._ts));
          _setEnd(animation);
          parent._dirty || _uncache(parent, animation);
        }
        return animation;
      }, _postAddChecks = function _postAddChecks2(timeline, child) {
        var t;
        if (child._time || child._initted && !child._dur) {
          t = _parentToChildTotalTime(timeline.rawTime(), child);
          if (!child._dur || _clamp(0, child.totalDuration(), t) - child._tTime > _tinyNum) {
            child.render(t, true);
          }
        }
        if (_uncache(timeline, child)._dp && timeline._initted && timeline._time >= timeline._dur && timeline._ts) {
          if (timeline._dur < timeline.duration()) {
            t = timeline;
            while (t._dp) {
              t.rawTime() >= 0 && t.totalTime(t._tTime);
              t = t._dp;
            }
          }
          timeline._zTime = -_tinyNum;
        }
      }, _addToTimeline = function _addToTimeline2(timeline, child, position, skipChecks) {
        child.parent && _removeFromParent(child);
        child._start = _roundPrecise((_isNumber(position) ? position : position || timeline !== _globalTimeline ? _parsePosition(timeline, position, child) : timeline._time) + child._delay);
        child._end = _roundPrecise(child._start + (child.totalDuration() / Math.abs(child.timeScale()) || 0));
        _addLinkedListItem(timeline, child, "_first", "_last", timeline._sort ? "_start" : 0);
        _isFromOrFromStart(child) || (timeline._recent = child);
        skipChecks || _postAddChecks(timeline, child);
        return timeline;
      }, _scrollTrigger = function _scrollTrigger2(animation, trigger) {
        return (_globals.ScrollTrigger || _missingPlugin("scrollTrigger", trigger)) && _globals.ScrollTrigger.create(trigger, animation);
      }, _attemptInitTween = function _attemptInitTween2(tween, totalTime, force, suppressEvents) {
        _initTween(tween, totalTime);
        if (!tween._initted) {
          return 1;
        }
        if (!force && tween._pt && (tween._dur && tween.vars.lazy !== false || !tween._dur && tween.vars.lazy) && _lastRenderedFrame !== _ticker.frame) {
          _lazyTweens.push(tween);
          tween._lazy = [totalTime, suppressEvents];
          return 1;
        }
      }, _parentPlayheadIsBeforeStart = function _parentPlayheadIsBeforeStart2(_ref) {
        var parent = _ref.parent;
        return parent && parent._ts && parent._initted && !parent._lock && (parent.rawTime() < 0 || _parentPlayheadIsBeforeStart2(parent));
      }, _isFromOrFromStart = function _isFromOrFromStart2(_ref2) {
        var data = _ref2.data;
        return data === "isFromStart" || data === "isStart";
      }, _renderZeroDurationTween = function _renderZeroDurationTween2(tween, totalTime, suppressEvents, force) {
        var prevRatio = tween.ratio, ratio = totalTime < 0 || !totalTime && (!tween._start && _parentPlayheadIsBeforeStart(tween) && !(!tween._initted && _isFromOrFromStart(tween)) || (tween._ts < 0 || tween._dp._ts < 0) && !_isFromOrFromStart(tween)) ? 0 : 1, repeatDelay = tween._rDelay, tTime = 0, pt, iteration, prevIteration;
        if (repeatDelay && tween._repeat) {
          tTime = _clamp(0, tween._tDur, totalTime);
          iteration = _animationCycle(tTime, repeatDelay);
          prevIteration = _animationCycle(tween._tTime, repeatDelay);
          tween._yoyo && iteration & 1 && (ratio = 1 - ratio);
          if (iteration !== prevIteration) {
            prevRatio = 1 - ratio;
            tween.vars.repeatRefresh && tween._initted && tween.invalidate();
          }
        }
        if (ratio !== prevRatio || force || tween._zTime === _tinyNum || !totalTime && tween._zTime) {
          if (!tween._initted && _attemptInitTween(tween, totalTime, force, suppressEvents)) {
            return;
          }
          prevIteration = tween._zTime;
          tween._zTime = totalTime || (suppressEvents ? _tinyNum : 0);
          suppressEvents || (suppressEvents = totalTime && !prevIteration);
          tween.ratio = ratio;
          tween._from && (ratio = 1 - ratio);
          tween._time = 0;
          tween._tTime = tTime;
          pt = tween._pt;
          while (pt) {
            pt.r(ratio, pt.d);
            pt = pt._next;
          }
          tween._startAt && totalTime < 0 && tween._startAt.render(totalTime, true, true);
          tween._onUpdate && !suppressEvents && _callback(tween, "onUpdate");
          tTime && tween._repeat && !suppressEvents && tween.parent && _callback(tween, "onRepeat");
          if ((totalTime >= tween._tDur || totalTime < 0) && tween.ratio === ratio) {
            ratio && _removeFromParent(tween, 1);
            if (!suppressEvents) {
              _callback(tween, ratio ? "onComplete" : "onReverseComplete", true);
              tween._prom && tween._prom();
            }
          }
        } else if (!tween._zTime) {
          tween._zTime = totalTime;
        }
      }, _findNextPauseTween = function _findNextPauseTween2(animation, prevTime, time) {
        var child;
        if (time > prevTime) {
          child = animation._first;
          while (child && child._start <= time) {
            if (!child._dur && child.data === "isPause" && child._start > prevTime) {
              return child;
            }
            child = child._next;
          }
        } else {
          child = animation._last;
          while (child && child._start >= time) {
            if (!child._dur && child.data === "isPause" && child._start < prevTime) {
              return child;
            }
            child = child._prev;
          }
        }
      }, _setDuration = function _setDuration2(animation, duration, skipUncache, leavePlayhead) {
        var repeat = animation._repeat, dur = _roundPrecise(duration) || 0, totalProgress = animation._tTime / animation._tDur;
        totalProgress && !leavePlayhead && (animation._time *= dur / animation._dur);
        animation._dur = dur;
        animation._tDur = !repeat ? dur : repeat < 0 ? 1e10 : _roundPrecise(dur * (repeat + 1) + animation._rDelay * repeat);
        totalProgress && !leavePlayhead ? _alignPlayhead(animation, animation._tTime = animation._tDur * totalProgress) : animation.parent && _setEnd(animation);
        skipUncache || _uncache(animation.parent, animation);
        return animation;
      }, _onUpdateTotalDuration = function _onUpdateTotalDuration2(animation) {
        return animation instanceof Timeline ? _uncache(animation) : _setDuration(animation, animation._dur);
      }, _zeroPosition = {
        _start: 0,
        endTime: _emptyFunc,
        totalDuration: _emptyFunc
      }, _parsePosition = function _parsePosition2(animation, position, percentAnimation) {
        var labels = animation.labels, recent = animation._recent || _zeroPosition, clippedDuration = animation.duration() >= _bigNum ? recent.endTime(false) : animation._dur, i, offset, isPercent;
        if (_isString(position) && (isNaN(position) || position in labels)) {
          offset = position.charAt(0);
          isPercent = position.substr(-1) === "%";
          i = position.indexOf("=");
          if (offset === "<" || offset === ">") {
            i >= 0 && (position = position.replace(/=/, ""));
            return (offset === "<" ? recent._start : recent.endTime(recent._repeat >= 0)) + (parseFloat(position.substr(1)) || 0) * (isPercent ? (i < 0 ? recent : percentAnimation).totalDuration() / 100 : 1);
          }
          if (i < 0) {
            position in labels || (labels[position] = clippedDuration);
            return labels[position];
          }
          offset = parseFloat(position.charAt(i - 1) + position.substr(i + 1));
          if (isPercent && percentAnimation) {
            offset = offset / 100 * (_isArray(percentAnimation) ? percentAnimation[0] : percentAnimation).totalDuration();
          }
          return i > 1 ? _parsePosition2(animation, position.substr(0, i - 1), percentAnimation) + offset : clippedDuration + offset;
        }
        return position == null ? clippedDuration : +position;
      }, _createTweenType = function _createTweenType2(type, params, timeline) {
        var isLegacy = _isNumber(params[1]), varsIndex = (isLegacy ? 2 : 1) + (type < 2 ? 0 : 1), vars = params[varsIndex], irVars, parent;
        isLegacy && (vars.duration = params[1]);
        vars.parent = timeline;
        if (type) {
          irVars = vars;
          parent = timeline;
          while (parent && !("immediateRender" in irVars)) {
            irVars = parent.vars.defaults || {};
            parent = _isNotFalse(parent.vars.inherit) && parent.parent;
          }
          vars.immediateRender = _isNotFalse(irVars.immediateRender);
          type < 2 ? vars.runBackwards = 1 : vars.startAt = params[varsIndex - 1];
        }
        return new Tween(params[0], vars, params[varsIndex + 1]);
      }, _conditionalReturn = function _conditionalReturn2(value, func) {
        return value || value === 0 ? func(value) : func;
      }, _clamp = function _clamp2(min, max, value) {
        return value < min ? min : value > max ? max : value;
      }, getUnit = function getUnit2(value) {
        if (typeof value !== "string") {
          return "";
        }
        var v = _unitExp.exec(value);
        return v ? value.substr(v.index + v[0].length) : "";
      }, clamp = function clamp2(min, max, value) {
        return _conditionalReturn(value, function(v) {
          return _clamp(min, max, v);
        });
      }, _slice = [].slice, _isArrayLike = function _isArrayLike2(value, nonEmpty) {
        return value && _isObject(value) && "length" in value && (!nonEmpty && !value.length || value.length - 1 in value && _isObject(value[0])) && !value.nodeType && value !== _win;
      }, _flatten = function _flatten2(ar, leaveStrings, accumulator) {
        if (accumulator === void 0) {
          accumulator = [];
        }
        return ar.forEach(function(value) {
          var _accumulator;
          return _isString(value) && !leaveStrings || _isArrayLike(value, 1) ? (_accumulator = accumulator).push.apply(_accumulator, toArray(value)) : accumulator.push(value);
        }) || accumulator;
      }, toArray = function toArray2(value, scope, leaveStrings) {
        return _isString(value) && !leaveStrings && (_coreInitted || !_wake()) ? _slice.call((scope || _doc).querySelectorAll(value), 0) : _isArray(value) ? _flatten(value, leaveStrings) : _isArrayLike(value) ? _slice.call(value, 0) : value ? [value] : [];
      }, selector = function selector2(value) {
        value = toArray(value)[0] || _warn("Invalid scope") || {};
        return function(v) {
          var el = value.current || value.nativeElement || value;
          return toArray(v, el.querySelectorAll ? el : el === value ? _warn("Invalid scope") || _doc.createElement("div") : value);
        };
      }, shuffle = function shuffle2(a) {
        return a.sort(function() {
          return 0.5 - Math.random();
        });
      }, distribute = function distribute2(v) {
        if (_isFunction(v)) {
          return v;
        }
        var vars = _isObject(v) ? v : {
          each: v
        }, ease = _parseEase(vars.ease), from = vars.from || 0, base2 = parseFloat(vars.base) || 0, cache = {}, isDecimal = from > 0 && from < 1, ratios = isNaN(from) || isDecimal, axis = vars.axis, ratioX = from, ratioY = from;
        if (_isString(from)) {
          ratioX = ratioY = {
            center: 0.5,
            edges: 0.5,
            end: 1
          }[from] || 0;
        } else if (!isDecimal && ratios) {
          ratioX = from[0];
          ratioY = from[1];
        }
        return function(i, target, a) {
          var l = (a || vars).length, distances = cache[l], originX, originY, x, y, d, j, max, min, wrapAt;
          if (!distances) {
            wrapAt = vars.grid === "auto" ? 0 : (vars.grid || [1, _bigNum])[1];
            if (!wrapAt) {
              max = -_bigNum;
              while (max < (max = a[wrapAt++].getBoundingClientRect().left) && wrapAt < l) {
              }
              wrapAt--;
            }
            distances = cache[l] = [];
            originX = ratios ? Math.min(wrapAt, l) * ratioX - 0.5 : from % wrapAt;
            originY = ratios ? l * ratioY / wrapAt - 0.5 : from / wrapAt | 0;
            max = 0;
            min = _bigNum;
            for (j = 0; j < l; j++) {
              x = j % wrapAt - originX;
              y = originY - (j / wrapAt | 0);
              distances[j] = d = !axis ? _sqrt(x * x + y * y) : Math.abs(axis === "y" ? y : x);
              d > max && (max = d);
              d < min && (min = d);
            }
            from === "random" && shuffle(distances);
            distances.max = max - min;
            distances.min = min;
            distances.v = l = (parseFloat(vars.amount) || parseFloat(vars.each) * (wrapAt > l ? l - 1 : !axis ? Math.max(wrapAt, l / wrapAt) : axis === "y" ? l / wrapAt : wrapAt) || 0) * (from === "edges" ? -1 : 1);
            distances.b = l < 0 ? base2 - l : base2;
            distances.u = getUnit(vars.amount || vars.each) || 0;
            ease = ease && l < 0 ? _invertEase(ease) : ease;
          }
          l = (distances[i] - distances.min) / distances.max || 0;
          return _roundPrecise(distances.b + (ease ? ease(l) : l) * distances.v) + distances.u;
        };
      }, _roundModifier = function _roundModifier2(v) {
        var p = Math.pow(10, ((v + "").split(".")[1] || "").length);
        return function(raw) {
          var n = Math.round(parseFloat(raw) / v) * v * p;
          return (n - n % 1) / p + (_isNumber(raw) ? 0 : getUnit(raw));
        };
      }, snap = function snap2(snapTo, value) {
        var isArray = _isArray(snapTo), radius, is2D;
        if (!isArray && _isObject(snapTo)) {
          radius = isArray = snapTo.radius || _bigNum;
          if (snapTo.values) {
            snapTo = toArray(snapTo.values);
            if (is2D = !_isNumber(snapTo[0])) {
              radius *= radius;
            }
          } else {
            snapTo = _roundModifier(snapTo.increment);
          }
        }
        return _conditionalReturn(value, !isArray ? _roundModifier(snapTo) : _isFunction(snapTo) ? function(raw) {
          is2D = snapTo(raw);
          return Math.abs(is2D - raw) <= radius ? is2D : raw;
        } : function(raw) {
          var x = parseFloat(is2D ? raw.x : raw), y = parseFloat(is2D ? raw.y : 0), min = _bigNum, closest = 0, i = snapTo.length, dx, dy;
          while (i--) {
            if (is2D) {
              dx = snapTo[i].x - x;
              dy = snapTo[i].y - y;
              dx = dx * dx + dy * dy;
            } else {
              dx = Math.abs(snapTo[i] - x);
            }
            if (dx < min) {
              min = dx;
              closest = i;
            }
          }
          closest = !radius || min <= radius ? snapTo[closest] : raw;
          return is2D || closest === raw || _isNumber(raw) ? closest : closest + getUnit(raw);
        });
      }, random = function random2(min, max, roundingIncrement, returnFunction) {
        return _conditionalReturn(_isArray(min) ? !max : roundingIncrement === true ? !!(roundingIncrement = 0) : !returnFunction, function() {
          return _isArray(min) ? min[~~(Math.random() * min.length)] : (roundingIncrement = roundingIncrement || 1e-5) && (returnFunction = roundingIncrement < 1 ? Math.pow(10, (roundingIncrement + "").length - 2) : 1) && Math.floor(Math.round((min - roundingIncrement / 2 + Math.random() * (max - min + roundingIncrement * 0.99)) / roundingIncrement) * roundingIncrement * returnFunction) / returnFunction;
        });
      }, pipe = function pipe2() {
        for (var _len = arguments.length, functions = new Array(_len), _key = 0; _key < _len; _key++) {
          functions[_key] = arguments[_key];
        }
        return function(value) {
          return functions.reduce(function(v, f) {
            return f(v);
          }, value);
        };
      }, unitize = function unitize2(func, unit2) {
        return function(value) {
          return func(parseFloat(value)) + (unit2 || getUnit(value));
        };
      }, normalize3 = function normalize4(min, max, value) {
        return mapRange(min, max, 0, 1, value);
      }, _wrapArray = function _wrapArray2(a, wrapper, value) {
        return _conditionalReturn(value, function(index) {
          return a[~~wrapper(index)];
        });
      }, wrap = function wrap2(min, max, value) {
        var range = max - min;
        return _isArray(min) ? _wrapArray(min, wrap2(0, min.length), max) : _conditionalReturn(value, function(value2) {
          return (range + (value2 - min) % range) % range + min;
        });
      }, wrapYoyo = function wrapYoyo2(min, max, value) {
        var range = max - min, total = range * 2;
        return _isArray(min) ? _wrapArray(min, wrapYoyo2(0, min.length - 1), max) : _conditionalReturn(value, function(value2) {
          value2 = (total + (value2 - min) % total) % total || 0;
          return min + (value2 > range ? total - value2 : value2);
        });
      }, _replaceRandom = function _replaceRandom2(value) {
        var prev = 0, s2 = "", i, nums, end, isArray;
        while (~(i = value.indexOf("random(", prev))) {
          end = value.indexOf(")", i);
          isArray = value.charAt(i + 7) === "[";
          nums = value.substr(i + 7, end - i - 7).match(isArray ? _delimitedValueExp : _strictNumExp);
          s2 += value.substr(prev, i - prev) + random(isArray ? nums : +nums[0], isArray ? 0 : +nums[1], +nums[2] || 1e-5);
          prev = end + 1;
        }
        return s2 + value.substr(prev, value.length - prev);
      }, mapRange = function mapRange2(inMin, inMax, outMin, outMax, value) {
        var inRange = inMax - inMin, outRange = outMax - outMin;
        return _conditionalReturn(value, function(value2) {
          return outMin + ((value2 - inMin) / inRange * outRange || 0);
        });
      }, interpolate2 = function interpolate3(start, end, progress, mutate) {
        var func = isNaN(start + end) ? 0 : function(p2) {
          return (1 - p2) * start + p2 * end;
        };
        if (!func) {
          var isString = _isString(start), master = {}, p, i, interpolators, l, il;
          progress === true && (mutate = 1) && (progress = null);
          if (isString) {
            start = {
              p: start
            };
            end = {
              p: end
            };
          } else if (_isArray(start) && !_isArray(end)) {
            interpolators = [];
            l = start.length;
            il = l - 2;
            for (i = 1; i < l; i++) {
              interpolators.push(interpolate3(start[i - 1], start[i]));
            }
            l--;
            func = function func2(p2) {
              p2 *= l;
              var i2 = Math.min(il, ~~p2);
              return interpolators[i2](p2 - i2);
            };
            progress = end;
          } else if (!mutate) {
            start = _merge(_isArray(start) ? [] : {}, start);
          }
          if (!interpolators) {
            for (p in end) {
              _addPropTween.call(master, start, p, "get", end[p]);
            }
            func = function func2(p2) {
              return _renderPropTweens(p2, master) || (isString ? start.p : start);
            };
          }
        }
        return _conditionalReturn(progress, func);
      }, _getLabelInDirection = function _getLabelInDirection2(timeline, fromTime, backward) {
        var labels = timeline.labels, min = _bigNum, p, distance, label;
        for (p in labels) {
          distance = labels[p] - fromTime;
          if (distance < 0 === !!backward && distance && min > (distance = Math.abs(distance))) {
            label = p;
            min = distance;
          }
        }
        return label;
      }, _callback = function _callback2(animation, type, executeLazyFirst) {
        var v = animation.vars, callback = v[type], params, scope;
        if (!callback) {
          return;
        }
        params = v[type + "Params"];
        scope = v.callbackScope || animation;
        executeLazyFirst && _lazyTweens.length && _lazyRender();
        return params ? callback.apply(scope, params) : callback.call(scope);
      }, _interrupt = function _interrupt2(animation) {
        _removeFromParent(animation);
        animation.scrollTrigger && animation.scrollTrigger.kill(false);
        animation.progress() < 1 && _callback(animation, "onInterrupt");
        return animation;
      }, _quickTween, _createPlugin = function _createPlugin2(config) {
        config = !config.name && config["default"] || config;
        var name = config.name, isFunc = _isFunction(config), Plugin = name && !isFunc && config.init ? function() {
          this._props = [];
        } : config, instanceDefaults = {
          init: _emptyFunc,
          render: _renderPropTweens,
          add: _addPropTween,
          kill: _killPropTweensOf,
          modifier: _addPluginModifier,
          rawVars: 0
        }, statics = {
          targetTest: 0,
          get: 0,
          getSetter: _getSetter,
          aliases: {},
          register: 0
        };
        _wake();
        if (config !== Plugin) {
          if (_plugins[name]) {
            return;
          }
          _setDefaults(Plugin, _setDefaults(_copyExcluding(config, instanceDefaults), statics));
          _merge(Plugin.prototype, _merge(instanceDefaults, _copyExcluding(config, statics)));
          _plugins[Plugin.prop = name] = Plugin;
          if (config.targetTest) {
            _harnessPlugins.push(Plugin);
            _reservedProps[name] = 1;
          }
          name = (name === "css" ? "CSS" : name.charAt(0).toUpperCase() + name.substr(1)) + "Plugin";
        }
        _addGlobal(name, Plugin);
        config.register && config.register(gsap5, Plugin, PropTween);
      }, _255 = 255, _colorLookup = {
        aqua: [0, _255, _255],
        lime: [0, _255, 0],
        silver: [192, 192, 192],
        black: [0, 0, 0],
        maroon: [128, 0, 0],
        teal: [0, 128, 128],
        blue: [0, 0, _255],
        navy: [0, 0, 128],
        white: [_255, _255, _255],
        olive: [128, 128, 0],
        yellow: [_255, _255, 0],
        orange: [_255, 165, 0],
        gray: [128, 128, 128],
        purple: [128, 0, 128],
        green: [0, 128, 0],
        red: [_255, 0, 0],
        pink: [_255, 192, 203],
        cyan: [0, _255, _255],
        transparent: [_255, _255, _255, 0]
      }, _hue = function _hue2(h, m1, m2) {
        h = h < 0 ? h + 1 : h > 1 ? h - 1 : h;
        return (h * 6 < 1 ? m1 + (m2 - m1) * h * 6 : h < 0.5 ? m2 : h * 3 < 2 ? m1 + (m2 - m1) * (2 / 3 - h) * 6 : m1) * _255 + 0.5 | 0;
      }, splitColor = function splitColor2(v, toHSL, forceAlpha) {
        var a = !v ? _colorLookup.black : _isNumber(v) ? [v >> 16, v >> 8 & _255, v & _255] : 0, r, g, b, h, s2, l, max, min, d, wasHSL;
        if (!a) {
          if (v.substr(-1) === ",") {
            v = v.substr(0, v.length - 1);
          }
          if (_colorLookup[v]) {
            a = _colorLookup[v];
          } else if (v.charAt(0) === "#") {
            if (v.length < 6) {
              r = v.charAt(1);
              g = v.charAt(2);
              b = v.charAt(3);
              v = "#" + r + r + g + g + b + b + (v.length === 5 ? v.charAt(4) + v.charAt(4) : "");
            }
            if (v.length === 9) {
              a = parseInt(v.substr(1, 6), 16);
              return [a >> 16, a >> 8 & _255, a & _255, parseInt(v.substr(7), 16) / 255];
            }
            v = parseInt(v.substr(1), 16);
            a = [v >> 16, v >> 8 & _255, v & _255];
          } else if (v.substr(0, 3) === "hsl") {
            a = wasHSL = v.match(_strictNumExp);
            if (!toHSL) {
              h = +a[0] % 360 / 360;
              s2 = +a[1] / 100;
              l = +a[2] / 100;
              g = l <= 0.5 ? l * (s2 + 1) : l + s2 - l * s2;
              r = l * 2 - g;
              a.length > 3 && (a[3] *= 1);
              a[0] = _hue(h + 1 / 3, r, g);
              a[1] = _hue(h, r, g);
              a[2] = _hue(h - 1 / 3, r, g);
            } else if (~v.indexOf("=")) {
              a = v.match(_numExp);
              forceAlpha && a.length < 4 && (a[3] = 1);
              return a;
            }
          } else {
            a = v.match(_strictNumExp) || _colorLookup.transparent;
          }
          a = a.map(Number);
        }
        if (toHSL && !wasHSL) {
          r = a[0] / _255;
          g = a[1] / _255;
          b = a[2] / _255;
          max = Math.max(r, g, b);
          min = Math.min(r, g, b);
          l = (max + min) / 2;
          if (max === min) {
            h = s2 = 0;
          } else {
            d = max - min;
            s2 = l > 0.5 ? d / (2 - max - min) : d / (max + min);
            h = max === r ? (g - b) / d + (g < b ? 6 : 0) : max === g ? (b - r) / d + 2 : (r - g) / d + 4;
            h *= 60;
          }
          a[0] = ~~(h + 0.5);
          a[1] = ~~(s2 * 100 + 0.5);
          a[2] = ~~(l * 100 + 0.5);
        }
        forceAlpha && a.length < 4 && (a[3] = 1);
        return a;
      }, _colorOrderData = function _colorOrderData2(v) {
        var values = [], c = [], i = -1;
        v.split(_colorExp).forEach(function(v2) {
          var a = v2.match(_numWithUnitExp) || [];
          values.push.apply(values, a);
          c.push(i += a.length + 1);
        });
        values.c = c;
        return values;
      }, _formatColors = function _formatColors2(s2, toHSL, orderMatchData) {
        var result = "", colors = (s2 + result).match(_colorExp), type = toHSL ? "hsla(" : "rgba(", i = 0, c, shell, d, l;
        if (!colors) {
          return s2;
        }
        colors = colors.map(function(color2) {
          return (color2 = splitColor(color2, toHSL, 1)) && type + (toHSL ? color2[0] + "," + color2[1] + "%," + color2[2] + "%," + color2[3] : color2.join(",")) + ")";
        });
        if (orderMatchData) {
          d = _colorOrderData(s2);
          c = orderMatchData.c;
          if (c.join(result) !== d.c.join(result)) {
            shell = s2.replace(_colorExp, "1").split(_numWithUnitExp);
            l = shell.length - 1;
            for (; i < l; i++) {
              result += shell[i] + (~c.indexOf(i) ? colors.shift() || type + "0,0,0,0)" : (d.length ? d : colors.length ? colors : orderMatchData).shift());
            }
          }
        }
        if (!shell) {
          shell = s2.split(_colorExp);
          l = shell.length - 1;
          for (; i < l; i++) {
            result += shell[i] + colors[i];
          }
        }
        return result + shell[l];
      }, _colorExp = function() {
        var s2 = "(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#(?:[0-9a-f]{3,4}){1,2}\\b", p;
        for (p in _colorLookup) {
          s2 += "|" + p + "\\b";
        }
        return new RegExp(s2 + ")", "gi");
      }(), _hslExp = /hsl[a]?\(/, _colorStringFilter = function _colorStringFilter2(a) {
        var combined = a.join(" "), toHSL;
        _colorExp.lastIndex = 0;
        if (_colorExp.test(combined)) {
          toHSL = _hslExp.test(combined);
          a[1] = _formatColors(a[1], toHSL);
          a[0] = _formatColors(a[0], toHSL, _colorOrderData(a[1]));
          return true;
        }
      }, _tickerActive, _ticker = function() {
        var _getTime = Date.now, _lagThreshold = 500, _adjustedLag = 33, _startTime = _getTime(), _lastUpdate = _startTime, _gap = 1e3 / 240, _nextTime = _gap, _listeners = [], _id, _req, _raf, _self, _delta, _i, _tick = function _tick2(v) {
          var elapsed = _getTime() - _lastUpdate, manual = v === true, overlap, dispatch, time, frame;
          elapsed > _lagThreshold && (_startTime += elapsed - _adjustedLag);
          _lastUpdate += elapsed;
          time = _lastUpdate - _startTime;
          overlap = time - _nextTime;
          if (overlap > 0 || manual) {
            frame = ++_self.frame;
            _delta = time - _self.time * 1e3;
            _self.time = time = time / 1e3;
            _nextTime += overlap + (overlap >= _gap ? 4 : _gap - overlap);
            dispatch = 1;
          }
          manual || (_id = _req(_tick2));
          if (dispatch) {
            for (_i = 0; _i < _listeners.length; _i++) {
              _listeners[_i](time, _delta, frame, v);
            }
          }
        };
        _self = {
          time: 0,
          frame: 0,
          tick: function tick() {
            _tick(true);
          },
          deltaRatio: function deltaRatio(fps) {
            return _delta / (1e3 / (fps || 60));
          },
          wake: function wake() {
            if (_coreReady) {
              if (!_coreInitted && _windowExists()) {
                _win = _coreInitted = window;
                _doc = _win.document || {};
                _globals.gsap = gsap5;
                (_win.gsapVersions || (_win.gsapVersions = [])).push(gsap5.version);
                _install(_installScope || _win.GreenSockGlobals || !_win.gsap && _win || {});
                _raf = _win.requestAnimationFrame;
              }
              _id && _self.sleep();
              _req = _raf || function(f) {
                return setTimeout(f, _nextTime - _self.time * 1e3 + 1 | 0);
              };
              _tickerActive = 1;
              _tick(2);
            }
          },
          sleep: function sleep() {
            (_raf ? _win.cancelAnimationFrame : clearTimeout)(_id);
            _tickerActive = 0;
            _req = _emptyFunc;
          },
          lagSmoothing: function lagSmoothing(threshold, adjustedLag) {
            _lagThreshold = threshold || 1 / _tinyNum;
            _adjustedLag = Math.min(adjustedLag, _lagThreshold, 0);
          },
          fps: function fps(_fps) {
            _gap = 1e3 / (_fps || 240);
            _nextTime = _self.time * 1e3 + _gap;
          },
          add: function add(callback) {
            _listeners.indexOf(callback) < 0 && _listeners.push(callback);
            _wake();
          },
          remove: function remove(callback) {
            var i;
            ~(i = _listeners.indexOf(callback)) && _listeners.splice(i, 1) && _i >= i && _i--;
          },
          _listeners
        };
        return _self;
      }(), _wake = function _wake2() {
        return !_tickerActive && _ticker.wake();
      }, _easeMap = {}, _customEaseExp = /^[\d.\-M][\d.\-,\s]/, _quotesExp = /["']/g, _parseObjectInString = function _parseObjectInString2(value) {
        var obj = {}, split = value.substr(1, value.length - 3).split(":"), key = split[0], i = 1, l = split.length, index, val, parsedVal;
        for (; i < l; i++) {
          val = split[i];
          index = i !== l - 1 ? val.lastIndexOf(",") : val.length;
          parsedVal = val.substr(0, index);
          obj[key] = isNaN(parsedVal) ? parsedVal.replace(_quotesExp, "").trim() : +parsedVal;
          key = val.substr(index + 1).trim();
        }
        return obj;
      }, _valueInParentheses = function _valueInParentheses2(value) {
        var open = value.indexOf("(") + 1, close = value.indexOf(")"), nested = value.indexOf("(", open);
        return value.substring(open, ~nested && nested < close ? value.indexOf(")", close + 1) : close);
      }, _configEaseFromString = function _configEaseFromString2(name) {
        var split = (name + "").split("("), ease = _easeMap[split[0]];
        return ease && split.length > 1 && ease.config ? ease.config.apply(null, ~name.indexOf("{") ? [_parseObjectInString(split[1])] : _valueInParentheses(name).split(",").map(_numericIfPossible)) : _easeMap._CE && _customEaseExp.test(name) ? _easeMap._CE("", name) : ease;
      }, _invertEase = function _invertEase2(ease) {
        return function(p) {
          return 1 - ease(1 - p);
        };
      }, _propagateYoyoEase = function _propagateYoyoEase2(timeline, isYoyo) {
        var child = timeline._first, ease;
        while (child) {
          if (child instanceof Timeline) {
            _propagateYoyoEase2(child, isYoyo);
          } else if (child.vars.yoyoEase && (!child._yoyo || !child._repeat) && child._yoyo !== isYoyo) {
            if (child.timeline) {
              _propagateYoyoEase2(child.timeline, isYoyo);
            } else {
              ease = child._ease;
              child._ease = child._yEase;
              child._yEase = ease;
              child._yoyo = isYoyo;
            }
          }
          child = child._next;
        }
      }, _parseEase = function _parseEase2(ease, defaultEase) {
        return !ease ? defaultEase : (_isFunction(ease) ? ease : _easeMap[ease] || _configEaseFromString(ease)) || defaultEase;
      }, _insertEase = function _insertEase2(names, easeIn, easeOut, easeInOut) {
        if (easeOut === void 0) {
          easeOut = function easeOut2(p) {
            return 1 - easeIn(1 - p);
          };
        }
        if (easeInOut === void 0) {
          easeInOut = function easeInOut2(p) {
            return p < 0.5 ? easeIn(p * 2) / 2 : 1 - easeIn((1 - p) * 2) / 2;
          };
        }
        var ease = {
          easeIn,
          easeOut,
          easeInOut
        }, lowercaseName;
        _forEachName(names, function(name) {
          _easeMap[name] = _globals[name] = ease;
          _easeMap[lowercaseName = name.toLowerCase()] = easeOut;
          for (var p in ease) {
            _easeMap[lowercaseName + (p === "easeIn" ? ".in" : p === "easeOut" ? ".out" : ".inOut")] = _easeMap[name + "." + p] = ease[p];
          }
        });
        return ease;
      }, _easeInOutFromOut = function _easeInOutFromOut2(easeOut) {
        return function(p) {
          return p < 0.5 ? (1 - easeOut(1 - p * 2)) / 2 : 0.5 + easeOut((p - 0.5) * 2) / 2;
        };
      }, _configElastic = function _configElastic2(type, amplitude, period) {
        var p1 = amplitude >= 1 ? amplitude : 1, p2 = (period || (type ? 0.3 : 0.45)) / (amplitude < 1 ? amplitude : 1), p3 = p2 / _2PI * (Math.asin(1 / p1) || 0), easeOut = function easeOut2(p) {
          return p === 1 ? 1 : p1 * Math.pow(2, -10 * p) * _sin((p - p3) * p2) + 1;
        }, ease = type === "out" ? easeOut : type === "in" ? function(p) {
          return 1 - easeOut(1 - p);
        } : _easeInOutFromOut(easeOut);
        p2 = _2PI / p2;
        ease.config = function(amplitude2, period2) {
          return _configElastic2(type, amplitude2, period2);
        };
        return ease;
      }, _configBack = function _configBack2(type, overshoot) {
        if (overshoot === void 0) {
          overshoot = 1.70158;
        }
        var easeOut = function easeOut2(p) {
          return p ? --p * p * ((overshoot + 1) * p + overshoot) + 1 : 0;
        }, ease = type === "out" ? easeOut : type === "in" ? function(p) {
          return 1 - easeOut(1 - p);
        } : _easeInOutFromOut(easeOut);
        ease.config = function(overshoot2) {
          return _configBack2(type, overshoot2);
        };
        return ease;
      };
      _forEachName("Linear,Quad,Cubic,Quart,Quint,Strong", function(name, i) {
        var power = i < 5 ? i + 1 : i;
        _insertEase(name + ",Power" + (power - 1), i ? function(p) {
          return Math.pow(p, power);
        } : function(p) {
          return p;
        }, function(p) {
          return 1 - Math.pow(1 - p, power);
        }, function(p) {
          return p < 0.5 ? Math.pow(p * 2, power) / 2 : 1 - Math.pow((1 - p) * 2, power) / 2;
        });
      });
      _easeMap.Linear.easeNone = _easeMap.none = _easeMap.Linear.easeIn;
      _insertEase("Elastic", _configElastic("in"), _configElastic("out"), _configElastic());
      (function(n, c) {
        var n1 = 1 / c, n2 = 2 * n1, n3 = 2.5 * n1, easeOut = function easeOut2(p) {
          return p < n1 ? n * p * p : p < n2 ? n * Math.pow(p - 1.5 / c, 2) + 0.75 : p < n3 ? n * (p -= 2.25 / c) * p + 0.9375 : n * Math.pow(p - 2.625 / c, 2) + 0.984375;
        };
        _insertEase("Bounce", function(p) {
          return 1 - easeOut(1 - p);
        }, easeOut);
      })(7.5625, 2.75);
      _insertEase("Expo", function(p) {
        return p ? Math.pow(2, 10 * (p - 1)) : 0;
      });
      _insertEase("Circ", function(p) {
        return -(_sqrt(1 - p * p) - 1);
      });
      _insertEase("Sine", function(p) {
        return p === 1 ? 1 : -_cos(p * _HALF_PI) + 1;
      });
      _insertEase("Back", _configBack("in"), _configBack("out"), _configBack());
      _easeMap.SteppedEase = _easeMap.steps = _globals.SteppedEase = {
        config: function config(steps, immediateStart) {
          if (steps === void 0) {
            steps = 1;
          }
          var p1 = 1 / steps, p2 = steps + (immediateStart ? 0 : 1), p3 = immediateStart ? 1 : 0, max = 1 - _tinyNum;
          return function(p) {
            return ((p2 * _clamp(0, max, p) | 0) + p3) * p1;
          };
        }
      };
      _defaults.ease = _easeMap["quad.out"];
      _forEachName("onComplete,onUpdate,onStart,onRepeat,onReverseComplete,onInterrupt", function(name) {
        return _callbackNames += name + "," + name + "Params,";
      });
      var GSCache = function GSCache2(target, harness) {
        this.id = _gsID++;
        target._gsap = this;
        this.target = target;
        this.harness = harness;
        this.get = harness ? harness.get : _getProperty;
        this.set = harness ? harness.getSetter : _getSetter;
      };
      var Animation = function() {
        function Animation2(vars) {
          this.vars = vars;
          this._delay = +vars.delay || 0;
          if (this._repeat = vars.repeat === Infinity ? -2 : vars.repeat || 0) {
            this._rDelay = vars.repeatDelay || 0;
            this._yoyo = !!vars.yoyo || !!vars.yoyoEase;
          }
          this._ts = 1;
          _setDuration(this, +vars.duration, 1, 1);
          this.data = vars.data;
          _tickerActive || _ticker.wake();
        }
        var _proto = Animation2.prototype;
        _proto.delay = function delay(value) {
          if (value || value === 0) {
            this.parent && this.parent.smoothChildTiming && this.startTime(this._start + value - this._delay);
            this._delay = value;
            return this;
          }
          return this._delay;
        };
        _proto.duration = function duration(value) {
          return arguments.length ? this.totalDuration(this._repeat > 0 ? value + (value + this._rDelay) * this._repeat : value) : this.totalDuration() && this._dur;
        };
        _proto.totalDuration = function totalDuration(value) {
          if (!arguments.length) {
            return this._tDur;
          }
          this._dirty = 0;
          return _setDuration(this, this._repeat < 0 ? value : (value - this._repeat * this._rDelay) / (this._repeat + 1));
        };
        _proto.totalTime = function totalTime(_totalTime, suppressEvents) {
          _wake();
          if (!arguments.length) {
            return this._tTime;
          }
          var parent = this._dp;
          if (parent && parent.smoothChildTiming && this._ts) {
            _alignPlayhead(this, _totalTime);
            !parent._dp || parent.parent || _postAddChecks(parent, this);
            while (parent && parent.parent) {
              if (parent.parent._time !== parent._start + (parent._ts >= 0 ? parent._tTime / parent._ts : (parent.totalDuration() - parent._tTime) / -parent._ts)) {
                parent.totalTime(parent._tTime, true);
              }
              parent = parent.parent;
            }
            if (!this.parent && this._dp.autoRemoveChildren && (this._ts > 0 && _totalTime < this._tDur || this._ts < 0 && _totalTime > 0 || !this._tDur && !_totalTime)) {
              _addToTimeline(this._dp, this, this._start - this._delay);
            }
          }
          if (this._tTime !== _totalTime || !this._dur && !suppressEvents || this._initted && Math.abs(this._zTime) === _tinyNum || !_totalTime && !this._initted && (this.add || this._ptLookup)) {
            this._ts || (this._pTime = _totalTime);
            _lazySafeRender(this, _totalTime, suppressEvents);
          }
          return this;
        };
        _proto.time = function time(value, suppressEvents) {
          return arguments.length ? this.totalTime(Math.min(this.totalDuration(), value + _elapsedCycleDuration(this)) % (this._dur + this._rDelay) || (value ? this._dur : 0), suppressEvents) : this._time;
        };
        _proto.totalProgress = function totalProgress(value, suppressEvents) {
          return arguments.length ? this.totalTime(this.totalDuration() * value, suppressEvents) : this.totalDuration() ? Math.min(1, this._tTime / this._tDur) : this.ratio;
        };
        _proto.progress = function progress(value, suppressEvents) {
          return arguments.length ? this.totalTime(this.duration() * (this._yoyo && !(this.iteration() & 1) ? 1 - value : value) + _elapsedCycleDuration(this), suppressEvents) : this.duration() ? Math.min(1, this._time / this._dur) : this.ratio;
        };
        _proto.iteration = function iteration(value, suppressEvents) {
          var cycleDuration = this.duration() + this._rDelay;
          return arguments.length ? this.totalTime(this._time + (value - 1) * cycleDuration, suppressEvents) : this._repeat ? _animationCycle(this._tTime, cycleDuration) + 1 : 1;
        };
        _proto.timeScale = function timeScale(value) {
          if (!arguments.length) {
            return this._rts === -_tinyNum ? 0 : this._rts;
          }
          if (this._rts === value) {
            return this;
          }
          var tTime = this.parent && this._ts ? _parentToChildTotalTime(this.parent._time, this) : this._tTime;
          this._rts = +value || 0;
          this._ts = this._ps || value === -_tinyNum ? 0 : this._rts;
          _recacheAncestors(this.totalTime(_clamp(-this._delay, this._tDur, tTime), true));
          _setEnd(this);
          return this;
        };
        _proto.paused = function paused(value) {
          if (!arguments.length) {
            return this._ps;
          }
          if (this._ps !== value) {
            this._ps = value;
            if (value) {
              this._pTime = this._tTime || Math.max(-this._delay, this.rawTime());
              this._ts = this._act = 0;
            } else {
              _wake();
              this._ts = this._rts;
              this.totalTime(this.parent && !this.parent.smoothChildTiming ? this.rawTime() : this._tTime || this._pTime, this.progress() === 1 && Math.abs(this._zTime) !== _tinyNum && (this._tTime -= _tinyNum));
            }
          }
          return this;
        };
        _proto.startTime = function startTime(value) {
          if (arguments.length) {
            this._start = value;
            var parent = this.parent || this._dp;
            parent && (parent._sort || !this.parent) && _addToTimeline(parent, this, value - this._delay);
            return this;
          }
          return this._start;
        };
        _proto.endTime = function endTime(includeRepeats) {
          return this._start + (_isNotFalse(includeRepeats) ? this.totalDuration() : this.duration()) / Math.abs(this._ts || 1);
        };
        _proto.rawTime = function rawTime(wrapRepeats) {
          var parent = this.parent || this._dp;
          return !parent ? this._tTime : wrapRepeats && (!this._ts || this._repeat && this._time && this.totalProgress() < 1) ? this._tTime % (this._dur + this._rDelay) : !this._ts ? this._tTime : _parentToChildTotalTime(parent.rawTime(wrapRepeats), this);
        };
        _proto.globalTime = function globalTime(rawTime) {
          var animation = this, time = arguments.length ? rawTime : animation.rawTime();
          while (animation) {
            time = animation._start + time / (animation._ts || 1);
            animation = animation._dp;
          }
          return time;
        };
        _proto.repeat = function repeat(value) {
          if (arguments.length) {
            this._repeat = value === Infinity ? -2 : value;
            return _onUpdateTotalDuration(this);
          }
          return this._repeat === -2 ? Infinity : this._repeat;
        };
        _proto.repeatDelay = function repeatDelay(value) {
          if (arguments.length) {
            var time = this._time;
            this._rDelay = value;
            _onUpdateTotalDuration(this);
            return time ? this.time(time) : this;
          }
          return this._rDelay;
        };
        _proto.yoyo = function yoyo(value) {
          if (arguments.length) {
            this._yoyo = value;
            return this;
          }
          return this._yoyo;
        };
        _proto.seek = function seek(position, suppressEvents) {
          return this.totalTime(_parsePosition(this, position), _isNotFalse(suppressEvents));
        };
        _proto.restart = function restart(includeDelay, suppressEvents) {
          return this.play().totalTime(includeDelay ? -this._delay : 0, _isNotFalse(suppressEvents));
        };
        _proto.play = function play(from, suppressEvents) {
          from != null && this.seek(from, suppressEvents);
          return this.reversed(false).paused(false);
        };
        _proto.reverse = function reverse(from, suppressEvents) {
          from != null && this.seek(from || this.totalDuration(), suppressEvents);
          return this.reversed(true).paused(false);
        };
        _proto.pause = function pause(atTime, suppressEvents) {
          atTime != null && this.seek(atTime, suppressEvents);
          return this.paused(true);
        };
        _proto.resume = function resume() {
          return this.paused(false);
        };
        _proto.reversed = function reversed(value) {
          if (arguments.length) {
            !!value !== this.reversed() && this.timeScale(-this._rts || (value ? -_tinyNum : 0));
            return this;
          }
          return this._rts < 0;
        };
        _proto.invalidate = function invalidate() {
          this._initted = this._act = 0;
          this._zTime = -_tinyNum;
          return this;
        };
        _proto.isActive = function isActive() {
          var parent = this.parent || this._dp, start = this._start, rawTime;
          return !!(!parent || this._ts && this._initted && parent.isActive() && (rawTime = parent.rawTime(true)) >= start && rawTime < this.endTime(true) - _tinyNum);
        };
        _proto.eventCallback = function eventCallback(type, callback, params) {
          var vars = this.vars;
          if (arguments.length > 1) {
            if (!callback) {
              delete vars[type];
            } else {
              vars[type] = callback;
              params && (vars[type + "Params"] = params);
              type === "onUpdate" && (this._onUpdate = callback);
            }
            return this;
          }
          return vars[type];
        };
        _proto.then = function then(onFulfilled) {
          var self2 = this;
          return new Promise(function(resolve2) {
            var f = _isFunction(onFulfilled) ? onFulfilled : _passThrough, _resolve = function _resolve2() {
              var _then = self2.then;
              self2.then = null;
              _isFunction(f) && (f = f(self2)) && (f.then || f === self2) && (self2.then = _then);
              resolve2(f);
              self2.then = _then;
            };
            if (self2._initted && self2.totalProgress() === 1 && self2._ts >= 0 || !self2._tTime && self2._ts < 0) {
              _resolve();
            } else {
              self2._prom = _resolve;
            }
          });
        };
        _proto.kill = function kill() {
          _interrupt(this);
        };
        return Animation2;
      }();
      _setDefaults(Animation.prototype, {
        _time: 0,
        _start: 0,
        _end: 0,
        _tTime: 0,
        _tDur: 0,
        _dirty: 0,
        _repeat: 0,
        _yoyo: false,
        parent: null,
        _initted: false,
        _rDelay: 0,
        _ts: 1,
        _dp: 0,
        ratio: 0,
        _zTime: -_tinyNum,
        _prom: 0,
        _ps: false,
        _rts: 1
      });
      var Timeline = function(_Animation) {
        _inheritsLoose(Timeline2, _Animation);
        function Timeline2(vars, position) {
          var _this;
          if (vars === void 0) {
            vars = {};
          }
          _this = _Animation.call(this, vars) || this;
          _this.labels = {};
          _this.smoothChildTiming = !!vars.smoothChildTiming;
          _this.autoRemoveChildren = !!vars.autoRemoveChildren;
          _this._sort = _isNotFalse(vars.sortChildren);
          _globalTimeline && _addToTimeline(vars.parent || _globalTimeline, _assertThisInitialized(_this), position);
          vars.reversed && _this.reverse();
          vars.paused && _this.paused(true);
          vars.scrollTrigger && _scrollTrigger(_assertThisInitialized(_this), vars.scrollTrigger);
          return _this;
        }
        var _proto2 = Timeline2.prototype;
        _proto2.to = function to(targets, vars, position) {
          _createTweenType(0, arguments, this);
          return this;
        };
        _proto2.from = function from(targets, vars, position) {
          _createTweenType(1, arguments, this);
          return this;
        };
        _proto2.fromTo = function fromTo(targets, fromVars, toVars, position) {
          _createTweenType(2, arguments, this);
          return this;
        };
        _proto2.set = function set(targets, vars, position) {
          vars.duration = 0;
          vars.parent = this;
          _inheritDefaults(vars).repeatDelay || (vars.repeat = 0);
          vars.immediateRender = !!vars.immediateRender;
          new Tween(targets, vars, _parsePosition(this, position), 1);
          return this;
        };
        _proto2.call = function call(callback, params, position) {
          return _addToTimeline(this, Tween.delayedCall(0, callback, params), position);
        };
        _proto2.staggerTo = function staggerTo(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams) {
          vars.duration = duration;
          vars.stagger = vars.stagger || stagger;
          vars.onComplete = onCompleteAll;
          vars.onCompleteParams = onCompleteAllParams;
          vars.parent = this;
          new Tween(targets, vars, _parsePosition(this, position));
          return this;
        };
        _proto2.staggerFrom = function staggerFrom(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams) {
          vars.runBackwards = 1;
          _inheritDefaults(vars).immediateRender = _isNotFalse(vars.immediateRender);
          return this.staggerTo(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams);
        };
        _proto2.staggerFromTo = function staggerFromTo(targets, duration, fromVars, toVars, stagger, position, onCompleteAll, onCompleteAllParams) {
          toVars.startAt = fromVars;
          _inheritDefaults(toVars).immediateRender = _isNotFalse(toVars.immediateRender);
          return this.staggerTo(targets, duration, toVars, stagger, position, onCompleteAll, onCompleteAllParams);
        };
        _proto2.render = function render2(totalTime, suppressEvents, force) {
          var prevTime = this._time, tDur = this._dirty ? this.totalDuration() : this._tDur, dur = this._dur, tTime = totalTime <= 0 ? 0 : _roundPrecise(totalTime), crossingStart = this._zTime < 0 !== totalTime < 0 && (this._initted || !dur), time, child, next, iteration, cycleDuration, prevPaused, pauseTween, timeScale, prevStart, prevIteration, yoyo, isYoyo;
          this !== _globalTimeline && tTime > tDur && totalTime >= 0 && (tTime = tDur);
          if (tTime !== this._tTime || force || crossingStart) {
            if (prevTime !== this._time && dur) {
              tTime += this._time - prevTime;
              totalTime += this._time - prevTime;
            }
            time = tTime;
            prevStart = this._start;
            timeScale = this._ts;
            prevPaused = !timeScale;
            if (crossingStart) {
              dur || (prevTime = this._zTime);
              (totalTime || !suppressEvents) && (this._zTime = totalTime);
            }
            if (this._repeat) {
              yoyo = this._yoyo;
              cycleDuration = dur + this._rDelay;
              if (this._repeat < -1 && totalTime < 0) {
                return this.totalTime(cycleDuration * 100 + totalTime, suppressEvents, force);
              }
              time = _roundPrecise(tTime % cycleDuration);
              if (tTime === tDur) {
                iteration = this._repeat;
                time = dur;
              } else {
                iteration = ~~(tTime / cycleDuration);
                if (iteration && iteration === tTime / cycleDuration) {
                  time = dur;
                  iteration--;
                }
                time > dur && (time = dur);
              }
              prevIteration = _animationCycle(this._tTime, cycleDuration);
              !prevTime && this._tTime && prevIteration !== iteration && (prevIteration = iteration);
              if (yoyo && iteration & 1) {
                time = dur - time;
                isYoyo = 1;
              }
              if (iteration !== prevIteration && !this._lock) {
                var rewinding = yoyo && prevIteration & 1, doesWrap = rewinding === (yoyo && iteration & 1);
                iteration < prevIteration && (rewinding = !rewinding);
                prevTime = rewinding ? 0 : dur;
                this._lock = 1;
                this.render(prevTime || (isYoyo ? 0 : _roundPrecise(iteration * cycleDuration)), suppressEvents, !dur)._lock = 0;
                this._tTime = tTime;
                !suppressEvents && this.parent && _callback(this, "onRepeat");
                this.vars.repeatRefresh && !isYoyo && (this.invalidate()._lock = 1);
                if (prevTime && prevTime !== this._time || prevPaused !== !this._ts || this.vars.onRepeat && !this.parent && !this._act) {
                  return this;
                }
                dur = this._dur;
                tDur = this._tDur;
                if (doesWrap) {
                  this._lock = 2;
                  prevTime = rewinding ? dur : -1e-4;
                  this.render(prevTime, true);
                  this.vars.repeatRefresh && !isYoyo && this.invalidate();
                }
                this._lock = 0;
                if (!this._ts && !prevPaused) {
                  return this;
                }
                _propagateYoyoEase(this, isYoyo);
              }
            }
            if (this._hasPause && !this._forcing && this._lock < 2) {
              pauseTween = _findNextPauseTween(this, _roundPrecise(prevTime), _roundPrecise(time));
              if (pauseTween) {
                tTime -= time - (time = pauseTween._start);
              }
            }
            this._tTime = tTime;
            this._time = time;
            this._act = !timeScale;
            if (!this._initted) {
              this._onUpdate = this.vars.onUpdate;
              this._initted = 1;
              this._zTime = totalTime;
              prevTime = 0;
            }
            if (!prevTime && time && !suppressEvents) {
              _callback(this, "onStart");
              if (this._tTime !== tTime) {
                return this;
              }
            }
            if (time >= prevTime && totalTime >= 0) {
              child = this._first;
              while (child) {
                next = child._next;
                if ((child._act || time >= child._start) && child._ts && pauseTween !== child) {
                  if (child.parent !== this) {
                    return this.render(totalTime, suppressEvents, force);
                  }
                  child.render(child._ts > 0 ? (time - child._start) * child._ts : (child._dirty ? child.totalDuration() : child._tDur) + (time - child._start) * child._ts, suppressEvents, force);
                  if (time !== this._time || !this._ts && !prevPaused) {
                    pauseTween = 0;
                    next && (tTime += this._zTime = -_tinyNum);
                    break;
                  }
                }
                child = next;
              }
            } else {
              child = this._last;
              var adjustedTime = totalTime < 0 ? totalTime : time;
              while (child) {
                next = child._prev;
                if ((child._act || adjustedTime <= child._end) && child._ts && pauseTween !== child) {
                  if (child.parent !== this) {
                    return this.render(totalTime, suppressEvents, force);
                  }
                  child.render(child._ts > 0 ? (adjustedTime - child._start) * child._ts : (child._dirty ? child.totalDuration() : child._tDur) + (adjustedTime - child._start) * child._ts, suppressEvents, force);
                  if (time !== this._time || !this._ts && !prevPaused) {
                    pauseTween = 0;
                    next && (tTime += this._zTime = adjustedTime ? -_tinyNum : _tinyNum);
                    break;
                  }
                }
                child = next;
              }
            }
            if (pauseTween && !suppressEvents) {
              this.pause();
              pauseTween.render(time >= prevTime ? 0 : -_tinyNum)._zTime = time >= prevTime ? 1 : -1;
              if (this._ts) {
                this._start = prevStart;
                _setEnd(this);
                return this.render(totalTime, suppressEvents, force);
              }
            }
            this._onUpdate && !suppressEvents && _callback(this, "onUpdate", true);
            if (tTime === tDur && tDur >= this.totalDuration() || !tTime && prevTime) {
              if (prevStart === this._start || Math.abs(timeScale) !== Math.abs(this._ts)) {
                if (!this._lock) {
                  (totalTime || !dur) && (tTime === tDur && this._ts > 0 || !tTime && this._ts < 0) && _removeFromParent(this, 1);
                  if (!suppressEvents && !(totalTime < 0 && !prevTime) && (tTime || prevTime || !tDur)) {
                    _callback(this, tTime === tDur && totalTime >= 0 ? "onComplete" : "onReverseComplete", true);
                    this._prom && !(tTime < tDur && this.timeScale() > 0) && this._prom();
                  }
                }
              }
            }
          }
          return this;
        };
        _proto2.add = function add(child, position) {
          var _this2 = this;
          _isNumber(position) || (position = _parsePosition(this, position, child));
          if (!(child instanceof Animation)) {
            if (_isArray(child)) {
              child.forEach(function(obj) {
                return _this2.add(obj, position);
              });
              return this;
            }
            if (_isString(child)) {
              return this.addLabel(child, position);
            }
            if (_isFunction(child)) {
              child = Tween.delayedCall(0, child);
            } else {
              return this;
            }
          }
          return this !== child ? _addToTimeline(this, child, position) : this;
        };
        _proto2.getChildren = function getChildren(nested, tweens, timelines, ignoreBeforeTime) {
          if (nested === void 0) {
            nested = true;
          }
          if (tweens === void 0) {
            tweens = true;
          }
          if (timelines === void 0) {
            timelines = true;
          }
          if (ignoreBeforeTime === void 0) {
            ignoreBeforeTime = -_bigNum;
          }
          var a = [], child = this._first;
          while (child) {
            if (child._start >= ignoreBeforeTime) {
              if (child instanceof Tween) {
                tweens && a.push(child);
              } else {
                timelines && a.push(child);
                nested && a.push.apply(a, child.getChildren(true, tweens, timelines));
              }
            }
            child = child._next;
          }
          return a;
        };
        _proto2.getById = function getById(id) {
          var animations = this.getChildren(1, 1, 1), i = animations.length;
          while (i--) {
            if (animations[i].vars.id === id) {
              return animations[i];
            }
          }
        };
        _proto2.remove = function remove(child) {
          if (_isString(child)) {
            return this.removeLabel(child);
          }
          if (_isFunction(child)) {
            return this.killTweensOf(child);
          }
          _removeLinkedListItem(this, child);
          if (child === this._recent) {
            this._recent = this._last;
          }
          return _uncache(this);
        };
        _proto2.totalTime = function totalTime(_totalTime2, suppressEvents) {
          if (!arguments.length) {
            return this._tTime;
          }
          this._forcing = 1;
          if (!this._dp && this._ts) {
            this._start = _roundPrecise(_ticker.time - (this._ts > 0 ? _totalTime2 / this._ts : (this.totalDuration() - _totalTime2) / -this._ts));
          }
          _Animation.prototype.totalTime.call(this, _totalTime2, suppressEvents);
          this._forcing = 0;
          return this;
        };
        _proto2.addLabel = function addLabel(label, position) {
          this.labels[label] = _parsePosition(this, position);
          return this;
        };
        _proto2.removeLabel = function removeLabel(label) {
          delete this.labels[label];
          return this;
        };
        _proto2.addPause = function addPause(position, callback, params) {
          var t = Tween.delayedCall(0, callback || _emptyFunc, params);
          t.data = "isPause";
          this._hasPause = 1;
          return _addToTimeline(this, t, _parsePosition(this, position));
        };
        _proto2.removePause = function removePause(position) {
          var child = this._first;
          position = _parsePosition(this, position);
          while (child) {
            if (child._start === position && child.data === "isPause") {
              _removeFromParent(child);
            }
            child = child._next;
          }
        };
        _proto2.killTweensOf = function killTweensOf(targets, props, onlyActive) {
          var tweens = this.getTweensOf(targets, onlyActive), i = tweens.length;
          while (i--) {
            _overwritingTween !== tweens[i] && tweens[i].kill(targets, props);
          }
          return this;
        };
        _proto2.getTweensOf = function getTweensOf(targets, onlyActive) {
          var a = [], parsedTargets = toArray(targets), child = this._first, isGlobalTime = _isNumber(onlyActive), children;
          while (child) {
            if (child instanceof Tween) {
              if (_arrayContainsAny(child._targets, parsedTargets) && (isGlobalTime ? (!_overwritingTween || child._initted && child._ts) && child.globalTime(0) <= onlyActive && child.globalTime(child.totalDuration()) > onlyActive : !onlyActive || child.isActive())) {
                a.push(child);
              }
            } else if ((children = child.getTweensOf(parsedTargets, onlyActive)).length) {
              a.push.apply(a, children);
            }
            child = child._next;
          }
          return a;
        };
        _proto2.tweenTo = function tweenTo(position, vars) {
          vars = vars || {};
          var tl = this, endTime = _parsePosition(tl, position), _vars = vars, startAt = _vars.startAt, _onStart = _vars.onStart, onStartParams = _vars.onStartParams, immediateRender = _vars.immediateRender, initted, tween = Tween.to(tl, _setDefaults({
            ease: vars.ease || "none",
            lazy: false,
            immediateRender: false,
            time: endTime,
            overwrite: "auto",
            duration: vars.duration || Math.abs((endTime - (startAt && "time" in startAt ? startAt.time : tl._time)) / tl.timeScale()) || _tinyNum,
            onStart: function onStart() {
              tl.pause();
              if (!initted) {
                var duration = vars.duration || Math.abs((endTime - (startAt && "time" in startAt ? startAt.time : tl._time)) / tl.timeScale());
                tween._dur !== duration && _setDuration(tween, duration, 0, 1).render(tween._time, true, true);
                initted = 1;
              }
              _onStart && _onStart.apply(tween, onStartParams || []);
            }
          }, vars));
          return immediateRender ? tween.render(0) : tween;
        };
        _proto2.tweenFromTo = function tweenFromTo(fromPosition, toPosition, vars) {
          return this.tweenTo(toPosition, _setDefaults({
            startAt: {
              time: _parsePosition(this, fromPosition)
            }
          }, vars));
        };
        _proto2.recent = function recent() {
          return this._recent;
        };
        _proto2.nextLabel = function nextLabel(afterTime) {
          if (afterTime === void 0) {
            afterTime = this._time;
          }
          return _getLabelInDirection(this, _parsePosition(this, afterTime));
        };
        _proto2.previousLabel = function previousLabel(beforeTime) {
          if (beforeTime === void 0) {
            beforeTime = this._time;
          }
          return _getLabelInDirection(this, _parsePosition(this, beforeTime), 1);
        };
        _proto2.currentLabel = function currentLabel(value) {
          return arguments.length ? this.seek(value, true) : this.previousLabel(this._time + _tinyNum);
        };
        _proto2.shiftChildren = function shiftChildren(amount, adjustLabels, ignoreBeforeTime) {
          if (ignoreBeforeTime === void 0) {
            ignoreBeforeTime = 0;
          }
          var child = this._first, labels = this.labels, p;
          while (child) {
            if (child._start >= ignoreBeforeTime) {
              child._start += amount;
              child._end += amount;
            }
            child = child._next;
          }
          if (adjustLabels) {
            for (p in labels) {
              if (labels[p] >= ignoreBeforeTime) {
                labels[p] += amount;
              }
            }
          }
          return _uncache(this);
        };
        _proto2.invalidate = function invalidate() {
          var child = this._first;
          this._lock = 0;
          while (child) {
            child.invalidate();
            child = child._next;
          }
          return _Animation.prototype.invalidate.call(this);
        };
        _proto2.clear = function clear(includeLabels) {
          if (includeLabels === void 0) {
            includeLabels = true;
          }
          var child = this._first, next;
          while (child) {
            next = child._next;
            this.remove(child);
            child = next;
          }
          this._dp && (this._time = this._tTime = this._pTime = 0);
          includeLabels && (this.labels = {});
          return _uncache(this);
        };
        _proto2.totalDuration = function totalDuration(value) {
          var max = 0, self2 = this, child = self2._last, prevStart = _bigNum, prev, start, parent;
          if (arguments.length) {
            return self2.timeScale((self2._repeat < 0 ? self2.duration() : self2.totalDuration()) / (self2.reversed() ? -value : value));
          }
          if (self2._dirty) {
            parent = self2.parent;
            while (child) {
              prev = child._prev;
              child._dirty && child.totalDuration();
              start = child._start;
              if (start > prevStart && self2._sort && child._ts && !self2._lock) {
                self2._lock = 1;
                _addToTimeline(self2, child, start - child._delay, 1)._lock = 0;
              } else {
                prevStart = start;
              }
              if (start < 0 && child._ts) {
                max -= start;
                if (!parent && !self2._dp || parent && parent.smoothChildTiming) {
                  self2._start += start / self2._ts;
                  self2._time -= start;
                  self2._tTime -= start;
                }
                self2.shiftChildren(-start, false, -Infinity);
                prevStart = 0;
              }
              child._end > max && child._ts && (max = child._end);
              child = prev;
            }
            _setDuration(self2, self2 === _globalTimeline && self2._time > max ? self2._time : max, 1, 1);
            self2._dirty = 0;
          }
          return self2._tDur;
        };
        Timeline2.updateRoot = function updateRoot(time) {
          if (_globalTimeline._ts) {
            _lazySafeRender(_globalTimeline, _parentToChildTotalTime(time, _globalTimeline));
            _lastRenderedFrame = _ticker.frame;
          }
          if (_ticker.frame >= _nextGCFrame) {
            _nextGCFrame += _config.autoSleep || 120;
            var child = _globalTimeline._first;
            if (!child || !child._ts) {
              if (_config.autoSleep && _ticker._listeners.length < 2) {
                while (child && !child._ts) {
                  child = child._next;
                }
                child || _ticker.sleep();
              }
            }
          }
        };
        return Timeline2;
      }(Animation);
      _setDefaults(Timeline.prototype, {
        _lock: 0,
        _hasPause: 0,
        _forcing: 0
      });
      var _addComplexStringPropTween = function _addComplexStringPropTween2(target, prop, start, end, setter, stringFilter, funcParam) {
        var pt = new PropTween(this._pt, target, prop, 0, 1, _renderComplexString, null, setter), index = 0, matchIndex = 0, result, startNums, color2, endNum, chunk, startNum, hasRandom, a;
        pt.b = start;
        pt.e = end;
        start += "";
        end += "";
        if (hasRandom = ~end.indexOf("random(")) {
          end = _replaceRandom(end);
        }
        if (stringFilter) {
          a = [start, end];
          stringFilter(a, target, prop);
          start = a[0];
          end = a[1];
        }
        startNums = start.match(_complexStringNumExp) || [];
        while (result = _complexStringNumExp.exec(end)) {
          endNum = result[0];
          chunk = end.substring(index, result.index);
          if (color2) {
            color2 = (color2 + 1) % 5;
          } else if (chunk.substr(-5) === "rgba(") {
            color2 = 1;
          }
          if (endNum !== startNums[matchIndex++]) {
            startNum = parseFloat(startNums[matchIndex - 1]) || 0;
            pt._pt = {
              _next: pt._pt,
              p: chunk || matchIndex === 1 ? chunk : ",",
              s: startNum,
              c: endNum.charAt(1) === "=" ? parseFloat(endNum.substr(2)) * (endNum.charAt(0) === "-" ? -1 : 1) : parseFloat(endNum) - startNum,
              m: color2 && color2 < 4 ? Math.round : 0
            };
            index = _complexStringNumExp.lastIndex;
          }
        }
        pt.c = index < end.length ? end.substring(index, end.length) : "";
        pt.fp = funcParam;
        if (_relExp.test(end) || hasRandom) {
          pt.e = 0;
        }
        this._pt = pt;
        return pt;
      }, _addPropTween = function _addPropTween2(target, prop, start, end, index, targets, modifier, stringFilter, funcParam) {
        _isFunction(end) && (end = end(index || 0, target, targets));
        var currentValue = target[prop], parsedStart = start !== "get" ? start : !_isFunction(currentValue) ? currentValue : funcParam ? target[prop.indexOf("set") || !_isFunction(target["get" + prop.substr(3)]) ? prop : "get" + prop.substr(3)](funcParam) : target[prop](), setter = !_isFunction(currentValue) ? _setterPlain : funcParam ? _setterFuncWithParam : _setterFunc, pt;
        if (_isString(end)) {
          if (~end.indexOf("random(")) {
            end = _replaceRandom(end);
          }
          if (end.charAt(1) === "=") {
            pt = parseFloat(parsedStart) + parseFloat(end.substr(2)) * (end.charAt(0) === "-" ? -1 : 1) + (getUnit(parsedStart) || 0);
            if (pt || pt === 0) {
              end = pt;
            }
          }
        }
        if (parsedStart !== end) {
          if (!isNaN(parsedStart * end) && end !== "") {
            pt = new PropTween(this._pt, target, prop, +parsedStart || 0, end - (parsedStart || 0), typeof currentValue === "boolean" ? _renderBoolean : _renderPlain, 0, setter);
            funcParam && (pt.fp = funcParam);
            modifier && pt.modifier(modifier, this, target);
            return this._pt = pt;
          }
          !currentValue && !(prop in target) && _missingPlugin(prop, end);
          return _addComplexStringPropTween.call(this, target, prop, parsedStart, end, setter, stringFilter || _config.stringFilter, funcParam);
        }
      }, _processVars = function _processVars2(vars, index, target, targets, tween) {
        _isFunction(vars) && (vars = _parseFuncOrString(vars, tween, index, target, targets));
        if (!_isObject(vars) || vars.style && vars.nodeType || _isArray(vars) || _isTypedArray(vars)) {
          return _isString(vars) ? _parseFuncOrString(vars, tween, index, target, targets) : vars;
        }
        var copy2 = {}, p;
        for (p in vars) {
          copy2[p] = _parseFuncOrString(vars[p], tween, index, target, targets);
        }
        return copy2;
      }, _checkPlugin = function _checkPlugin2(property, vars, tween, index, target, targets) {
        var plugin, pt, ptLookup, i;
        if (_plugins[property] && (plugin = new _plugins[property]()).init(target, plugin.rawVars ? vars[property] : _processVars(vars[property], index, target, targets, tween), tween, index, targets) !== false) {
          tween._pt = pt = new PropTween(tween._pt, target, property, 0, 1, plugin.render, plugin, 0, plugin.priority);
          if (tween !== _quickTween) {
            ptLookup = tween._ptLookup[tween._targets.indexOf(target)];
            i = plugin._props.length;
            while (i--) {
              ptLookup[plugin._props[i]] = pt;
            }
          }
        }
        return plugin;
      }, _overwritingTween, _initTween = function _initTween2(tween, time) {
        var vars = tween.vars, ease = vars.ease, startAt = vars.startAt, immediateRender = vars.immediateRender, lazy = vars.lazy, onUpdate = vars.onUpdate, onUpdateParams = vars.onUpdateParams, callbackScope = vars.callbackScope, runBackwards = vars.runBackwards, yoyoEase = vars.yoyoEase, keyframes = vars.keyframes, autoRevert = vars.autoRevert, dur = tween._dur, prevStartAt = tween._startAt, targets = tween._targets, parent = tween.parent, fullTargets = parent && parent.data === "nested" ? parent.parent._targets : targets, autoOverwrite = tween._overwrite === "auto" && !_suppressOverwrites, tl = tween.timeline, cleanVars, i, p, pt, target, hasPriority, gsData, harness, plugin, ptLookup, index, harnessVars, overwritten;
        tl && (!keyframes || !ease) && (ease = "none");
        tween._ease = _parseEase(ease, _defaults.ease);
        tween._yEase = yoyoEase ? _invertEase(_parseEase(yoyoEase === true ? ease : yoyoEase, _defaults.ease)) : 0;
        if (yoyoEase && tween._yoyo && !tween._repeat) {
          yoyoEase = tween._yEase;
          tween._yEase = tween._ease;
          tween._ease = yoyoEase;
        }
        tween._from = !tl && !!vars.runBackwards;
        if (!tl) {
          harness = targets[0] ? _getCache(targets[0]).harness : 0;
          harnessVars = harness && vars[harness.prop];
          cleanVars = _copyExcluding(vars, _reservedProps);
          prevStartAt && prevStartAt.render(-1, true).kill();
          if (startAt) {
            _removeFromParent(tween._startAt = Tween.set(targets, _setDefaults({
              data: "isStart",
              overwrite: false,
              parent,
              immediateRender: true,
              lazy: _isNotFalse(lazy),
              startAt: null,
              delay: 0,
              onUpdate,
              onUpdateParams,
              callbackScope,
              stagger: 0
            }, startAt)));
            time < 0 && !immediateRender && !autoRevert && tween._startAt.render(-1, true);
            if (immediateRender) {
              time > 0 && !autoRevert && (tween._startAt = 0);
              if (dur && time <= 0) {
                time && (tween._zTime = time);
                return;
              }
            } else if (autoRevert === false) {
              tween._startAt = 0;
            }
          } else if (runBackwards && dur) {
            if (prevStartAt) {
              !autoRevert && (tween._startAt = 0);
            } else {
              time && (immediateRender = false);
              p = _setDefaults({
                overwrite: false,
                data: "isFromStart",
                lazy: immediateRender && _isNotFalse(lazy),
                immediateRender,
                stagger: 0,
                parent
              }, cleanVars);
              harnessVars && (p[harness.prop] = harnessVars);
              _removeFromParent(tween._startAt = Tween.set(targets, p));
              time < 0 && tween._startAt.render(-1, true);
              if (!immediateRender) {
                _initTween2(tween._startAt, _tinyNum);
              } else if (!time) {
                return;
              }
            }
          }
          tween._pt = 0;
          lazy = dur && _isNotFalse(lazy) || lazy && !dur;
          for (i = 0; i < targets.length; i++) {
            target = targets[i];
            gsData = target._gsap || _harness(targets)[i]._gsap;
            tween._ptLookup[i] = ptLookup = {};
            _lazyLookup[gsData.id] && _lazyTweens.length && _lazyRender();
            index = fullTargets === targets ? i : fullTargets.indexOf(target);
            if (harness && (plugin = new harness()).init(target, harnessVars || cleanVars, tween, index, fullTargets) !== false) {
              tween._pt = pt = new PropTween(tween._pt, target, plugin.name, 0, 1, plugin.render, plugin, 0, plugin.priority);
              plugin._props.forEach(function(name) {
                ptLookup[name] = pt;
              });
              plugin.priority && (hasPriority = 1);
            }
            if (!harness || harnessVars) {
              for (p in cleanVars) {
                if (_plugins[p] && (plugin = _checkPlugin(p, cleanVars, tween, index, target, fullTargets))) {
                  plugin.priority && (hasPriority = 1);
                } else {
                  ptLookup[p] = pt = _addPropTween.call(tween, target, p, "get", cleanVars[p], index, fullTargets, 0, vars.stringFilter);
                }
              }
            }
            tween._op && tween._op[i] && tween.kill(target, tween._op[i]);
            if (autoOverwrite && tween._pt) {
              _overwritingTween = tween;
              _globalTimeline.killTweensOf(target, ptLookup, tween.globalTime(time));
              overwritten = !tween.parent;
              _overwritingTween = 0;
            }
            tween._pt && lazy && (_lazyLookup[gsData.id] = 1);
          }
          hasPriority && _sortPropTweensByPriority(tween);
          tween._onInit && tween._onInit(tween);
        }
        tween._onUpdate = onUpdate;
        tween._initted = (!tween._op || tween._pt) && !overwritten;
      }, _addAliasesToVars = function _addAliasesToVars2(targets, vars) {
        var harness = targets[0] ? _getCache(targets[0]).harness : 0, propertyAliases = harness && harness.aliases, copy2, p, i, aliases;
        if (!propertyAliases) {
          return vars;
        }
        copy2 = _merge({}, vars);
        for (p in propertyAliases) {
          if (p in copy2) {
            aliases = propertyAliases[p].split(",");
            i = aliases.length;
            while (i--) {
              copy2[aliases[i]] = copy2[p];
            }
          }
        }
        return copy2;
      }, _parseFuncOrString = function _parseFuncOrString2(value, tween, i, target, targets) {
        return _isFunction(value) ? value.call(tween, i, target, targets) : _isString(value) && ~value.indexOf("random(") ? _replaceRandom(value) : value;
      }, _staggerTweenProps = _callbackNames + "repeat,repeatDelay,yoyo,repeatRefresh,yoyoEase", _staggerPropsToSkip = (_staggerTweenProps + ",id,stagger,delay,duration,paused,scrollTrigger").split(",");
      var Tween = function(_Animation2) {
        _inheritsLoose(Tween2, _Animation2);
        function Tween2(targets, vars, position, skipInherit) {
          var _this3;
          if (typeof vars === "number") {
            position.duration = vars;
            vars = position;
            position = null;
          }
          _this3 = _Animation2.call(this, skipInherit ? vars : _inheritDefaults(vars)) || this;
          var _this3$vars = _this3.vars, duration = _this3$vars.duration, delay = _this3$vars.delay, immediateRender = _this3$vars.immediateRender, stagger = _this3$vars.stagger, overwrite = _this3$vars.overwrite, keyframes = _this3$vars.keyframes, defaults = _this3$vars.defaults, scrollTrigger = _this3$vars.scrollTrigger, yoyoEase = _this3$vars.yoyoEase, parent = vars.parent || _globalTimeline, parsedTargets = (_isArray(targets) || _isTypedArray(targets) ? _isNumber(targets[0]) : "length" in vars) ? [targets] : toArray(targets), tl, i, copy2, l, p, curTarget, staggerFunc, staggerVarsToMerge;
          _this3._targets = parsedTargets.length ? _harness(parsedTargets) : _warn("GSAP target " + targets + " not found. https://greensock.com", !_config.nullTargetWarn) || [];
          _this3._ptLookup = [];
          _this3._overwrite = overwrite;
          if (keyframes || stagger || _isFuncOrString(duration) || _isFuncOrString(delay)) {
            vars = _this3.vars;
            tl = _this3.timeline = new Timeline({
              data: "nested",
              defaults: defaults || {}
            });
            tl.kill();
            tl.parent = tl._dp = _assertThisInitialized(_this3);
            tl._start = 0;
            if (keyframes) {
              _inheritDefaults(_setDefaults(tl.vars.defaults, {
                ease: "none"
              }));
              stagger ? parsedTargets.forEach(function(t, i2) {
                return keyframes.forEach(function(frame, j) {
                  return tl.to(t, frame, j ? ">" : i2 * stagger);
                });
              }) : keyframes.forEach(function(frame) {
                return tl.to(parsedTargets, frame, ">");
              });
            } else {
              l = parsedTargets.length;
              staggerFunc = stagger ? distribute(stagger) : _emptyFunc;
              if (_isObject(stagger)) {
                for (p in stagger) {
                  if (~_staggerTweenProps.indexOf(p)) {
                    staggerVarsToMerge || (staggerVarsToMerge = {});
                    staggerVarsToMerge[p] = stagger[p];
                  }
                }
              }
              for (i = 0; i < l; i++) {
                copy2 = {};
                for (p in vars) {
                  if (_staggerPropsToSkip.indexOf(p) < 0) {
                    copy2[p] = vars[p];
                  }
                }
                copy2.stagger = 0;
                yoyoEase && (copy2.yoyoEase = yoyoEase);
                staggerVarsToMerge && _merge(copy2, staggerVarsToMerge);
                curTarget = parsedTargets[i];
                copy2.duration = +_parseFuncOrString(duration, _assertThisInitialized(_this3), i, curTarget, parsedTargets);
                copy2.delay = (+_parseFuncOrString(delay, _assertThisInitialized(_this3), i, curTarget, parsedTargets) || 0) - _this3._delay;
                if (!stagger && l === 1 && copy2.delay) {
                  _this3._delay = delay = copy2.delay;
                  _this3._start += delay;
                  copy2.delay = 0;
                }
                tl.to(curTarget, copy2, staggerFunc(i, curTarget, parsedTargets));
              }
              tl.duration() ? duration = delay = 0 : _this3.timeline = 0;
            }
            duration || _this3.duration(duration = tl.duration());
          } else {
            _this3.timeline = 0;
          }
          if (overwrite === true && !_suppressOverwrites) {
            _overwritingTween = _assertThisInitialized(_this3);
            _globalTimeline.killTweensOf(parsedTargets);
            _overwritingTween = 0;
          }
          _addToTimeline(parent, _assertThisInitialized(_this3), position);
          vars.reversed && _this3.reverse();
          vars.paused && _this3.paused(true);
          if (immediateRender || !duration && !keyframes && _this3._start === _roundPrecise(parent._time) && _isNotFalse(immediateRender) && _hasNoPausedAncestors(_assertThisInitialized(_this3)) && parent.data !== "nested") {
            _this3._tTime = -_tinyNum;
            _this3.render(Math.max(0, -delay));
          }
          scrollTrigger && _scrollTrigger(_assertThisInitialized(_this3), scrollTrigger);
          return _this3;
        }
        var _proto3 = Tween2.prototype;
        _proto3.render = function render2(totalTime, suppressEvents, force) {
          var prevTime = this._time, tDur = this._tDur, dur = this._dur, tTime = totalTime > tDur - _tinyNum && totalTime >= 0 ? tDur : totalTime < _tinyNum ? 0 : totalTime, time, pt, iteration, cycleDuration, prevIteration, isYoyo, ratio, timeline, yoyoEase;
          if (!dur) {
            _renderZeroDurationTween(this, totalTime, suppressEvents, force);
          } else if (tTime !== this._tTime || !totalTime || force || !this._initted && this._tTime || this._startAt && this._zTime < 0 !== totalTime < 0) {
            time = tTime;
            timeline = this.timeline;
            if (this._repeat) {
              cycleDuration = dur + this._rDelay;
              if (this._repeat < -1 && totalTime < 0) {
                return this.totalTime(cycleDuration * 100 + totalTime, suppressEvents, force);
              }
              time = _roundPrecise(tTime % cycleDuration);
              if (tTime === tDur) {
                iteration = this._repeat;
                time = dur;
              } else {
                iteration = ~~(tTime / cycleDuration);
                if (iteration && iteration === tTime / cycleDuration) {
                  time = dur;
                  iteration--;
                }
                time > dur && (time = dur);
              }
              isYoyo = this._yoyo && iteration & 1;
              if (isYoyo) {
                yoyoEase = this._yEase;
                time = dur - time;
              }
              prevIteration = _animationCycle(this._tTime, cycleDuration);
              if (time === prevTime && !force && this._initted) {
                return this;
              }
              if (iteration !== prevIteration) {
                timeline && this._yEase && _propagateYoyoEase(timeline, isYoyo);
                if (this.vars.repeatRefresh && !isYoyo && !this._lock) {
                  this._lock = force = 1;
                  this.render(_roundPrecise(cycleDuration * iteration), true).invalidate()._lock = 0;
                }
              }
            }
            if (!this._initted) {
              if (_attemptInitTween(this, totalTime < 0 ? totalTime : time, force, suppressEvents)) {
                this._tTime = 0;
                return this;
              }
              if (dur !== this._dur) {
                return this.render(totalTime, suppressEvents, force);
              }
            }
            this._tTime = tTime;
            this._time = time;
            if (!this._act && this._ts) {
              this._act = 1;
              this._lazy = 0;
            }
            this.ratio = ratio = (yoyoEase || this._ease)(time / dur);
            if (this._from) {
              this.ratio = ratio = 1 - ratio;
            }
            if (time && !prevTime && !suppressEvents) {
              _callback(this, "onStart");
              if (this._tTime !== tTime) {
                return this;
              }
            }
            pt = this._pt;
            while (pt) {
              pt.r(ratio, pt.d);
              pt = pt._next;
            }
            timeline && timeline.render(totalTime < 0 ? totalTime : !time && isYoyo ? -_tinyNum : timeline._dur * ratio, suppressEvents, force) || this._startAt && (this._zTime = totalTime);
            if (this._onUpdate && !suppressEvents) {
              totalTime < 0 && this._startAt && this._startAt.render(totalTime, true, force);
              _callback(this, "onUpdate");
            }
            this._repeat && iteration !== prevIteration && this.vars.onRepeat && !suppressEvents && this.parent && _callback(this, "onRepeat");
            if ((tTime === this._tDur || !tTime) && this._tTime === tTime) {
              totalTime < 0 && this._startAt && !this._onUpdate && this._startAt.render(totalTime, true, true);
              (totalTime || !dur) && (tTime === this._tDur && this._ts > 0 || !tTime && this._ts < 0) && _removeFromParent(this, 1);
              if (!suppressEvents && !(totalTime < 0 && !prevTime) && (tTime || prevTime)) {
                _callback(this, tTime === tDur ? "onComplete" : "onReverseComplete", true);
                this._prom && !(tTime < tDur && this.timeScale() > 0) && this._prom();
              }
            }
          }
          return this;
        };
        _proto3.targets = function targets() {
          return this._targets;
        };
        _proto3.invalidate = function invalidate() {
          this._pt = this._op = this._startAt = this._onUpdate = this._lazy = this.ratio = 0;
          this._ptLookup = [];
          this.timeline && this.timeline.invalidate();
          return _Animation2.prototype.invalidate.call(this);
        };
        _proto3.kill = function kill(targets, vars) {
          if (vars === void 0) {
            vars = "all";
          }
          if (!targets && (!vars || vars === "all")) {
            this._lazy = this._pt = 0;
            return this.parent ? _interrupt(this) : this;
          }
          if (this.timeline) {
            var tDur = this.timeline.totalDuration();
            this.timeline.killTweensOf(targets, vars, _overwritingTween && _overwritingTween.vars.overwrite !== true)._first || _interrupt(this);
            this.parent && tDur !== this.timeline.totalDuration() && _setDuration(this, this._dur * this.timeline._tDur / tDur, 0, 1);
            return this;
          }
          var parsedTargets = this._targets, killingTargets = targets ? toArray(targets) : parsedTargets, propTweenLookup = this._ptLookup, firstPT = this._pt, overwrittenProps, curLookup, curOverwriteProps, props, p, pt, i;
          if ((!vars || vars === "all") && _arraysMatch(parsedTargets, killingTargets)) {
            vars === "all" && (this._pt = 0);
            return _interrupt(this);
          }
          overwrittenProps = this._op = this._op || [];
          if (vars !== "all") {
            if (_isString(vars)) {
              p = {};
              _forEachName(vars, function(name) {
                return p[name] = 1;
              });
              vars = p;
            }
            vars = _addAliasesToVars(parsedTargets, vars);
          }
          i = parsedTargets.length;
          while (i--) {
            if (~killingTargets.indexOf(parsedTargets[i])) {
              curLookup = propTweenLookup[i];
              if (vars === "all") {
                overwrittenProps[i] = vars;
                props = curLookup;
                curOverwriteProps = {};
              } else {
                curOverwriteProps = overwrittenProps[i] = overwrittenProps[i] || {};
                props = vars;
              }
              for (p in props) {
                pt = curLookup && curLookup[p];
                if (pt) {
                  if (!("kill" in pt.d) || pt.d.kill(p) === true) {
                    _removeLinkedListItem(this, pt, "_pt");
                  }
                  delete curLookup[p];
                }
                if (curOverwriteProps !== "all") {
                  curOverwriteProps[p] = 1;
                }
              }
            }
          }
          this._initted && !this._pt && firstPT && _interrupt(this);
          return this;
        };
        Tween2.to = function to(targets, vars) {
          return new Tween2(targets, vars, arguments[2]);
        };
        Tween2.from = function from(targets, vars) {
          return _createTweenType(1, arguments);
        };
        Tween2.delayedCall = function delayedCall(delay, callback, params, scope) {
          return new Tween2(callback, 0, {
            immediateRender: false,
            lazy: false,
            overwrite: false,
            delay,
            onComplete: callback,
            onReverseComplete: callback,
            onCompleteParams: params,
            onReverseCompleteParams: params,
            callbackScope: scope
          });
        };
        Tween2.fromTo = function fromTo(targets, fromVars, toVars) {
          return _createTweenType(2, arguments);
        };
        Tween2.set = function set(targets, vars) {
          vars.duration = 0;
          vars.repeatDelay || (vars.repeat = 0);
          return new Tween2(targets, vars);
        };
        Tween2.killTweensOf = function killTweensOf(targets, props, onlyActive) {
          return _globalTimeline.killTweensOf(targets, props, onlyActive);
        };
        return Tween2;
      }(Animation);
      _setDefaults(Tween.prototype, {
        _targets: [],
        _lazy: 0,
        _startAt: 0,
        _op: 0,
        _onInit: 0
      });
      _forEachName("staggerTo,staggerFrom,staggerFromTo", function(name) {
        Tween[name] = function() {
          var tl = new Timeline(), params = _slice.call(arguments, 0);
          params.splice(name === "staggerFromTo" ? 5 : 4, 0, 0);
          return tl[name].apply(tl, params);
        };
      });
      var _setterPlain = function _setterPlain2(target, property, value) {
        return target[property] = value;
      }, _setterFunc = function _setterFunc2(target, property, value) {
        return target[property](value);
      }, _setterFuncWithParam = function _setterFuncWithParam2(target, property, value, data) {
        return target[property](data.fp, value);
      }, _setterAttribute = function _setterAttribute2(target, property, value) {
        return target.setAttribute(property, value);
      }, _getSetter = function _getSetter2(target, property) {
        return _isFunction(target[property]) ? _setterFunc : _isUndefined(target[property]) && target.setAttribute ? _setterAttribute : _setterPlain;
      }, _renderPlain = function _renderPlain2(ratio, data) {
        return data.set(data.t, data.p, Math.round((data.s + data.c * ratio) * 1e6) / 1e6, data);
      }, _renderBoolean = function _renderBoolean2(ratio, data) {
        return data.set(data.t, data.p, !!(data.s + data.c * ratio), data);
      }, _renderComplexString = function _renderComplexString2(ratio, data) {
        var pt = data._pt, s2 = "";
        if (!ratio && data.b) {
          s2 = data.b;
        } else if (ratio === 1 && data.e) {
          s2 = data.e;
        } else {
          while (pt) {
            s2 = pt.p + (pt.m ? pt.m(pt.s + pt.c * ratio) : Math.round((pt.s + pt.c * ratio) * 1e4) / 1e4) + s2;
            pt = pt._next;
          }
          s2 += data.c;
        }
        data.set(data.t, data.p, s2, data);
      }, _renderPropTweens = function _renderPropTweens2(ratio, data) {
        var pt = data._pt;
        while (pt) {
          pt.r(ratio, pt.d);
          pt = pt._next;
        }
      }, _addPluginModifier = function _addPluginModifier2(modifier, tween, target, property) {
        var pt = this._pt, next;
        while (pt) {
          next = pt._next;
          pt.p === property && pt.modifier(modifier, tween, target);
          pt = next;
        }
      }, _killPropTweensOf = function _killPropTweensOf2(property) {
        var pt = this._pt, hasNonDependentRemaining, next;
        while (pt) {
          next = pt._next;
          if (pt.p === property && !pt.op || pt.op === property) {
            _removeLinkedListItem(this, pt, "_pt");
          } else if (!pt.dep) {
            hasNonDependentRemaining = 1;
          }
          pt = next;
        }
        return !hasNonDependentRemaining;
      }, _setterWithModifier = function _setterWithModifier2(target, property, value, data) {
        data.mSet(target, property, data.m.call(data.tween, value, data.mt), data);
      }, _sortPropTweensByPriority = function _sortPropTweensByPriority2(parent) {
        var pt = parent._pt, next, pt2, first, last;
        while (pt) {
          next = pt._next;
          pt2 = first;
          while (pt2 && pt2.pr > pt.pr) {
            pt2 = pt2._next;
          }
          if (pt._prev = pt2 ? pt2._prev : last) {
            pt._prev._next = pt;
          } else {
            first = pt;
          }
          if (pt._next = pt2) {
            pt2._prev = pt;
          } else {
            last = pt;
          }
          pt = next;
        }
        parent._pt = first;
      };
      var PropTween = function() {
        function PropTween2(next, target, prop, start, change, renderer, data, setter, priority) {
          this.t = target;
          this.s = start;
          this.c = change;
          this.p = prop;
          this.r = renderer || _renderPlain;
          this.d = data || this;
          this.set = setter || _setterPlain;
          this.pr = priority || 0;
          this._next = next;
          if (next) {
            next._prev = this;
          }
        }
        var _proto4 = PropTween2.prototype;
        _proto4.modifier = function modifier(func, tween, target) {
          this.mSet = this.mSet || this.set;
          this.set = _setterWithModifier;
          this.m = func;
          this.mt = target;
          this.tween = tween;
        };
        return PropTween2;
      }();
      _forEachName(_callbackNames + "parent,duration,ease,delay,overwrite,runBackwards,startAt,yoyo,immediateRender,repeat,repeatDelay,data,paused,reversed,lazy,callbackScope,stringFilter,id,yoyoEase,stagger,inherit,repeatRefresh,keyframes,autoRevert,scrollTrigger", function(name) {
        return _reservedProps[name] = 1;
      });
      _globals.TweenMax = _globals.TweenLite = Tween;
      _globals.TimelineLite = _globals.TimelineMax = Timeline;
      _globalTimeline = new Timeline({
        sortChildren: false,
        defaults: _defaults,
        autoRemoveChildren: true,
        id: "root",
        smoothChildTiming: true
      });
      _config.stringFilter = _colorStringFilter;
      var _gsap = {
        registerPlugin: function registerPlugin() {
          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
            args[_key2] = arguments[_key2];
          }
          args.forEach(function(config) {
            return _createPlugin(config);
          });
        },
        timeline: function timeline(vars) {
          return new Timeline(vars);
        },
        getTweensOf: function getTweensOf(targets, onlyActive) {
          return _globalTimeline.getTweensOf(targets, onlyActive);
        },
        getProperty: function getProperty(target, property, unit2, uncache) {
          _isString(target) && (target = toArray(target)[0]);
          var getter = _getCache(target || {}).get, format3 = unit2 ? _passThrough : _numericIfPossible;
          unit2 === "native" && (unit2 = "");
          return !target ? target : !property ? function(property2, unit3, uncache2) {
            return format3((_plugins[property2] && _plugins[property2].get || getter)(target, property2, unit3, uncache2));
          } : format3((_plugins[property] && _plugins[property].get || getter)(target, property, unit2, uncache));
        },
        quickSetter: function quickSetter(target, property, unit2) {
          target = toArray(target);
          if (target.length > 1) {
            var setters = target.map(function(t) {
              return gsap5.quickSetter(t, property, unit2);
            }), l = setters.length;
            return function(value) {
              var i = l;
              while (i--) {
                setters[i](value);
              }
            };
          }
          target = target[0] || {};
          var Plugin = _plugins[property], cache = _getCache(target), p = cache.harness && (cache.harness.aliases || {})[property] || property, setter = Plugin ? function(value) {
            var p2 = new Plugin();
            _quickTween._pt = 0;
            p2.init(target, unit2 ? value + unit2 : value, _quickTween, 0, [target]);
            p2.render(1, p2);
            _quickTween._pt && _renderPropTweens(1, _quickTween);
          } : cache.set(target, p);
          return Plugin ? setter : function(value) {
            return setter(target, p, unit2 ? value + unit2 : value, cache, 1);
          };
        },
        isTweening: function isTweening(targets) {
          return _globalTimeline.getTweensOf(targets, true).length > 0;
        },
        defaults: function defaults(value) {
          value && value.ease && (value.ease = _parseEase(value.ease, _defaults.ease));
          return _mergeDeep(_defaults, value || {});
        },
        config: function config(value) {
          return _mergeDeep(_config, value || {});
        },
        registerEffect: function registerEffect(_ref3) {
          var name = _ref3.name, effect = _ref3.effect, plugins = _ref3.plugins, defaults = _ref3.defaults, extendTimeline = _ref3.extendTimeline;
          (plugins || "").split(",").forEach(function(pluginName) {
            return pluginName && !_plugins[pluginName] && !_globals[pluginName] && _warn(name + " effect requires " + pluginName + " plugin.");
          });
          _effects[name] = function(targets, vars, tl) {
            return effect(toArray(targets), _setDefaults(vars || {}, defaults), tl);
          };
          if (extendTimeline) {
            Timeline.prototype[name] = function(targets, vars, position) {
              return this.add(_effects[name](targets, _isObject(vars) ? vars : (position = vars) && {}, this), position);
            };
          }
        },
        registerEase: function registerEase(name, ease) {
          _easeMap[name] = _parseEase(ease);
        },
        parseEase: function parseEase(ease, defaultEase) {
          return arguments.length ? _parseEase(ease, defaultEase) : _easeMap;
        },
        getById: function getById(id) {
          return _globalTimeline.getById(id);
        },
        exportRoot: function exportRoot(vars, includeDelayedCalls) {
          if (vars === void 0) {
            vars = {};
          }
          var tl = new Timeline(vars), child, next;
          tl.smoothChildTiming = _isNotFalse(vars.smoothChildTiming);
          _globalTimeline.remove(tl);
          tl._dp = 0;
          tl._time = tl._tTime = _globalTimeline._time;
          child = _globalTimeline._first;
          while (child) {
            next = child._next;
            if (includeDelayedCalls || !(!child._dur && child instanceof Tween && child.vars.onComplete === child._targets[0])) {
              _addToTimeline(tl, child, child._start - child._delay);
            }
            child = next;
          }
          _addToTimeline(_globalTimeline, tl, 0);
          return tl;
        },
        utils: {
          wrap,
          wrapYoyo,
          distribute,
          random,
          snap,
          normalize: normalize3,
          getUnit,
          clamp,
          splitColor,
          toArray,
          selector,
          mapRange,
          pipe,
          unitize,
          interpolate: interpolate2,
          shuffle
        },
        install: _install,
        effects: _effects,
        ticker: _ticker,
        updateRoot: Timeline.updateRoot,
        plugins: _plugins,
        globalTimeline: _globalTimeline,
        core: {
          PropTween,
          globals: _addGlobal,
          Tween,
          Timeline,
          Animation,
          getCache: _getCache,
          _removeLinkedListItem,
          suppressOverwrites: function suppressOverwrites(value) {
            return _suppressOverwrites = value;
          }
        }
      };
      _forEachName("to,from,fromTo,delayedCall,set,killTweensOf", function(name) {
        return _gsap[name] = Tween[name];
      });
      _ticker.add(Timeline.updateRoot);
      _quickTween = _gsap.to({}, {
        duration: 0
      });
      var _getPluginPropTween = function _getPluginPropTween2(plugin, prop) {
        var pt = plugin._pt;
        while (pt && pt.p !== prop && pt.op !== prop && pt.fp !== prop) {
          pt = pt._next;
        }
        return pt;
      }, _addModifiers = function _addModifiers2(tween, modifiers) {
        var targets = tween._targets, p, i, pt;
        for (p in modifiers) {
          i = targets.length;
          while (i--) {
            pt = tween._ptLookup[i][p];
            if (pt && (pt = pt.d)) {
              if (pt._pt) {
                pt = _getPluginPropTween(pt, p);
              }
              pt && pt.modifier && pt.modifier(modifiers[p], tween, targets[i], p);
            }
          }
        }
      }, _buildModifierPlugin = function _buildModifierPlugin2(name, modifier) {
        return {
          name,
          rawVars: 1,
          init: function init2(target, vars, tween) {
            tween._onInit = function(tween2) {
              var temp, p;
              if (_isString(vars)) {
                temp = {};
                _forEachName(vars, function(name2) {
                  return temp[name2] = 1;
                });
                vars = temp;
              }
              if (modifier) {
                temp = {};
                for (p in vars) {
                  temp[p] = modifier(vars[p]);
                }
                vars = temp;
              }
              _addModifiers(tween2, vars);
            };
          }
        };
      };
      var gsap5 = _gsap.registerPlugin({
        name: "attr",
        init: function init2(target, vars, tween, index, targets) {
          var p, pt;
          for (p in vars) {
            pt = this.add(target, "setAttribute", (target.getAttribute(p) || 0) + "", vars[p], index, targets, 0, 0, p);
            pt && (pt.op = p);
            this._props.push(p);
          }
        }
      }, {
        name: "endArray",
        init: function init2(target, value) {
          var i = value.length;
          while (i--) {
            this.add(target, i, target[i] || 0, value[i]);
          }
        }
      }, _buildModifierPlugin("roundProps", _roundModifier), _buildModifierPlugin("modifiers"), _buildModifierPlugin("snap", snap)) || _gsap;
      Tween.version = Timeline.version = gsap5.version = "3.8.0";
      _coreReady = 1;
      _windowExists() && _wake();
      var Power0 = _easeMap.Power0, Power1 = _easeMap.Power1, Power2 = _easeMap.Power2, Power3 = _easeMap.Power3, Power4 = _easeMap.Power4, Linear = _easeMap.Linear, Quad = _easeMap.Quad, Cubic = _easeMap.Cubic, Quart = _easeMap.Quart, Quint = _easeMap.Quint, Strong = _easeMap.Strong, Elastic = _easeMap.Elastic, Back = _easeMap.Back, SteppedEase = _easeMap.SteppedEase, Bounce = _easeMap.Bounce, Sine = _easeMap.Sine, Expo = _easeMap.Expo, Circ = _easeMap.Circ;
      var _win$1, _doc$1, _docElement, _pluginInitted, _tempDiv, _tempDivStyler, _recentSetterPlugin, _windowExists$1 = function _windowExists2() {
        return typeof window !== "undefined";
      }, _transformProps = {}, _RAD2DEG = 180 / Math.PI, _DEG2RAD = Math.PI / 180, _atan2 = Math.atan2, _bigNum$1 = 1e8, _capsExp = /([A-Z])/g, _horizontalExp = /(?:left|right|width|margin|padding|x)/i, _complexExp = /[\s,\(]\S/, _propertyAliases = {
        autoAlpha: "opacity,visibility",
        scale: "scaleX,scaleY",
        alpha: "opacity"
      }, _renderCSSProp = function _renderCSSProp2(ratio, data) {
        return data.set(data.t, data.p, Math.round((data.s + data.c * ratio) * 1e4) / 1e4 + data.u, data);
      }, _renderPropWithEnd = function _renderPropWithEnd2(ratio, data) {
        return data.set(data.t, data.p, ratio === 1 ? data.e : Math.round((data.s + data.c * ratio) * 1e4) / 1e4 + data.u, data);
      }, _renderCSSPropWithBeginning = function _renderCSSPropWithBeginning2(ratio, data) {
        return data.set(data.t, data.p, ratio ? Math.round((data.s + data.c * ratio) * 1e4) / 1e4 + data.u : data.b, data);
      }, _renderRoundedCSSProp = function _renderRoundedCSSProp2(ratio, data) {
        var value = data.s + data.c * ratio;
        data.set(data.t, data.p, ~~(value + (value < 0 ? -0.5 : 0.5)) + data.u, data);
      }, _renderNonTweeningValue = function _renderNonTweeningValue2(ratio, data) {
        return data.set(data.t, data.p, ratio ? data.e : data.b, data);
      }, _renderNonTweeningValueOnlyAtEnd = function _renderNonTweeningValueOnlyAtEnd2(ratio, data) {
        return data.set(data.t, data.p, ratio !== 1 ? data.b : data.e, data);
      }, _setterCSSStyle = function _setterCSSStyle2(target, property, value) {
        return target.style[property] = value;
      }, _setterCSSProp = function _setterCSSProp2(target, property, value) {
        return target.style.setProperty(property, value);
      }, _setterTransform = function _setterTransform2(target, property, value) {
        return target._gsap[property] = value;
      }, _setterScale = function _setterScale2(target, property, value) {
        return target._gsap.scaleX = target._gsap.scaleY = value;
      }, _setterScaleWithRender = function _setterScaleWithRender2(target, property, value, data, ratio) {
        var cache = target._gsap;
        cache.scaleX = cache.scaleY = value;
        cache.renderTransform(ratio, cache);
      }, _setterTransformWithRender = function _setterTransformWithRender2(target, property, value, data, ratio) {
        var cache = target._gsap;
        cache[property] = value;
        cache.renderTransform(ratio, cache);
      }, _transformProp = "transform", _transformOriginProp = _transformProp + "Origin", _supports3D, _createElement = function _createElement2(type, ns) {
        var e = _doc$1.createElementNS ? _doc$1.createElementNS((ns || "http://www.w3.org/1999/xhtml").replace(/^https/, "http"), type) : _doc$1.createElement(type);
        return e.style ? e : _doc$1.createElement(type);
      }, _getComputedProperty = function _getComputedProperty2(target, property, skipPrefixFallback) {
        var cs = getComputedStyle(target);
        return cs[property] || cs.getPropertyValue(property.replace(_capsExp, "-$1").toLowerCase()) || cs.getPropertyValue(property) || !skipPrefixFallback && _getComputedProperty2(target, _checkPropPrefix(property) || property, 1) || "";
      }, _prefixes = "O,Moz,ms,Ms,Webkit".split(","), _checkPropPrefix = function _checkPropPrefix2(property, element, preferPrefix) {
        var e = element || _tempDiv, s2 = e.style, i = 5;
        if (property in s2 && !preferPrefix) {
          return property;
        }
        property = property.charAt(0).toUpperCase() + property.substr(1);
        while (i-- && !(_prefixes[i] + property in s2)) {
        }
        return i < 0 ? null : (i === 3 ? "ms" : i >= 0 ? _prefixes[i] : "") + property;
      }, _initCore = function _initCore2() {
        if (_windowExists$1() && window.document) {
          _win$1 = window;
          _doc$1 = _win$1.document;
          _docElement = _doc$1.documentElement;
          _tempDiv = _createElement("div") || {
            style: {}
          };
          _tempDivStyler = _createElement("div");
          _transformProp = _checkPropPrefix(_transformProp);
          _transformOriginProp = _transformProp + "Origin";
          _tempDiv.style.cssText = "border-width:0;line-height:0;position:absolute;padding:0";
          _supports3D = !!_checkPropPrefix("perspective");
          _pluginInitted = 1;
        }
      }, _getBBoxHack = function _getBBoxHack2(swapIfPossible) {
        var svg = _createElement("svg", this.ownerSVGElement && this.ownerSVGElement.getAttribute("xmlns") || "http://www.w3.org/2000/svg"), oldParent = this.parentNode, oldSibling = this.nextSibling, oldCSS = this.style.cssText, bbox;
        _docElement.appendChild(svg);
        svg.appendChild(this);
        this.style.display = "block";
        if (swapIfPossible) {
          try {
            bbox = this.getBBox();
            this._gsapBBox = this.getBBox;
            this.getBBox = _getBBoxHack2;
          } catch (e) {
          }
        } else if (this._gsapBBox) {
          bbox = this._gsapBBox();
        }
        if (oldParent) {
          if (oldSibling) {
            oldParent.insertBefore(this, oldSibling);
          } else {
            oldParent.appendChild(this);
          }
        }
        _docElement.removeChild(svg);
        this.style.cssText = oldCSS;
        return bbox;
      }, _getAttributeFallbacks = function _getAttributeFallbacks2(target, attributesArray) {
        var i = attributesArray.length;
        while (i--) {
          if (target.hasAttribute(attributesArray[i])) {
            return target.getAttribute(attributesArray[i]);
          }
        }
      }, _getBBox = function _getBBox2(target) {
        var bounds;
        try {
          bounds = target.getBBox();
        } catch (error2) {
          bounds = _getBBoxHack.call(target, true);
        }
        bounds && (bounds.width || bounds.height) || target.getBBox === _getBBoxHack || (bounds = _getBBoxHack.call(target, true));
        return bounds && !bounds.width && !bounds.x && !bounds.y ? {
          x: +_getAttributeFallbacks(target, ["x", "cx", "x1"]) || 0,
          y: +_getAttributeFallbacks(target, ["y", "cy", "y1"]) || 0,
          width: 0,
          height: 0
        } : bounds;
      }, _isSVG = function _isSVG2(e) {
        return !!(e.getCTM && (!e.parentNode || e.ownerSVGElement) && _getBBox(e));
      }, _removeProperty = function _removeProperty2(target, property) {
        if (property) {
          var style = target.style;
          if (property in _transformProps && property !== _transformOriginProp) {
            property = _transformProp;
          }
          if (style.removeProperty) {
            if (property.substr(0, 2) === "ms" || property.substr(0, 6) === "webkit") {
              property = "-" + property;
            }
            style.removeProperty(property.replace(_capsExp, "-$1").toLowerCase());
          } else {
            style.removeAttribute(property);
          }
        }
      }, _addNonTweeningPT = function _addNonTweeningPT2(plugin, target, property, beginning, end, onlySetAtEnd) {
        var pt = new PropTween(plugin._pt, target, property, 0, 1, onlySetAtEnd ? _renderNonTweeningValueOnlyAtEnd : _renderNonTweeningValue);
        plugin._pt = pt;
        pt.b = beginning;
        pt.e = end;
        plugin._props.push(property);
        return pt;
      }, _nonConvertibleUnits = {
        deg: 1,
        rad: 1,
        turn: 1
      }, _convertToUnit = function _convertToUnit2(target, property, value, unit2) {
        var curValue = parseFloat(value) || 0, curUnit = (value + "").trim().substr((curValue + "").length) || "px", style = _tempDiv.style, horizontal = _horizontalExp.test(property), isRootSVG = target.tagName.toLowerCase() === "svg", measureProperty = (isRootSVG ? "client" : "offset") + (horizontal ? "Width" : "Height"), amount = 100, toPixels = unit2 === "px", toPercent = unit2 === "%", px, parent, cache, isSVG;
        if (unit2 === curUnit || !curValue || _nonConvertibleUnits[unit2] || _nonConvertibleUnits[curUnit]) {
          return curValue;
        }
        curUnit !== "px" && !toPixels && (curValue = _convertToUnit2(target, property, value, "px"));
        isSVG = target.getCTM && _isSVG(target);
        if ((toPercent || curUnit === "%") && (_transformProps[property] || ~property.indexOf("adius"))) {
          px = isSVG ? target.getBBox()[horizontal ? "width" : "height"] : target[measureProperty];
          return _round(toPercent ? curValue / px * amount : curValue / 100 * px);
        }
        style[horizontal ? "width" : "height"] = amount + (toPixels ? curUnit : unit2);
        parent = ~property.indexOf("adius") || unit2 === "em" && target.appendChild && !isRootSVG ? target : target.parentNode;
        if (isSVG) {
          parent = (target.ownerSVGElement || {}).parentNode;
        }
        if (!parent || parent === _doc$1 || !parent.appendChild) {
          parent = _doc$1.body;
        }
        cache = parent._gsap;
        if (cache && toPercent && cache.width && horizontal && cache.time === _ticker.time) {
          return _round(curValue / cache.width * amount);
        } else {
          (toPercent || curUnit === "%") && (style.position = _getComputedProperty(target, "position"));
          parent === target && (style.position = "static");
          parent.appendChild(_tempDiv);
          px = _tempDiv[measureProperty];
          parent.removeChild(_tempDiv);
          style.position = "absolute";
          if (horizontal && toPercent) {
            cache = _getCache(parent);
            cache.time = _ticker.time;
            cache.width = parent[measureProperty];
          }
        }
        return _round(toPixels ? px * curValue / amount : px && curValue ? amount / px * curValue : 0);
      }, _get = function _get2(target, property, unit2, uncache) {
        var value;
        _pluginInitted || _initCore();
        if (property in _propertyAliases && property !== "transform") {
          property = _propertyAliases[property];
          if (~property.indexOf(",")) {
            property = property.split(",")[0];
          }
        }
        if (_transformProps[property] && property !== "transform") {
          value = _parseTransform(target, uncache);
          value = property !== "transformOrigin" ? value[property] : value.svg ? value.origin : _firstTwoOnly(_getComputedProperty(target, _transformOriginProp)) + " " + value.zOrigin + "px";
        } else {
          value = target.style[property];
          if (!value || value === "auto" || uncache || ~(value + "").indexOf("calc(")) {
            value = _specialProps[property] && _specialProps[property](target, property, unit2) || _getComputedProperty(target, property) || _getProperty(target, property) || (property === "opacity" ? 1 : 0);
          }
        }
        return unit2 && !~(value + "").trim().indexOf(" ") ? _convertToUnit(target, property, value, unit2) + unit2 : value;
      }, _tweenComplexCSSString = function _tweenComplexCSSString2(target, prop, start, end) {
        if (!start || start === "none") {
          var p = _checkPropPrefix(prop, target, 1), s2 = p && _getComputedProperty(target, p, 1);
          if (s2 && s2 !== start) {
            prop = p;
            start = s2;
          } else if (prop === "borderColor") {
            start = _getComputedProperty(target, "borderTopColor");
          }
        }
        var pt = new PropTween(this._pt, target.style, prop, 0, 1, _renderComplexString), index = 0, matchIndex = 0, a, result, startValues, startNum, color2, startValue, endValue, endNum, chunk, endUnit, startUnit, relative, endValues;
        pt.b = start;
        pt.e = end;
        start += "";
        end += "";
        if (end === "auto") {
          target.style[prop] = end;
          end = _getComputedProperty(target, prop) || end;
          target.style[prop] = start;
        }
        a = [start, end];
        _colorStringFilter(a);
        start = a[0];
        end = a[1];
        startValues = start.match(_numWithUnitExp) || [];
        endValues = end.match(_numWithUnitExp) || [];
        if (endValues.length) {
          while (result = _numWithUnitExp.exec(end)) {
            endValue = result[0];
            chunk = end.substring(index, result.index);
            if (color2) {
              color2 = (color2 + 1) % 5;
            } else if (chunk.substr(-5) === "rgba(" || chunk.substr(-5) === "hsla(") {
              color2 = 1;
            }
            if (endValue !== (startValue = startValues[matchIndex++] || "")) {
              startNum = parseFloat(startValue) || 0;
              startUnit = startValue.substr((startNum + "").length);
              relative = endValue.charAt(1) === "=" ? +(endValue.charAt(0) + "1") : 0;
              if (relative) {
                endValue = endValue.substr(2);
              }
              endNum = parseFloat(endValue);
              endUnit = endValue.substr((endNum + "").length);
              index = _numWithUnitExp.lastIndex - endUnit.length;
              if (!endUnit) {
                endUnit = endUnit || _config.units[prop] || startUnit;
                if (index === end.length) {
                  end += endUnit;
                  pt.e += endUnit;
                }
              }
              if (startUnit !== endUnit) {
                startNum = _convertToUnit(target, prop, startValue, endUnit) || 0;
              }
              pt._pt = {
                _next: pt._pt,
                p: chunk || matchIndex === 1 ? chunk : ",",
                s: startNum,
                c: relative ? relative * endNum : endNum - startNum,
                m: color2 && color2 < 4 || prop === "zIndex" ? Math.round : 0
              };
            }
          }
          pt.c = index < end.length ? end.substring(index, end.length) : "";
        } else {
          pt.r = prop === "display" && end === "none" ? _renderNonTweeningValueOnlyAtEnd : _renderNonTweeningValue;
        }
        _relExp.test(end) && (pt.e = 0);
        this._pt = pt;
        return pt;
      }, _keywordToPercent = {
        top: "0%",
        bottom: "100%",
        left: "0%",
        right: "100%",
        center: "50%"
      }, _convertKeywordsToPercentages = function _convertKeywordsToPercentages2(value) {
        var split = value.split(" "), x = split[0], y = split[1] || "50%";
        if (x === "top" || x === "bottom" || y === "left" || y === "right") {
          value = x;
          x = y;
          y = value;
        }
        split[0] = _keywordToPercent[x] || x;
        split[1] = _keywordToPercent[y] || y;
        return split.join(" ");
      }, _renderClearProps = function _renderClearProps2(ratio, data) {
        if (data.tween && data.tween._time === data.tween._dur) {
          var target = data.t, style = target.style, props = data.u, cache = target._gsap, prop, clearTransforms, i;
          if (props === "all" || props === true) {
            style.cssText = "";
            clearTransforms = 1;
          } else {
            props = props.split(",");
            i = props.length;
            while (--i > -1) {
              prop = props[i];
              if (_transformProps[prop]) {
                clearTransforms = 1;
                prop = prop === "transformOrigin" ? _transformOriginProp : _transformProp;
              }
              _removeProperty(target, prop);
            }
          }
          if (clearTransforms) {
            _removeProperty(target, _transformProp);
            if (cache) {
              cache.svg && target.removeAttribute("transform");
              _parseTransform(target, 1);
              cache.uncache = 1;
            }
          }
        }
      }, _specialProps = {
        clearProps: function clearProps(plugin, target, property, endValue, tween) {
          if (tween.data !== "isFromStart") {
            var pt = plugin._pt = new PropTween(plugin._pt, target, property, 0, 0, _renderClearProps);
            pt.u = endValue;
            pt.pr = -10;
            pt.tween = tween;
            plugin._props.push(property);
            return 1;
          }
        }
      }, _identity2DMatrix = [1, 0, 0, 1, 0, 0], _rotationalProperties = {}, _isNullTransform = function _isNullTransform2(value) {
        return value === "matrix(1, 0, 0, 1, 0, 0)" || value === "none" || !value;
      }, _getComputedTransformMatrixAsArray = function _getComputedTransformMatrixAsArray2(target) {
        var matrixString = _getComputedProperty(target, _transformProp);
        return _isNullTransform(matrixString) ? _identity2DMatrix : matrixString.substr(7).match(_numExp).map(_round);
      }, _getMatrix = function _getMatrix2(target, force2D) {
        var cache = target._gsap || _getCache(target), style = target.style, matrix = _getComputedTransformMatrixAsArray(target), parent, nextSibling, temp, addedToDOM;
        if (cache.svg && target.getAttribute("transform")) {
          temp = target.transform.baseVal.consolidate().matrix;
          matrix = [temp.a, temp.b, temp.c, temp.d, temp.e, temp.f];
          return matrix.join(",") === "1,0,0,1,0,0" ? _identity2DMatrix : matrix;
        } else if (matrix === _identity2DMatrix && !target.offsetParent && target !== _docElement && !cache.svg) {
          temp = style.display;
          style.display = "block";
          parent = target.parentNode;
          if (!parent || !target.offsetParent) {
            addedToDOM = 1;
            nextSibling = target.nextSibling;
            _docElement.appendChild(target);
          }
          matrix = _getComputedTransformMatrixAsArray(target);
          temp ? style.display = temp : _removeProperty(target, "display");
          if (addedToDOM) {
            nextSibling ? parent.insertBefore(target, nextSibling) : parent ? parent.appendChild(target) : _docElement.removeChild(target);
          }
        }
        return force2D && matrix.length > 6 ? [matrix[0], matrix[1], matrix[4], matrix[5], matrix[12], matrix[13]] : matrix;
      }, _applySVGOrigin = function _applySVGOrigin2(target, origin, originIsAbsolute, smooth, matrixArray, pluginToAddPropTweensTo) {
        var cache = target._gsap, matrix = matrixArray || _getMatrix(target, true), xOriginOld = cache.xOrigin || 0, yOriginOld = cache.yOrigin || 0, xOffsetOld = cache.xOffset || 0, yOffsetOld = cache.yOffset || 0, a = matrix[0], b = matrix[1], c = matrix[2], d = matrix[3], tx = matrix[4], ty = matrix[5], originSplit = origin.split(" "), xOrigin = parseFloat(originSplit[0]) || 0, yOrigin = parseFloat(originSplit[1]) || 0, bounds, determinant, x, y;
        if (!originIsAbsolute) {
          bounds = _getBBox(target);
          xOrigin = bounds.x + (~originSplit[0].indexOf("%") ? xOrigin / 100 * bounds.width : xOrigin);
          yOrigin = bounds.y + (~(originSplit[1] || originSplit[0]).indexOf("%") ? yOrigin / 100 * bounds.height : yOrigin);
        } else if (matrix !== _identity2DMatrix && (determinant = a * d - b * c)) {
          x = xOrigin * (d / determinant) + yOrigin * (-c / determinant) + (c * ty - d * tx) / determinant;
          y = xOrigin * (-b / determinant) + yOrigin * (a / determinant) - (a * ty - b * tx) / determinant;
          xOrigin = x;
          yOrigin = y;
        }
        if (smooth || smooth !== false && cache.smooth) {
          tx = xOrigin - xOriginOld;
          ty = yOrigin - yOriginOld;
          cache.xOffset = xOffsetOld + (tx * a + ty * c) - tx;
          cache.yOffset = yOffsetOld + (tx * b + ty * d) - ty;
        } else {
          cache.xOffset = cache.yOffset = 0;
        }
        cache.xOrigin = xOrigin;
        cache.yOrigin = yOrigin;
        cache.smooth = !!smooth;
        cache.origin = origin;
        cache.originIsAbsolute = !!originIsAbsolute;
        target.style[_transformOriginProp] = "0px 0px";
        if (pluginToAddPropTweensTo) {
          _addNonTweeningPT(pluginToAddPropTweensTo, cache, "xOrigin", xOriginOld, xOrigin);
          _addNonTweeningPT(pluginToAddPropTweensTo, cache, "yOrigin", yOriginOld, yOrigin);
          _addNonTweeningPT(pluginToAddPropTweensTo, cache, "xOffset", xOffsetOld, cache.xOffset);
          _addNonTweeningPT(pluginToAddPropTweensTo, cache, "yOffset", yOffsetOld, cache.yOffset);
        }
        target.setAttribute("data-svg-origin", xOrigin + " " + yOrigin);
      }, _parseTransform = function _parseTransform2(target, uncache) {
        var cache = target._gsap || new GSCache(target);
        if ("x" in cache && !uncache && !cache.uncache) {
          return cache;
        }
        var style = target.style, invertedScaleX = cache.scaleX < 0, px = "px", deg = "deg", origin = _getComputedProperty(target, _transformOriginProp) || "0", x, y, z, scaleX, scaleY, rotation, rotationX, rotationY, skewX, skewY, perspective, xOrigin, yOrigin, matrix, angle, cos, sin, a, b, c, d, a12, a22, t1, t2, t3, a13, a23, a33, a42, a43, a32;
        x = y = z = rotation = rotationX = rotationY = skewX = skewY = perspective = 0;
        scaleX = scaleY = 1;
        cache.svg = !!(target.getCTM && _isSVG(target));
        matrix = _getMatrix(target, cache.svg);
        if (cache.svg) {
          t1 = (!cache.uncache || origin === "0px 0px") && !uncache && target.getAttribute("data-svg-origin");
          _applySVGOrigin(target, t1 || origin, !!t1 || cache.originIsAbsolute, cache.smooth !== false, matrix);
        }
        xOrigin = cache.xOrigin || 0;
        yOrigin = cache.yOrigin || 0;
        if (matrix !== _identity2DMatrix) {
          a = matrix[0];
          b = matrix[1];
          c = matrix[2];
          d = matrix[3];
          x = a12 = matrix[4];
          y = a22 = matrix[5];
          if (matrix.length === 6) {
            scaleX = Math.sqrt(a * a + b * b);
            scaleY = Math.sqrt(d * d + c * c);
            rotation = a || b ? _atan2(b, a) * _RAD2DEG : 0;
            skewX = c || d ? _atan2(c, d) * _RAD2DEG + rotation : 0;
            skewX && (scaleY *= Math.abs(Math.cos(skewX * _DEG2RAD)));
            if (cache.svg) {
              x -= xOrigin - (xOrigin * a + yOrigin * c);
              y -= yOrigin - (xOrigin * b + yOrigin * d);
            }
          } else {
            a32 = matrix[6];
            a42 = matrix[7];
            a13 = matrix[8];
            a23 = matrix[9];
            a33 = matrix[10];
            a43 = matrix[11];
            x = matrix[12];
            y = matrix[13];
            z = matrix[14];
            angle = _atan2(a32, a33);
            rotationX = angle * _RAD2DEG;
            if (angle) {
              cos = Math.cos(-angle);
              sin = Math.sin(-angle);
              t1 = a12 * cos + a13 * sin;
              t2 = a22 * cos + a23 * sin;
              t3 = a32 * cos + a33 * sin;
              a13 = a12 * -sin + a13 * cos;
              a23 = a22 * -sin + a23 * cos;
              a33 = a32 * -sin + a33 * cos;
              a43 = a42 * -sin + a43 * cos;
              a12 = t1;
              a22 = t2;
              a32 = t3;
            }
            angle = _atan2(-c, a33);
            rotationY = angle * _RAD2DEG;
            if (angle) {
              cos = Math.cos(-angle);
              sin = Math.sin(-angle);
              t1 = a * cos - a13 * sin;
              t2 = b * cos - a23 * sin;
              t3 = c * cos - a33 * sin;
              a43 = d * sin + a43 * cos;
              a = t1;
              b = t2;
              c = t3;
            }
            angle = _atan2(b, a);
            rotation = angle * _RAD2DEG;
            if (angle) {
              cos = Math.cos(angle);
              sin = Math.sin(angle);
              t1 = a * cos + b * sin;
              t2 = a12 * cos + a22 * sin;
              b = b * cos - a * sin;
              a22 = a22 * cos - a12 * sin;
              a = t1;
              a12 = t2;
            }
            if (rotationX && Math.abs(rotationX) + Math.abs(rotation) > 359.9) {
              rotationX = rotation = 0;
              rotationY = 180 - rotationY;
            }
            scaleX = _round(Math.sqrt(a * a + b * b + c * c));
            scaleY = _round(Math.sqrt(a22 * a22 + a32 * a32));
            angle = _atan2(a12, a22);
            skewX = Math.abs(angle) > 2e-4 ? angle * _RAD2DEG : 0;
            perspective = a43 ? 1 / (a43 < 0 ? -a43 : a43) : 0;
          }
          if (cache.svg) {
            t1 = target.getAttribute("transform");
            cache.forceCSS = target.setAttribute("transform", "") || !_isNullTransform(_getComputedProperty(target, _transformProp));
            t1 && target.setAttribute("transform", t1);
          }
        }
        if (Math.abs(skewX) > 90 && Math.abs(skewX) < 270) {
          if (invertedScaleX) {
            scaleX *= -1;
            skewX += rotation <= 0 ? 180 : -180;
            rotation += rotation <= 0 ? 180 : -180;
          } else {
            scaleY *= -1;
            skewX += skewX <= 0 ? 180 : -180;
          }
        }
        cache.x = x - ((cache.xPercent = x && (cache.xPercent || (Math.round(target.offsetWidth / 2) === Math.round(-x) ? -50 : 0))) ? target.offsetWidth * cache.xPercent / 100 : 0) + px;
        cache.y = y - ((cache.yPercent = y && (cache.yPercent || (Math.round(target.offsetHeight / 2) === Math.round(-y) ? -50 : 0))) ? target.offsetHeight * cache.yPercent / 100 : 0) + px;
        cache.z = z + px;
        cache.scaleX = _round(scaleX);
        cache.scaleY = _round(scaleY);
        cache.rotation = _round(rotation) + deg;
        cache.rotationX = _round(rotationX) + deg;
        cache.rotationY = _round(rotationY) + deg;
        cache.skewX = skewX + deg;
        cache.skewY = skewY + deg;
        cache.transformPerspective = perspective + px;
        if (cache.zOrigin = parseFloat(origin.split(" ")[2]) || 0) {
          style[_transformOriginProp] = _firstTwoOnly(origin);
        }
        cache.xOffset = cache.yOffset = 0;
        cache.force3D = _config.force3D;
        cache.renderTransform = cache.svg ? _renderSVGTransforms : _supports3D ? _renderCSSTransforms : _renderNon3DTransforms;
        cache.uncache = 0;
        return cache;
      }, _firstTwoOnly = function _firstTwoOnly2(value) {
        return (value = value.split(" "))[0] + " " + value[1];
      }, _addPxTranslate = function _addPxTranslate2(target, start, value) {
        var unit2 = getUnit(start);
        return _round(parseFloat(start) + parseFloat(_convertToUnit(target, "x", value + "px", unit2))) + unit2;
      }, _renderNon3DTransforms = function _renderNon3DTransforms2(ratio, cache) {
        cache.z = "0px";
        cache.rotationY = cache.rotationX = "0deg";
        cache.force3D = 0;
        _renderCSSTransforms(ratio, cache);
      }, _zeroDeg = "0deg", _zeroPx = "0px", _endParenthesis = ") ", _renderCSSTransforms = function _renderCSSTransforms2(ratio, cache) {
        var _ref = cache || this, xPercent = _ref.xPercent, yPercent = _ref.yPercent, x = _ref.x, y = _ref.y, z = _ref.z, rotation = _ref.rotation, rotationY = _ref.rotationY, rotationX = _ref.rotationX, skewX = _ref.skewX, skewY = _ref.skewY, scaleX = _ref.scaleX, scaleY = _ref.scaleY, transformPerspective = _ref.transformPerspective, force3D = _ref.force3D, target = _ref.target, zOrigin = _ref.zOrigin, transforms = "", use3D = force3D === "auto" && ratio && ratio !== 1 || force3D === true;
        if (zOrigin && (rotationX !== _zeroDeg || rotationY !== _zeroDeg)) {
          var angle = parseFloat(rotationY) * _DEG2RAD, a13 = Math.sin(angle), a33 = Math.cos(angle), cos;
          angle = parseFloat(rotationX) * _DEG2RAD;
          cos = Math.cos(angle);
          x = _addPxTranslate(target, x, a13 * cos * -zOrigin);
          y = _addPxTranslate(target, y, -Math.sin(angle) * -zOrigin);
          z = _addPxTranslate(target, z, a33 * cos * -zOrigin + zOrigin);
        }
        if (transformPerspective !== _zeroPx) {
          transforms += "perspective(" + transformPerspective + _endParenthesis;
        }
        if (xPercent || yPercent) {
          transforms += "translate(" + xPercent + "%, " + yPercent + "%) ";
        }
        if (use3D || x !== _zeroPx || y !== _zeroPx || z !== _zeroPx) {
          transforms += z !== _zeroPx || use3D ? "translate3d(" + x + ", " + y + ", " + z + ") " : "translate(" + x + ", " + y + _endParenthesis;
        }
        if (rotation !== _zeroDeg) {
          transforms += "rotate(" + rotation + _endParenthesis;
        }
        if (rotationY !== _zeroDeg) {
          transforms += "rotateY(" + rotationY + _endParenthesis;
        }
        if (rotationX !== _zeroDeg) {
          transforms += "rotateX(" + rotationX + _endParenthesis;
        }
        if (skewX !== _zeroDeg || skewY !== _zeroDeg) {
          transforms += "skew(" + skewX + ", " + skewY + _endParenthesis;
        }
        if (scaleX !== 1 || scaleY !== 1) {
          transforms += "scale(" + scaleX + ", " + scaleY + _endParenthesis;
        }
        target.style[_transformProp] = transforms || "translate(0, 0)";
      }, _renderSVGTransforms = function _renderSVGTransforms2(ratio, cache) {
        var _ref2 = cache || this, xPercent = _ref2.xPercent, yPercent = _ref2.yPercent, x = _ref2.x, y = _ref2.y, rotation = _ref2.rotation, skewX = _ref2.skewX, skewY = _ref2.skewY, scaleX = _ref2.scaleX, scaleY = _ref2.scaleY, target = _ref2.target, xOrigin = _ref2.xOrigin, yOrigin = _ref2.yOrigin, xOffset = _ref2.xOffset, yOffset = _ref2.yOffset, forceCSS = _ref2.forceCSS, tx = parseFloat(x), ty = parseFloat(y), a11, a21, a12, a22, temp;
        rotation = parseFloat(rotation);
        skewX = parseFloat(skewX);
        skewY = parseFloat(skewY);
        if (skewY) {
          skewY = parseFloat(skewY);
          skewX += skewY;
          rotation += skewY;
        }
        if (rotation || skewX) {
          rotation *= _DEG2RAD;
          skewX *= _DEG2RAD;
          a11 = Math.cos(rotation) * scaleX;
          a21 = Math.sin(rotation) * scaleX;
          a12 = Math.sin(rotation - skewX) * -scaleY;
          a22 = Math.cos(rotation - skewX) * scaleY;
          if (skewX) {
            skewY *= _DEG2RAD;
            temp = Math.tan(skewX - skewY);
            temp = Math.sqrt(1 + temp * temp);
            a12 *= temp;
            a22 *= temp;
            if (skewY) {
              temp = Math.tan(skewY);
              temp = Math.sqrt(1 + temp * temp);
              a11 *= temp;
              a21 *= temp;
            }
          }
          a11 = _round(a11);
          a21 = _round(a21);
          a12 = _round(a12);
          a22 = _round(a22);
        } else {
          a11 = scaleX;
          a22 = scaleY;
          a21 = a12 = 0;
        }
        if (tx && !~(x + "").indexOf("px") || ty && !~(y + "").indexOf("px")) {
          tx = _convertToUnit(target, "x", x, "px");
          ty = _convertToUnit(target, "y", y, "px");
        }
        if (xOrigin || yOrigin || xOffset || yOffset) {
          tx = _round(tx + xOrigin - (xOrigin * a11 + yOrigin * a12) + xOffset);
          ty = _round(ty + yOrigin - (xOrigin * a21 + yOrigin * a22) + yOffset);
        }
        if (xPercent || yPercent) {
          temp = target.getBBox();
          tx = _round(tx + xPercent / 100 * temp.width);
          ty = _round(ty + yPercent / 100 * temp.height);
        }
        temp = "matrix(" + a11 + "," + a21 + "," + a12 + "," + a22 + "," + tx + "," + ty + ")";
        target.setAttribute("transform", temp);
        forceCSS && (target.style[_transformProp] = temp);
      }, _addRotationalPropTween = function _addRotationalPropTween2(plugin, target, property, startNum, endValue, relative) {
        var cap = 360, isString = _isString(endValue), endNum = parseFloat(endValue) * (isString && ~endValue.indexOf("rad") ? _RAD2DEG : 1), change = relative ? endNum * relative : endNum - startNum, finalValue = startNum + change + "deg", direction, pt;
        if (isString) {
          direction = endValue.split("_")[1];
          if (direction === "short") {
            change %= cap;
            if (change !== change % (cap / 2)) {
              change += change < 0 ? cap : -cap;
            }
          }
          if (direction === "cw" && change < 0) {
            change = (change + cap * _bigNum$1) % cap - ~~(change / cap) * cap;
          } else if (direction === "ccw" && change > 0) {
            change = (change - cap * _bigNum$1) % cap - ~~(change / cap) * cap;
          }
        }
        plugin._pt = pt = new PropTween(plugin._pt, target, property, startNum, change, _renderPropWithEnd);
        pt.e = finalValue;
        pt.u = "deg";
        plugin._props.push(property);
        return pt;
      }, _assign = function _assign2(target, source) {
        for (var p in source) {
          target[p] = source[p];
        }
        return target;
      }, _addRawTransformPTs = function _addRawTransformPTs2(plugin, transforms, target) {
        var startCache = _assign({}, target._gsap), exclude = "perspective,force3D,transformOrigin,svgOrigin", style = target.style, endCache, p, startValue, endValue, startNum, endNum, startUnit, endUnit;
        if (startCache.svg) {
          startValue = target.getAttribute("transform");
          target.setAttribute("transform", "");
          style[_transformProp] = transforms;
          endCache = _parseTransform(target, 1);
          _removeProperty(target, _transformProp);
          target.setAttribute("transform", startValue);
        } else {
          startValue = getComputedStyle(target)[_transformProp];
          style[_transformProp] = transforms;
          endCache = _parseTransform(target, 1);
          style[_transformProp] = startValue;
        }
        for (p in _transformProps) {
          startValue = startCache[p];
          endValue = endCache[p];
          if (startValue !== endValue && exclude.indexOf(p) < 0) {
            startUnit = getUnit(startValue);
            endUnit = getUnit(endValue);
            startNum = startUnit !== endUnit ? _convertToUnit(target, p, startValue, endUnit) : parseFloat(startValue);
            endNum = parseFloat(endValue);
            plugin._pt = new PropTween(plugin._pt, endCache, p, startNum, endNum - startNum, _renderCSSProp);
            plugin._pt.u = endUnit || 0;
            plugin._props.push(p);
          }
        }
        _assign(endCache, startCache);
      };
      _forEachName("padding,margin,Width,Radius", function(name, index) {
        var t = "Top", r = "Right", b = "Bottom", l = "Left", props = (index < 3 ? [t, r, b, l] : [t + l, t + r, b + r, b + l]).map(function(side) {
          return index < 2 ? name + side : "border" + side + name;
        });
        _specialProps[index > 1 ? "border" + name : name] = function(plugin, target, property, endValue, tween) {
          var a, vars;
          if (arguments.length < 4) {
            a = props.map(function(prop) {
              return _get(plugin, prop, property);
            });
            vars = a.join(" ");
            return vars.split(a[0]).length === 5 ? a[0] : vars;
          }
          a = (endValue + "").split(" ");
          vars = {};
          props.forEach(function(prop, i) {
            return vars[prop] = a[i] = a[i] || a[(i - 1) / 2 | 0];
          });
          plugin.init(target, vars, tween);
        };
      });
      var CSSPlugin = {
        name: "css",
        register: _initCore,
        targetTest: function targetTest(target) {
          return target.style && target.nodeType;
        },
        init: function init2(target, vars, tween, index, targets) {
          var props = this._props, style = target.style, startAt = tween.vars.startAt, startValue, endValue, endNum, startNum, type, specialProp, p, startUnit, endUnit, relative, isTransformRelated, transformPropTween, cache, smooth, hasPriority;
          _pluginInitted || _initCore();
          for (p in vars) {
            if (p === "autoRound") {
              continue;
            }
            endValue = vars[p];
            if (_plugins[p] && _checkPlugin(p, vars, tween, index, target, targets)) {
              continue;
            }
            type = typeof endValue;
            specialProp = _specialProps[p];
            if (type === "function") {
              endValue = endValue.call(tween, index, target, targets);
              type = typeof endValue;
            }
            if (type === "string" && ~endValue.indexOf("random(")) {
              endValue = _replaceRandom(endValue);
            }
            if (specialProp) {
              specialProp(this, target, p, endValue, tween) && (hasPriority = 1);
            } else if (p.substr(0, 2) === "--") {
              startValue = (getComputedStyle(target).getPropertyValue(p) + "").trim();
              endValue += "";
              _colorExp.lastIndex = 0;
              if (!_colorExp.test(startValue)) {
                startUnit = getUnit(startValue);
                endUnit = getUnit(endValue);
              }
              endUnit ? startUnit !== endUnit && (startValue = _convertToUnit(target, p, startValue, endUnit) + endUnit) : startUnit && (endValue += startUnit);
              this.add(style, "setProperty", startValue, endValue, index, targets, 0, 0, p);
              props.push(p);
            } else if (type !== "undefined") {
              if (startAt && p in startAt) {
                startValue = typeof startAt[p] === "function" ? startAt[p].call(tween, index, target, targets) : startAt[p];
                p in _config.units && !getUnit(startValue) && (startValue += _config.units[p]);
                _isString(startValue) && ~startValue.indexOf("random(") && (startValue = _replaceRandom(startValue));
                (startValue + "").charAt(1) === "=" && (startValue = _get(target, p));
              } else {
                startValue = _get(target, p);
              }
              startNum = parseFloat(startValue);
              relative = type === "string" && endValue.charAt(1) === "=" ? +(endValue.charAt(0) + "1") : 0;
              relative && (endValue = endValue.substr(2));
              endNum = parseFloat(endValue);
              if (p in _propertyAliases) {
                if (p === "autoAlpha") {
                  if (startNum === 1 && _get(target, "visibility") === "hidden" && endNum) {
                    startNum = 0;
                  }
                  _addNonTweeningPT(this, style, "visibility", startNum ? "inherit" : "hidden", endNum ? "inherit" : "hidden", !endNum);
                }
                if (p !== "scale" && p !== "transform") {
                  p = _propertyAliases[p];
                  ~p.indexOf(",") && (p = p.split(",")[0]);
                }
              }
              isTransformRelated = p in _transformProps;
              if (isTransformRelated) {
                if (!transformPropTween) {
                  cache = target._gsap;
                  cache.renderTransform && !vars.parseTransform || _parseTransform(target, vars.parseTransform);
                  smooth = vars.smoothOrigin !== false && cache.smooth;
                  transformPropTween = this._pt = new PropTween(this._pt, style, _transformProp, 0, 1, cache.renderTransform, cache, 0, -1);
                  transformPropTween.dep = 1;
                }
                if (p === "scale") {
                  this._pt = new PropTween(this._pt, cache, "scaleY", cache.scaleY, (relative ? relative * endNum : endNum - cache.scaleY) || 0);
                  props.push("scaleY", p);
                  p += "X";
                } else if (p === "transformOrigin") {
                  endValue = _convertKeywordsToPercentages(endValue);
                  if (cache.svg) {
                    _applySVGOrigin(target, endValue, 0, smooth, 0, this);
                  } else {
                    endUnit = parseFloat(endValue.split(" ")[2]) || 0;
                    endUnit !== cache.zOrigin && _addNonTweeningPT(this, cache, "zOrigin", cache.zOrigin, endUnit);
                    _addNonTweeningPT(this, style, p, _firstTwoOnly(startValue), _firstTwoOnly(endValue));
                  }
                  continue;
                } else if (p === "svgOrigin") {
                  _applySVGOrigin(target, endValue, 1, smooth, 0, this);
                  continue;
                } else if (p in _rotationalProperties) {
                  _addRotationalPropTween(this, cache, p, startNum, endValue, relative);
                  continue;
                } else if (p === "smoothOrigin") {
                  _addNonTweeningPT(this, cache, "smooth", cache.smooth, endValue);
                  continue;
                } else if (p === "force3D") {
                  cache[p] = endValue;
                  continue;
                } else if (p === "transform") {
                  _addRawTransformPTs(this, endValue, target);
                  continue;
                }
              } else if (!(p in style)) {
                p = _checkPropPrefix(p) || p;
              }
              if (isTransformRelated || (endNum || endNum === 0) && (startNum || startNum === 0) && !_complexExp.test(endValue) && p in style) {
                startUnit = (startValue + "").substr((startNum + "").length);
                endNum || (endNum = 0);
                endUnit = getUnit(endValue) || (p in _config.units ? _config.units[p] : startUnit);
                startUnit !== endUnit && (startNum = _convertToUnit(target, p, startValue, endUnit));
                this._pt = new PropTween(this._pt, isTransformRelated ? cache : style, p, startNum, relative ? relative * endNum : endNum - startNum, !isTransformRelated && (endUnit === "px" || p === "zIndex") && vars.autoRound !== false ? _renderRoundedCSSProp : _renderCSSProp);
                this._pt.u = endUnit || 0;
                if (startUnit !== endUnit && endUnit !== "%") {
                  this._pt.b = startValue;
                  this._pt.r = _renderCSSPropWithBeginning;
                }
              } else if (!(p in style)) {
                if (p in target) {
                  this.add(target, p, startValue || target[p], endValue, index, targets);
                } else {
                  _missingPlugin(p, endValue);
                  continue;
                }
              } else {
                _tweenComplexCSSString.call(this, target, p, startValue, endValue);
              }
              props.push(p);
            }
          }
          hasPriority && _sortPropTweensByPriority(this);
        },
        get: _get,
        aliases: _propertyAliases,
        getSetter: function getSetter(target, property, plugin) {
          var p = _propertyAliases[property];
          p && p.indexOf(",") < 0 && (property = p);
          return property in _transformProps && property !== _transformOriginProp && (target._gsap.x || _get(target, "x")) ? plugin && _recentSetterPlugin === plugin ? property === "scale" ? _setterScale : _setterTransform : (_recentSetterPlugin = plugin || {}) && (property === "scale" ? _setterScaleWithRender : _setterTransformWithRender) : target.style && !_isUndefined(target.style[property]) ? _setterCSSStyle : ~property.indexOf("-") ? _setterCSSProp : _getSetter(target, property);
        },
        core: {
          _removeProperty,
          _getMatrix
        }
      };
      gsap5.utils.checkPrefix = _checkPropPrefix;
      (function(positionAndScale, rotation, others, aliases) {
        var all = _forEachName(positionAndScale + "," + rotation + "," + others, function(name) {
          _transformProps[name] = 1;
        });
        _forEachName(rotation, function(name) {
          _config.units[name] = "deg";
          _rotationalProperties[name] = 1;
        });
        _propertyAliases[all[13]] = positionAndScale + "," + rotation;
        _forEachName(aliases, function(name) {
          var split = name.split(":");
          _propertyAliases[split[1]] = all[split[0]];
        });
      })("x,y,z,scale,scaleX,scaleY,xPercent,yPercent", "rotation,rotationX,rotationY,skewX,skewY", "transform,transformOrigin,svgOrigin,force3D,smoothOrigin,transformPerspective", "0:translateX,1:translateY,2:translateZ,8:rotate,8:rotationZ,8:rotateZ,9:rotateX,10:rotateY");
      _forEachName("x,y,z,top,right,bottom,left,width,height,fontSize,padding,margin,perspective", function(name) {
        _config.units[name] = "px";
      });
      gsap5.registerPlugin(CSSPlugin);
      var gsapWithCSS = gsap5.registerPlugin(CSSPlugin) || gsap5, TweenMaxWithCSS = gsapWithCSS.core.Tween;
      exports2.Back = Back;
      exports2.Bounce = Bounce;
      exports2.CSSPlugin = CSSPlugin;
      exports2.Circ = Circ;
      exports2.Cubic = Cubic;
      exports2.Elastic = Elastic;
      exports2.Expo = Expo;
      exports2.Linear = Linear;
      exports2.Power0 = Power0;
      exports2.Power1 = Power1;
      exports2.Power2 = Power2;
      exports2.Power3 = Power3;
      exports2.Power4 = Power4;
      exports2.Quad = Quad;
      exports2.Quart = Quart;
      exports2.Quint = Quint;
      exports2.Sine = Sine;
      exports2.SteppedEase = SteppedEase;
      exports2.Strong = Strong;
      exports2.TimelineLite = Timeline;
      exports2.TimelineMax = Timeline;
      exports2.TweenLite = Tween;
      exports2.TweenMax = TweenMaxWithCSS;
      exports2.default = gsapWithCSS;
      exports2.gsap = gsapWithCSS;
      if (typeof window === "undefined" || window !== exports2) {
        Object.defineProperty(exports2, "__esModule", { value: true });
      } else {
        delete window.default;
      }
    });
  }
});

// node_modules/gsap/dist/SplitText.js
var require_SplitText = __commonJS({
  "node_modules/gsap/dist/SplitText.js"(exports, module2) {
    init_shims();
    (function(global2, factory) {
      typeof exports === "object" && typeof module2 !== "undefined" ? factory(exports) : typeof define === "function" && define.amd ? define(["exports"], factory) : (global2 = global2 || self, factory(global2.window = global2.window || {}));
    })(exports, function(exports2) {
      "use strict";
      var emojiExp = /([\uD800-\uDBFF][\uDC00-\uDFFF](?:[\u200D\uFE0F][\uD800-\uDBFF][\uDC00-\uDFFF]){2,}|\uD83D\uDC69(?:\u200D(?:(?:\uD83D\uDC69\u200D)?\uD83D\uDC67|(?:\uD83D\uDC69\u200D)?\uD83D\uDC66)|\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC69\u200D(?:\uD83D\uDC69\u200D)?\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC69\u200D(?:\uD83D\uDC69\u200D)?\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|\uD83C\uDFF3\uFE0F\u200D\uD83C\uDF08|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD37-\uDD39\uDD3D\uDD3E\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]\uFE0F|\uD83D\uDC69(?:\uD83C[\uDFFB-\uDFFF])\u200D(?:\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92])|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC6F\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD37-\uDD39\uDD3C-\uDD3E\uDDD6-\uDDDF])\u200D[\u2640\u2642]\uFE0F|\uD83C\uDDFD\uD83C\uDDF0|\uD83C\uDDF6\uD83C\uDDE6|\uD83C\uDDF4\uD83C\uDDF2|\uD83C\uDDE9(?:\uD83C[\uDDEA\uDDEC\uDDEF\uDDF0\uDDF2\uDDF4\uDDFF])|\uD83C\uDDF7(?:\uD83C[\uDDEA\uDDF4\uDDF8\uDDFA\uDDFC])|\uD83C\uDDE8(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDEE\uDDF0-\uDDF5\uDDF7\uDDFA-\uDDFF])|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uFE0F\u200D[\u2640\u2642]|(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642])\uFE0F|(?:\uD83D\uDC41\uFE0F\u200D\uD83D\uDDE8|\uD83D\uDC69(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2695\u2696\u2708]|\uD83D\uDC69\u200D[\u2695\u2696\u2708]|\uD83D\uDC68(?:(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708]))\uFE0F|\uD83C\uDDF2(?:\uD83C[\uDDE6\uDDE8-\uDDED\uDDF0-\uDDFF])|\uD83D\uDC69\u200D(?:\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69]))|\uD83C\uDDF1(?:\uD83C[\uDDE6-\uDDE8\uDDEE\uDDF0\uDDF7-\uDDFB\uDDFE])|\uD83C\uDDEF(?:\uD83C[\uDDEA\uDDF2\uDDF4\uDDF5])|\uD83C\uDDED(?:\uD83C[\uDDF0\uDDF2\uDDF3\uDDF7\uDDF9\uDDFA])|\uD83C\uDDEB(?:\uD83C[\uDDEE-\uDDF0\uDDF2\uDDF4\uDDF7])|[#\*0-9]\uFE0F\u20E3|\uD83C\uDDE7(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEF\uDDF1-\uDDF4\uDDF6-\uDDF9\uDDFB\uDDFC\uDDFE\uDDFF])|\uD83C\uDDE6(?:\uD83C[\uDDE8-\uDDEC\uDDEE\uDDF1\uDDF2\uDDF4\uDDF6-\uDDFA\uDDFC\uDDFD\uDDFF])|\uD83C\uDDFF(?:\uD83C[\uDDE6\uDDF2\uDDFC])|\uD83C\uDDF5(?:\uD83C[\uDDE6\uDDEA-\uDDED\uDDF0-\uDDF3\uDDF7-\uDDF9\uDDFC\uDDFE])|\uD83C\uDDFB(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDEE\uDDF3\uDDFA])|\uD83C\uDDF3(?:\uD83C[\uDDE6\uDDE8\uDDEA-\uDDEC\uDDEE\uDDF1\uDDF4\uDDF5\uDDF7\uDDFA\uDDFF])|\uD83C\uDFF4\uDB40\uDC67\uDB40\uDC62(?:\uDB40\uDC77\uDB40\uDC6C\uDB40\uDC73|\uDB40\uDC73\uDB40\uDC63\uDB40\uDC74|\uDB40\uDC65\uDB40\uDC6E\uDB40\uDC67)\uDB40\uDC7F|\uD83D\uDC68(?:\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83D\uDC68|(?:(?:\uD83D[\uDC68\uDC69])\u200D)?\uD83D\uDC66\u200D\uD83D\uDC66|(?:(?:\uD83D[\uDC68\uDC69])\u200D)?\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92])|(?:\uD83C[\uDFFB-\uDFFF])\u200D(?:\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]))|\uD83C\uDDF8(?:\uD83C[\uDDE6-\uDDEA\uDDEC-\uDDF4\uDDF7-\uDDF9\uDDFB\uDDFD-\uDDFF])|\uD83C\uDDF0(?:\uD83C[\uDDEA\uDDEC-\uDDEE\uDDF2\uDDF3\uDDF5\uDDF7\uDDFC\uDDFE\uDDFF])|\uD83C\uDDFE(?:\uD83C[\uDDEA\uDDF9])|\uD83C\uDDEE(?:\uD83C[\uDDE8-\uDDEA\uDDF1-\uDDF4\uDDF6-\uDDF9])|\uD83C\uDDF9(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDED\uDDEF-\uDDF4\uDDF7\uDDF9\uDDFB\uDDFC\uDDFF])|\uD83C\uDDEC(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEE\uDDF1-\uDDF3\uDDF5-\uDDFA\uDDFC\uDDFE])|\uD83C\uDDFA(?:\uD83C[\uDDE6\uDDEC\uDDF2\uDDF3\uDDF8\uDDFE\uDDFF])|\uD83C\uDDEA(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDED\uDDF7-\uDDFA])|\uD83C\uDDFC(?:\uD83C[\uDDEB\uDDF8])|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uD83C[\uDFFB-\uDFFF])|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD37-\uDD39\uDD3D\uDD3E\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u261D\u270A-\u270D]|\uD83C[\uDF85\uDFC2\uDFC7]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC70\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDCAA\uDD74\uDD7A\uDD90\uDD95\uDD96\uDE4C\uDE4F\uDEC0\uDECC]|\uD83E[\uDD18-\uDD1C\uDD1E\uDD1F\uDD30-\uDD36\uDDD1-\uDDD5])(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC68(?:\u200D(?:(?:(?:\uD83D[\uDC68\uDC69])\u200D)?\uD83D\uDC67|(?:(?:\uD83D[\uDC68\uDC69])\u200D)?\uD83D\uDC66)|\uD83C[\uDFFB-\uDFFF])|(?:[\u261D\u26F9\u270A-\u270D]|\uD83C[\uDF85\uDFC2-\uDFC4\uDFC7\uDFCA-\uDFCC]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66-\uDC69\uDC6E\uDC70-\uDC78\uDC7C\uDC81-\uDC83\uDC85-\uDC87\uDCAA\uDD74\uDD75\uDD7A\uDD90\uDD95\uDD96\uDE45-\uDE47\uDE4B-\uDE4F\uDEA3\uDEB4-\uDEB6\uDEC0\uDECC]|\uD83E[\uDD18-\uDD1C\uDD1E\uDD1F\uDD26\uDD30-\uDD39\uDD3D\uDD3E\uDDD1-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])?|(?:[\u231A\u231B\u23E9-\u23EC\u23F0\u23F3\u25FD\u25FE\u2614\u2615\u2648-\u2653\u267F\u2693\u26A1\u26AA\u26AB\u26BD\u26BE\u26C4\u26C5\u26CE\u26D4\u26EA\u26F2\u26F3\u26F5\u26FA\u26FD\u2705\u270A\u270B\u2728\u274C\u274E\u2753-\u2755\u2757\u2795-\u2797\u27B0\u27BF\u2B1B\u2B1C\u2B50\u2B55]|\uD83C[\uDC04\uDCCF\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF7C\uDF7E-\uDF93\uDFA0-\uDFCA\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF4\uDFF8-\uDFFF]|\uD83D[\uDC00-\uDC3E\uDC40\uDC42-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDD7A\uDD95\uDD96\uDDA4\uDDFB-\uDE4F\uDE80-\uDEC5\uDECC\uDED0-\uDED2\uDEEB\uDEEC\uDEF4-\uDEF8]|\uD83E[\uDD10-\uDD3A\uDD3C-\uDD3E\uDD40-\uDD45\uDD47-\uDD4C\uDD50-\uDD6B\uDD80-\uDD97\uDDC0\uDDD0-\uDDE6])|(?:[#\*0-9\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u261D\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u2660\u2663\u2665\u2666\u2668\u267B\u267F\u2692-\u2697\u2699\u269B\u269C\u26A0\u26A1\u26AA\u26AB\u26B0\u26B1\u26BD\u26BE\u26C4\u26C5\u26C8\u26CE\u26CF\u26D1\u26D3\u26D4\u26E9\u26EA\u26F0-\u26F5\u26F7-\u26FA\u26FD\u2702\u2705\u2708-\u270D\u270F\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763\u2764\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299]|\uD83C[\uDC04\uDCCF\uDD70\uDD71\uDD7E\uDD7F\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE02\uDE1A\uDE2F\uDE32-\uDE3A\uDE50\uDE51\uDF00-\uDF21\uDF24-\uDF93\uDF96\uDF97\uDF99-\uDF9B\uDF9E-\uDFF0\uDFF3-\uDFF5\uDFF7-\uDFFF]|\uD83D[\uDC00-\uDCFD\uDCFF-\uDD3D\uDD49-\uDD4E\uDD50-\uDD67\uDD6F\uDD70\uDD73-\uDD7A\uDD87\uDD8A-\uDD8D\uDD90\uDD95\uDD96\uDDA4\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA-\uDE4F\uDE80-\uDEC5\uDECB-\uDED2\uDEE0-\uDEE5\uDEE9\uDEEB\uDEEC\uDEF0\uDEF3-\uDEF8]|\uD83E[\uDD10-\uDD3A\uDD3C-\uDD3E\uDD40-\uDD45\uDD47-\uDD4C\uDD50-\uDD6B\uDD80-\uDD97\uDDC0\uDDD0-\uDDE6])\uFE0F)/;
      function getText(e) {
        var type = e.nodeType, result = "";
        if (type === 1 || type === 9 || type === 11) {
          if (typeof e.textContent === "string") {
            return e.textContent;
          } else {
            for (e = e.firstChild; e; e = e.nextSibling) {
              result += getText(e);
            }
          }
        } else if (type === 3 || type === 4) {
          return e.nodeValue;
        }
        return result;
      }
      var _doc, _win, _coreInitted, _stripExp = /(?:\r|\n|\t\t)/g, _multipleSpacesExp = /(?:\s\s+)/g, _initCore = function _initCore2() {
        _doc = document;
        _win = window;
        _coreInitted = 1;
      }, _getComputedStyle = function _getComputedStyle2(element) {
        return _win.getComputedStyle(element);
      }, _isArray = Array.isArray, _slice = [].slice, _toArray = function _toArray2(value, leaveStrings) {
        var type;
        return _isArray(value) ? value : (type = typeof value) === "string" && !leaveStrings && value ? _slice.call(_doc.querySelectorAll(value), 0) : value && type === "object" && "length" in value ? _slice.call(value, 0) : value ? [value] : [];
      }, _isAbsolute = function _isAbsolute2(vars) {
        return vars.position === "absolute" || vars.absolute === true;
      }, _findSpecialChars = function _findSpecialChars2(text, chars2) {
        var i = chars2.length, s2;
        while (--i > -1) {
          s2 = chars2[i];
          if (text.substr(0, s2.length) === s2) {
            return s2.length;
          }
        }
      }, _divStart = " style='position:relative;display:inline-block;'", _cssClassFunc = function _cssClassFunc2(cssClass, tag) {
        if (cssClass === void 0) {
          cssClass = "";
        }
        var iterate = ~cssClass.indexOf("++"), num = 1;
        if (iterate) {
          cssClass = cssClass.split("++").join("");
        }
        return function() {
          return "<" + tag + _divStart + (cssClass ? " class='" + cssClass + (iterate ? num++ : "") + "'>" : ">");
        };
      }, _swapText = function _swapText2(element, oldText, newText) {
        var type = element.nodeType;
        if (type === 1 || type === 9 || type === 11) {
          for (element = element.firstChild; element; element = element.nextSibling) {
            _swapText2(element, oldText, newText);
          }
        } else if (type === 3 || type === 4) {
          element.nodeValue = element.nodeValue.split(oldText).join(newText);
        }
      }, _pushReversed = function _pushReversed2(a, merge) {
        var i = merge.length;
        while (--i > -1) {
          a.push(merge[i]);
        }
      }, _isBeforeWordDelimiter = function _isBeforeWordDelimiter2(e, root, wordDelimiter) {
        var next;
        while (e && e !== root) {
          next = e._next || e.nextSibling;
          if (next) {
            return next.textContent.charAt(0) === wordDelimiter;
          }
          e = e.parentNode || e._parent;
        }
      }, _deWordify = function _deWordify2(e) {
        var children = _toArray(e.childNodes), l = children.length, i, child;
        for (i = 0; i < l; i++) {
          child = children[i];
          if (child._isSplit) {
            _deWordify2(child);
          } else {
            if (i && child.previousSibling && child.previousSibling.nodeType === 3) {
              child.previousSibling.nodeValue += child.nodeType === 3 ? child.nodeValue : child.firstChild.nodeValue;
              e.removeChild(child);
            } else if (child.nodeType !== 3) {
              e.insertBefore(child.firstChild, child);
              e.removeChild(child);
            }
          }
        }
      }, _getStyleAsNumber = function _getStyleAsNumber2(name, computedStyle) {
        return parseFloat(computedStyle[name]) || 0;
      }, _setPositionsAfterSplit = function _setPositionsAfterSplit2(element, vars, allChars, allWords, allLines, origWidth, origHeight) {
        var cs = _getComputedStyle(element), paddingLeft = _getStyleAsNumber("paddingLeft", cs), lineOffsetY = -999, borderTopAndBottom = _getStyleAsNumber("borderBottomWidth", cs) + _getStyleAsNumber("borderTopWidth", cs), borderLeftAndRight = _getStyleAsNumber("borderLeftWidth", cs) + _getStyleAsNumber("borderRightWidth", cs), padTopAndBottom = _getStyleAsNumber("paddingTop", cs) + _getStyleAsNumber("paddingBottom", cs), padLeftAndRight = _getStyleAsNumber("paddingLeft", cs) + _getStyleAsNumber("paddingRight", cs), lineThreshold = _getStyleAsNumber("fontSize", cs) * (vars.lineThreshold || 0.2), textAlign = cs.textAlign, charArray = [], wordArray = [], lineArray = [], wordDelimiter = vars.wordDelimiter || " ", tag = vars.tag ? vars.tag : vars.span ? "span" : "div", types2 = vars.type || vars.split || "chars,words,lines", lines = allLines && ~types2.indexOf("lines") ? [] : null, words = ~types2.indexOf("words"), chars2 = ~types2.indexOf("chars"), absolute2 = _isAbsolute(vars), linesClass = vars.linesClass, iterateLine = ~(linesClass || "").indexOf("++"), spaceNodesToRemove = [], isFlex = cs.display === "flex", prevInlineDisplay = element.style.display, i, j, l, node, nodes, isChild, curLine, addWordSpaces, style, lineNode, lineWidth, offset;
        iterateLine && (linesClass = linesClass.split("++").join(""));
        isFlex && (element.style.display = "block");
        j = element.getElementsByTagName("*");
        l = j.length;
        nodes = [];
        for (i = 0; i < l; i++) {
          nodes[i] = j[i];
        }
        if (lines || absolute2) {
          for (i = 0; i < l; i++) {
            node = nodes[i];
            isChild = node.parentNode === element;
            if (isChild || absolute2 || chars2 && !words) {
              offset = node.offsetTop;
              if (lines && isChild && Math.abs(offset - lineOffsetY) > lineThreshold && (node.nodeName !== "BR" || i === 0)) {
                curLine = [];
                lines.push(curLine);
                lineOffsetY = offset;
              }
              if (absolute2) {
                node._x = node.offsetLeft;
                node._y = offset;
                node._w = node.offsetWidth;
                node._h = node.offsetHeight;
              }
              if (lines) {
                if (node._isSplit && isChild || !chars2 && isChild || words && isChild || !words && node.parentNode.parentNode === element && !node.parentNode._isSplit) {
                  curLine.push(node);
                  node._x -= paddingLeft;
                  if (_isBeforeWordDelimiter(node, element, wordDelimiter)) {
                    node._wordEnd = true;
                  }
                }
                if (node.nodeName === "BR" && (node.nextSibling && node.nextSibling.nodeName === "BR" || i === 0)) {
                  lines.push([]);
                }
              }
            }
          }
        }
        for (i = 0; i < l; i++) {
          node = nodes[i];
          isChild = node.parentNode === element;
          if (node.nodeName === "BR") {
            if (lines || absolute2) {
              node.parentNode && node.parentNode.removeChild(node);
              nodes.splice(i--, 1);
              l--;
            } else if (!words) {
              element.appendChild(node);
            }
            continue;
          }
          if (absolute2) {
            style = node.style;
            if (!words && !isChild) {
              node._x += node.parentNode._x;
              node._y += node.parentNode._y;
            }
            style.left = node._x + "px";
            style.top = node._y + "px";
            style.position = "absolute";
            style.display = "block";
            style.width = node._w + 1 + "px";
            style.height = node._h + "px";
          }
          if (!words && chars2) {
            if (node._isSplit) {
              node._next = j = node.nextSibling;
              node.parentNode.appendChild(node);
              while (j && j.nodeType === 3 && j.textContent === " ") {
                node._next = j.nextSibling;
                node.parentNode.appendChild(j);
                j = j.nextSibling;
              }
            } else if (node.parentNode._isSplit) {
              node._parent = node.parentNode;
              if (!node.previousSibling && node.firstChild) {
                node.firstChild._isFirst = true;
              }
              if (node.nextSibling && node.nextSibling.textContent === " " && !node.nextSibling.nextSibling) {
                spaceNodesToRemove.push(node.nextSibling);
              }
              node._next = node.nextSibling && node.nextSibling._isFirst ? null : node.nextSibling;
              node.parentNode.removeChild(node);
              nodes.splice(i--, 1);
              l--;
            } else if (!isChild) {
              offset = !node.nextSibling && _isBeforeWordDelimiter(node.parentNode, element, wordDelimiter);
              node.parentNode._parent && node.parentNode._parent.appendChild(node);
              offset && node.parentNode.appendChild(_doc.createTextNode(" "));
              if (tag === "span") {
                node.style.display = "inline";
              }
              charArray.push(node);
            }
          } else if (node.parentNode._isSplit && !node._isSplit && node.innerHTML !== "") {
            wordArray.push(node);
          } else if (chars2 && !node._isSplit) {
            if (tag === "span") {
              node.style.display = "inline";
            }
            charArray.push(node);
          }
        }
        i = spaceNodesToRemove.length;
        while (--i > -1) {
          spaceNodesToRemove[i].parentNode.removeChild(spaceNodesToRemove[i]);
        }
        if (lines) {
          if (absolute2) {
            lineNode = _doc.createElement(tag);
            element.appendChild(lineNode);
            lineWidth = lineNode.offsetWidth + "px";
            offset = lineNode.offsetParent === element ? 0 : element.offsetLeft;
            element.removeChild(lineNode);
          }
          style = element.style.cssText;
          element.style.cssText = "display:none;";
          while (element.firstChild) {
            element.removeChild(element.firstChild);
          }
          addWordSpaces = wordDelimiter === " " && (!absolute2 || !words && !chars2);
          for (i = 0; i < lines.length; i++) {
            curLine = lines[i];
            lineNode = _doc.createElement(tag);
            lineNode.style.cssText = "display:block;text-align:" + textAlign + ";position:" + (absolute2 ? "absolute;" : "relative;");
            if (linesClass) {
              lineNode.className = linesClass + (iterateLine ? i + 1 : "");
            }
            lineArray.push(lineNode);
            l = curLine.length;
            for (j = 0; j < l; j++) {
              if (curLine[j].nodeName !== "BR") {
                node = curLine[j];
                lineNode.appendChild(node);
                addWordSpaces && node._wordEnd && lineNode.appendChild(_doc.createTextNode(" "));
                if (absolute2) {
                  if (j === 0) {
                    lineNode.style.top = node._y + "px";
                    lineNode.style.left = paddingLeft + offset + "px";
                  }
                  node.style.top = "0px";
                  if (offset) {
                    node.style.left = node._x - offset + "px";
                  }
                }
              }
            }
            if (l === 0) {
              lineNode.innerHTML = "&nbsp;";
            } else if (!words && !chars2) {
              _deWordify(lineNode);
              _swapText(lineNode, String.fromCharCode(160), " ");
            }
            if (absolute2) {
              lineNode.style.width = lineWidth;
              lineNode.style.height = node._h + "px";
            }
            element.appendChild(lineNode);
          }
          element.style.cssText = style;
        }
        if (absolute2) {
          if (origHeight > element.clientHeight) {
            element.style.height = origHeight - padTopAndBottom + "px";
            if (element.clientHeight < origHeight) {
              element.style.height = origHeight + borderTopAndBottom + "px";
            }
          }
          if (origWidth > element.clientWidth) {
            element.style.width = origWidth - padLeftAndRight + "px";
            if (element.clientWidth < origWidth) {
              element.style.width = origWidth + borderLeftAndRight + "px";
            }
          }
        }
        isFlex && (prevInlineDisplay ? element.style.display = prevInlineDisplay : element.style.removeProperty("display"));
        _pushReversed(allChars, charArray);
        words && _pushReversed(allWords, wordArray);
        _pushReversed(allLines, lineArray);
      }, _splitRawText = function _splitRawText2(element, vars, wordStart, charStart) {
        var tag = vars.tag ? vars.tag : vars.span ? "span" : "div", types2 = vars.type || vars.split || "chars,words,lines", chars2 = ~types2.indexOf("chars"), absolute2 = _isAbsolute(vars), wordDelimiter = vars.wordDelimiter || " ", space = wordDelimiter !== " " ? "" : absolute2 ? "&#173; " : " ", wordEnd = "</" + tag + ">", wordIsOpen = 1, specialChars = vars.specialChars ? typeof vars.specialChars === "function" ? vars.specialChars : _findSpecialChars : null, text, splitText, i, j, l, character, hasTagStart, testResult, container = _doc.createElement("div"), parent = element.parentNode;
        parent.insertBefore(container, element);
        container.textContent = element.nodeValue;
        parent.removeChild(element);
        element = container;
        text = getText(element);
        hasTagStart = text.indexOf("<") !== -1;
        if (vars.reduceWhiteSpace !== false) {
          text = text.replace(_multipleSpacesExp, " ").replace(_stripExp, "");
        }
        if (hasTagStart) {
          text = text.split("<").join("{{LT}}");
        }
        l = text.length;
        splitText = (text.charAt(0) === " " ? space : "") + wordStart();
        for (i = 0; i < l; i++) {
          character = text.charAt(i);
          if (specialChars && (testResult = specialChars(text.substr(i), vars.specialChars))) {
            character = text.substr(i, testResult || 1);
            splitText += chars2 && character !== " " ? charStart() + character + "</" + tag + ">" : character;
            i += testResult - 1;
          } else if (character === wordDelimiter && text.charAt(i - 1) !== wordDelimiter && i) {
            splitText += wordIsOpen ? wordEnd : "";
            wordIsOpen = 0;
            while (text.charAt(i + 1) === wordDelimiter) {
              splitText += space;
              i++;
            }
            if (i === l - 1) {
              splitText += space;
            } else if (text.charAt(i + 1) !== ")") {
              splitText += space + wordStart();
              wordIsOpen = 1;
            }
          } else if (character === "{" && text.substr(i, 6) === "{{LT}}") {
            splitText += chars2 ? charStart() + "{{LT}}</" + tag + ">" : "{{LT}}";
            i += 5;
          } else if (character.charCodeAt(0) >= 55296 && character.charCodeAt(0) <= 56319 || text.charCodeAt(i + 1) >= 65024 && text.charCodeAt(i + 1) <= 65039) {
            j = ((text.substr(i, 12).split(emojiExp) || [])[1] || "").length || 2;
            splitText += chars2 && character !== " " ? charStart() + text.substr(i, j) + "</" + tag + ">" : text.substr(i, j);
            i += j - 1;
          } else {
            splitText += chars2 && character !== " " ? charStart() + character + "</" + tag + ">" : character;
          }
        }
        element.outerHTML = splitText + (wordIsOpen ? wordEnd : "");
        hasTagStart && _swapText(parent, "{{LT}}", "<");
      }, _split = function _split2(element, vars, wordStart, charStart) {
        var children = _toArray(element.childNodes), l = children.length, absolute2 = _isAbsolute(vars), i, child;
        if (element.nodeType !== 3 || l > 1) {
          vars.absolute = false;
          for (i = 0; i < l; i++) {
            child = children[i];
            child._next = child._isFirst = child._parent = child._wordEnd = null;
            if (child.nodeType !== 3 || /\S+/.test(child.nodeValue)) {
              if (absolute2 && child.nodeType !== 3 && _getComputedStyle(child).display === "inline") {
                child.style.display = "inline-block";
                child.style.position = "relative";
              }
              child._isSplit = true;
              _split2(child, vars, wordStart, charStart);
            }
          }
          vars.absolute = absolute2;
          element._isSplit = true;
          return;
        }
        _splitRawText(element, vars, wordStart, charStart);
      };
      var SplitText3 = function() {
        function SplitText4(element, vars) {
          _coreInitted || _initCore();
          this.elements = _toArray(element);
          this.chars = [];
          this.words = [];
          this.lines = [];
          this._originals = [];
          this.vars = vars || {};
          this.split(vars);
        }
        var _proto = SplitText4.prototype;
        _proto.split = function split(vars) {
          this.isSplit && this.revert();
          this.vars = vars = vars || this.vars;
          this._originals.length = this.chars.length = this.words.length = this.lines.length = 0;
          var i = this.elements.length, tag = vars.tag ? vars.tag : vars.span ? "span" : "div", wordStart = _cssClassFunc(vars.wordsClass, tag), charStart = _cssClassFunc(vars.charsClass, tag), origHeight, origWidth, e;
          while (--i > -1) {
            e = this.elements[i];
            this._originals[i] = e.innerHTML;
            origHeight = e.clientHeight;
            origWidth = e.clientWidth;
            _split(e, vars, wordStart, charStart);
            _setPositionsAfterSplit(e, vars, this.chars, this.words, this.lines, origWidth, origHeight);
          }
          this.chars.reverse();
          this.words.reverse();
          this.lines.reverse();
          this.isSplit = true;
          return this;
        };
        _proto.revert = function revert() {
          var originals = this._originals;
          if (!originals) {
            throw "revert() call wasn't scoped properly.";
          }
          this.elements.forEach(function(e, i) {
            return e.innerHTML = originals[i];
          });
          this.chars = [];
          this.words = [];
          this.lines = [];
          this.isSplit = false;
          return this;
        };
        SplitText4.create = function create(element, vars) {
          return new SplitText4(element, vars);
        };
        return SplitText4;
      }();
      SplitText3.version = "3.8.0";
      exports2.SplitText = SplitText3;
      exports2.default = SplitText3;
      Object.defineProperty(exports2, "__esModule", { value: true });
    });
  }
});

// .svelte-kit/output/server/chunks/global-130d3fe3.js
function readable(value, start) {
  return {
    subscribe: writable(value, start).subscribe
  };
}
function writable(value, start = noop) {
  let stop;
  const subscribers = new Set();
  function set(new_value) {
    if (safe_not_equal(value, new_value)) {
      value = new_value;
      if (stop) {
        const run_queue = !subscriber_queue.length;
        for (const subscriber of subscribers) {
          subscriber[1]();
          subscriber_queue.push(subscriber, value);
        }
        if (run_queue) {
          for (let i = 0; i < subscriber_queue.length; i += 2) {
            subscriber_queue[i][0](subscriber_queue[i + 1]);
          }
          subscriber_queue.length = 0;
        }
      }
    }
  }
  function update(fn) {
    set(fn(value));
  }
  function subscribe2(run2, invalidate = noop) {
    const subscriber = [run2, invalidate];
    subscribers.add(subscriber);
    if (subscribers.size === 1) {
      stop = start(set) || noop;
    }
    run2(value);
    return () => {
      subscribers.delete(subscriber);
      if (subscribers.size === 0) {
        stop();
        stop = null;
      }
    };
  }
  return { set, update, subscribe: subscribe2 };
}
var subscriber_queue, currentColorMode, navigationState, pageTransitionDelay, windowWidth, windowHeight;
var init_global_130d3fe3 = __esm({
  ".svelte-kit/output/server/chunks/global-130d3fe3.js"() {
    init_shims();
    init_app_9f378dda();
    subscriber_queue = [];
    currentColorMode = writable("light");
    navigationState = writable("loaded");
    pageTransitionDelay = readable(700);
    windowWidth = writable(0);
    windowHeight = writable(0);
  }
});

// node_modules/bowser/es5.js
var require_es5 = __commonJS({
  "node_modules/bowser/es5.js"(exports, module2) {
    init_shims();
    !function(e, t) {
      typeof exports == "object" && typeof module2 == "object" ? module2.exports = t() : typeof define == "function" && define.amd ? define([], t) : typeof exports == "object" ? exports.bowser = t() : e.bowser = t();
    }(exports, function() {
      return function(e) {
        var t = {};
        function r(n) {
          if (t[n])
            return t[n].exports;
          var i = t[n] = { i: n, l: false, exports: {} };
          return e[n].call(i.exports, i, i.exports, r), i.l = true, i.exports;
        }
        return r.m = e, r.c = t, r.d = function(e3, t2, n) {
          r.o(e3, t2) || Object.defineProperty(e3, t2, { enumerable: true, get: n });
        }, r.r = function(e3) {
          typeof Symbol != "undefined" && Symbol.toStringTag && Object.defineProperty(e3, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(e3, "__esModule", { value: true });
        }, r.t = function(e3, t2) {
          if (1 & t2 && (e3 = r(e3)), 8 & t2)
            return e3;
          if (4 & t2 && typeof e3 == "object" && e3 && e3.__esModule)
            return e3;
          var n = Object.create(null);
          if (r.r(n), Object.defineProperty(n, "default", { enumerable: true, value: e3 }), 2 & t2 && typeof e3 != "string")
            for (var i in e3)
              r.d(n, i, function(t3) {
                return e3[t3];
              }.bind(null, i));
          return n;
        }, r.n = function(e3) {
          var t2 = e3 && e3.__esModule ? function() {
            return e3.default;
          } : function() {
            return e3;
          };
          return r.d(t2, "a", t2), t2;
        }, r.o = function(e3, t2) {
          return Object.prototype.hasOwnProperty.call(e3, t2);
        }, r.p = "", r(r.s = 90);
      }({ 17: function(e, t, r) {
        "use strict";
        t.__esModule = true, t.default = void 0;
        var n = r(18), i = function() {
          function e3() {
          }
          return e3.getFirstMatch = function(e4, t2) {
            var r2 = t2.match(e4);
            return r2 && r2.length > 0 && r2[1] || "";
          }, e3.getSecondMatch = function(e4, t2) {
            var r2 = t2.match(e4);
            return r2 && r2.length > 1 && r2[2] || "";
          }, e3.matchAndReturnConst = function(e4, t2, r2) {
            if (e4.test(t2))
              return r2;
          }, e3.getWindowsVersionName = function(e4) {
            switch (e4) {
              case "NT":
                return "NT";
              case "XP":
                return "XP";
              case "NT 5.0":
                return "2000";
              case "NT 5.1":
                return "XP";
              case "NT 5.2":
                return "2003";
              case "NT 6.0":
                return "Vista";
              case "NT 6.1":
                return "7";
              case "NT 6.2":
                return "8";
              case "NT 6.3":
                return "8.1";
              case "NT 10.0":
                return "10";
              default:
                return;
            }
          }, e3.getMacOSVersionName = function(e4) {
            var t2 = e4.split(".").splice(0, 2).map(function(e6) {
              return parseInt(e6, 10) || 0;
            });
            if (t2.push(0), t2[0] === 10)
              switch (t2[1]) {
                case 5:
                  return "Leopard";
                case 6:
                  return "Snow Leopard";
                case 7:
                  return "Lion";
                case 8:
                  return "Mountain Lion";
                case 9:
                  return "Mavericks";
                case 10:
                  return "Yosemite";
                case 11:
                  return "El Capitan";
                case 12:
                  return "Sierra";
                case 13:
                  return "High Sierra";
                case 14:
                  return "Mojave";
                case 15:
                  return "Catalina";
                default:
                  return;
              }
          }, e3.getAndroidVersionName = function(e4) {
            var t2 = e4.split(".").splice(0, 2).map(function(e6) {
              return parseInt(e6, 10) || 0;
            });
            if (t2.push(0), !(t2[0] === 1 && t2[1] < 5))
              return t2[0] === 1 && t2[1] < 6 ? "Cupcake" : t2[0] === 1 && t2[1] >= 6 ? "Donut" : t2[0] === 2 && t2[1] < 2 ? "Eclair" : t2[0] === 2 && t2[1] === 2 ? "Froyo" : t2[0] === 2 && t2[1] > 2 ? "Gingerbread" : t2[0] === 3 ? "Honeycomb" : t2[0] === 4 && t2[1] < 1 ? "Ice Cream Sandwich" : t2[0] === 4 && t2[1] < 4 ? "Jelly Bean" : t2[0] === 4 && t2[1] >= 4 ? "KitKat" : t2[0] === 5 ? "Lollipop" : t2[0] === 6 ? "Marshmallow" : t2[0] === 7 ? "Nougat" : t2[0] === 8 ? "Oreo" : t2[0] === 9 ? "Pie" : void 0;
          }, e3.getVersionPrecision = function(e4) {
            return e4.split(".").length;
          }, e3.compareVersions = function(t2, r2, n2) {
            n2 === void 0 && (n2 = false);
            var i2 = e3.getVersionPrecision(t2), s2 = e3.getVersionPrecision(r2), a = Math.max(i2, s2), o = 0, u = e3.map([t2, r2], function(t3) {
              var r3 = a - e3.getVersionPrecision(t3), n3 = t3 + new Array(r3 + 1).join(".0");
              return e3.map(n3.split("."), function(e4) {
                return new Array(20 - e4.length).join("0") + e4;
              }).reverse();
            });
            for (n2 && (o = a - Math.min(i2, s2)), a -= 1; a >= o; ) {
              if (u[0][a] > u[1][a])
                return 1;
              if (u[0][a] === u[1][a]) {
                if (a === o)
                  return 0;
                a -= 1;
              } else if (u[0][a] < u[1][a])
                return -1;
            }
          }, e3.map = function(e4, t2) {
            var r2, n2 = [];
            if (Array.prototype.map)
              return Array.prototype.map.call(e4, t2);
            for (r2 = 0; r2 < e4.length; r2 += 1)
              n2.push(t2(e4[r2]));
            return n2;
          }, e3.find = function(e4, t2) {
            var r2, n2;
            if (Array.prototype.find)
              return Array.prototype.find.call(e4, t2);
            for (r2 = 0, n2 = e4.length; r2 < n2; r2 += 1) {
              var i2 = e4[r2];
              if (t2(i2, r2))
                return i2;
            }
          }, e3.assign = function(e4) {
            for (var t2, r2, n2 = e4, i2 = arguments.length, s2 = new Array(i2 > 1 ? i2 - 1 : 0), a = 1; a < i2; a++)
              s2[a - 1] = arguments[a];
            if (Object.assign)
              return Object.assign.apply(Object, [e4].concat(s2));
            var o = function() {
              var e6 = s2[t2];
              typeof e6 == "object" && e6 !== null && Object.keys(e6).forEach(function(t3) {
                n2[t3] = e6[t3];
              });
            };
            for (t2 = 0, r2 = s2.length; t2 < r2; t2 += 1)
              o();
            return e4;
          }, e3.getBrowserAlias = function(e4) {
            return n.BROWSER_ALIASES_MAP[e4];
          }, e3.getBrowserTypeByAlias = function(e4) {
            return n.BROWSER_MAP[e4] || "";
          }, e3;
        }();
        t.default = i, e.exports = t.default;
      }, 18: function(e, t, r) {
        "use strict";
        t.__esModule = true, t.ENGINE_MAP = t.OS_MAP = t.PLATFORMS_MAP = t.BROWSER_MAP = t.BROWSER_ALIASES_MAP = void 0;
        t.BROWSER_ALIASES_MAP = { "Amazon Silk": "amazon_silk", "Android Browser": "android", Bada: "bada", BlackBerry: "blackberry", Chrome: "chrome", Chromium: "chromium", Electron: "electron", Epiphany: "epiphany", Firefox: "firefox", Focus: "focus", Generic: "generic", "Google Search": "google_search", Googlebot: "googlebot", "Internet Explorer": "ie", "K-Meleon": "k_meleon", Maxthon: "maxthon", "Microsoft Edge": "edge", "MZ Browser": "mz", "NAVER Whale Browser": "naver", Opera: "opera", "Opera Coast": "opera_coast", PhantomJS: "phantomjs", Puffin: "puffin", QupZilla: "qupzilla", QQ: "qq", QQLite: "qqlite", Safari: "safari", Sailfish: "sailfish", "Samsung Internet for Android": "samsung_internet", SeaMonkey: "seamonkey", Sleipnir: "sleipnir", Swing: "swing", Tizen: "tizen", "UC Browser": "uc", Vivaldi: "vivaldi", "WebOS Browser": "webos", WeChat: "wechat", "Yandex Browser": "yandex", Roku: "roku" };
        t.BROWSER_MAP = { amazon_silk: "Amazon Silk", android: "Android Browser", bada: "Bada", blackberry: "BlackBerry", chrome: "Chrome", chromium: "Chromium", electron: "Electron", epiphany: "Epiphany", firefox: "Firefox", focus: "Focus", generic: "Generic", googlebot: "Googlebot", google_search: "Google Search", ie: "Internet Explorer", k_meleon: "K-Meleon", maxthon: "Maxthon", edge: "Microsoft Edge", mz: "MZ Browser", naver: "NAVER Whale Browser", opera: "Opera", opera_coast: "Opera Coast", phantomjs: "PhantomJS", puffin: "Puffin", qupzilla: "QupZilla", qq: "QQ Browser", qqlite: "QQ Browser Lite", safari: "Safari", sailfish: "Sailfish", samsung_internet: "Samsung Internet for Android", seamonkey: "SeaMonkey", sleipnir: "Sleipnir", swing: "Swing", tizen: "Tizen", uc: "UC Browser", vivaldi: "Vivaldi", webos: "WebOS Browser", wechat: "WeChat", yandex: "Yandex Browser" };
        t.PLATFORMS_MAP = { tablet: "tablet", mobile: "mobile", desktop: "desktop", tv: "tv" };
        t.OS_MAP = { WindowsPhone: "Windows Phone", Windows: "Windows", MacOS: "macOS", iOS: "iOS", Android: "Android", WebOS: "WebOS", BlackBerry: "BlackBerry", Bada: "Bada", Tizen: "Tizen", Linux: "Linux", ChromeOS: "Chrome OS", PlayStation4: "PlayStation 4", Roku: "Roku" };
        t.ENGINE_MAP = { EdgeHTML: "EdgeHTML", Blink: "Blink", Trident: "Trident", Presto: "Presto", Gecko: "Gecko", WebKit: "WebKit" };
      }, 90: function(e, t, r) {
        "use strict";
        t.__esModule = true, t.default = void 0;
        var n, i = (n = r(91)) && n.__esModule ? n : { default: n }, s2 = r(18);
        function a(e3, t2) {
          for (var r2 = 0; r2 < t2.length; r2++) {
            var n2 = t2[r2];
            n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e3, n2.key, n2);
          }
        }
        var o = function() {
          function e3() {
          }
          var t2, r2, n2;
          return e3.getParser = function(e4, t3) {
            if (t3 === void 0 && (t3 = false), typeof e4 != "string")
              throw new Error("UserAgent should be a string");
            return new i.default(e4, t3);
          }, e3.parse = function(e4) {
            return new i.default(e4).getResult();
          }, t2 = e3, n2 = [{ key: "BROWSER_MAP", get: function() {
            return s2.BROWSER_MAP;
          } }, { key: "ENGINE_MAP", get: function() {
            return s2.ENGINE_MAP;
          } }, { key: "OS_MAP", get: function() {
            return s2.OS_MAP;
          } }, { key: "PLATFORMS_MAP", get: function() {
            return s2.PLATFORMS_MAP;
          } }], (r2 = null) && a(t2.prototype, r2), n2 && a(t2, n2), e3;
        }();
        t.default = o, e.exports = t.default;
      }, 91: function(e, t, r) {
        "use strict";
        t.__esModule = true, t.default = void 0;
        var n = u(r(92)), i = u(r(93)), s2 = u(r(94)), a = u(r(95)), o = u(r(17));
        function u(e3) {
          return e3 && e3.__esModule ? e3 : { default: e3 };
        }
        var d = function() {
          function e3(e4, t3) {
            if (t3 === void 0 && (t3 = false), e4 == null || e4 === "")
              throw new Error("UserAgent parameter can't be empty");
            this._ua = e4, this.parsedResult = {}, t3 !== true && this.parse();
          }
          var t2 = e3.prototype;
          return t2.getUA = function() {
            return this._ua;
          }, t2.test = function(e4) {
            return e4.test(this._ua);
          }, t2.parseBrowser = function() {
            var e4 = this;
            this.parsedResult.browser = {};
            var t3 = o.default.find(n.default, function(t4) {
              if (typeof t4.test == "function")
                return t4.test(e4);
              if (t4.test instanceof Array)
                return t4.test.some(function(t5) {
                  return e4.test(t5);
                });
              throw new Error("Browser's test function is not valid");
            });
            return t3 && (this.parsedResult.browser = t3.describe(this.getUA())), this.parsedResult.browser;
          }, t2.getBrowser = function() {
            return this.parsedResult.browser ? this.parsedResult.browser : this.parseBrowser();
          }, t2.getBrowserName = function(e4) {
            return e4 ? String(this.getBrowser().name).toLowerCase() || "" : this.getBrowser().name || "";
          }, t2.getBrowserVersion = function() {
            return this.getBrowser().version;
          }, t2.getOS = function() {
            return this.parsedResult.os ? this.parsedResult.os : this.parseOS();
          }, t2.parseOS = function() {
            var e4 = this;
            this.parsedResult.os = {};
            var t3 = o.default.find(i.default, function(t4) {
              if (typeof t4.test == "function")
                return t4.test(e4);
              if (t4.test instanceof Array)
                return t4.test.some(function(t5) {
                  return e4.test(t5);
                });
              throw new Error("Browser's test function is not valid");
            });
            return t3 && (this.parsedResult.os = t3.describe(this.getUA())), this.parsedResult.os;
          }, t2.getOSName = function(e4) {
            var t3 = this.getOS().name;
            return e4 ? String(t3).toLowerCase() || "" : t3 || "";
          }, t2.getOSVersion = function() {
            return this.getOS().version;
          }, t2.getPlatform = function() {
            return this.parsedResult.platform ? this.parsedResult.platform : this.parsePlatform();
          }, t2.getPlatformType = function(e4) {
            e4 === void 0 && (e4 = false);
            var t3 = this.getPlatform().type;
            return e4 ? String(t3).toLowerCase() || "" : t3 || "";
          }, t2.parsePlatform = function() {
            var e4 = this;
            this.parsedResult.platform = {};
            var t3 = o.default.find(s2.default, function(t4) {
              if (typeof t4.test == "function")
                return t4.test(e4);
              if (t4.test instanceof Array)
                return t4.test.some(function(t5) {
                  return e4.test(t5);
                });
              throw new Error("Browser's test function is not valid");
            });
            return t3 && (this.parsedResult.platform = t3.describe(this.getUA())), this.parsedResult.platform;
          }, t2.getEngine = function() {
            return this.parsedResult.engine ? this.parsedResult.engine : this.parseEngine();
          }, t2.getEngineName = function(e4) {
            return e4 ? String(this.getEngine().name).toLowerCase() || "" : this.getEngine().name || "";
          }, t2.parseEngine = function() {
            var e4 = this;
            this.parsedResult.engine = {};
            var t3 = o.default.find(a.default, function(t4) {
              if (typeof t4.test == "function")
                return t4.test(e4);
              if (t4.test instanceof Array)
                return t4.test.some(function(t5) {
                  return e4.test(t5);
                });
              throw new Error("Browser's test function is not valid");
            });
            return t3 && (this.parsedResult.engine = t3.describe(this.getUA())), this.parsedResult.engine;
          }, t2.parse = function() {
            return this.parseBrowser(), this.parseOS(), this.parsePlatform(), this.parseEngine(), this;
          }, t2.getResult = function() {
            return o.default.assign({}, this.parsedResult);
          }, t2.satisfies = function(e4) {
            var t3 = this, r2 = {}, n2 = 0, i2 = {}, s3 = 0;
            if (Object.keys(e4).forEach(function(t4) {
              var a3 = e4[t4];
              typeof a3 == "string" ? (i2[t4] = a3, s3 += 1) : typeof a3 == "object" && (r2[t4] = a3, n2 += 1);
            }), n2 > 0) {
              var a2 = Object.keys(r2), u2 = o.default.find(a2, function(e6) {
                return t3.isOS(e6);
              });
              if (u2) {
                var d2 = this.satisfies(r2[u2]);
                if (d2 !== void 0)
                  return d2;
              }
              var c = o.default.find(a2, function(e6) {
                return t3.isPlatform(e6);
              });
              if (c) {
                var f = this.satisfies(r2[c]);
                if (f !== void 0)
                  return f;
              }
            }
            if (s3 > 0) {
              var l = Object.keys(i2), h = o.default.find(l, function(e6) {
                return t3.isBrowser(e6, true);
              });
              if (h !== void 0)
                return this.compareVersion(i2[h]);
            }
          }, t2.isBrowser = function(e4, t3) {
            t3 === void 0 && (t3 = false);
            var r2 = this.getBrowserName().toLowerCase(), n2 = e4.toLowerCase(), i2 = o.default.getBrowserTypeByAlias(n2);
            return t3 && i2 && (n2 = i2.toLowerCase()), n2 === r2;
          }, t2.compareVersion = function(e4) {
            var t3 = [0], r2 = e4, n2 = false, i2 = this.getBrowserVersion();
            if (typeof i2 == "string")
              return e4[0] === ">" || e4[0] === "<" ? (r2 = e4.substr(1), e4[1] === "=" ? (n2 = true, r2 = e4.substr(2)) : t3 = [], e4[0] === ">" ? t3.push(1) : t3.push(-1)) : e4[0] === "=" ? r2 = e4.substr(1) : e4[0] === "~" && (n2 = true, r2 = e4.substr(1)), t3.indexOf(o.default.compareVersions(i2, r2, n2)) > -1;
          }, t2.isOS = function(e4) {
            return this.getOSName(true) === String(e4).toLowerCase();
          }, t2.isPlatform = function(e4) {
            return this.getPlatformType(true) === String(e4).toLowerCase();
          }, t2.isEngine = function(e4) {
            return this.getEngineName(true) === String(e4).toLowerCase();
          }, t2.is = function(e4, t3) {
            return t3 === void 0 && (t3 = false), this.isBrowser(e4, t3) || this.isOS(e4) || this.isPlatform(e4);
          }, t2.some = function(e4) {
            var t3 = this;
            return e4 === void 0 && (e4 = []), e4.some(function(e6) {
              return t3.is(e6);
            });
          }, e3;
        }();
        t.default = d, e.exports = t.default;
      }, 92: function(e, t, r) {
        "use strict";
        t.__esModule = true, t.default = void 0;
        var n, i = (n = r(17)) && n.__esModule ? n : { default: n };
        var s2 = /version\/(\d+(\.?_?\d+)+)/i, a = [{ test: [/googlebot/i], describe: function(e3) {
          var t2 = { name: "Googlebot" }, r2 = i.default.getFirstMatch(/googlebot\/(\d+(\.\d+))/i, e3) || i.default.getFirstMatch(s2, e3);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/opera/i], describe: function(e3) {
          var t2 = { name: "Opera" }, r2 = i.default.getFirstMatch(s2, e3) || i.default.getFirstMatch(/(?:opera)[\s/](\d+(\.?_?\d+)+)/i, e3);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/opr\/|opios/i], describe: function(e3) {
          var t2 = { name: "Opera" }, r2 = i.default.getFirstMatch(/(?:opr|opios)[\s/](\S+)/i, e3) || i.default.getFirstMatch(s2, e3);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/SamsungBrowser/i], describe: function(e3) {
          var t2 = { name: "Samsung Internet for Android" }, r2 = i.default.getFirstMatch(s2, e3) || i.default.getFirstMatch(/(?:SamsungBrowser)[\s/](\d+(\.?_?\d+)+)/i, e3);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/Whale/i], describe: function(e3) {
          var t2 = { name: "NAVER Whale Browser" }, r2 = i.default.getFirstMatch(s2, e3) || i.default.getFirstMatch(/(?:whale)[\s/](\d+(?:\.\d+)+)/i, e3);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/MZBrowser/i], describe: function(e3) {
          var t2 = { name: "MZ Browser" }, r2 = i.default.getFirstMatch(/(?:MZBrowser)[\s/](\d+(?:\.\d+)+)/i, e3) || i.default.getFirstMatch(s2, e3);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/focus/i], describe: function(e3) {
          var t2 = { name: "Focus" }, r2 = i.default.getFirstMatch(/(?:focus)[\s/](\d+(?:\.\d+)+)/i, e3) || i.default.getFirstMatch(s2, e3);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/swing/i], describe: function(e3) {
          var t2 = { name: "Swing" }, r2 = i.default.getFirstMatch(/(?:swing)[\s/](\d+(?:\.\d+)+)/i, e3) || i.default.getFirstMatch(s2, e3);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/coast/i], describe: function(e3) {
          var t2 = { name: "Opera Coast" }, r2 = i.default.getFirstMatch(s2, e3) || i.default.getFirstMatch(/(?:coast)[\s/](\d+(\.?_?\d+)+)/i, e3);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/opt\/\d+(?:.?_?\d+)+/i], describe: function(e3) {
          var t2 = { name: "Opera Touch" }, r2 = i.default.getFirstMatch(/(?:opt)[\s/](\d+(\.?_?\d+)+)/i, e3) || i.default.getFirstMatch(s2, e3);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/yabrowser/i], describe: function(e3) {
          var t2 = { name: "Yandex Browser" }, r2 = i.default.getFirstMatch(/(?:yabrowser)[\s/](\d+(\.?_?\d+)+)/i, e3) || i.default.getFirstMatch(s2, e3);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/ucbrowser/i], describe: function(e3) {
          var t2 = { name: "UC Browser" }, r2 = i.default.getFirstMatch(s2, e3) || i.default.getFirstMatch(/(?:ucbrowser)[\s/](\d+(\.?_?\d+)+)/i, e3);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/Maxthon|mxios/i], describe: function(e3) {
          var t2 = { name: "Maxthon" }, r2 = i.default.getFirstMatch(s2, e3) || i.default.getFirstMatch(/(?:Maxthon|mxios)[\s/](\d+(\.?_?\d+)+)/i, e3);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/epiphany/i], describe: function(e3) {
          var t2 = { name: "Epiphany" }, r2 = i.default.getFirstMatch(s2, e3) || i.default.getFirstMatch(/(?:epiphany)[\s/](\d+(\.?_?\d+)+)/i, e3);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/puffin/i], describe: function(e3) {
          var t2 = { name: "Puffin" }, r2 = i.default.getFirstMatch(s2, e3) || i.default.getFirstMatch(/(?:puffin)[\s/](\d+(\.?_?\d+)+)/i, e3);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/sleipnir/i], describe: function(e3) {
          var t2 = { name: "Sleipnir" }, r2 = i.default.getFirstMatch(s2, e3) || i.default.getFirstMatch(/(?:sleipnir)[\s/](\d+(\.?_?\d+)+)/i, e3);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/k-meleon/i], describe: function(e3) {
          var t2 = { name: "K-Meleon" }, r2 = i.default.getFirstMatch(s2, e3) || i.default.getFirstMatch(/(?:k-meleon)[\s/](\d+(\.?_?\d+)+)/i, e3);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/micromessenger/i], describe: function(e3) {
          var t2 = { name: "WeChat" }, r2 = i.default.getFirstMatch(/(?:micromessenger)[\s/](\d+(\.?_?\d+)+)/i, e3) || i.default.getFirstMatch(s2, e3);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/qqbrowser/i], describe: function(e3) {
          var t2 = { name: /qqbrowserlite/i.test(e3) ? "QQ Browser Lite" : "QQ Browser" }, r2 = i.default.getFirstMatch(/(?:qqbrowserlite|qqbrowser)[/](\d+(\.?_?\d+)+)/i, e3) || i.default.getFirstMatch(s2, e3);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/msie|trident/i], describe: function(e3) {
          var t2 = { name: "Internet Explorer" }, r2 = i.default.getFirstMatch(/(?:msie |rv:)(\d+(\.?_?\d+)+)/i, e3);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/\sedg\//i], describe: function(e3) {
          var t2 = { name: "Microsoft Edge" }, r2 = i.default.getFirstMatch(/\sedg\/(\d+(\.?_?\d+)+)/i, e3);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/edg([ea]|ios)/i], describe: function(e3) {
          var t2 = { name: "Microsoft Edge" }, r2 = i.default.getSecondMatch(/edg([ea]|ios)\/(\d+(\.?_?\d+)+)/i, e3);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/vivaldi/i], describe: function(e3) {
          var t2 = { name: "Vivaldi" }, r2 = i.default.getFirstMatch(/vivaldi\/(\d+(\.?_?\d+)+)/i, e3);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/seamonkey/i], describe: function(e3) {
          var t2 = { name: "SeaMonkey" }, r2 = i.default.getFirstMatch(/seamonkey\/(\d+(\.?_?\d+)+)/i, e3);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/sailfish/i], describe: function(e3) {
          var t2 = { name: "Sailfish" }, r2 = i.default.getFirstMatch(/sailfish\s?browser\/(\d+(\.\d+)?)/i, e3);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/silk/i], describe: function(e3) {
          var t2 = { name: "Amazon Silk" }, r2 = i.default.getFirstMatch(/silk\/(\d+(\.?_?\d+)+)/i, e3);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/phantom/i], describe: function(e3) {
          var t2 = { name: "PhantomJS" }, r2 = i.default.getFirstMatch(/phantomjs\/(\d+(\.?_?\d+)+)/i, e3);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/slimerjs/i], describe: function(e3) {
          var t2 = { name: "SlimerJS" }, r2 = i.default.getFirstMatch(/slimerjs\/(\d+(\.?_?\d+)+)/i, e3);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/blackberry|\bbb\d+/i, /rim\stablet/i], describe: function(e3) {
          var t2 = { name: "BlackBerry" }, r2 = i.default.getFirstMatch(s2, e3) || i.default.getFirstMatch(/blackberry[\d]+\/(\d+(\.?_?\d+)+)/i, e3);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/(web|hpw)[o0]s/i], describe: function(e3) {
          var t2 = { name: "WebOS Browser" }, r2 = i.default.getFirstMatch(s2, e3) || i.default.getFirstMatch(/w(?:eb)?[o0]sbrowser\/(\d+(\.?_?\d+)+)/i, e3);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/bada/i], describe: function(e3) {
          var t2 = { name: "Bada" }, r2 = i.default.getFirstMatch(/dolfin\/(\d+(\.?_?\d+)+)/i, e3);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/tizen/i], describe: function(e3) {
          var t2 = { name: "Tizen" }, r2 = i.default.getFirstMatch(/(?:tizen\s?)?browser\/(\d+(\.?_?\d+)+)/i, e3) || i.default.getFirstMatch(s2, e3);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/qupzilla/i], describe: function(e3) {
          var t2 = { name: "QupZilla" }, r2 = i.default.getFirstMatch(/(?:qupzilla)[\s/](\d+(\.?_?\d+)+)/i, e3) || i.default.getFirstMatch(s2, e3);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/firefox|iceweasel|fxios/i], describe: function(e3) {
          var t2 = { name: "Firefox" }, r2 = i.default.getFirstMatch(/(?:firefox|iceweasel|fxios)[\s/](\d+(\.?_?\d+)+)/i, e3);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/electron/i], describe: function(e3) {
          var t2 = { name: "Electron" }, r2 = i.default.getFirstMatch(/(?:electron)\/(\d+(\.?_?\d+)+)/i, e3);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/MiuiBrowser/i], describe: function(e3) {
          var t2 = { name: "Miui" }, r2 = i.default.getFirstMatch(/(?:MiuiBrowser)[\s/](\d+(\.?_?\d+)+)/i, e3);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/chromium/i], describe: function(e3) {
          var t2 = { name: "Chromium" }, r2 = i.default.getFirstMatch(/(?:chromium)[\s/](\d+(\.?_?\d+)+)/i, e3) || i.default.getFirstMatch(s2, e3);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/chrome|crios|crmo/i], describe: function(e3) {
          var t2 = { name: "Chrome" }, r2 = i.default.getFirstMatch(/(?:chrome|crios|crmo)\/(\d+(\.?_?\d+)+)/i, e3);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/GSA/i], describe: function(e3) {
          var t2 = { name: "Google Search" }, r2 = i.default.getFirstMatch(/(?:GSA)\/(\d+(\.?_?\d+)+)/i, e3);
          return r2 && (t2.version = r2), t2;
        } }, { test: function(e3) {
          var t2 = !e3.test(/like android/i), r2 = e3.test(/android/i);
          return t2 && r2;
        }, describe: function(e3) {
          var t2 = { name: "Android Browser" }, r2 = i.default.getFirstMatch(s2, e3);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/playstation 4/i], describe: function(e3) {
          var t2 = { name: "PlayStation 4" }, r2 = i.default.getFirstMatch(s2, e3);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/safari|applewebkit/i], describe: function(e3) {
          var t2 = { name: "Safari" }, r2 = i.default.getFirstMatch(s2, e3);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/.*/i], describe: function(e3) {
          var t2 = e3.search("\\(") !== -1 ? /^(.*)\/(.*)[ \t]\((.*)/ : /^(.*)\/(.*) /;
          return { name: i.default.getFirstMatch(t2, e3), version: i.default.getSecondMatch(t2, e3) };
        } }];
        t.default = a, e.exports = t.default;
      }, 93: function(e, t, r) {
        "use strict";
        t.__esModule = true, t.default = void 0;
        var n, i = (n = r(17)) && n.__esModule ? n : { default: n }, s2 = r(18);
        var a = [{ test: [/Roku\/DVP/], describe: function(e3) {
          var t2 = i.default.getFirstMatch(/Roku\/DVP-(\d+\.\d+)/i, e3);
          return { name: s2.OS_MAP.Roku, version: t2 };
        } }, { test: [/windows phone/i], describe: function(e3) {
          var t2 = i.default.getFirstMatch(/windows phone (?:os)?\s?(\d+(\.\d+)*)/i, e3);
          return { name: s2.OS_MAP.WindowsPhone, version: t2 };
        } }, { test: [/windows /i], describe: function(e3) {
          var t2 = i.default.getFirstMatch(/Windows ((NT|XP)( \d\d?.\d)?)/i, e3), r2 = i.default.getWindowsVersionName(t2);
          return { name: s2.OS_MAP.Windows, version: t2, versionName: r2 };
        } }, { test: [/Macintosh(.*?) FxiOS(.*?)\//], describe: function(e3) {
          var t2 = { name: s2.OS_MAP.iOS }, r2 = i.default.getSecondMatch(/(Version\/)(\d[\d.]+)/, e3);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/macintosh/i], describe: function(e3) {
          var t2 = i.default.getFirstMatch(/mac os x (\d+(\.?_?\d+)+)/i, e3).replace(/[_\s]/g, "."), r2 = i.default.getMacOSVersionName(t2), n2 = { name: s2.OS_MAP.MacOS, version: t2 };
          return r2 && (n2.versionName = r2), n2;
        } }, { test: [/(ipod|iphone|ipad)/i], describe: function(e3) {
          var t2 = i.default.getFirstMatch(/os (\d+([_\s]\d+)*) like mac os x/i, e3).replace(/[_\s]/g, ".");
          return { name: s2.OS_MAP.iOS, version: t2 };
        } }, { test: function(e3) {
          var t2 = !e3.test(/like android/i), r2 = e3.test(/android/i);
          return t2 && r2;
        }, describe: function(e3) {
          var t2 = i.default.getFirstMatch(/android[\s/-](\d+(\.\d+)*)/i, e3), r2 = i.default.getAndroidVersionName(t2), n2 = { name: s2.OS_MAP.Android, version: t2 };
          return r2 && (n2.versionName = r2), n2;
        } }, { test: [/(web|hpw)[o0]s/i], describe: function(e3) {
          var t2 = i.default.getFirstMatch(/(?:web|hpw)[o0]s\/(\d+(\.\d+)*)/i, e3), r2 = { name: s2.OS_MAP.WebOS };
          return t2 && t2.length && (r2.version = t2), r2;
        } }, { test: [/blackberry|\bbb\d+/i, /rim\stablet/i], describe: function(e3) {
          var t2 = i.default.getFirstMatch(/rim\stablet\sos\s(\d+(\.\d+)*)/i, e3) || i.default.getFirstMatch(/blackberry\d+\/(\d+([_\s]\d+)*)/i, e3) || i.default.getFirstMatch(/\bbb(\d+)/i, e3);
          return { name: s2.OS_MAP.BlackBerry, version: t2 };
        } }, { test: [/bada/i], describe: function(e3) {
          var t2 = i.default.getFirstMatch(/bada\/(\d+(\.\d+)*)/i, e3);
          return { name: s2.OS_MAP.Bada, version: t2 };
        } }, { test: [/tizen/i], describe: function(e3) {
          var t2 = i.default.getFirstMatch(/tizen[/\s](\d+(\.\d+)*)/i, e3);
          return { name: s2.OS_MAP.Tizen, version: t2 };
        } }, { test: [/linux/i], describe: function() {
          return { name: s2.OS_MAP.Linux };
        } }, { test: [/CrOS/], describe: function() {
          return { name: s2.OS_MAP.ChromeOS };
        } }, { test: [/PlayStation 4/], describe: function(e3) {
          var t2 = i.default.getFirstMatch(/PlayStation 4[/\s](\d+(\.\d+)*)/i, e3);
          return { name: s2.OS_MAP.PlayStation4, version: t2 };
        } }];
        t.default = a, e.exports = t.default;
      }, 94: function(e, t, r) {
        "use strict";
        t.__esModule = true, t.default = void 0;
        var n, i = (n = r(17)) && n.__esModule ? n : { default: n }, s2 = r(18);
        var a = [{ test: [/googlebot/i], describe: function() {
          return { type: "bot", vendor: "Google" };
        } }, { test: [/huawei/i], describe: function(e3) {
          var t2 = i.default.getFirstMatch(/(can-l01)/i, e3) && "Nova", r2 = { type: s2.PLATFORMS_MAP.mobile, vendor: "Huawei" };
          return t2 && (r2.model = t2), r2;
        } }, { test: [/nexus\s*(?:7|8|9|10).*/i], describe: function() {
          return { type: s2.PLATFORMS_MAP.tablet, vendor: "Nexus" };
        } }, { test: [/ipad/i], describe: function() {
          return { type: s2.PLATFORMS_MAP.tablet, vendor: "Apple", model: "iPad" };
        } }, { test: [/Macintosh(.*?) FxiOS(.*?)\//], describe: function() {
          return { type: s2.PLATFORMS_MAP.tablet, vendor: "Apple", model: "iPad" };
        } }, { test: [/kftt build/i], describe: function() {
          return { type: s2.PLATFORMS_MAP.tablet, vendor: "Amazon", model: "Kindle Fire HD 7" };
        } }, { test: [/silk/i], describe: function() {
          return { type: s2.PLATFORMS_MAP.tablet, vendor: "Amazon" };
        } }, { test: [/tablet(?! pc)/i], describe: function() {
          return { type: s2.PLATFORMS_MAP.tablet };
        } }, { test: function(e3) {
          var t2 = e3.test(/ipod|iphone/i), r2 = e3.test(/like (ipod|iphone)/i);
          return t2 && !r2;
        }, describe: function(e3) {
          var t2 = i.default.getFirstMatch(/(ipod|iphone)/i, e3);
          return { type: s2.PLATFORMS_MAP.mobile, vendor: "Apple", model: t2 };
        } }, { test: [/nexus\s*[0-6].*/i, /galaxy nexus/i], describe: function() {
          return { type: s2.PLATFORMS_MAP.mobile, vendor: "Nexus" };
        } }, { test: [/[^-]mobi/i], describe: function() {
          return { type: s2.PLATFORMS_MAP.mobile };
        } }, { test: function(e3) {
          return e3.getBrowserName(true) === "blackberry";
        }, describe: function() {
          return { type: s2.PLATFORMS_MAP.mobile, vendor: "BlackBerry" };
        } }, { test: function(e3) {
          return e3.getBrowserName(true) === "bada";
        }, describe: function() {
          return { type: s2.PLATFORMS_MAP.mobile };
        } }, { test: function(e3) {
          return e3.getBrowserName() === "windows phone";
        }, describe: function() {
          return { type: s2.PLATFORMS_MAP.mobile, vendor: "Microsoft" };
        } }, { test: function(e3) {
          var t2 = Number(String(e3.getOSVersion()).split(".")[0]);
          return e3.getOSName(true) === "android" && t2 >= 3;
        }, describe: function() {
          return { type: s2.PLATFORMS_MAP.tablet };
        } }, { test: function(e3) {
          return e3.getOSName(true) === "android";
        }, describe: function() {
          return { type: s2.PLATFORMS_MAP.mobile };
        } }, { test: function(e3) {
          return e3.getOSName(true) === "macos";
        }, describe: function() {
          return { type: s2.PLATFORMS_MAP.desktop, vendor: "Apple" };
        } }, { test: function(e3) {
          return e3.getOSName(true) === "windows";
        }, describe: function() {
          return { type: s2.PLATFORMS_MAP.desktop };
        } }, { test: function(e3) {
          return e3.getOSName(true) === "linux";
        }, describe: function() {
          return { type: s2.PLATFORMS_MAP.desktop };
        } }, { test: function(e3) {
          return e3.getOSName(true) === "playstation 4";
        }, describe: function() {
          return { type: s2.PLATFORMS_MAP.tv };
        } }, { test: function(e3) {
          return e3.getOSName(true) === "roku";
        }, describe: function() {
          return { type: s2.PLATFORMS_MAP.tv };
        } }];
        t.default = a, e.exports = t.default;
      }, 95: function(e, t, r) {
        "use strict";
        t.__esModule = true, t.default = void 0;
        var n, i = (n = r(17)) && n.__esModule ? n : { default: n }, s2 = r(18);
        var a = [{ test: function(e3) {
          return e3.getBrowserName(true) === "microsoft edge";
        }, describe: function(e3) {
          if (/\sedg\//i.test(e3))
            return { name: s2.ENGINE_MAP.Blink };
          var t2 = i.default.getFirstMatch(/edge\/(\d+(\.?_?\d+)+)/i, e3);
          return { name: s2.ENGINE_MAP.EdgeHTML, version: t2 };
        } }, { test: [/trident/i], describe: function(e3) {
          var t2 = { name: s2.ENGINE_MAP.Trident }, r2 = i.default.getFirstMatch(/trident\/(\d+(\.?_?\d+)+)/i, e3);
          return r2 && (t2.version = r2), t2;
        } }, { test: function(e3) {
          return e3.test(/presto/i);
        }, describe: function(e3) {
          var t2 = { name: s2.ENGINE_MAP.Presto }, r2 = i.default.getFirstMatch(/presto\/(\d+(\.?_?\d+)+)/i, e3);
          return r2 && (t2.version = r2), t2;
        } }, { test: function(e3) {
          var t2 = e3.test(/gecko/i), r2 = e3.test(/like gecko/i);
          return t2 && !r2;
        }, describe: function(e3) {
          var t2 = { name: s2.ENGINE_MAP.Gecko }, r2 = i.default.getFirstMatch(/gecko\/(\d+(\.?_?\d+)+)/i, e3);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/(apple)?webkit\/537\.36/i], describe: function() {
          return { name: s2.ENGINE_MAP.Blink };
        } }, { test: [/(apple)?webkit/i], describe: function(e3) {
          var t2 = { name: s2.ENGINE_MAP.WebKit }, r2 = i.default.getFirstMatch(/webkit\/(\d+(\.?_?\d+)+)/i, e3);
          return r2 && (t2.version = r2), t2;
        } }];
        t.default = a, e.exports = t.default;
      } });
    });
  }
});

// .svelte-kit/output/server/chunks/BackTo-d882ed88.js
var import_gsap, import_SplitText, import_bowser, Transition, css, BackTo;
var init_BackTo_d882ed88 = __esm({
  ".svelte-kit/output/server/chunks/BackTo-d882ed88.js"() {
    init_shims();
    init_app_9f378dda();
    import_gsap = __toModule(require_gsap());
    import_SplitText = __toModule(require_SplitText());
    init_global_130d3fe3();
    import_bowser = __toModule(require_es5());
    Transition = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $$unsubscribe_pageTransitionDelay;
      $$unsubscribe_pageTransitionDelay = subscribe(pageTransitionDelay, (value) => value);
      let { split = "chars" } = $$props;
      import_gsap.gsap.registerPlugin(import_SplitText.SplitText);
      if ($$props.split === void 0 && $$bindings.split && split !== void 0)
        $$bindings.split(split);
      $$unsubscribe_pageTransitionDelay();
      return ``;
    });
    css = {
      code: "a.svelte-1clgk59{font-size:1rem;text-transform:uppercase;letter-spacing:0;font-weight:300;font-family:var(--font-sans)}",
      map: null
    };
    BackTo = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { href } = $$props;
      let { text = "" } = $$props;
      let { classes = "" } = $$props;
      if ($$props.href === void 0 && $$bindings.href && href !== void 0)
        $$bindings.href(href);
      if ($$props.text === void 0 && $$bindings.text && text !== void 0)
        $$bindings.text(text);
      if ($$props.classes === void 0 && $$bindings.classes && classes !== void 0)
        $$bindings.classes(classes);
      $$result.css.add(css);
      return `<div${add_attribute("class", classes, 0)}><a class="${"padding-bottom svelte-1clgk59"}"${add_attribute("href", href, 0)} sveltekit:prefetch>\u2190 <!-- HTML_TAG_START -->${text}<!-- HTML_TAG_END --></a>
</div>`;
    });
  }
});

// .svelte-kit/output/server/chunks/store-8bf23024.js
var seo;
var init_store_8bf23024 = __esm({
  ".svelte-kit/output/server/chunks/store-8bf23024.js"() {
    init_shims();
    init_global_130d3fe3();
    seo = writable({
      title: "Connor Rothschild",
      description: "I tell visual stories on the web.",
      keywords: "web design, data science, data visualization",
      image: "https://og-image-eight-eta.vercel.app/Connor Rothschild.png?subtitle=I%20tell%20visual%20stories%20on%20the%20web.&theme=light&md=true&hasImage=true"
    });
  }
});

// .svelte-kit/output/server/chunks/IntersectionObserver-4cd4a541.js
var IntersectionObserver_1;
var init_IntersectionObserver_4cd4a541 = __esm({
  ".svelte-kit/output/server/chunks/IntersectionObserver-4cd4a541.js"() {
    init_shims();
    init_app_9f378dda();
    IntersectionObserver_1 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { element = null } = $$props;
      let { once = false } = $$props;
      let { root = null } = $$props;
      let { rootMargin = "0px" } = $$props;
      let { threshold = 0 } = $$props;
      let { entry = null } = $$props;
      let { intersecting = false } = $$props;
      let { observer = null } = $$props;
      createEventDispatcher();
      if ($$props.element === void 0 && $$bindings.element && element !== void 0)
        $$bindings.element(element);
      if ($$props.once === void 0 && $$bindings.once && once !== void 0)
        $$bindings.once(once);
      if ($$props.root === void 0 && $$bindings.root && root !== void 0)
        $$bindings.root(root);
      if ($$props.rootMargin === void 0 && $$bindings.rootMargin && rootMargin !== void 0)
        $$bindings.rootMargin(rootMargin);
      if ($$props.threshold === void 0 && $$bindings.threshold && threshold !== void 0)
        $$bindings.threshold(threshold);
      if ($$props.entry === void 0 && $$bindings.entry && entry !== void 0)
        $$bindings.entry(entry);
      if ($$props.intersecting === void 0 && $$bindings.intersecting && intersecting !== void 0)
        $$bindings.intersecting(intersecting);
      if ($$props.observer === void 0 && $$bindings.observer && observer !== void 0)
        $$bindings.observer(observer);
      return `${slots.default ? slots.default({ intersecting, entry, observer }) : ``}`;
    });
  }
});

// .svelte-kit/output/server/chunks/layout-720789ab.js
var layout_720789ab_exports = {};
__export(layout_720789ab_exports, {
  default: () => Layout
});
var import_bowser2, css2, Layout;
var init_layout_720789ab = __esm({
  ".svelte-kit/output/server/chunks/layout-720789ab.js"() {
    init_shims();
    init_app_9f378dda();
    init_BackTo_d882ed88();
    init_store_8bf23024();
    init_IntersectionObserver_4cd4a541();
    init_global_130d3fe3();
    import_bowser2 = __toModule(require_es5());
    css2 = {
      code: ".logo.svelte-1k62azy{height:0.75em;transition:transform 500ms ease}.logo.svelte-1k62azy:hover{transform:rotate(360deg)}",
      map: null
    };
    Layout = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $seo, $$unsubscribe_seo;
      $$unsubscribe_seo = subscribe(seo, (value) => $seo = value);
      let { name } = $$props;
      let { description: description5 } = $$props;
      let { imageUrl } = $$props;
      let image = `https://og-image-eight-eta.vercel.app/Connor Rothschild | ${name}.png?subtitle=Some details about my work experience at ${name}.&theme=light&md=true&hasImage=true`;
      set_store_value(seo, $seo = { title: name, description: description5, image }, $seo);
      let element, intersecting;
      if ($$props.name === void 0 && $$bindings.name && name !== void 0)
        $$bindings.name(name);
      if ($$props.description === void 0 && $$bindings.description && description5 !== void 0)
        $$bindings.description(description5);
      if ($$props.imageUrl === void 0 && $$bindings.imageUrl && imageUrl !== void 0)
        $$bindings.imageUrl(imageUrl);
      $$result.css.add(css2);
      let $$settled;
      let $$rendered;
      do {
        $$settled = true;
        $$rendered = `${validate_component(Transition, "Transition").$$render($$result, { split: "words" }, {}, {})}
<main>${validate_component(IntersectionObserver_1, "IntersectionObserver").$$render($$result, { element, intersecting }, {
          intersecting: ($$value) => {
            intersecting = $$value;
            $$settled = false;
          }
        }, {
          default: () => `<div class="${"top-level"}"${add_attribute("this", element, 0)}>${validate_component(BackTo, "BackTo").$$render($$result, {
            href: "/experience",
            text: "Experience",
            classes: "page-overline transition-subtitle"
          }, {}, {})}

      <h1 class="${"content-title uppercase transition-title overflow-hidden"}">${escape(name)}
        <img loading="${"lazy"}"${add_attribute("src", `/images/jobs/${imageUrl}.svg`, 0)} alt="${"Logo for " + escape(name)}" class="${"logo svelte-1k62azy"}"></h1></div>`
        })}
  <div class="${"main-content transition-content"}"><div class="${"content"}">${slots.default ? slots.default({}) : ``}
      ${validate_component(BackTo, "BackTo").$$render($$result, {
          href: "/experience",
          text: "Back to all jobs",
          classes: "border-top"
        }, {}, {})}</div></div>
</main>`;
      } while (!$$settled);
      $$unsubscribe_seo();
      return $$rendered;
    });
  }
});

// .svelte-kit/output/server/chunks/axios-c62f5b73.js
var axios_c62f5b73_exports = {};
__export(axios_c62f5b73_exports, {
  default: () => Axios,
  metadata: () => metadata
});
var import_bowser3, metadata, Axios;
var init_axios_c62f5b73 = __esm({
  ".svelte-kit/output/server/chunks/axios-c62f5b73.js"() {
    init_shims();
    init_app_9f378dda();
    init_layout_720789ab();
    init_BackTo_d882ed88();
    init_global_130d3fe3();
    import_bowser3 = __toModule(require_es5());
    init_store_8bf23024();
    init_IntersectionObserver_4cd4a541();
    metadata = {
      "layout": "experience",
      "name": "Axios",
      "imageUrl": "axios",
      "order": 2,
      "description": '<p>I worked as a visual journalist at Axios in the summer after graduating. While there, I created a variety of visualizations for journalists and even had the opportunity to write a few of my own stories!</p> <p><a href="https://muckrack.com/connor-rothschild-1" target="_blank" rel="noopener noreferrer">Find all my stories here.</a></p>'
    };
    Axios = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return `${validate_component(Layout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata), {}, {
        default: () => `<p>I worked as a visual journalist at Axios in the summer after graduating. While there, I created a variety of visualizations for journalists and even had the opportunity to write a few of my own stories!</p>
<p>Here are some of my favorite visuals I created in my tenure there:</p>
<ul><li><a href="${"https://www.axios.com/olympics-medal-count-usa-tokyo-762804df-d836-4fb2-8407-9a9c5b273643.html"}" rel="${"nofollow"}">The Olympic medals tracker</a></li>
<li><a href="${"https://www.axios.com/olympic-winners-a1912446-22ef-4c2a-9fda-85bfe8dedb08.html"}" rel="${"nofollow"}">Olympic winners, over time</a></li>
<li><a href="${"https://www.axios.com/diversity-majority-minority-white-american-census-bd181b53-f170-40b2-9913-dd43363e1aaf.html"}" rel="${"nofollow"}">More than 400 U.S. counties are now minority white</a></li>
<li><a href="${"https://www.axios.com/coronavirus-vaccines-vulnerability-states-outbreaks-variants-b418fe6d-31f6-4790-9d79-bd7c4d747dd3.html?utm_source=twitter&utm_medium=social&utm_campaign=editorial&utm_content=health-statesvaccines"}" rel="${"nofollow"}">States most vulnerable to COVID are also some of the least vaccinated</a></li>
<li><a href="${"https://www.axios.com/partisan-media-biden-trump-26f54a8b-d4e2-4319-a185-bd5f55ac661f.html"}" rel="${"nofollow"}">Boring news cycle deals blow to partisan media</a></li></ul>
<p><a href="${"https://muckrack.com/connor-rothschild-1"}" rel="${"nofollow"}">Find all my stories here.</a></p>`
      })}`;
    });
  }
});

// .svelte-kit/output/server/chunks/moksha-36761011.js
var moksha_36761011_exports = {};
__export(moksha_36761011_exports, {
  default: () => Moksha,
  metadata: () => metadata2
});
var import_bowser4, metadata2, Moksha;
var init_moksha_36761011 = __esm({
  ".svelte-kit/output/server/chunks/moksha-36761011.js"() {
    init_shims();
    init_app_9f378dda();
    init_layout_720789ab();
    init_BackTo_d882ed88();
    init_global_130d3fe3();
    import_bowser4 = __toModule(require_es5());
    init_store_8bf23024();
    init_IntersectionObserver_4cd4a541();
    metadata2 = {
      "layout": "experience",
      "name": "Moksha Data",
      "imageUrl": "moksha",
      "order": 1,
      "description": '<p>I currently work as an Associate and Data Scientist at <a href="https://www.mokshadata.com/" target="_blank" rel="noopener noreferrer">Moksha Data</a>. I&#39;m currently building <strong>Moksha Interactive</strong>, a subsidiary of Moksha Data which specializes in telling visual stories on the web. </p> <p>Learn more about <a href="https://www.mokshadata.com/" target="_blank" rel="noopener noreferrer">what we&#39;re doing</a>, or <a href="mailto:connor@mokshadata.com?subject=Project%20Inquiry">get in touch</a>.</p>'
    };
    Moksha = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return `${validate_component(Layout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata2), {}, {
        default: () => `<p>I currently work as an Associate and Data Scientist at <a href="${"https://www.mokshadata.com/"}" rel="${"nofollow"}">Moksha Data</a>. I\u2019m currently building <strong>Moksha Interactive</strong>, a subsidiary of Moksha Data which specializes in telling visual stories on the web. </p>
<p>At Moksha, I\u2019ve been able to build dashboards, reports, and web applications for our partners in the social impact space (like Harris County, the Houston Food Bank, and others).</p>
<p>Here are a few of my favorite projects so far:</p>
<ul><li><a href="${"https://mokshadata.gitlab.io/harris-county-svi/"}" rel="${"nofollow"}">Harris County Rental Assistance Dashboard</a></li>
<li><a href="${"https://mokshadata.gitlab.io/collaborative-fund/impact-investing-interactive/"}" rel="${"nofollow"}">An Interactive History of Impact Investing</a></li></ul>
<p>Learn more about <a href="${"https://www.mokshadata.com/"}" rel="${"nofollow"}">what we\u2019re doing</a>, or <a href="${"mailto:connor@mokshadata.com?subject=Project%20Inquiry"}">get in touch</a>.</p>`
      })}`;
    });
  }
});

// .svelte-kit/output/server/chunks/socom-928a555d.js
var socom_928a555d_exports = {};
__export(socom_928a555d_exports, {
  default: () => Socom,
  metadata: () => metadata3
});
var import_bowser5, metadata3, Socom;
var init_socom_928a555d = __esm({
  ".svelte-kit/output/server/chunks/socom-928a555d.js"() {
    init_shims();
    init_app_9f378dda();
    init_layout_720789ab();
    init_BackTo_d882ed88();
    init_global_130d3fe3();
    import_bowser5 = __toModule(require_es5());
    init_store_8bf23024();
    init_IntersectionObserver_4cd4a541();
    metadata3 = {
      "layout": "experience",
      "name": "USSOCOM",
      "imageUrl": "socom",
      "order": 3,
      "description": '<p>I spent the summer of 2020 as a data science intern with the <a href="https://www.socom.mil/" target="_blank" rel="noopener noreferrer">US Special Operations Command</a>. During the tenure of my internship, I built a full stack web application that automated the process of verifying inventory data. This tool is estimated to save roughly 2,500 man hours and $102,000 annually.</p> <p><a href="https://www.fedscoop.com/socom-internships-colleges-students-coding-it-forward/" target="_blank" rel="noopener noreferrer">Read more about the experience</a>.</p>'
    };
    Socom = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return `${validate_component(Layout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata3), {}, {
        default: () => `<p>I spent the summer of 2020 as a data science intern with the <a href="${"https://www.socom.mil/"}" rel="${"nofollow"}">US Special Operations Command</a>. I was matched with USSOCOM through <a href="${"https://www.codingitforward.com/"}" rel="${"nofollow"}">Coding it Forward</a>, a prestigious fellowship that matches technical students with government agencies in need of assistance.</p>
<p>During the tenure of my internship, I built a full stack web application that automated the process of verifying inventory data. This tool is estimated to save roughly 2,500 man hours and $102,000 annually.</p>
<p><a href="${"https://www.fedscoop.com/socom-internships-colleges-students-coding-it-forward/"}" rel="${"nofollow"}">Read more about the experience</a>.</p>`
      })}`;
    });
  }
});

// .svelte-kit/output/server/chunks/tpl-a65e72fb.js
var tpl_a65e72fb_exports = {};
__export(tpl_a65e72fb_exports, {
  default: () => Tpl,
  metadata: () => metadata4
});
var import_bowser6, metadata4, Tpl;
var init_tpl_a65e72fb = __esm({
  ".svelte-kit/output/server/chunks/tpl-a65e72fb.js"() {
    init_shims();
    init_app_9f378dda();
    init_layout_720789ab();
    init_BackTo_d882ed88();
    init_global_130d3fe3();
    import_bowser6 = __toModule(require_es5());
    init_store_8bf23024();
    init_IntersectionObserver_4cd4a541();
    metadata4 = {
      "layout": "experience",
      "name": "Texas Policy Lab",
      "imageUrl": "tpl",
      "order": 4,
      "description": '<p>The Lab is where I first transitioned into data science by teaching myself R, and eventually assumed the position of Senior Data Science Intern. I worked directly with our lead data scientist on dashboards, static reports, and standalone analyses for our government partners. </p> <p><a href="https://www.texaspolicylab.org/" target="_blank" rel="noopener noreferrer">Learn more about TPL</a>.</p>'
    };
    Tpl = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return `${validate_component(Layout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata4), {}, {
        default: () => `<p>My first formative data science experience was with the Texas Policy Lab. I joined TPL as a research intern and slowly made my way into data science as I taught myself R.</p>
<p>At the Lab, I eventually assumed the position of Senior Data Science Intern. I worked directly with our lead data scientist on dashboards, static reports, and standalone analyses for our government partners. </p>
<p>We used a variety of tools, such as PowerBI and R Shiny, to build dashboards for partners like the Texas Juvenile Justice Department, the Texas Department of Family Protective Services, and the Texas Department of Criminal Justice.</p>
<p><a href="${"https://www.texaspolicylab.org/"}" rel="${"nofollow"}">Learn more about TPL</a>.</p>`
      })}`;
    });
  }
});

// .svelte-kit/output/server/chunks/experience.json-eeaf338a.js
var experience_json_eeaf338a_exports = {};
__export(experience_json_eeaf338a_exports, {
  get: () => get
});
async function get() {
  const imports = { "./experience/axios.md": () => Promise.resolve().then(() => (init_axios_c62f5b73(), axios_c62f5b73_exports)), "./experience/moksha.md": () => Promise.resolve().then(() => (init_moksha_36761011(), moksha_36761011_exports)), "./experience/socom.md": () => Promise.resolve().then(() => (init_socom_928a555d(), socom_928a555d_exports)), "./experience/tpl.md": () => Promise.resolve().then(() => (init_tpl_a65e72fb(), tpl_a65e72fb_exports)) };
  let body = [];
  for (const path in imports) {
    body.push(imports[path]().then(({ metadata: metadata53 }) => {
      return {
        metadata: metadata53,
        path
      };
    }));
  }
  const posts = await Promise.all(body);
  return {
    body: JSON.stringify(posts)
  };
}
var init_experience_json_eeaf338a = __esm({
  ".svelte-kit/output/server/chunks/experience.json-eeaf338a.js"() {
    init_shims();
  }
});

// .svelte-kit/output/server/chunks/CornerTitle-6f993505.js
var css3, CornerTitle;
var init_CornerTitle_6f993505 = __esm({
  ".svelte-kit/output/server/chunks/CornerTitle-6f993505.js"() {
    init_shims();
    init_app_9f378dda();
    css3 = {
      code: ".corner.svelte-1o6wnzi{position:fixed;top:var(--nav-height);left:0;padding:1rem;opacity:1;transition:opacity 500ms ease 500ms}.corner-title.svelte-1o6wnzi{font-size:1.15rem;line-height:1.1;font-weight:700;letter-spacing:0.64px;color:var(--pure-text-color);margin-bottom:0.5rem}.corner-subtitle.svelte-1o6wnzi{font-size:1rem;font-weight:100;letter-spacing:0.64px;color:var(--text-color)}",
      map: null
    };
    CornerTitle = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let cornerTitleWidth;
      let { title: title5 } = $$props;
      let { subtitle } = $$props;
      let { intersecting } = $$props;
      let w;
      let pageHasLoaded = false;
      if ($$props.title === void 0 && $$bindings.title && title5 !== void 0)
        $$bindings.title(title5);
      if ($$props.subtitle === void 0 && $$bindings.subtitle && subtitle !== void 0)
        $$bindings.subtitle(subtitle);
      if ($$props.intersecting === void 0 && $$bindings.intersecting && intersecting !== void 0)
        $$bindings.intersecting(intersecting);
      $$result.css.add(css3);
      cornerTitleWidth = (w - 768) / 2 * 0.85;
      return `
${!intersecting && w > 1168 && pageHasLoaded ? `<div aria-hidden="${"true"}" class="${"corner svelte-1o6wnzi"}" style="${"max-width: " + escape(cornerTitleWidth) + "px"}"><p class="${"corner-title svelte-1o6wnzi"}">${escape(title5)}</p>
    <p class="${"corner-subtitle svelte-1o6wnzi"}">${escape(subtitle)}</p></div>` : ``}`;
    });
  }
});

// .svelte-kit/output/server/chunks/utils-09998264.js
function dateFormat(date2) {
  const parsed = new Date(date2);
  const month = parsed.toLocaleString("default", { month: "long" });
  const year = parsed.getUTCFullYear();
  return `${month} ${year}`;
}
var import_bowser7;
var init_utils_09998264 = __esm({
  ".svelte-kit/output/server/chunks/utils-09998264.js"() {
    init_shims();
    import_bowser7 = __toModule(require_es5());
  }
});

// .svelte-kit/output/server/chunks/layout-3f1c4dcc.js
var layout_3f1c4dcc_exports = {};
__export(layout_3f1c4dcc_exports, {
  default: () => Layout2
});
var import_bowser8, Layout2;
var init_layout_3f1c4dcc = __esm({
  ".svelte-kit/output/server/chunks/layout-3f1c4dcc.js"() {
    init_shims();
    init_app_9f378dda();
    init_CornerTitle_6f993505();
    init_BackTo_d882ed88();
    init_store_8bf23024();
    init_utils_09998264();
    init_IntersectionObserver_4cd4a541();
    init_global_130d3fe3();
    import_bowser8 = __toModule(require_es5());
    Layout2 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $seo, $$unsubscribe_seo;
      $$unsubscribe_seo = subscribe(seo, (value) => $seo = value);
      let { title: title5 } = $$props;
      let { description: description5 } = $$props;
      let { date: date2 } = $$props;
      let image = `https://og-image-eight-eta.vercel.app/${title5}.png?subtitle=${description5}&theme=light&md=true&hasImage=true`;
      set_store_value(seo, $seo = { title: title5, description: description5, image }, $seo);
      let element, intersecting;
      if ($$props.title === void 0 && $$bindings.title && title5 !== void 0)
        $$bindings.title(title5);
      if ($$props.description === void 0 && $$bindings.description && description5 !== void 0)
        $$bindings.description(description5);
      if ($$props.date === void 0 && $$bindings.date && date2 !== void 0)
        $$bindings.date(date2);
      let $$settled;
      let $$rendered;
      do {
        $$settled = true;
        $$rendered = `${validate_component(Transition, "Transition").$$render($$result, { split: "words" }, {}, {})}
${validate_component(CornerTitle, "CornerTitle").$$render($$result, {
          title: title5,
          subtitle: dateFormat(date2),
          intersecting
        }, {}, {})}
<main>${validate_component(IntersectionObserver_1, "IntersectionObserver").$$render($$result, {
          element,
          rootMargin: "-60px",
          intersecting
        }, {
          intersecting: ($$value) => {
            intersecting = $$value;
            $$settled = false;
          }
        }, {
          default: () => `<div class="${"top-level"}"${add_attribute("this", element, 0)}>${validate_component(BackTo, "BackTo").$$render($$result, {
            href: "/project",
            text: "Projects",
            classes: "page-overline transition-subtitle"
          }, {}, {})}
      <h1 class="${"content-title uppercase transition-title overflow-hidden"}">${escape(title5)}</h1>
      <h1 class="${"content-description transition-title overflow-hidden"}">${escape(description5)}</h1></div>`
        })}
  <div class="${"project main-content transition-content"}">${slots.default ? slots.default({}) : ``}
    ${validate_component(BackTo, "BackTo").$$render($$result, {
          href: "/project",
          text: "Back to all projects",
          classes: "border-top"
        }, {}, {})}</div>
</main>`;
      } while (!$$settled);
      $$unsubscribe_seo();
      return $$rendered;
    });
  }
});

// .svelte-kit/output/server/chunks/Image-8e30e86c.js
var css4, Image;
var init_Image_8e30e86c = __esm({
  ".svelte-kit/output/server/chunks/Image-8e30e86c.js"() {
    init_shims();
    init_app_9f378dda();
    css4 = {
      code: ".centered.svelte-1n0adjk{display:block;margin:1rem auto}.fullscreen-unscrollable.svelte-1n0adjk{width:100vw;height:100vh;background:rgba(0, 0, 0, 0.7);position:fixed;top:0;left:0;z-index:100;display:flex;place-items:center;justify-content:center}img.svelte-1n0adjk:not(.expanded){cursor:zoom-in}img.href.svelte-1n0adjk{cursor:pointer}.expanded.svelte-1n0adjk{z-index:100;max-height:95%;max-width:95%;left:50%;top:50%;position:fixed;transform:translate(-50%, -50%);border-radius:5px;cursor:zoom-out}@media screen and (max-width: 768px){img.svelte-1n0adjk:not(.project img){width:100% !important}}",
      map: null
    };
    Image = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { src: src2 } = $$props;
      let { alt } = $$props;
      let { width = "100%" } = $$props;
      let { centered = false } = $$props;
      let { style = "" } = $$props;
      let { href = null } = $$props;
      if ($$props.src === void 0 && $$bindings.src && src2 !== void 0)
        $$bindings.src(src2);
      if ($$props.alt === void 0 && $$bindings.alt && alt !== void 0)
        $$bindings.alt(alt);
      if ($$props.width === void 0 && $$bindings.width && width !== void 0)
        $$bindings.width(width);
      if ($$props.centered === void 0 && $$bindings.centered && centered !== void 0)
        $$bindings.centered(centered);
      if ($$props.style === void 0 && $$bindings.style && style !== void 0)
        $$bindings.style(style);
      if ($$props.href === void 0 && $$bindings.href && href !== void 0)
        $$bindings.href(href);
      $$result.css.add(css4);
      return `

${``}
<a${add_attribute("href", href, 0)} target="${"_blank"}" rel="${"noopener noreferrer"}" class="${"no-underline"}"><img loading="${"lazy"}"${add_attribute("src", src2, 0)}${add_attribute("alt", alt, 0)}${add_attribute("width", width, 0)}${add_attribute("style", style, 0)} class="${["svelte-1n0adjk", (centered ? "centered" : "") + " " + (href ? "href" : "")].join(" ").trim()}">
</a>`;
    });
  }
});

// .svelte-kit/output/server/chunks/atus-5ac17a29.js
var atus_5ac17a29_exports = {};
__export(atus_5ac17a29_exports, {
  default: () => Atus,
  metadata: () => metadata5
});
var import_bowser9, metadata5, Atus;
var init_atus_5ac17a29 = __esm({
  ".svelte-kit/output/server/chunks/atus-5ac17a29.js"() {
    init_shims();
    init_app_9f378dda();
    init_layout_3f1c4dcc();
    init_Image_8e30e86c();
    init_CornerTitle_6f993505();
    init_BackTo_d882ed88();
    init_global_130d3fe3();
    import_bowser9 = __toModule(require_es5());
    init_store_8bf23024();
    init_utils_09998264();
    init_IntersectionObserver_4cd4a541();
    metadata5 = {
      "layout": "project",
      "title": "I Can Guess What You're Doing Right Now",
      "description": "Using the American Time Use Survey to predict your daily activities.",
      "date": "2020-02-23",
      "audience": "The world!",
      "featured": false,
      "archived": true,
      "image": "atus/header.png",
      "img_alt": "ATUS header image, includes an image of a MacBook with the application open.",
      "techstack": "JavaScript, Bulma, R",
      "github": "https://github.com/connorrothschild/what-are-you-doing",
      "url": "https://connorrothschild.github.io/what-are-you-doing/"
    };
    Atus = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return `${validate_component(Layout2, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata5), {}, {
        default: () => `${validate_component(Image, "Image").$$render($$result, {
          href: "https://connorrothschild.github.io/what-are-you-doing/",
          src: "/images/project/atus/header.png",
          alt: "Header"
        }, {}, {})}
<p><a href="${"https://connorrothschild.github.io/what-are-you-doing/"}" rel="${"nofollow"}"><strong>What Are You Doing Right Now?</strong></a> is an application that leverages data from the American Time Use Survey to guess your current activities.</p>
<h1 id="${"tools-used"}"><a href="${"#tools-used"}">Tools used</a></h1>
<p>This project was built using vanilla JavaScript, and styling was done with assistance from <a href="${"https://bulma.io/"}" rel="${"nofollow"}">Bulma</a>. It was rather easy to build. It was one of my first JS projects and so it was mostly an attempt to learn \u{1F642}.</p>
<p>Methodologically, for each demographic profile (a combination of race, age, marital status), I found the most common activities at every given time. (Technically, I grouped per hour to prevent issues with low N\u2019s). I would then display that activity to the user, given their parameters. If that didn\u2019t fit (according to the user), I would show the second most common activity, and so on!</p>
<h1 id="${"project-images"}"><a href="${"#project-images"}">Project images</a></h1>
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/atus/mac-1.png",
          alt: "Project image for the project 'I Can Guess What You're Doing Right Now'",
          width: "74%"
        }, {}, {})}
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/atus/phone-1.png",
          alt: "Project image for the project 'I Can Guess What You're Doing Right Now'",
          width: "22%"
        }, {}, {})}
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/atus/phone-2.png",
          alt: "Project image for the project 'I Can Guess What You're Doing Right Now'",
          width: "22%"
        }, {}, {})}
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/atus/mac-2.png",
          alt: "Project image for the project 'I Can Guess What You're Doing Right Now'",
          width: "74%"
        }, {}, {})}`
      })}`;
    });
  }
});

// .svelte-kit/output/server/chunks/bob-ross-art-gallery-9eeb337a.js
var bob_ross_art_gallery_9eeb337a_exports = {};
__export(bob_ross_art_gallery_9eeb337a_exports, {
  default: () => Bob_ross_art_gallery,
  metadata: () => metadata6
});
var import_bowser10, metadata6, Bob_ross_art_gallery;
var init_bob_ross_art_gallery_9eeb337a = __esm({
  ".svelte-kit/output/server/chunks/bob-ross-art-gallery-9eeb337a.js"() {
    init_shims();
    init_app_9f378dda();
    init_layout_3f1c4dcc();
    init_Image_8e30e86c();
    init_CornerTitle_6f993505();
    init_BackTo_d882ed88();
    init_global_130d3fe3();
    import_bowser10 = __toModule(require_es5());
    init_store_8bf23024();
    init_utils_09998264();
    init_IntersectionObserver_4cd4a541();
    metadata6 = {
      "layout": "project",
      "title": "The Bob Ross Virtual Art Gallery",
      "description": "A visual, virtual tour of every piece in The Joy of Painting.",
      "date": "2021-03-22",
      "audience": "The world!",
      "featured": true,
      "image": "bob-ross-art-gallery/header.png",
      "img_alt": 'A header image that says "The Bob Ross (virtual) Art Gallery"',
      "techstack": "D3.js, Svelte, R, Scrollama",
      "github": "https://github.com/connorrothschild/bob-ross-art-gallery/",
      "url": "https://connorrothschild.github.io/bob-ross-art-gallery/"
    };
    Bob_ross_art_gallery = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return `${validate_component(Layout2, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata6), {}, {
        default: () => `${validate_component(Image, "Image").$$render($$result, {
          href: "https://connorrothschild.github.io/bob-ross-art-gallery/",
          src: "/images/project/bob-ross-art-gallery/header.png",
          alt: "Header"
        }, {}, {})}
<p><a href="${"https://connorrothschild.github.io/bob-ross-art-gallery/"}" rel="${"nofollow"}"><strong>The Bob Ross Virtual Art Gallery</strong></a> is a visual storytelling piece analyzing Bob Ross\u2019 series <em>The Joy of Painting</em>. </p>

<p>It has since been retired due to a cease and desist from Bob Ross, Inc. Before that, it attracted media attention from <a href="${"https://www.yahoo.com/now/bob-ross-virtual-gallery-offers-195835693.html"}" rel="${"nofollow"}">Yahoo</a>, <a href="${"https://nerdist.com/article/bob-ross-virtual-gallery-art/"}" rel="${"nofollow"}">Nerdist</a>, <a href="${"https://www.openculture.com/2021/06/the-bob-ross-virtual-art-gallery.html"}" rel="${"nofollow"}">OpenCulture</a>, <a href="${"https://www.fatherly.com/play/bob-ross-virtual-art-gallery-perfect-relax/"}" rel="${"nofollow"}">Fatherly</a>, <a href="${"https://designtaxi.com/news/414284/Bob-Ross-Virtual-Art-Gallery-Lets-You-Take-A-Happy-Little-Break-To-See-His-Art/"}" rel="${"nofollow"}">DesignTaxi</a>, <a href="${"https://flowingdata.com/2021/06/01/colors-of-bob-ross-explored/"}" rel="${"nofollow"}">FlowingData</a> and others. It also won first place in the Standalone Multimedia category at the Society for News Design\u2019s <a href="${"https://msusnd.org/2021-college-design-contest/"}" rel="${"nofollow"}">2021 Student Design Contest</a>.</p>
<h1 id="${"tools-used"}"><a href="${"#tools-used"}">Tools used</a></h1>
<p>I used <a href="${"https://svelte.dev/"}" rel="${"nofollow"}">Svelte</a> and <a href="${"https://d3js.org/"}" rel="${"nofollow"}">D3.js</a> for all things visual and front-end. I used The Pudding\u2019s <a href="${"https://github.com/the-pudding/svelte-starter"}" rel="${"nofollow"}">Svelte Starter template</a> which made configuration much easier, and made a lot of the visual aspects of the project less difficult to create (e.g. their <code>Window</code> component simplified resize events a ton).</p>
<p>For the scroll-based interactions, I used Russell Goldenberg\u2019s <a href="${"https://github.com/russellgoldenberg/scrollama"}" rel="${"nofollow"}">Scrollama</a>. As of the creation of this project, there is no formal or official Svelte-based scrollytelling library. I therefore used Scrollama in its vanilla form, and plugged it into the Svelte component as if I were writing normal JavaScript.</p>
<h1 id="${"project-images"}"><a href="${"#project-images"}">Project images</a></h1>
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/bob-ross-art-gallery/mac-1.png",
          alt: "Project image for 'The Bob Ross Virtual Art Gallery'",
          width: "74%"
        }, {}, {})}
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/bob-ross-art-gallery/iphone-1.png",
          alt: "Project image for 'The Bob Ross Virtual Art Gallery'",
          width: "22%"
        }, {}, {})}
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/bob-ross-art-gallery/iphone-2.png",
          alt: "Project image for 'The Bob Ross Virtual Art Gallery'",
          width: "22%"
        }, {}, {})}
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/bob-ross-art-gallery/mac-2.png",
          alt: "Project image for 'The Bob Ross Virtual Art Gallery'",
          width: "74%"
        }, {}, {})}
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/bob-ross-art-gallery/iphone-3.png",
          alt: "Project image for 'The Bob Ross Virtual Art Gallery'",
          width: "18%"
        }, {}, {})}
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/bob-ross-art-gallery/mac-3.png",
          alt: "Project image for 'The Bob Ross Virtual Art Gallery'",
          width: "58%"
        }, {}, {})}
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/bob-ross-art-gallery/iphone-4.png",
          alt: "Project image for 'The Bob Ross Virtual Art Gallery'",
          width: "18%"
        }, {}, {})}
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/bob-ross-art-gallery/mac-4.png",
          alt: "Project image for 'The Bob Ross Virtual Art Gallery'",
          width: "48%"
        }, {}, {})}
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/bob-ross-art-gallery/mac-5.png",
          alt: "Project image for 'The Bob Ross Virtual Art Gallery'",
          width: "48%"
        }, {}, {})}
`
      })}`;
    });
  }
});

// .svelte-kit/output/server/chunks/compas-720ac1d2.js
var compas_720ac1d2_exports = {};
__export(compas_720ac1d2_exports, {
  default: () => Compas,
  metadata: () => metadata7
});
var import_bowser11, metadata7, Compas;
var init_compas_720ac1d2 = __esm({
  ".svelte-kit/output/server/chunks/compas-720ac1d2.js"() {
    init_shims();
    init_app_9f378dda();
    init_layout_3f1c4dcc();
    init_Image_8e30e86c();
    init_CornerTitle_6f993505();
    init_BackTo_d882ed88();
    init_global_130d3fe3();
    import_bowser11 = __toModule(require_es5());
    init_store_8bf23024();
    init_utils_09998264();
    init_IntersectionObserver_4cd4a541();
    metadata7 = {
      "layout": "project",
      "title": "Are You Smarter Than COMPAS?",
      "description": "A quick game to see if you are more intelligent than an algorithm used to sentence millions of Americans.",
      "date": "2020-02-23",
      "audience": "The world!",
      "featured": false,
      "archived": true,
      "image": "compas/header.png",
      "img_alt": "COMPAS header image, includes an image of a MacBook with the application open.",
      "techstack": "D3.js, Bulma, R",
      "github": "https://github.com/connorrothschild/compas",
      "url": "https://connorrothschild.github.io/compas/"
    };
    Compas = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return `${validate_component(Layout2, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata7), {}, {
        default: () => `${validate_component(Image, "Image").$$render($$result, {
          href: "https://connorrothschild.github.io/compas/",
          style: "box-shadow: none;",
          src: "/images/project/compas/header.png",
          alt: "Header"
        }, {}, {})}
<p><a href="${"https://connorrothschild.github.io/compas/"}" rel="${"nofollow"}"><strong>Are You Smarter Than COMPAS?</strong></a> is an application that allows users to explore how accurately they can predict recidivism, compared to a popular criminal justice sentencing algorithm known as COMPAS.</p>
<p>The application is meant to showcase how inaccurate COMPAS is, and illustrate that human judgment can more accurately assess risk than an algorithm that has sentenced millions behind bars.</p>
<h1 id="${"tools-used"}"><a href="${"#tools-used"}">Tools used</a></h1>
<p>This project was built using vanilla JavaScript, and styling was done with assistance from <a href="${"https://bulma.io/"}" rel="${"nofollow"}">Bulma</a>. It was rather easy to build; it was mostly an exercise to 1) inform users about how inaccurate sentencing algorithms are, and 2) learn JavaScript \u{1F642}.</p>
<h1 id="${"project-images"}"><a href="${"#project-images"}">Project images</a></h1>
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/compas/mac-1.png",
          alt: "Project image for the project 'Are You Smarter Than COMPAS?'",
          width: "74%"
        }, {}, {})}
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/compas/phone-1.png",
          alt: "Project image for the project 'Are You Smarter Than COMPAS?'",
          width: "22%"
        }, {}, {})}
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/compas/phone-2.png",
          alt: "Project image for the project 'Are You Smarter Than COMPAS?'",
          width: "22%"
        }, {}, {})}
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/compas/mac-2.png",
          alt: "Project image for the project 'Are You Smarter Than COMPAS?'",
          width: "74%"
        }, {}, {})}`
      })}`;
    });
  }
});

// .svelte-kit/output/server/chunks/covid-masking-556f2090.js
var covid_masking_556f2090_exports = {};
__export(covid_masking_556f2090_exports, {
  default: () => Covid_masking,
  metadata: () => metadata8
});
var import_bowser12, metadata8, Covid_masking;
var init_covid_masking_556f2090 = __esm({
  ".svelte-kit/output/server/chunks/covid-masking-556f2090.js"() {
    init_shims();
    init_app_9f378dda();
    init_layout_3f1c4dcc();
    init_Image_8e30e86c();
    init_CornerTitle_6f993505();
    init_BackTo_d882ed88();
    init_global_130d3fe3();
    import_bowser12 = __toModule(require_es5());
    init_store_8bf23024();
    init_utils_09998264();
    init_IntersectionObserver_4cd4a541();
    metadata8 = {
      "layout": "project",
      "title": "Mask Wearing in Your County",
      "description": "Visualizing COVID-19 mask usage in your county.",
      "date": "2020-08-01",
      "audience": "The world!",
      "featured": false,
      "image": "covid-masking/header.png",
      "img_alt": "COVID masking header image, includes an image of a MacBook with the application open.",
      "techstack": "Observable",
      "github": "https://observablehq.com/@connorrothschild/mask-wearing-in-your-county",
      "url": "https://observablehq.com/@connorrothschild/mask-wearing-in-your-county"
    };
    Covid_masking = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return `${validate_component(Layout2, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata8), {}, {
        default: () => `${validate_component(Image, "Image").$$render($$result, {
          href: "https://observablehq.com/@connorrothschild/mask-wearing-in-your-county",
          src: "/images/project/covid-masking/header.png",
          alt: "Header"
        }, {}, {})}
<p><a href="${"https://observablehq.com/@connorrothschild/mask-wearing-in-your-county"}" rel="${"nofollow"}"><strong>Mask Wearing in Your County</strong></a> is an Observable notebook that allows users to explore mask wearing in their county, compared to COVID-19 case counts and mask wearing in other counties.</p>
<h1 id="${"tools-used"}"><a href="${"#tools-used"}">Tools used</a></h1>
<p>This project was exclusively built with <a href="${"https://observablehq.com/"}" rel="${"nofollow"}">Observable</a>. The notebook contains a series of visualizations, each of which build upon the prior. Altogether, the intention is to tell a <em>story</em> about masking, not just create a series of visuals.</p>
<h1 id="${"project-images"}"><a href="${"#project-images"}">Project images</a></h1>
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/covid-masking/mac-1.png",
          alt: "Project image for 'Mask Wearing in Your County'",
          width: "100%"
        }, {}, {})}
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/covid-masking/mac-2.png",
          alt: "Project image for 'Mask Wearing in Your County'",
          width: "32%"
        }, {}, {})}
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/covid-masking/mac-3.png",
          alt: "Project image for 'Mask Wearing in Your County'",
          width: "32%"
        }, {}, {})}
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/covid-masking/mac-4.png",
          alt: "Project image for 'Mask Wearing in Your County'",
          width: "32%"
        }, {}, {})}
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/covid-masking/phone-1.png",
          alt: "Project image for 'Mask Wearing in Your County'",
          width: "48%"
        }, {}, {})}
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/covid-masking/phone-2.png",
          alt: "Project image for 'Mask Wearing in Your County'",
          width: "48%"
        }, {}, {})}
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/covid-masking/mac-5.png",
          alt: "Project image for 'Mask Wearing in Your County'",
          width: "74%"
        }, {}, {})}
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/covid-masking/phone-3.png",
          alt: "Project image for 'Mask Wearing in Your County'",
          width: "24%"
        }, {}, {})}`
      })}`;
    });
  }
});

// .svelte-kit/output/server/chunks/cudi-hums-00d50d13.js
var cudi_hums_00d50d13_exports = {};
__export(cudi_hums_00d50d13_exports, {
  default: () => Cudi_hums,
  metadata: () => metadata9
});
var import_bowser13, metadata9, Cudi_hums;
var init_cudi_hums_00d50d13 = __esm({
  ".svelte-kit/output/server/chunks/cudi-hums-00d50d13.js"() {
    init_shims();
    init_app_9f378dda();
    init_layout_3f1c4dcc();
    init_Image_8e30e86c();
    init_CornerTitle_6f993505();
    init_BackTo_d882ed88();
    init_global_130d3fe3();
    import_bowser13 = __toModule(require_es5());
    init_store_8bf23024();
    init_utils_09998264();
    init_IntersectionObserver_4cd4a541();
    metadata9 = {
      "layout": "project",
      "title": "How Much Does Kid Cudi Hum?",
      "description": "An extensive analysis of music's most famous hum.",
      "date": "2020-12-31",
      "audience": "The world!",
      "featured": true,
      "image": "cudi-hums/header.png",
      "img_alt": 'A header image that says "how much does Kid Cudi hum?"',
      "techstack": "D3.js, Vue.js, Bulma, R, Scrollama, Genius API",
      "github": "https://github.com/connorrothschild/cudi-hums",
      "url": "https://connorrothschild.github.io/cudi-hums/"
    };
    Cudi_hums = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return `${validate_component(Layout2, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata9), {}, {
        default: () => `${validate_component(Image, "Image").$$render($$result, {
          href: "https://connorrothschild.github.io/cudi-hums/",
          src: "/images/project/cudi-hums/header.png",
          alt: "Header"
        }, {}, {})}
<p><a href="${"https://connorrothschild.github.io/cudi-hums/"}" rel="${"nofollow"}"><strong>How Much Does Kid Cudi Hum?</strong></a> is a visual storytelling piece centered around analyzing music\u2019s most famous hum. It was recognized as a winner of the <a href="${"https://pudding.cool/process/pudding-cup-2020/"}" rel="${"nofollow"}">2020 Pudding Cup</a> out of 130+ entries.</p>
<h1 id="${"tools-used"}"><a href="${"#tools-used"}">Tools used</a></h1>
<p>I used <a href="${"https://vuejs.org/"}" rel="${"nofollow"}">Vue</a> and <a href="${"https://d3js.org/"}" rel="${"nofollow"}">D3.js</a> for all things visual and front-end. This was the first <a href="${"https://medium.com/nightingale/from-storytelling-to-scrollytelling-a-short-introduction-and-beyond-fbda32066964"}" rel="${"nofollow"}">scrollytelling</a> project I built, and I wanted an accessible way to approach scrollytelling so that it wouldn\u2019t get in the way of other stuff (such as making cool visuals and telling an actually interesting story). I had heard good things about Russell Goldenberg\u2019s <a href="${"https://github.com/russellgoldenberg/scrollama"}" rel="${"nofollow"}"><code>Scrollama</code></a> and wanted to find an easy way to incorporate that library with Vue. I was able to do so with Vignesh Shenoy\u2019s <a href="${"https://github.com/vgshenoy/vue-scrollama"}" rel="${"nofollow"}"><code>vue-scrollama</code></a>. It had a few quirks, but allowed me to quickly hit the ground running with scrollytelling capabilities.</p>
<h1 id="${"project-images"}"><a href="${"#project-images"}">Project images</a></h1>
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/cudi-hums/albums-mac.png",
          alt: "Project image for 'How Much Does Kid Cudi Hum?'",
          width: "48%"
        }, {}, {})}
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/cudi-hums/tracks-mac.png",
          alt: "Project image for 'How Much Does Kid Cudi Hum?'",
          width: "48%"
        }, {}, {})}
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/cudi-hums/lyrics-mac.png",
          alt: "Project image for 'How Much Does Kid Cudi Hum?'"
        }, {}, {})}
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/cudi-hums/albums-phone.png",
          alt: "Project image for 'How Much Does Kid Cudi Hum?'",
          width: "32%"
        }, {}, {})}
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/cudi-hums/tracks-phone.png",
          alt: "Project image for 'How Much Does Kid Cudi Hum?'",
          width: "32%"
        }, {}, {})}
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/cudi-hums/lyrics-phone.png",
          alt: "Project image for 'How Much Does Kid Cudi Hum?'",
          width: "32%"
        }, {}, {})}
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/cudi-hums/intro-phone.png",
          alt: "Project image for 'How Much Does Kid Cudi Hum?'",
          width: "48%"
        }, {}, {})}
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/cudi-hums/outro-phone.png",
          alt: "Project image for 'How Much Does Kid Cudi Hum?'",
          width: "48%"
        }, {}, {})}
`
      })}`;
    });
  }
});

// .svelte-kit/output/server/chunks/how-many-people-3ca8cf42.js
var how_many_people_3ca8cf42_exports = {};
__export(how_many_people_3ca8cf42_exports, {
  default: () => How_many_people,
  metadata: () => metadata10
});
var import_bowser14, metadata10, How_many_people;
var init_how_many_people_3ca8cf42 = __esm({
  ".svelte-kit/output/server/chunks/how-many-people-3ca8cf42.js"() {
    init_shims();
    init_app_9f378dda();
    init_layout_3f1c4dcc();
    init_Image_8e30e86c();
    init_CornerTitle_6f993505();
    init_BackTo_d882ed88();
    init_global_130d3fe3();
    import_bowser14 = __toModule(require_es5());
    init_store_8bf23024();
    init_utils_09998264();
    init_IntersectionObserver_4cd4a541();
    metadata10 = {
      "layout": "project",
      "title": "How Many People Have Had COVID-19?",
      "description": "A novel way to visualize COVID-19 case counts.",
      "date": "2020-11-06",
      "audience": "The world!",
      "featured": false,
      "image": "how-many-people/header.png",
      "img_alt": "An example screen of the 'How Many People' application",
      "techstack": "D3.js, Vue.js, Bulma",
      "github": "https://github.com/connorrothschild/how-many-people",
      "url": "https://connorrothschild.github.io/how-many-people"
    };
    How_many_people = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return `${validate_component(Layout2, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata10), {}, {
        default: () => `${validate_component(Image, "Image").$$render($$result, {
          href: "https://connorrothschild.github.io/how-many-people",
          src: "/images/project/how-many-people/header.png",
          alt: "Header"
        }, {}, {})}
<p><a href="${"https://connorrothschild.github.io/how-many-people"}" rel="${"nofollow"}">How Many People Have Had COVID-19?</a> is a small web application that visualizes COVID-19 case counts in a novel way: via state populations. The application\u2019s user can see cases either in the US or globally. The goal is to capture case counts with some comparison that everyone can understand.</p>
<h1 id="${"tools-used"}"><a href="${"#tools-used"}">Tools used</a></h1>
<p>This application was built with <a href="${"https://vuejs.org/"}" rel="${"nofollow"}">Vue</a>. The minimal styling was thanks to <a href="${"https://bulma.io/"}" rel="${"nofollow"}">Bulma</a>, my framework of choice recently. The application was simpler than some others I have built (there were only <a href="${"https://github.com/connorrothschild/how-many-people/tree/master/src/components"}" rel="${"nofollow"}">three components</a>). It was mostly a fun exercise to play around with SVGs and Vue, and also an exercise to better handle user interactions. The tool needed to be robust to many changes, including 1) the adding of state populations together, 2) a \u2018ceiling\u2019 (the case counts) that state populations could not exceed, 3) resets on toggle of US/global views.</p>
<h1 id="${"project-images"}"><a href="${"#project-images"}">Project images</a></h1>
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/how-many-people/mac-1.png",
          alt: "Project image for 'How Many People Have COVID-19??'"
        }, {}, {})}
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/how-many-people/mac-2.png",
          alt: "Project image for 'How Many People Have COVID-19??'"
        }, {}, {})}
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/how-many-people/phone-1.png",
          alt: "Project image for 'How Many People Have COVID-19??'",
          width: "48%"
        }, {}, {})}
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/how-many-people/phone-2.png",
          alt: "Project image for 'How Many People Have COVID-19??'",
          width: "48%"
        }, {}, {})}`
      })}`;
    });
  }
});

// .svelte-kit/output/server/chunks/map-houston-homicides-fb5e3c63.js
var map_houston_homicides_fb5e3c63_exports = {};
__export(map_houston_homicides_fb5e3c63_exports, {
  default: () => Map_houston_homicides,
  metadata: () => metadata11
});
var import_bowser15, metadata11, Map_houston_homicides;
var init_map_houston_homicides_fb5e3c63 = __esm({
  ".svelte-kit/output/server/chunks/map-houston-homicides-fb5e3c63.js"() {
    init_shims();
    init_app_9f378dda();
    init_layout_3f1c4dcc();
    init_Image_8e30e86c();
    init_CornerTitle_6f993505();
    init_BackTo_d882ed88();
    init_global_130d3fe3();
    import_bowser15 = __toModule(require_es5());
    init_store_8bf23024();
    init_utils_09998264();
    init_IntersectionObserver_4cd4a541();
    metadata11 = {
      "layout": "project",
      "title": "Mapping Houston Homicides",
      "description": "An exploration of homicides in Houston.",
      "date": "2020-02-04",
      "audience": "Rice Datathon",
      "featured": false,
      "image": "map-houston-homicides/header.png",
      "img_alt": "An example screen of the 'Mapping Houston Homicides' article",
      "techstack": "Mapbox, R",
      "github": "https://github.com/connorrothschild/datathon-2020/",
      "url": "https://connorrothschild.github.io/datathon-2020/source"
    };
    Map_houston_homicides = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return `${validate_component(Layout2, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata11), {}, {
        default: () => `${validate_component(Image, "Image").$$render($$result, {
          href: "https://connorrothschild.github.io/datathon-2020/source/",
          src: "/images/project/map-houston-homicides/header.png",
          alt: "Header"
        }, {}, {})}
<p><a href="${"https://connorrothschild.github.io/datathon-2020/source/"}" rel="${"nofollow"}"><strong>Mapping Houston Homicides</strong></a> is a visual storytelling piece focused on homicides in Houston. It was recognized as the winner of the Houston/Trends track at the <a href="${"http://news.rice.edu/2020/02/10/rice-students-sweep-second-datathon/"}" rel="${"nofollow"}">2020 Rice Datathon</a>.</p>
<h1 id="${"tools-used"}"><a href="${"#tools-used"}">Tools used</a></h1>
<p>This project was an example of a low-code but high-impact story. Rather than reinventing the wheel and implementing my own scrollytelling capabilities, my team used two tools from Mapbox: their <a href="${"https://www.mapbox.com/solutions/interactive-storytelling"}" rel="${"nofollow"}">interactive storytelling template</a> and <a href="${"https://www.mapbox.com/mapbox-studio"}" rel="${"nofollow"}">Mapbox Studio</a>. In combination, we were able to write very little code but provide a highly tailored, powerful user experience for the reader.</p>
<p>We used Mapbox Studio to create each of the bubbles that is present on the map. As a corollary, we used Studio to define the size, fill, and location of each bubble. we created many different layers that toggled visibility on scroll.</p>
<p>To trigger scroll events, We used the Mapbox storytelling template. This was a simple JSON where, for each \u2018view\u2019, I defined three elements: the <em>text</em>, the <em>layer</em>, and the <em>location</em>.</p>
<h1 id="${"project-images"}"><a href="${"#project-images"}">Project images</a></h1>
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/map-houston-homicides/mac-1.png",
          alt: "Project image for 'Mapping Houston Homicides'",
          width: "48%"
        }, {}, {})}
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/map-houston-homicides/mac-2.png",
          alt: "Project image for 'Mapping Houston Homicides'",
          width: "48%"
        }, {}, {})}
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/map-houston-homicides/mac-3.png",
          alt: "Project image for 'Mapping Houston Homicides'",
          width: "48%"
        }, {}, {})}
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/map-houston-homicides/mac-4.png",
          alt: "Project image for 'Mapping Houston Homicides'",
          width: "48%"
        }, {}, {})}
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/map-houston-homicides/phone-1.png",
          alt: "Project image for 'Mapping Houston Homicides'",
          width: "32%"
        }, {}, {})}
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/map-houston-homicides/phone-2.png",
          alt: "Project image for 'Mapping Houston Homicides'",
          width: "32%"
        }, {}, {})}
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/map-houston-homicides/phone-3.png",
          alt: "Project image for 'Mapping Houston Homicides'",
          width: "32%"
        }, {}, {})}`
      })}`;
    });
  }
});

// .svelte-kit/output/server/chunks/map-missing-migrants-1cf10cfb.js
var map_missing_migrants_1cf10cfb_exports = {};
__export(map_missing_migrants_1cf10cfb_exports, {
  default: () => Map_missing_migrants,
  metadata: () => metadata12
});
var import_bowser16, metadata12, Map_missing_migrants;
var init_map_missing_migrants_1cf10cfb = __esm({
  ".svelte-kit/output/server/chunks/map-missing-migrants-1cf10cfb.js"() {
    init_shims();
    init_app_9f378dda();
    init_layout_3f1c4dcc();
    init_Image_8e30e86c();
    init_CornerTitle_6f993505();
    init_BackTo_d882ed88();
    init_global_130d3fe3();
    import_bowser16 = __toModule(require_es5());
    init_store_8bf23024();
    init_utils_09998264();
    init_IntersectionObserver_4cd4a541();
    metadata12 = {
      "layout": "project",
      "title": "Mapping Missing Migrants",
      "description": "Documenting migrants who have lost their lives while seeking refuge.",
      "date": "2019-10-22",
      "audience": "The world!",
      "featured": true,
      "image": "map-missing-migrants/header.png",
      "img_alt": "An example screen of the 'Mapping Missing Migrants' article",
      "techstack": "Mapbox, R",
      "github": "https://github.com/connorrothschild/map-missing-migrants/",
      "url": "https://connorrothschild.github.io/map-missing-migrants"
    };
    Map_missing_migrants = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return `${validate_component(Layout2, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata12), {}, {
        default: () => `${validate_component(Image, "Image").$$render($$result, {
          href: "https://connorrothschild.github.io/map-missing-migrants",
          src: "/images/project/map-missing-migrants/header.png",
          alt: "Header"
        }, {}, {})}
<p><a href="${"https://connorrothschild.github.io/map-missing-migrants/"}" rel="${"nofollow"}"><strong>Mapping Missing Migrants</strong></a> is a visual storytelling piece focused on migrants and refugees who have lost their lives while traveling to another country. It was awarded the Student Bronze in the <a href="${"https://web.archive.org/web/20210121150713/https://www.malofiejgraphics.com/general/students-have-won-awards-too/2020/08"}" rel="${"nofollow"}">28th Malofiej Awards</a>.</p>
<h1 id="${"tools-used"}"><a href="${"#tools-used"}">Tools used</a></h1>
<p>This project was an example of a low-code but high-impact story. Rather than reinventing the wheel and implementing my own scrollytelling capabilities, I used two tools from Mapbox: their <a href="${"https://www.mapbox.com/solutions/interactive-storytelling"}" rel="${"nofollow"}">interactive storytelling template</a> and <a href="${"https://www.mapbox.com/mapbox-studio"}" rel="${"nofollow"}">Mapbox Studio</a>. In combination, I was able to write very little code but provide a highly tailored, powerful user experience for the reader.</p>
<p>I used Mapbox Studio to create each of the bubbles that is present on the map. As a corollary, I used Studio to define the size, fill, and location of each bubble. I created many different layers that toggled visibility on scroll.</p>
<p>To trigger scroll events, I used the Mapbox storytelling template. This was a simple JSON where, for each \u2018view\u2019, I defined three elements: the <em>text</em>, the <em>layer</em>, and the <em>location</em>.</p>
<h1 id="${"project-images"}"><a href="${"#project-images"}">Project images</a></h1>
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/map-missing-migrants/mac-1.png",
          alt: "Project image for 'Mapping Missing Migrants'",
          width: "100%"
        }, {}, {})}
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/map-missing-migrants/mac-2.png",
          alt: "Project image for 'Mapping Missing Migrants'",
          width: "48%"
        }, {}, {})}
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/map-missing-migrants/mac-3.png",
          alt: "Project image for 'Mapping Missing Migrants'",
          width: "48%"
        }, {}, {})}
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/map-missing-migrants/mac-4.png",
          alt: "Project image for 'Mapping Missing Migrants'",
          width: "48%"
        }, {}, {})}
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/map-missing-migrants/mac-5.png",
          alt: "Project image for 'Mapping Missing Migrants'",
          width: "48%"
        }, {}, {})}
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/map-missing-migrants/phone-1.png",
          alt: "Project image for 'Mapping Missing Migrants'",
          width: "32%"
        }, {}, {})}
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/map-missing-migrants/phone-2.png",
          alt: "Project image for 'Mapping Missing Migrants'",
          width: "32%"
        }, {}, {})}
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/map-missing-migrants/phone-3.png",
          alt: "Project image for 'Mapping Missing Migrants'",
          width: "32%"
        }, {}, {})}`
      })}`;
    });
  }
});

// .svelte-kit/output/server/chunks/media-mentions-37dc09b6.js
var media_mentions_37dc09b6_exports = {};
__export(media_mentions_37dc09b6_exports, {
  default: () => Media_mentions,
  metadata: () => metadata13
});
var import_bowser17, metadata13, Media_mentions;
var init_media_mentions_37dc09b6 = __esm({
  ".svelte-kit/output/server/chunks/media-mentions-37dc09b6.js"() {
    init_shims();
    init_app_9f378dda();
    init_layout_3f1c4dcc();
    init_Image_8e30e86c();
    init_CornerTitle_6f993505();
    init_BackTo_d882ed88();
    init_global_130d3fe3();
    import_bowser17 = __toModule(require_es5());
    init_store_8bf23024();
    init_utils_09998264();
    init_IntersectionObserver_4cd4a541();
    metadata13 = {
      "layout": "project",
      "title": "The Race for Media Attention",
      "description": "Visualizing media coverage of 2020 presidential candidates over time.",
      "date": "2019-11-12",
      "audience": "The world!",
      "featured": false,
      "image": "media-mentions/header.png",
      "img_alt": "Media mentions header image, includes an image of a MacBook with the application open.",
      "techstack": "Observable",
      "github": "https://observablehq.com/@connorrothschild/bar-chart-race",
      "url": "https://observablehq.com/@connorrothschild/bar-chart-race"
    };
    Media_mentions = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return `${validate_component(Layout2, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata13), {}, {
        default: () => `${validate_component(Image, "Image").$$render($$result, {
          href: "https://observablehq.com/@connorrothschild/bar-chart-race/",
          src: "/images/project/media-mentions/header.png",
          alt: "Header"
        }, {}, {})}
<p><a href="${"https://observablehq.com/@connorrothschild/bar-chart-race"}" rel="${"nofollow"}"><strong>The Race for Media Attention?</strong></a> is an animated bar chart race depicting media mentions of Democratic presidential candidates during the 2020 presidential election. I made it before animated bar chart races were cool (and then <a href="${"https://www.newsbreak.com/news/1465770194170/reddits-dataisbeautiful-is-sick-of-bar-chart-races-so-its-banning-them"}" rel="${"nofollow"}">uncool</a>).</p>
<h1 id="${"tools-used"}"><a href="${"#tools-used"}">Tools used</a></h1>
<p>This project was built with <a href="${"https://observablehq.com/"}" rel="${"nofollow"}">Observable</a>. It was my first Observable notebook, and mostly an attempt to learn. (It was a fork of Mike Bostock\u2019s existing bar chart race.)</p>
<h1 id="${"project-images"}"><a href="${"#project-images"}">Project images</a></h1>
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/media-mentions/mac.png",
          alt: "Project image for 'The Race for Media Attention'",
          width: "74%"
        }, {}, {})}
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/media-mentions/phone.png",
          alt: "Project image for 'The Race for Media Attention'",
          width: "22%"
        }, {}, {})}`
      })}`;
    });
  }
});

// .svelte-kit/output/server/chunks/one-line-hacks-8cd8beed.js
var one_line_hacks_8cd8beed_exports = {};
__export(one_line_hacks_8cd8beed_exports, {
  default: () => One_line_hacks,
  metadata: () => metadata14
});
var import_bowser18, metadata14, One_line_hacks;
var init_one_line_hacks_8cd8beed = __esm({
  ".svelte-kit/output/server/chunks/one-line-hacks-8cd8beed.js"() {
    init_shims();
    init_app_9f378dda();
    init_layout_3f1c4dcc();
    init_Image_8e30e86c();
    init_CornerTitle_6f993505();
    init_BackTo_d882ed88();
    init_global_130d3fe3();
    import_bowser18 = __toModule(require_es5());
    init_store_8bf23024();
    init_utils_09998264();
    init_IntersectionObserver_4cd4a541();
    metadata14 = {
      "layout": "project",
      "title": "One Line Hacks",
      "description": "A collection of random utilities that I find myself Googling too often.",
      "date": "2021-05-01",
      "audience": "The world!",
      "featured": false,
      "image": "one-line-hacks/header.png",
      "img_alt": "One line hacks header image, includes an image of a MacBook with the application open.",
      "techstack": "JavaScript, Vue, Tailwind",
      "github": "https://connorrothschild.github.io/one-line-hacks/",
      "url": "https://connorrothschild.github.io/one-line-hacks/"
    };
    One_line_hacks = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return `${validate_component(Layout2, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata14), {}, {
        default: () => `${validate_component(Image, "Image").$$render($$result, {
          href: "https://connorrothschild.github.io/one-line-hacks/",
          src: "/images/project/one-line-hacks/header.png",
          alt: "Header"
        }, {}, {})}
<p><a href="${"https://connorrothschild.github.io/one-line-hacks/"}" rel="${"nofollow"}"><strong>One Line Hacks</strong></a> is a collection of random utilities and functions that I find myself Googling too often.</p>
<h1 id="${"tools-used"}"><a href="${"#tools-used"}">Tools used</a></h1>
<p>This small site was built with Vue and Tailwind. I use Nuxt and Nuxt Content for Markdown-based content creation.</p>
<h1 id="${"project-images"}"><a href="${"#project-images"}">Project images</a></h1>
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/one-line-hacks/mac-1.png",
          alt: "Project image for the project 'One Line Hacks'",
          width: "74%"
        }, {}, {})}
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/one-line-hacks/phone-1.png",
          alt: "Project image for the project 'One Line Hacks'",
          width: "22%"
        }, {}, {})}`
      })}`;
    });
  }
});

// .svelte-kit/output/server/chunks/police-killings-c1167173.js
var police_killings_c1167173_exports = {};
__export(police_killings_c1167173_exports, {
  default: () => Police_killings,
  metadata: () => metadata15
});
var import_bowser19, metadata15, Police_killings;
var init_police_killings_c1167173 = __esm({
  ".svelte-kit/output/server/chunks/police-killings-c1167173.js"() {
    init_shims();
    init_app_9f378dda();
    init_layout_3f1c4dcc();
    init_Image_8e30e86c();
    init_CornerTitle_6f993505();
    init_BackTo_d882ed88();
    init_global_130d3fe3();
    import_bowser19 = __toModule(require_es5());
    init_store_8bf23024();
    init_utils_09998264();
    init_IntersectionObserver_4cd4a541();
    metadata15 = {
      "layout": "project",
      "title": "Mapping Police Killings",
      "description": "Visualizing officer-involved deaths since 2013.",
      "date": "2020-12-22",
      "audience": "Mapping Police Violence",
      "featured": false,
      "image": "police-killings/header.png",
      "img_alt": "Police killings header, includes an image of a MacBook with the application open.",
      "techstack": "D3.js, Vue.js, Bulma, R",
      "github": "https://github.com/connorrothschild/police-killings",
      "url": "https://mappingpoliceviolence.org/"
    };
    Police_killings = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return `${validate_component(Layout2, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata15), {}, {
        default: () => `${validate_component(Image, "Image").$$render($$result, {
          href: "https://connorrothschild.github.io/police-killings/",
          src: "/images/project/police-killings/header.png",
          alt: "Header"
        }, {}, {})}
<p><a href="${"https://connorrothschild.github.io/police-killings/"}" rel="${"nofollow"}"><strong>Mapping Police Killings</strong></a> is an application that allows for user exploration of officer-involved deaths across any US city or state. It leverages data from <a href="${"https://mappingpoliceviolence.org/"}" rel="${"nofollow"}">Mapping Police Violence</a> and visualizes shootings in a geographic area using a <a href="${"https://observablehq.com/@d3/force-directed-graph"}" rel="${"nofollow"}">force-directed graph</a> built in D3. Users are able to filter by city or state, and upon initail selection, they are able to group by a variety of victim characteristics, such as age, race, armed status, or cause of death.</p>
<p>The application is featured on the <a href="${"https://mappingpoliceviolence.org/"}" rel="${"nofollow"}">Mapping Police Violence homepage</a>. It is seen by thousands of visitors on a daily basis.</p>
<h1 id="${"tools-used"}"><a href="${"#tools-used"}">Tools used</a></h1>
<p>I used <a href="${"https://vuejs.org/"}" rel="${"nofollow"}">Vue</a> to design the application and handle user interaction. I used <a href="${"https://d3js.org/"}" rel="${"nofollow"}">D3.js</a> for visualization and for its force-directed diagram capabilities. Additional styling was done with <a href="${"https://bulma.io/"}" rel="${"nofollow"}">Bulma</a>.</p>
<p>This was actually the second iteration of this visualization. <a href="${"https://connorrothschild.github.io/police-killings-v1/"}" rel="${"nofollow"}">Version 1 can be found here</a>. Although that version was <a href="${"https://github.com/connorrothschild/police-killings-v1"}" rel="${"nofollow"}">built</a> with vanilla JavaScript and no CSS library (everything was built from scratch!). Upon deploying this to a more serious and more visited site (Mapping Police Violence\u2019s homepage), I decided an upgrade would be worth the investment.</p>
<h1 id="${"project-images"}"><a href="${"#project-images"}">Project images</a></h1>
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/police-killings/mac-1.png",
          alt: "Project image for 'Mapping Police Killings'",
          width: "74%"
        }, {}, {})}
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/police-killings/phone-1.png",
          alt: "Project image for 'Mapping Police Killings'",
          width: "22%"
        }, {}, {})}
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/police-killings/phone-2.png",
          alt: "Project image for 'Mapping Police Killings'",
          width: "22%"
        }, {}, {})}
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/police-killings/mac-2.png",
          alt: "Project image for 'Mapping Police Killings'",
          width: "74%"
        }, {}, {})}`
      })}`;
    });
  }
});

// .svelte-kit/output/server/chunks/quarantunes-4fd849e9.js
var quarantunes_4fd849e9_exports = {};
__export(quarantunes_4fd849e9_exports, {
  default: () => Quarantunes,
  metadata: () => metadata16
});
var import_bowser20, metadata16, Quarantunes;
var init_quarantunes_4fd849e9 = __esm({
  ".svelte-kit/output/server/chunks/quarantunes-4fd849e9.js"() {
    init_shims();
    init_app_9f378dda();
    init_layout_3f1c4dcc();
    init_Image_8e30e86c();
    init_CornerTitle_6f993505();
    init_BackTo_d882ed88();
    init_global_130d3fe3();
    import_bowser20 = __toModule(require_es5());
    init_store_8bf23024();
    init_utils_09998264();
    init_IntersectionObserver_4cd4a541();
    metadata16 = {
      "layout": "project",
      "title": "Quarantunes",
      "description": "Explore your listening history during COVID-19.",
      "date": "2020-10-22",
      "audience": "The world (2000 users)",
      "featured": true,
      "image": "quarantunes/header.png",
      "img_alt": "Quarantunes header, includes an image of a MacBook with the application open.",
      "techstack": "D3.js, Vue.js, Bulma, R, Spotify API",
      "github": "https://github.com/connorrothschild/quarantunes",
      "url": "https://quarantune.netlify.app"
    };
    Quarantunes = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return `${validate_component(Layout2, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata16), {}, {
        default: () => `${validate_component(Image, "Image").$$render($$result, {
          href: "https://quarantune.netlify.app",
          src: "/images/project/quarantunes/header.png",
          alt: "Header"
        }, {}, {})}
<p><a href="${"https://quarantune.netlify.app"}" rel="${"nofollow"}"><strong>Quarantunes</strong></a> is an application for Spotify users to explore their listening history during the COVID-19 pandemic. It has been used by over 4,000 visitors.
There are three tabs within the application.
The first showcases \u2018top artists\u2019 and \u2018top tracks\u2019 throughout the pandemic.
The second shows some statistics about tracks according to Spotify\u2019s <a href="${"https://developer.spotify.com/documentation/web-api/reference/#endpoint-get-audio-features"}" rel="${"nofollow"}">audio features</a> (e.g. which of your top songs is most danceable?).
The last tab creates two playlists for the user: one with their top tracks and another with recommendations for future listening.</p>
<h1 id="${"tools-used"}"><a href="${"#tools-used"}">Tools used</a></h1>
<p>I used <a href="${"https://vuejs.org/"}" rel="${"nofollow"}">Vue</a> to design the majority of this application. Charts were built using <a href="${"https://www.chartjs.org/"}" rel="${"nofollow"}">Chart.js</a>. This was my first serious project working with the <a href="${"https://developer.spotify.com/documentation/web-api/"}" rel="${"nofollow"}">Spotify API</a>. Perhaps the greatest lessons I learned throughout this process were related to API calls, asynchronous code, and race conditions. I also learned a bit about cookies; because the application creates a \u2018recommended\u2019 playlist for users, I had to store whether they had visited the site before to prevent creating multiple playlists on app reloads.</p>
<p>I also had some fun developing the more novel contributions of this project, such as a \u2018recommended\u2019 artist and a whole playlist of recommended songs. For recommended artists, I scraped a users\u2019 top 50 artists, and for each of those artists, pulled 20 <a href="${"https://developer.spotify.com/documentation/web-api/reference/#endpoint-get-an-artists-related-artists"}" rel="${"nofollow"}">\u2018related\u2019 artists</a> according to Spotify. Then, I appended all 1000 (50 x 20) of those artists into one array, and presented the one that appeared most frequently to the user. As for the playlist, I took the users\u2019 top 5 tracks and gathered 4 <a href="${"https://developer.spotify.com/console/get-recommendations/"}" rel="${"nofollow"}">\u2018seed\u2019 recommendations</a> based on those tracks. Voila! A playlist of 20 recommendations.</p>
<h1 id="${"project-images"}"><a href="${"#project-images"}">Project images</a></h1>
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/quarantunes/macbook.png",
          alt: "Project image for 'Quarantunes'"
        }, {}, {})}
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/quarantunes/side-by-side.png",
          alt: "Project image for 'Quarantunes'"
        }, {}, {})}`
      })}`;
    });
  }
});

// .svelte-kit/output/server/chunks/state-police-spending-3f7bcce7.js
var state_police_spending_3f7bcce7_exports = {};
__export(state_police_spending_3f7bcce7_exports, {
  default: () => State_police_spending,
  metadata: () => metadata17
});
var import_bowser21, metadata17, State_police_spending;
var init_state_police_spending_3f7bcce7 = __esm({
  ".svelte-kit/output/server/chunks/state-police-spending-3f7bcce7.js"() {
    init_shims();
    init_app_9f378dda();
    init_layout_3f1c4dcc();
    init_Image_8e30e86c();
    init_CornerTitle_6f993505();
    init_BackTo_d882ed88();
    init_global_130d3fe3();
    import_bowser21 = __toModule(require_es5());
    init_store_8bf23024();
    init_utils_09998264();
    init_IntersectionObserver_4cd4a541();
    metadata17 = {
      "layout": "project",
      "title": "How Much Does Your State Spend on Police?",
      "description": "Contextualizing police spending in your state.",
      "date": "2020-06-02",
      "audience": "The world!",
      "featured": false,
      "image": "state-police-spending/header.png",
      "img_alt": "State police spending header, includes an image of a MacBook with the application open.",
      "techstack": "D3.js",
      "github": "https://github.com/connorrothschild/state-police-spending",
      "url": "https://connorrothschild.github.io/state-police-spending/"
    };
    State_police_spending = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return `${validate_component(Layout2, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata17), {}, {
        default: () => `${validate_component(Image, "Image").$$render($$result, {
          href: "https://connorrothschild.github.io/state-police-spending/",
          src: "/images/project/state-police-spending/header.png",
          alt: "Header"
        }, {}, {})}
<p><a href="${"https://connorrothschild.github.io/state-police-spending/"}" rel="${"nofollow"}"><strong>How Much Does Your State Spend on Police?</strong></a> allows users to compare their state\u2019s police spending to a variety of equivalent costing programs, such as residential drug treatment programs or additional SNAP recipients. The goal is to contextualize police spending in numbers that everyone can understand, in particular by comparing it to other known programs.</p>
<h1 id="${"tools-used"}"><a href="${"#tools-used"}">Tools used</a></h1>
<p>I used <a href="${"https://d3js.org/"}" rel="${"nofollow"}">D3.js</a> for the minor visualization that accompanies these numbers. The rest of the computation is done by simply dividing the state\u2019s police spending by a specified denominator, one for each metric. This was a technically simple project. The goal is not to amaze, but to provide simple, easy comparisons that better inform the user about their state\u2019s police spending.</p>
<h1 id="${"project-images"}"><a href="${"#project-images"}">Project images</a></h1>
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/state-police-spending/mac.png",
          alt: "Project image for 'How Much Does Your State Spend on Police?'",
          width: "74%"
        }, {}, {})}
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/state-police-spending/phone.png",
          alt: "Project image for 'How Much Does Your State Spend on Police?'",
          width: "22%"
        }, {}, {})}`
      })}`;
    });
  }
});

// .svelte-kit/output/server/chunks/tpl-schools-db-e581ff12.js
var tpl_schools_db_e581ff12_exports = {};
__export(tpl_schools_db_e581ff12_exports, {
  default: () => Tpl_schools_db,
  metadata: () => metadata18
});
var import_bowser22, metadata18, Tpl_schools_db;
var init_tpl_schools_db_e581ff12 = __esm({
  ".svelte-kit/output/server/chunks/tpl-schools-db-e581ff12.js"() {
    init_shims();
    init_app_9f378dda();
    init_layout_3f1c4dcc();
    init_Image_8e30e86c();
    init_CornerTitle_6f993505();
    init_BackTo_d882ed88();
    init_global_130d3fe3();
    import_bowser22 = __toModule(require_es5());
    init_store_8bf23024();
    init_utils_09998264();
    init_IntersectionObserver_4cd4a541();
    metadata18 = {
      "layout": "project",
      "title": "Texas School District COVID-19 Monitoring Dashboard",
      "description": "Informing data-driven decisions about school reopenings.",
      "date": "2021-05-05",
      "audience": "Texas policymakers, parents",
      "featured": false,
      "archived": true,
      "image": "tpl-schools-db/header.png",
      "img_alt": "TPL header image, includes an image of a MacBook with the application open.",
      "techstack": "R, Shiny",
      "url": "http://news.rice.edu/2021/05/05/dashboard-developed-at-rice-will-help-texas-schools-open-safely-amid-pandemic/"
    };
    Tpl_schools_db = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return `${validate_component(Layout2, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata18), {}, {
        default: () => `${validate_component(Image, "Image").$$render($$result, {
          href: "http://news.rice.edu/2021/05/05/dashboard-developed-at-rice-will-help-texas-schools-open-safely-amid-pandemic/",
          src: "/images/project/tpl-schools-db/header.png",
          alt: "Header"
        }, {}, {})}
<p><a href="${"http://news.rice.edu/2021/05/05/dashboard-developed-at-rice-will-help-texas-schools-open-safely-amid-pandemic/"}" rel="${"nofollow"}"><strong>The Texas School District COVID-19 Monitoring Dashboard</strong></a> was a dashboard built by my team at the Texas Policy Lab for Texas policymakers (and any other interested parties) to survey the landscape of COVID-19 in their school districts.</p>
<h1 id="${"tools-used"}"><a href="${"#tools-used"}">Tools used</a></h1>
<p>The app is built with R and is a Shiny web application. I was mostly responsible for the frontend development and some design. I helped less with the backend data retrieval, wrangling, and testing.</p>
<h1 id="${"project-images"}"><a href="${"#project-images"}">Project images</a></h1>
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/tpl-schools-db/mac-1.png",
          alt: "Project image for the project 'I Can Guess What You're Doing Right Now'",
          width: "49%"
        }, {}, {})}
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/tpl-schools-db/mac-2.png",
          alt: "Project image for the project 'I Can Guess What You're Doing Right Now'",
          width: "49%"
        }, {}, {})}
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/tpl-schools-db/iphone-1.png",
          alt: "Project image for the project 'I Can Guess What You're Doing Right Now'",
          width: "31%"
        }, {}, {})}
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/tpl-schools-db/iphone-2.png",
          alt: "Project image for the project 'I Can Guess What You're Doing Right Now'",
          width: "31%"
        }, {}, {})}
${validate_component(Image, "Image").$$render($$result, {
          style: "box-shadow: none;",
          src: "/images/project/tpl-schools-db/iphone-3.png",
          alt: "Project image for the project 'I Can Guess What You're Doing Right Now'",
          width: "31%"
        }, {}, {})}`
      })}`;
    });
  }
});

// .svelte-kit/output/server/chunks/projects.json-5153e243.js
var projects_json_5153e243_exports = {};
__export(projects_json_5153e243_exports, {
  get: () => get2
});
async function get2() {
  const imports = { "./project/atus.md": () => Promise.resolve().then(() => (init_atus_5ac17a29(), atus_5ac17a29_exports)), "./project/bob-ross-art-gallery.md": () => Promise.resolve().then(() => (init_bob_ross_art_gallery_9eeb337a(), bob_ross_art_gallery_9eeb337a_exports)), "./project/compas.md": () => Promise.resolve().then(() => (init_compas_720ac1d2(), compas_720ac1d2_exports)), "./project/covid-masking.md": () => Promise.resolve().then(() => (init_covid_masking_556f2090(), covid_masking_556f2090_exports)), "./project/cudi-hums.md": () => Promise.resolve().then(() => (init_cudi_hums_00d50d13(), cudi_hums_00d50d13_exports)), "./project/how-many-people.md": () => Promise.resolve().then(() => (init_how_many_people_3ca8cf42(), how_many_people_3ca8cf42_exports)), "./project/map-houston-homicides.md": () => Promise.resolve().then(() => (init_map_houston_homicides_fb5e3c63(), map_houston_homicides_fb5e3c63_exports)), "./project/map-missing-migrants.md": () => Promise.resolve().then(() => (init_map_missing_migrants_1cf10cfb(), map_missing_migrants_1cf10cfb_exports)), "./project/media-mentions.md": () => Promise.resolve().then(() => (init_media_mentions_37dc09b6(), media_mentions_37dc09b6_exports)), "./project/one-line-hacks.md": () => Promise.resolve().then(() => (init_one_line_hacks_8cd8beed(), one_line_hacks_8cd8beed_exports)), "./project/police-killings.md": () => Promise.resolve().then(() => (init_police_killings_c1167173(), police_killings_c1167173_exports)), "./project/quarantunes.md": () => Promise.resolve().then(() => (init_quarantunes_4fd849e9(), quarantunes_4fd849e9_exports)), "./project/state-police-spending.md": () => Promise.resolve().then(() => (init_state_police_spending_3f7bcce7(), state_police_spending_3f7bcce7_exports)), "./project/tpl-schools-db.md": () => Promise.resolve().then(() => (init_tpl_schools_db_e581ff12(), tpl_schools_db_e581ff12_exports)) };
  let body = [];
  for (const path in imports) {
    body.push(imports[path]().then(({ metadata: metadata53, slug }) => {
      return {
        metadata: metadata53,
        slug,
        path
      };
    }));
  }
  const projects = await Promise.all(body);
  return {
    body: JSON.stringify(projects)
  };
}
var init_projects_json_5153e243 = __esm({
  ".svelte-kit/output/server/chunks/projects.json-5153e243.js"() {
    init_shims();
  }
});

// .svelte-kit/output/server/chunks/layout-f08d1a0d.js
var layout_f08d1a0d_exports = {};
__export(layout_f08d1a0d_exports, {
  default: () => Layout3
});
var import_bowser23, Layout3;
var init_layout_f08d1a0d = __esm({
  ".svelte-kit/output/server/chunks/layout-f08d1a0d.js"() {
    init_shims();
    init_app_9f378dda();
    init_CornerTitle_6f993505();
    init_BackTo_d882ed88();
    init_store_8bf23024();
    init_utils_09998264();
    init_IntersectionObserver_4cd4a541();
    init_global_130d3fe3();
    import_bowser23 = __toModule(require_es5());
    Layout3 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $seo, $$unsubscribe_seo;
      $$unsubscribe_seo = subscribe(seo, (value) => $seo = value);
      let { title: title5 } = $$props;
      let { description: description5 } = $$props;
      let { media_url } = $$props;
      let { date: date2 } = $$props;
      let image = `https://og-image-eight-eta.vercel.app/${title5}.png?subtitle=${description5}&theme=light&md=true&hasImage=true`;
      set_store_value(seo, $seo = { title: title5, description: description5, image }, $seo);
      let element, intersecting;
      if ($$props.title === void 0 && $$bindings.title && title5 !== void 0)
        $$bindings.title(title5);
      if ($$props.description === void 0 && $$bindings.description && description5 !== void 0)
        $$bindings.description(description5);
      if ($$props.media_url === void 0 && $$bindings.media_url && media_url !== void 0)
        $$bindings.media_url(media_url);
      if ($$props.date === void 0 && $$bindings.date && date2 !== void 0)
        $$bindings.date(date2);
      let $$settled;
      let $$rendered;
      do {
        $$settled = true;
        $$rendered = `${validate_component(Transition, "Transition").$$render($$result, { split: "words" }, {}, {})}
${validate_component(CornerTitle, "CornerTitle").$$render($$result, {
          title: title5,
          subtitle: dateFormat(date2),
          intersecting,
          rootMargin: "-60px"
        }, {}, {})}
<main>${validate_component(IntersectionObserver_1, "IntersectionObserver").$$render($$result, {
          element,
          rootMargin: "-60px",
          intersecting
        }, {
          intersecting: ($$value) => {
            intersecting = $$value;
            $$settled = false;
          }
        }, {
          default: () => `<div class="${"top-level"}"${add_attribute("this", element, 0)}>${validate_component(BackTo, "BackTo").$$render($$result, {
            href: "/award",
            text: "Awards",
            classes: "page-overline transition-subtitle"
          }, {}, {})}

      <h1 class="${"content-title uppercase transition-title overflow-hidden"}">${escape(title5)}</h1></div>`
        })}
  <div class="${"content main-content transition-content"}">${slots.default ? slots.default({}) : ``}

    <p class="${"media-link"}"><a${add_attribute("href", media_url, 0)} target="${"_blank"}" rel="${"noopener noreferrer"}">See media here.</a></p>
    ${validate_component(BackTo, "BackTo").$$render($$result, {
          href: "/award",
          text: "Back to all awards",
          classes: "border-top"
        }, {}, {})}</div>
</main>`;
      } while (!$$settled);
      $$unsubscribe_seo();
      return $$rendered;
    });
  }
});

// .svelte-kit/output/server/chunks/bipp-2018-2f226335.js
var bipp_2018_2f226335_exports = {};
__export(bipp_2018_2f226335_exports, {
  default: () => Bipp_2018,
  metadata: () => metadata19
});
var import_bowser24, metadata19, Bipp_2018;
var init_bipp_2018_2f226335 = __esm({
  ".svelte-kit/output/server/chunks/bipp-2018-2f226335.js"() {
    init_shims();
    init_app_9f378dda();
    init_layout_f08d1a0d();
    init_CornerTitle_6f993505();
    init_BackTo_d882ed88();
    init_global_130d3fe3();
    import_bowser24 = __toModule(require_es5());
    init_store_8bf23024();
    init_utils_09998264();
    init_IntersectionObserver_4cd4a541();
    metadata19 = {
      "title": "1st Place, BIPP Competition",
      "place": "1st Place",
      "award": "BIPP Competition",
      "organization": "The Baker Institute for Public Policy",
      "date": "2018-04-15",
      "featured": false,
      "media_url": "https://mailchi.mp/rice.edu/gala-547673?e=a93e1ef59d#AnnualReport",
      "project_url": "https://issuu.com/ricejpp/docs/rjppfinalsingle/20"
    };
    Bipp_2018 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return `${validate_component(Layout3, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata19), {}, {
        default: () => `<p>Awarded first place in the Baker Institute Student Forum\u2019s fifth annual undergraduate public policy competition. Judged by Dr. Luis Duno-Gottberg, Dr. Francisco J. Monaldi, H. Richard Sindelar, and Oscar Arredondo.</p>
<p>The award was in recognition of a 6000-word research paper and a 20 minute presentation on U.S. foreign policy toward the Western Hemisphere; my partner and I\u2019s paper critiqued current mechanisms for distributing food aid to Haiti. Awarded prize money and publication in the Rice Journal of Public Policy (Spring 2019 issue).</p>`
      })}`;
    });
  }
});

// .svelte-kit/output/server/chunks/chrp-2020-7675f653.js
var chrp_2020_7675f653_exports = {};
__export(chrp_2020_7675f653_exports, {
  default: () => Chrp_2020,
  metadata: () => metadata20
});
var import_bowser25, metadata20, Chrp_2020;
var init_chrp_2020_7675f653 = __esm({
  ".svelte-kit/output/server/chunks/chrp-2020-7675f653.js"() {
    init_shims();
    init_app_9f378dda();
    init_layout_f08d1a0d();
    init_CornerTitle_6f993505();
    init_BackTo_d882ed88();
    init_global_130d3fe3();
    import_bowser25 = __toModule(require_es5());
    init_store_8bf23024();
    init_utils_09998264();
    init_IntersectionObserver_4cd4a541();
    metadata20 = {
      "title": "1st Place, Coronavirus Houston Response Projects",
      "place": "1st Place",
      "award": "Coronavirus Houston Response Projects",
      "organization": "Data To Knowledge Lab",
      "date": "2020-04-15",
      "featured": true,
      "media_url": "https://news.rice.edu/2020/04/27/d2k-lab-awards-top-teams-at-virtual-showcase/",
      "project_url": "https://github.com/connorrothschild/covid-mobility"
    };
    Chrp_2020 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return `${validate_component(Layout3, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata20), {}, {
        default: () => `<p>Awarded first place in the Rice Data to Knowledge Lab\u2019s \u2018COVID19 Houston Response Projects\u2019 competition. My team\u2019s project, \u201CMobility and Predictors of Movement During COVID-19,\u201D was a rigorous statistical analysis of how COVID19 impacted community movement, mobility, and social distancing. It took the form of a Shiny Web Application, where users could explore the effects of stay-at-home orders at reducing commnunity movement and COVID-19 transmission.</p>`
      })}`;
    });
  }
});

// .svelte-kit/output/server/chunks/d2k-showcase-2020-6103b3a1.js
var d2k_showcase_2020_6103b3a1_exports = {};
__export(d2k_showcase_2020_6103b3a1_exports, {
  default: () => D2k_showcase_2020,
  metadata: () => metadata21
});
var import_bowser26, metadata21, D2k_showcase_2020;
var init_d2k_showcase_2020_6103b3a1 = __esm({
  ".svelte-kit/output/server/chunks/d2k-showcase-2020-6103b3a1.js"() {
    init_shims();
    init_app_9f378dda();
    init_layout_f08d1a0d();
    init_CornerTitle_6f993505();
    init_BackTo_d882ed88();
    init_global_130d3fe3();
    import_bowser26 = __toModule(require_es5());
    init_store_8bf23024();
    init_utils_09998264();
    init_IntersectionObserver_4cd4a541();
    metadata21 = {
      "title": "2nd Place, 2020 D2K Showcase",
      "place": "2nd Place",
      "award": "2020 D2K Showcase",
      "organization": "Data to Knowledge Lab",
      "date": "2020-12-09",
      "featured": false,
      "media_url": "https://d2k.rice.edu/news/closing-gap-data-science-approach-reducing-academic-achievement-gaps",
      "project_url": "https://www.youtube.com/watch?v=6T5C4omYexs"
    };
    D2k_showcase_2020 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return `${validate_component(Layout3, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata21), {}, {
        default: () => `<p>Awarded second place out of 10+ teams in the 2020 Data to Knowledge Lab\u2019s showcase. My team provided a data science approach to predicting student engagement and success, allowing teachers to preemptively intervene in students academic careers and prevent failure.</p>`
      })}`;
    });
  }
});

// .svelte-kit/output/server/chunks/datathon-2020-417f5796.js
var datathon_2020_417f5796_exports = {};
__export(datathon_2020_417f5796_exports, {
  default: () => Datathon_2020,
  metadata: () => metadata22
});
var import_bowser27, metadata22, Datathon_2020;
var init_datathon_2020_417f5796 = __esm({
  ".svelte-kit/output/server/chunks/datathon-2020-417f5796.js"() {
    init_shims();
    init_app_9f378dda();
    init_layout_f08d1a0d();
    init_CornerTitle_6f993505();
    init_BackTo_d882ed88();
    init_global_130d3fe3();
    import_bowser27 = __toModule(require_es5());
    init_store_8bf23024();
    init_utils_09998264();
    init_IntersectionObserver_4cd4a541();
    metadata22 = {
      "title": "1st Place (Houston Track), 2020 Rice Datathon",
      "place": "1st Place (Houston Track)",
      "award": "2020 Rice Datathon",
      "organization": "Rice DataSci Club",
      "date": "2020-01-09",
      "featured": false,
      "media_url": "https://connorrothschild.github.io/datathon-2020/source/",
      "project_url": "https://connorrothschild.github.io/datathon-2020/source/"
    };
    Datathon_2020 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return `${validate_component(Layout3, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata22), {}, {
        default: () => `<p>Awarded first place in the \u2018Houston/Texas trends\u2019 track at the 2020 Rice Datathon. The winning project, \u2019<a href="${"https://connorrothschild.github.io/datathon-2020/source/"}" rel="${"nofollow"}">Mapping Houston Homicides</a>,\u2019 created in 16 hours, maps Houston homicides across time and demographics.</p>`
      })}`;
    });
  }
});

// .svelte-kit/output/server/chunks/hpc-2018-3b361fa0.js
var hpc_2018_3b361fa0_exports = {};
__export(hpc_2018_3b361fa0_exports, {
  default: () => Hpc_2018,
  metadata: () => metadata23
});
var import_bowser28, metadata23, Hpc_2018;
var init_hpc_2018_3b361fa0 = __esm({
  ".svelte-kit/output/server/chunks/hpc-2018-3b361fa0.js"() {
    init_shims();
    init_app_9f378dda();
    init_layout_f08d1a0d();
    init_CornerTitle_6f993505();
    init_BackTo_d882ed88();
    init_global_130d3fe3();
    import_bowser28 = __toModule(require_es5());
    init_store_8bf23024();
    init_utils_09998264();
    init_IntersectionObserver_4cd4a541();
    metadata23 = {
      "title": "1st Place, 2018 Houston Policy Challenge",
      "place": "1st Place",
      "award": "2018 Houston Policy Challenge",
      "organization": "Rice University",
      "date": "2018-02-04",
      "featured": false,
      "media_url": "https://www.houstonpublicmedia.org/articles/news/2018/02/27/270232/rice-students-win-flood-policy-contest-for-multi-home-buyout-idea/",
      "project_url": "http://news.rice.edu/2018/02/23/martel-college-students-win-rices-inaugural-houston-centered-policy-challenge/"
    };
    Hpc_2018 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return `${validate_component(Layout3, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata23), {}, {
        default: () => `<p>Awarded first place at Rice University\u2019s inaugural Houston Centered Policy Design Competition. Judged by Houston Mayor Pro Tem Ellen Cohen; former president and CEO of the Jewish Federation of Greater Houston, Lee Wunsch; City Council at-large 2 representative, David Robinson; director of Rice\u2019s Kinder Institute for Urban Research, Bill Fulton; and \u201Cflood czar\u201D Stephen Costello.</p>
<p>My partner and I proposed an innovative, multi-home buyout system for the Meyerland community in the wake of Hurricane Harvey. We recommended multi-home buyouts in order to address the \u201Ccheckerboard effect\u201D of home buyouts and also increase community solidarity. Awarded prize money and seed money for implementation.</p>`
      })}`;
    });
  }
});

// .svelte-kit/output/server/chunks/hpc-2019-ea0c7b04.js
var hpc_2019_ea0c7b04_exports = {};
__export(hpc_2019_ea0c7b04_exports, {
  default: () => Hpc_2019,
  metadata: () => metadata24
});
var import_bowser29, metadata24, Hpc_2019;
var init_hpc_2019_ea0c7b04 = __esm({
  ".svelte-kit/output/server/chunks/hpc-2019-ea0c7b04.js"() {
    init_shims();
    init_app_9f378dda();
    init_layout_f08d1a0d();
    init_CornerTitle_6f993505();
    init_BackTo_d882ed88();
    init_global_130d3fe3();
    import_bowser29 = __toModule(require_es5());
    init_store_8bf23024();
    init_utils_09998264();
    init_IntersectionObserver_4cd4a541();
    metadata24 = {
      "title": "2nd Place, 2019 Houston Policy Challenge",
      "place": "2nd Place",
      "award": "2019 Houston Policy Challenge",
      "organization": "Rice University",
      "date": "2019-02-04",
      "featured": false,
      "media_url": "https://kinder.rice.edu/urbanedge/2019/02/26/affordable-housing-houston-rice-university"
    };
    Hpc_2019 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return `${validate_component(Layout3, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata24), {}, {
        default: () => `<p>Awarded second place in the 2019 Houston Policy Challenge. Judged by Dwight Boykins, Houston city council member; Tory Gunsolley, president and CEO of the Houston Housing Authority; Amanda Timm, executive director of Local Initiatives Support Corporation; Tom McCasland, director of the City of Houston\u2019s Housing and Community Development department and Stephan Fairfield, founder and CEO of Covenant Community Capital.</p>
<p>My team and I proposed a program which incentivizes homeowners in high-opportunity neighborhoods to construct ADUs &amp; house voucher recipients. Our proposal prevents \u201CNIMBYism\u201D and community backlash to high-concentration public housing projects, and decentralizes low-income voucher recipients to high-opportunity neighborhoods.</p>`
      })}`;
    });
  }
});

// .svelte-kit/output/server/chunks/hpc-2020-8d2ea241.js
var hpc_2020_8d2ea241_exports = {};
__export(hpc_2020_8d2ea241_exports, {
  default: () => Hpc_2020,
  metadata: () => metadata25
});
var import_bowser30, metadata25, Hpc_2020;
var init_hpc_2020_8d2ea241 = __esm({
  ".svelte-kit/output/server/chunks/hpc-2020-8d2ea241.js"() {
    init_shims();
    init_app_9f378dda();
    init_layout_f08d1a0d();
    init_CornerTitle_6f993505();
    init_BackTo_d882ed88();
    init_global_130d3fe3();
    import_bowser30 = __toModule(require_es5());
    init_store_8bf23024();
    init_utils_09998264();
    init_IntersectionObserver_4cd4a541();
    metadata25 = {
      "title": "1st Place, 2020 Houston Policy Challenge",
      "place": "1st Place",
      "award": "2020 Houston Policy Challenge",
      "organization": "Rice University",
      "date": "2020-03-09",
      "featured": false,
      "media_url": "https://news.rice.edu/2020/03/02/rice-students-tackle-criminal-justice-reform-at-houston-policy-challenge/"
    };
    Hpc_2020 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return `${validate_component(Layout3, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata25), {}, {
        default: () => `<p>Awarded first place (out of 13 teams) at Rice University\u2019s 2020 Houston Policy Challenge. Judged by Harris County Sheriff Ed Gonzalez, Harris County District Attorney Kim Ogg, U.S. Magistrate Judge Andrew Edison, Southern District of Texas, and Judge Franklin Bynum, Harris County Criminal Court at Law No. 8.</p>
<p>My partner and I proposed a pre-trial diversion program, \u2018New Path,\u2019 for pregnant women and mothers of young children.</p>`
      })}`;
    });
  }
});

// .svelte-kit/output/server/chunks/hudspeth-2020-05fcf5b9.js
var hudspeth_2020_05fcf5b9_exports = {};
__export(hudspeth_2020_05fcf5b9_exports, {
  default: () => Hudspeth_2020,
  metadata: () => metadata26
});
var import_bowser31, metadata26, Hudspeth_2020;
var init_hudspeth_2020_05fcf5b9 = __esm({
  ".svelte-kit/output/server/chunks/hudspeth-2020-05fcf5b9.js"() {
    init_shims();
    init_app_9f378dda();
    init_layout_f08d1a0d();
    init_CornerTitle_6f993505();
    init_BackTo_d882ed88();
    init_global_130d3fe3();
    import_bowser31 = __toModule(require_es5());
    init_store_8bf23024();
    init_utils_09998264();
    init_IntersectionObserver_4cd4a541();
    metadata26 = {
      "title": "Hudspeth Award",
      "place": "Winner",
      "award": "Hudspeth Award",
      "organization": "Rice Political Science Department",
      "date": "2020-05-19",
      "featured": false,
      "media_url": "https://politicalscience.rice.edu/undergraduate-awards",
      "project_url": "https://www.researchgate.net/publication/332470540_Vota_Testing_the_Impact_of_Spanish-Language_Ballots_on_Election_Results_and_Preferences"
    };
    Hudspeth_2020 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return `${validate_component(Layout3, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata26), {}, {
        default: () => `<p>Recipient of the Hudspeth Award in recognition of my seminar paper \u201C<a href="${"https://www.researchgate.net/publication/332470540_Vota_Testing_the_Impact_of_Spanish-Language_Ballots_on_Election_Results_and_Preferences"}" rel="${"nofollow"}">\xA1Vota! Testing the Impact of Spanish-Language Ballots on Election Results and Preferences</a>.\u201D The paper described an online experiment testing the impact of Spanish-language ballots on the policy preferences of white, monolingual English-speaking voters.</p>`
      })}`;
    });
  }
});

// .svelte-kit/output/server/chunks/malofiej-2020-fa078526.js
var malofiej_2020_fa078526_exports = {};
__export(malofiej_2020_fa078526_exports, {
  default: () => Malofiej_2020,
  metadata: () => metadata27
});
var import_bowser32, metadata27, Malofiej_2020;
var init_malofiej_2020_fa078526 = __esm({
  ".svelte-kit/output/server/chunks/malofiej-2020-fa078526.js"() {
    init_shims();
    init_app_9f378dda();
    init_layout_f08d1a0d();
    init_CornerTitle_6f993505();
    init_BackTo_d882ed88();
    init_global_130d3fe3();
    import_bowser32 = __toModule(require_es5());
    init_store_8bf23024();
    init_utils_09998264();
    init_IntersectionObserver_4cd4a541();
    metadata27 = {
      "title": "Bronze, 2020 Malofiej Awards",
      "place": "Bronze",
      "award": "2020 Malofiej Awards",
      "organization": "Malofiej",
      "date": "2020-08-07",
      "featured": true,
      "media_url": "https://web.archive.org/web/20210121150713/https://www.malofiejgraphics.com/general/students-have-won-awards-too/2020/08",
      "project_url": "https://connorrothschild.github.io/map-missing-migrants/"
    };
    Malofiej_2020 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return `${validate_component(Layout3, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata27), {}, {
        default: () => `<p>Awarded the Bronze in the Student Category at the 28th Annual Malofiej Awards (the self-described \u201CPulitzer for Infographics\u201D). The award was in recognition of my visualization <a href="${"https://connorrothschild.github.io/map-missing-migrants/"}" rel="${"nofollow"}">Mapping Missing Migrants</a>.</p>`
      })}`;
    });
  }
});

// .svelte-kit/output/server/chunks/malofiej-2021-adbb9a9b.js
var malofiej_2021_adbb9a9b_exports = {};
__export(malofiej_2021_adbb9a9b_exports, {
  default: () => Malofiej_2021,
  metadata: () => metadata28
});
var import_bowser33, metadata28, Malofiej_2021;
var init_malofiej_2021_adbb9a9b = __esm({
  ".svelte-kit/output/server/chunks/malofiej-2021-adbb9a9b.js"() {
    init_shims();
    init_app_9f378dda();
    init_layout_f08d1a0d();
    init_CornerTitle_6f993505();
    init_BackTo_d882ed88();
    init_global_130d3fe3();
    import_bowser33 = __toModule(require_es5());
    init_store_8bf23024();
    init_utils_09998264();
    init_IntersectionObserver_4cd4a541();
    metadata28 = {
      "title": "Bronze, 2021 Malofiej Awards",
      "place": "Bronze",
      "award": "2021 Malofiej Awards",
      "organization": "Malofiej",
      "date": "2021-06-18",
      "featured": false,
      "media_url": "https://web.archive.org/web/20210618094613/https://www.malofiejgraphics.com/awards/students-have-won-awards-too-2/2021/06",
      "project_url": "https://www.connorrothschild.com/project/bob-ross-art-gallery"
    };
    Malofiej_2021 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return `${validate_component(Layout3, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata28), {}, {
        default: () => `<p>Awarded the Bronze in the Student Category at the 29th Annual Malofiej Awards (the self-described \u201CPulitzer for Infographics\u201D). The award was in recognition of my project, <a href="${"https://www.connorrothschild.com/project/bob-ross-art-gallery"}" rel="${"nofollow"}">The Bob Ross Virtual Art Gallery.</a></p>`
      })}`;
    });
  }
});

// .svelte-kit/output/server/chunks/nationals-2017-ef86cfd7.js
var nationals_2017_ef86cfd7_exports = {};
__export(nationals_2017_ef86cfd7_exports, {
  default: () => Nationals_2017,
  metadata: () => metadata29
});
var import_bowser34, metadata29, Nationals_2017;
var init_nationals_2017_ef86cfd7 = __esm({
  ".svelte-kit/output/server/chunks/nationals-2017-ef86cfd7.js"() {
    init_shims();
    init_app_9f378dda();
    init_layout_f08d1a0d();
    init_CornerTitle_6f993505();
    init_BackTo_d882ed88();
    init_global_130d3fe3();
    import_bowser34 = __toModule(require_es5());
    init_store_8bf23024();
    init_utils_09998264();
    init_IntersectionObserver_4cd4a541();
    metadata29 = {
      "title": "National Champion, IX Speaking",
      "place": "International Extemporaneous Speaking",
      "award": "National Champion",
      "organization": "National Speech and Debate Association",
      "date": "2017-07-15",
      "featured": false,
      "media_url": "https://www.news-leader.com/story/news/business/2017/06/28/kickapoo-high-school-senior-earns-accolades-national-speech-and-debate-tournament/435570001/",
      "project_url": "https://www.youtube.com/watch?v=lzoUu1fDmWE"
    };
    Nationals_2017 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return `${validate_component(Layout3, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata29), {}, {
        default: () => `<p>Awarded National Champion in International Extemporaneous Speaking. Sponsored by the Council on Foreign Relations and EF Hutton. Competed against hundreds of high schoolers throughout 13 rounds.</p>
<p>(Yes, this was when I peaked, way back in high school.)</p>`
      })}`;
    });
  }
});

// .svelte-kit/output/server/chunks/northeastern-2020-6cc1f185.js
var northeastern_2020_6cc1f185_exports = {};
__export(northeastern_2020_6cc1f185_exports, {
  default: () => Northeastern_2020,
  metadata: () => metadata30
});
var import_bowser35, metadata30, Northeastern_2020;
var init_northeastern_2020_6cc1f185 = __esm({
  ".svelte-kit/output/server/chunks/northeastern-2020-6cc1f185.js"() {
    init_shims();
    init_app_9f378dda();
    init_layout_f08d1a0d();
    init_CornerTitle_6f993505();
    init_BackTo_d882ed88();
    init_global_130d3fe3();
    import_bowser35 = __toModule(require_es5());
    init_store_8bf23024();
    init_utils_09998264();
    init_IntersectionObserver_4cd4a541();
    metadata30 = {
      "title": "Student Winner, Computation + Journalism 2020 Conference",
      "place": "Student Winner",
      "award": "Computation + Journalism 2020 Conference",
      "organization": "Northeastern University",
      "date": "2020-01-07",
      "featured": true,
      "media_url": "https://cj2020.northeastern.edu/student-contest/",
      "project_url": "https://connorrothschild.shinyapps.io/automation/"
    };
    Northeastern_2020 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return `${validate_component(Layout3, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata30), {}, {
        default: () => `<p>Honored with the student award for best visualization at the 2020 Computation + Journalism Conference (2020) at Northeastern University. The winning visualization was \u2018<a href="${"https://connorrothschild.shinyapps.io/automation/"}" rel="${"nofollow"}">Automation and Its Impact on Jobs</a>.\u2019</p>`
      })}`;
    });
  }
});

// .svelte-kit/output/server/chunks/pudding-cup-2020-f7625164.js
var pudding_cup_2020_f7625164_exports = {};
__export(pudding_cup_2020_f7625164_exports, {
  default: () => Pudding_cup_2020,
  metadata: () => metadata31
});
var import_bowser36, metadata31, Pudding_cup_2020;
var init_pudding_cup_2020_f7625164 = __esm({
  ".svelte-kit/output/server/chunks/pudding-cup-2020-f7625164.js"() {
    init_shims();
    init_app_9f378dda();
    init_layout_f08d1a0d();
    init_CornerTitle_6f993505();
    init_BackTo_d882ed88();
    init_global_130d3fe3();
    import_bowser36 = __toModule(require_es5());
    init_store_8bf23024();
    init_utils_09998264();
    init_IntersectionObserver_4cd4a541();
    metadata31 = {
      "title": "Winner, The 2020 Pudding Cup",
      "place": "Winner",
      "award": "The 2020 Pudding Cup",
      "organization": "The Pudding",
      "featured": true,
      "date": "2021-01-07",
      "media_url": "https://pudding.cool/process/pudding-cup-2020/",
      "project_url": "https://connorrothschild.github.io/cudi-hums/"
    };
    Pudding_cup_2020 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return `${validate_component(Layout3, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata31), {}, {
        default: () => `<p>Awarded winner (top 3) out of 130+ entries to the 2020 Pudding Cup, which is a contest for visual storytelling pieces. My piece, \u2019<a href="${"https://connorrothschild.github.io/cudi-hums/"}" rel="${"nofollow"}">How Much Does Kid Cudi Hum?</a>\u2019 explored the prevalence of hums in Kid Cudi\u2019s discography.</p>`
      })}`;
    });
  }
});

// .svelte-kit/output/server/chunks/rstudio-table-contest-2021-1dd07ccb.js
var rstudio_table_contest_2021_1dd07ccb_exports = {};
__export(rstudio_table_contest_2021_1dd07ccb_exports, {
  default: () => Rstudio_table_contest_2021,
  metadata: () => metadata32
});
var import_bowser37, metadata32, Rstudio_table_contest_2021;
var init_rstudio_table_contest_2021_1dd07ccb = __esm({
  ".svelte-kit/output/server/chunks/rstudio-table-contest-2021-1dd07ccb.js"() {
    init_shims();
    init_app_9f378dda();
    init_layout_f08d1a0d();
    init_CornerTitle_6f993505();
    init_BackTo_d882ed88();
    init_global_130d3fe3();
    import_bowser37 = __toModule(require_es5());
    init_store_8bf23024();
    init_utils_09998264();
    init_IntersectionObserver_4cd4a541();
    metadata32 = {
      "title": "Honorable Mention, RStudio Table Contest",
      "place": "Honorable Mention",
      "award": "RStudio Table Contest",
      "organization": "RStudio, Inc.",
      "date": "2021-01-06",
      "featured": false,
      "media_url": "https://blog.rstudio.com/2020/12/23/winners-of-the-2020-rstudio-table-contest/",
      "project_url": "https://connorrothschild.github.io/v2/post/economist-table-replication-using-reactable"
    };
    Rstudio_table_contest_2021 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return `${validate_component(Layout3, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata32), {}, {
        default: () => `<p>Received an honorable mention in the 2020 RStudio Table Contest out of 80+ entries. My entry was a tutorial regarding the replication of a table by the Economist, using an R package called <code>reactable</code>.</p>`
      })}`;
    });
  }
});

// .svelte-kit/output/server/chunks/snd-2021-b57846b6.js
var snd_2021_b57846b6_exports = {};
__export(snd_2021_b57846b6_exports, {
  default: () => Snd_2021,
  metadata: () => metadata33
});
var import_bowser38, metadata33, Snd_2021;
var init_snd_2021_b57846b6 = __esm({
  ".svelte-kit/output/server/chunks/snd-2021-b57846b6.js"() {
    init_shims();
    init_app_9f378dda();
    init_layout_f08d1a0d();
    init_CornerTitle_6f993505();
    init_BackTo_d882ed88();
    init_global_130d3fe3();
    import_bowser38 = __toModule(require_es5());
    init_store_8bf23024();
    init_utils_09998264();
    init_IntersectionObserver_4cd4a541();
    metadata33 = {
      "title": "1st Place, 2021 Student Design Contest",
      "place": "1st Place",
      "award": "2021 Student Design Contest",
      "organization": "Society for News Design",
      "date": "2021-05-10",
      "featured": true,
      "media_url": "https://msusnd.org/2021-college-design-contest/",
      "project_url": "https://connorrothschild.github.io/bob-ross-art-gallery/"
    };
    Snd_2021 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return `${validate_component(Layout3, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata33), {}, {
        default: () => `<p>Awarded first place in the Standalone Multimedia category at the Society for News Design\u2019s 2021 Student Design Contest. </p>
<p>The award was in recognition of my project, <a href="${"https://connorrothschild.com/project/bob-ross-art-gallery/"}" rel="${"nofollow"}">The Bob Ross Virtual Art Gallery</a>. The project is a visual essay documenting the legacy of Bob Ross.</p>`
      })}`;
    });
  }
});

// .svelte-kit/output/server/chunks/awards.json-2a867850.js
var awards_json_2a867850_exports = {};
__export(awards_json_2a867850_exports, {
  get: () => get3
});
async function get3() {
  const imports = { "./award/bipp-2018.md": () => Promise.resolve().then(() => (init_bipp_2018_2f226335(), bipp_2018_2f226335_exports)), "./award/chrp-2020.md": () => Promise.resolve().then(() => (init_chrp_2020_7675f653(), chrp_2020_7675f653_exports)), "./award/d2k-showcase-2020.md": () => Promise.resolve().then(() => (init_d2k_showcase_2020_6103b3a1(), d2k_showcase_2020_6103b3a1_exports)), "./award/datathon-2020.md": () => Promise.resolve().then(() => (init_datathon_2020_417f5796(), datathon_2020_417f5796_exports)), "./award/hpc-2018.md": () => Promise.resolve().then(() => (init_hpc_2018_3b361fa0(), hpc_2018_3b361fa0_exports)), "./award/hpc-2019.md": () => Promise.resolve().then(() => (init_hpc_2019_ea0c7b04(), hpc_2019_ea0c7b04_exports)), "./award/hpc-2020.md": () => Promise.resolve().then(() => (init_hpc_2020_8d2ea241(), hpc_2020_8d2ea241_exports)), "./award/hudspeth-2020.md": () => Promise.resolve().then(() => (init_hudspeth_2020_05fcf5b9(), hudspeth_2020_05fcf5b9_exports)), "./award/malofiej-2020.md": () => Promise.resolve().then(() => (init_malofiej_2020_fa078526(), malofiej_2020_fa078526_exports)), "./award/malofiej-2021.md": () => Promise.resolve().then(() => (init_malofiej_2021_adbb9a9b(), malofiej_2021_adbb9a9b_exports)), "./award/nationals-2017.md": () => Promise.resolve().then(() => (init_nationals_2017_ef86cfd7(), nationals_2017_ef86cfd7_exports)), "./award/northeastern-2020.md": () => Promise.resolve().then(() => (init_northeastern_2020_6cc1f185(), northeastern_2020_6cc1f185_exports)), "./award/pudding-cup-2020.md": () => Promise.resolve().then(() => (init_pudding_cup_2020_f7625164(), pudding_cup_2020_f7625164_exports)), "./award/rstudio-table-contest-2021.md": () => Promise.resolve().then(() => (init_rstudio_table_contest_2021_1dd07ccb(), rstudio_table_contest_2021_1dd07ccb_exports)), "./award/snd-2021.md": () => Promise.resolve().then(() => (init_snd_2021_b57846b6(), snd_2021_b57846b6_exports)) };
  let body = [];
  for (const path in imports) {
    body.push(imports[path]().then(({ metadata: metadata53 }) => {
      return {
        metadata: metadata53,
        path
      };
    }));
  }
  const awards = await Promise.all(body);
  return {
    body: JSON.stringify(awards)
  };
}
var init_awards_json_2a867850 = __esm({
  ".svelte-kit/output/server/chunks/awards.json-2a867850.js"() {
    init_shims();
  }
});

// .svelte-kit/output/server/chunks/layout-ef610ed1.js
var layout_ef610ed1_exports = {};
__export(layout_ef610ed1_exports, {
  default: () => Layout4
});
var import_bowser39, css5, Layout4;
var init_layout_ef610ed1 = __esm({
  ".svelte-kit/output/server/chunks/layout-ef610ed1.js"() {
    init_shims();
    init_app_9f378dda();
    init_BackTo_d882ed88();
    init_CornerTitle_6f993505();
    init_store_8bf23024();
    init_utils_09998264();
    init_IntersectionObserver_4cd4a541();
    init_global_130d3fe3();
    import_bowser39 = __toModule(require_es5());
    css5 = {
      code: ".content-flex.svelte-9q9w3b.svelte-9q9w3b{display:flex;place-items:center}.content-flex.svelte-9q9w3b .description.svelte-9q9w3b{flex:2}.content-flex.svelte-9q9w3b .misc.svelte-9q9w3b{flex:1}.date.svelte-9q9w3b.svelte-9q9w3b,.tags.svelte-9q9w3b.svelte-9q9w3b{text-transform:uppercase;color:var(--text-color)}.date.svelte-9q9w3b.svelte-9q9w3b{font-family:var(--font-serif);font-weight:200;font-size:1.5rem}.tags.svelte-9q9w3b.svelte-9q9w3b{display:flex;flex-wrap:wrap;justify-content:center;margin-top:1rem}.tag.svelte-9q9w3b.svelte-9q9w3b{font-size:0.9rem;margin:0.5rem 0 0 0.5rem;background:rgba(var(--accent-color-rgb), 0.2);padding:0.45rem 0.55rem;border-radius:2px;letter-spacing:0.05rem}@media screen and (max-width: 768px){.content-flex.svelte-9q9w3b.svelte-9q9w3b{flex-direction:column}.content-flex.svelte-9q9w3b .description.svelte-9q9w3b{margin-bottom:2rem}.content-flex.svelte-9q9w3b .misc.svelte-9q9w3b{display:flex;flex-direction:row;place-items:center;justify-content:space-between}.tags.svelte-9q9w3b.svelte-9q9w3b,.tag.svelte-9q9w3b.svelte-9q9w3b{margin-top:0}}@media screen and (max-width: 468px){.content-flex.svelte-9q9w3b .description.svelte-9q9w3b{margin-bottom:1rem}.content-flex.svelte-9q9w3b .misc.svelte-9q9w3b{flex-direction:column-reverse}.date.svelte-9q9w3b.svelte-9q9w3b{font-size:1rem}.tags.svelte-9q9w3b.svelte-9q9w3b{margin-bottom:1rem}.tag.svelte-9q9w3b.svelte-9q9w3b{font-size:0.7rem}}",
      map: null
    };
    Layout4 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $seo, $$unsubscribe_seo;
      $$unsubscribe_seo = subscribe(seo, (value) => $seo = value);
      let { title: title5 } = $$props;
      let { description: description5 } = $$props;
      let { date: date2 } = $$props;
      let { tags } = $$props;
      let image = `https://og-image-eight-eta.vercel.app/${title5}.png?subtitle=${description5}&theme=light&md=true&hasImage=true`;
      set_store_value(seo, $seo = { title: title5, description: description5, image }, $seo);
      let element, intersecting;
      if ($$props.title === void 0 && $$bindings.title && title5 !== void 0)
        $$bindings.title(title5);
      if ($$props.description === void 0 && $$bindings.description && description5 !== void 0)
        $$bindings.description(description5);
      if ($$props.date === void 0 && $$bindings.date && date2 !== void 0)
        $$bindings.date(date2);
      if ($$props.tags === void 0 && $$bindings.tags && tags !== void 0)
        $$bindings.tags(tags);
      $$result.css.add(css5);
      let $$settled;
      let $$rendered;
      do {
        $$settled = true;
        $$rendered = `${validate_component(Transition, "Transition").$$render($$result, { split: "words" }, {}, {})}
${validate_component(CornerTitle, "CornerTitle").$$render($$result, {
          title: title5,
          subtitle: dateFormat(date2),
          intersecting
        }, {}, {})}
<main>${validate_component(IntersectionObserver_1, "IntersectionObserver").$$render($$result, {
          element,
          rootMargin: "-60px",
          intersecting
        }, {
          intersecting: ($$value) => {
            intersecting = $$value;
            $$settled = false;
          }
        }, {
          default: () => `<div class="${"top-level"}"${add_attribute("this", element, 0)}>${validate_component(BackTo, "BackTo").$$render($$result, {
            href: "/post",
            text: "Blog",
            classes: "page-overline transition-subtitle"
          }, {}, {})}
      <h1 class="${"content-title uppercase transition-title overflow-hidden"}">${escape(title5)}</h1>
      <div class="${"content-flex svelte-9q9w3b"}"><h2 class="${"description transition-content content-description overflow-hidden svelte-9q9w3b"}">${escape(description5)}</h2>
        <div class="${"misc transition-content content-description overflow-hidden svelte-9q9w3b"}"><h2 class="${"date svelte-9q9w3b"}">${escape(dateFormat(date2))}</h2>
          <div class="${"tags svelte-9q9w3b"}">${each(tags, (tag) => `<span class="${"tag svelte-9q9w3b"}">${escape(tag)}</span>`)}</div></div></div></div>`
        })}
  <div class="${"main-content transition-content"}"><div class="${"content"}">${slots.default ? slots.default({}) : ``}
      ${validate_component(BackTo, "BackTo").$$render($$result, {
          href: "/post",
          text: "Back to all posts",
          classes: "border-top"
        }, {}, {})}</div></div>
</main>`;
      } while (!$$settled);
      $$unsubscribe_seo();
      return $$rendered;
    });
  }
});

// node_modules/prismjs/prism.js
var require_prism = __commonJS({
  "node_modules/prismjs/prism.js"(exports, module2) {
    init_shims();
    var _self = typeof window !== "undefined" ? window : typeof WorkerGlobalScope !== "undefined" && self instanceof WorkerGlobalScope ? self : {};
    var Prism2 = function(_self2) {
      var lang = /\blang(?:uage)?-([\w-]+)\b/i;
      var uniqueId = 0;
      var plainTextGrammar = {};
      var _ = {
        manual: _self2.Prism && _self2.Prism.manual,
        disableWorkerMessageHandler: _self2.Prism && _self2.Prism.disableWorkerMessageHandler,
        util: {
          encode: function encode(tokens) {
            if (tokens instanceof Token) {
              return new Token(tokens.type, encode(tokens.content), tokens.alias);
            } else if (Array.isArray(tokens)) {
              return tokens.map(encode);
            } else {
              return tokens.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/\u00a0/g, " ");
            }
          },
          type: function(o) {
            return Object.prototype.toString.call(o).slice(8, -1);
          },
          objId: function(obj) {
            if (!obj["__id"]) {
              Object.defineProperty(obj, "__id", { value: ++uniqueId });
            }
            return obj["__id"];
          },
          clone: function deepClone(o, visited) {
            visited = visited || {};
            var clone2;
            var id;
            switch (_.util.type(o)) {
              case "Object":
                id = _.util.objId(o);
                if (visited[id]) {
                  return visited[id];
                }
                clone2 = {};
                visited[id] = clone2;
                for (var key in o) {
                  if (o.hasOwnProperty(key)) {
                    clone2[key] = deepClone(o[key], visited);
                  }
                }
                return clone2;
              case "Array":
                id = _.util.objId(o);
                if (visited[id]) {
                  return visited[id];
                }
                clone2 = [];
                visited[id] = clone2;
                o.forEach(function(v, i) {
                  clone2[i] = deepClone(v, visited);
                });
                return clone2;
              default:
                return o;
            }
          },
          getLanguage: function(element) {
            while (element && !lang.test(element.className)) {
              element = element.parentElement;
            }
            if (element) {
              return (element.className.match(lang) || [, "none"])[1].toLowerCase();
            }
            return "none";
          },
          currentScript: function() {
            if (typeof document === "undefined") {
              return null;
            }
            if ("currentScript" in document && 1 < 2) {
              return document.currentScript;
            }
            try {
              throw new Error();
            } catch (err) {
              var src2 = (/at [^(\r\n]*\((.*):[^:]+:[^:]+\)$/i.exec(err.stack) || [])[1];
              if (src2) {
                var scripts = document.getElementsByTagName("script");
                for (var i in scripts) {
                  if (scripts[i].src == src2) {
                    return scripts[i];
                  }
                }
              }
              return null;
            }
          },
          isActive: function(element, className, defaultActivation) {
            var no = "no-" + className;
            while (element) {
              var classList = element.classList;
              if (classList.contains(className)) {
                return true;
              }
              if (classList.contains(no)) {
                return false;
              }
              element = element.parentElement;
            }
            return !!defaultActivation;
          }
        },
        languages: {
          plain: plainTextGrammar,
          plaintext: plainTextGrammar,
          text: plainTextGrammar,
          txt: plainTextGrammar,
          extend: function(id, redef) {
            var lang2 = _.util.clone(_.languages[id]);
            for (var key in redef) {
              lang2[key] = redef[key];
            }
            return lang2;
          },
          insertBefore: function(inside, before, insert, root) {
            root = root || _.languages;
            var grammar = root[inside];
            var ret = {};
            for (var token in grammar) {
              if (grammar.hasOwnProperty(token)) {
                if (token == before) {
                  for (var newToken in insert) {
                    if (insert.hasOwnProperty(newToken)) {
                      ret[newToken] = insert[newToken];
                    }
                  }
                }
                if (!insert.hasOwnProperty(token)) {
                  ret[token] = grammar[token];
                }
              }
            }
            var old = root[inside];
            root[inside] = ret;
            _.languages.DFS(_.languages, function(key, value) {
              if (value === old && key != inside) {
                this[key] = ret;
              }
            });
            return ret;
          },
          DFS: function DFS(o, callback, type, visited) {
            visited = visited || {};
            var objId = _.util.objId;
            for (var i in o) {
              if (o.hasOwnProperty(i)) {
                callback.call(o, i, o[i], type || i);
                var property = o[i];
                var propertyType = _.util.type(property);
                if (propertyType === "Object" && !visited[objId(property)]) {
                  visited[objId(property)] = true;
                  DFS(property, callback, null, visited);
                } else if (propertyType === "Array" && !visited[objId(property)]) {
                  visited[objId(property)] = true;
                  DFS(property, callback, i, visited);
                }
              }
            }
          }
        },
        plugins: {},
        highlightAll: function(async, callback) {
          _.highlightAllUnder(document, async, callback);
        },
        highlightAllUnder: function(container, async, callback) {
          var env = {
            callback,
            container,
            selector: 'code[class*="language-"], [class*="language-"] code, code[class*="lang-"], [class*="lang-"] code'
          };
          _.hooks.run("before-highlightall", env);
          env.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));
          _.hooks.run("before-all-elements-highlight", env);
          for (var i = 0, element; element = env.elements[i++]; ) {
            _.highlightElement(element, async === true, env.callback);
          }
        },
        highlightElement: function(element, async, callback) {
          var language = _.util.getLanguage(element);
          var grammar = _.languages[language];
          element.className = element.className.replace(lang, "").replace(/\s+/g, " ") + " language-" + language;
          var parent = element.parentElement;
          if (parent && parent.nodeName.toLowerCase() === "pre") {
            parent.className = parent.className.replace(lang, "").replace(/\s+/g, " ") + " language-" + language;
          }
          var code = element.textContent;
          var env = {
            element,
            language,
            grammar,
            code
          };
          function insertHighlightedCode(highlightedCode) {
            env.highlightedCode = highlightedCode;
            _.hooks.run("before-insert", env);
            env.element.innerHTML = env.highlightedCode;
            _.hooks.run("after-highlight", env);
            _.hooks.run("complete", env);
            callback && callback.call(env.element);
          }
          _.hooks.run("before-sanity-check", env);
          parent = env.element.parentElement;
          if (parent && parent.nodeName.toLowerCase() === "pre" && !parent.hasAttribute("tabindex")) {
            parent.setAttribute("tabindex", "0");
          }
          if (!env.code) {
            _.hooks.run("complete", env);
            callback && callback.call(env.element);
            return;
          }
          _.hooks.run("before-highlight", env);
          if (!env.grammar) {
            insertHighlightedCode(_.util.encode(env.code));
            return;
          }
          if (async && _self2.Worker) {
            var worker = new Worker(_.filename);
            worker.onmessage = function(evt) {
              insertHighlightedCode(evt.data);
            };
            worker.postMessage(JSON.stringify({
              language: env.language,
              code: env.code,
              immediateClose: true
            }));
          } else {
            insertHighlightedCode(_.highlight(env.code, env.grammar, env.language));
          }
        },
        highlight: function(text, grammar, language) {
          var env = {
            code: text,
            grammar,
            language
          };
          _.hooks.run("before-tokenize", env);
          env.tokens = _.tokenize(env.code, env.grammar);
          _.hooks.run("after-tokenize", env);
          return Token.stringify(_.util.encode(env.tokens), env.language);
        },
        tokenize: function(text, grammar) {
          var rest = grammar.rest;
          if (rest) {
            for (var token in rest) {
              grammar[token] = rest[token];
            }
            delete grammar.rest;
          }
          var tokenList = new LinkedList();
          addAfter(tokenList, tokenList.head, text);
          matchGrammar(text, tokenList, grammar, tokenList.head, 0);
          return toArray(tokenList);
        },
        hooks: {
          all: {},
          add: function(name, callback) {
            var hooks = _.hooks.all;
            hooks[name] = hooks[name] || [];
            hooks[name].push(callback);
          },
          run: function(name, env) {
            var callbacks = _.hooks.all[name];
            if (!callbacks || !callbacks.length) {
              return;
            }
            for (var i = 0, callback; callback = callbacks[i++]; ) {
              callback(env);
            }
          }
        },
        Token
      };
      _self2.Prism = _;
      function Token(type, content, alias, matchedStr) {
        this.type = type;
        this.content = content;
        this.alias = alias;
        this.length = (matchedStr || "").length | 0;
      }
      Token.stringify = function stringify(o, language) {
        if (typeof o == "string") {
          return o;
        }
        if (Array.isArray(o)) {
          var s2 = "";
          o.forEach(function(e) {
            s2 += stringify(e, language);
          });
          return s2;
        }
        var env = {
          type: o.type,
          content: stringify(o.content, language),
          tag: "span",
          classes: ["token", o.type],
          attributes: {},
          language
        };
        var aliases = o.alias;
        if (aliases) {
          if (Array.isArray(aliases)) {
            Array.prototype.push.apply(env.classes, aliases);
          } else {
            env.classes.push(aliases);
          }
        }
        _.hooks.run("wrap", env);
        var attributes = "";
        for (var name in env.attributes) {
          attributes += " " + name + '="' + (env.attributes[name] || "").replace(/"/g, "&quot;") + '"';
        }
        return "<" + env.tag + ' class="' + env.classes.join(" ") + '"' + attributes + ">" + env.content + "</" + env.tag + ">";
      };
      function matchPattern(pattern, pos, text, lookbehind) {
        pattern.lastIndex = pos;
        var match = pattern.exec(text);
        if (match && lookbehind && match[1]) {
          var lookbehindLength = match[1].length;
          match.index += lookbehindLength;
          match[0] = match[0].slice(lookbehindLength);
        }
        return match;
      }
      function matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {
        for (var token in grammar) {
          if (!grammar.hasOwnProperty(token) || !grammar[token]) {
            continue;
          }
          var patterns = grammar[token];
          patterns = Array.isArray(patterns) ? patterns : [patterns];
          for (var j = 0; j < patterns.length; ++j) {
            if (rematch && rematch.cause == token + "," + j) {
              return;
            }
            var patternObj = patterns[j];
            var inside = patternObj.inside;
            var lookbehind = !!patternObj.lookbehind;
            var greedy = !!patternObj.greedy;
            var alias = patternObj.alias;
            if (greedy && !patternObj.pattern.global) {
              var flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];
              patternObj.pattern = RegExp(patternObj.pattern.source, flags + "g");
            }
            var pattern = patternObj.pattern || patternObj;
            for (var currentNode = startNode.next, pos = startPos; currentNode !== tokenList.tail; pos += currentNode.value.length, currentNode = currentNode.next) {
              if (rematch && pos >= rematch.reach) {
                break;
              }
              var str = currentNode.value;
              if (tokenList.length > text.length) {
                return;
              }
              if (str instanceof Token) {
                continue;
              }
              var removeCount = 1;
              var match;
              if (greedy) {
                match = matchPattern(pattern, pos, text, lookbehind);
                if (!match) {
                  break;
                }
                var from = match.index;
                var to = match.index + match[0].length;
                var p = pos;
                p += currentNode.value.length;
                while (from >= p) {
                  currentNode = currentNode.next;
                  p += currentNode.value.length;
                }
                p -= currentNode.value.length;
                pos = p;
                if (currentNode.value instanceof Token) {
                  continue;
                }
                for (var k = currentNode; k !== tokenList.tail && (p < to || typeof k.value === "string"); k = k.next) {
                  removeCount++;
                  p += k.value.length;
                }
                removeCount--;
                str = text.slice(pos, p);
                match.index -= pos;
              } else {
                match = matchPattern(pattern, 0, str, lookbehind);
                if (!match) {
                  continue;
                }
              }
              var from = match.index;
              var matchStr = match[0];
              var before = str.slice(0, from);
              var after = str.slice(from + matchStr.length);
              var reach = pos + str.length;
              if (rematch && reach > rematch.reach) {
                rematch.reach = reach;
              }
              var removeFrom = currentNode.prev;
              if (before) {
                removeFrom = addAfter(tokenList, removeFrom, before);
                pos += before.length;
              }
              removeRange(tokenList, removeFrom, removeCount);
              var wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);
              currentNode = addAfter(tokenList, removeFrom, wrapped);
              if (after) {
                addAfter(tokenList, currentNode, after);
              }
              if (removeCount > 1) {
                var nestedRematch = {
                  cause: token + "," + j,
                  reach
                };
                matchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch);
                if (rematch && nestedRematch.reach > rematch.reach) {
                  rematch.reach = nestedRematch.reach;
                }
              }
            }
          }
        }
      }
      function LinkedList() {
        var head = { value: null, prev: null, next: null };
        var tail = { value: null, prev: head, next: null };
        head.next = tail;
        this.head = head;
        this.tail = tail;
        this.length = 0;
      }
      function addAfter(list, node, value) {
        var next = node.next;
        var newNode = { value, prev: node, next };
        node.next = newNode;
        next.prev = newNode;
        list.length++;
        return newNode;
      }
      function removeRange(list, node, count) {
        var next = node.next;
        for (var i = 0; i < count && next !== list.tail; i++) {
          next = next.next;
        }
        node.next = next;
        next.prev = node;
        list.length -= i;
      }
      function toArray(list) {
        var array = [];
        var node = list.head.next;
        while (node !== list.tail) {
          array.push(node.value);
          node = node.next;
        }
        return array;
      }
      if (!_self2.document) {
        if (!_self2.addEventListener) {
          return _;
        }
        if (!_.disableWorkerMessageHandler) {
          _self2.addEventListener("message", function(evt) {
            var message = JSON.parse(evt.data);
            var lang2 = message.language;
            var code = message.code;
            var immediateClose = message.immediateClose;
            _self2.postMessage(_.highlight(code, _.languages[lang2], lang2));
            if (immediateClose) {
              _self2.close();
            }
          }, false);
        }
        return _;
      }
      var script = _.util.currentScript();
      if (script) {
        _.filename = script.src;
        if (script.hasAttribute("data-manual")) {
          _.manual = true;
        }
      }
      function highlightAutomaticallyCallback() {
        if (!_.manual) {
          _.highlightAll();
        }
      }
      if (!_.manual) {
        var readyState = document.readyState;
        if (readyState === "loading" || readyState === "interactive" && script && script.defer) {
          document.addEventListener("DOMContentLoaded", highlightAutomaticallyCallback);
        } else {
          if (window.requestAnimationFrame) {
            window.requestAnimationFrame(highlightAutomaticallyCallback);
          } else {
            window.setTimeout(highlightAutomaticallyCallback, 16);
          }
        }
      }
      return _;
    }(_self);
    if (typeof module2 !== "undefined" && module2.exports) {
      module2.exports = Prism2;
    }
    if (typeof global !== "undefined") {
      global.Prism = Prism2;
    }
    Prism2.languages.markup = {
      "comment": {
        pattern: /<!--(?:(?!<!--)[\s\S])*?-->/,
        greedy: true
      },
      "prolog": {
        pattern: /<\?[\s\S]+?\?>/,
        greedy: true
      },
      "doctype": {
        pattern: /<!DOCTYPE(?:[^>"'[\]]|"[^"]*"|'[^']*')+(?:\[(?:[^<"'\]]|"[^"]*"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\]\s*)?>/i,
        greedy: true,
        inside: {
          "internal-subset": {
            pattern: /(^[^\[]*\[)[\s\S]+(?=\]>$)/,
            lookbehind: true,
            greedy: true,
            inside: null
          },
          "string": {
            pattern: /"[^"]*"|'[^']*'/,
            greedy: true
          },
          "punctuation": /^<!|>$|[[\]]/,
          "doctype-tag": /^DOCTYPE/i,
          "name": /[^\s<>'"]+/
        }
      },
      "cdata": {
        pattern: /<!\[CDATA\[[\s\S]*?\]\]>/i,
        greedy: true
      },
      "tag": {
        pattern: /<\/?(?!\d)[^\s>\/=$<%]+(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))|(?=[\s/>])))+)?\s*\/?>/,
        greedy: true,
        inside: {
          "tag": {
            pattern: /^<\/?[^\s>\/]+/,
            inside: {
              "punctuation": /^<\/?/,
              "namespace": /^[^\s>\/:]+:/
            }
          },
          "special-attr": [],
          "attr-value": {
            pattern: /=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+)/,
            inside: {
              "punctuation": [
                {
                  pattern: /^=/,
                  alias: "attr-equals"
                },
                /"|'/
              ]
            }
          },
          "punctuation": /\/?>/,
          "attr-name": {
            pattern: /[^\s>\/]+/,
            inside: {
              "namespace": /^[^\s>\/:]+:/
            }
          }
        }
      },
      "entity": [
        {
          pattern: /&[\da-z]{1,8};/i,
          alias: "named-entity"
        },
        /&#x?[\da-f]{1,8};/i
      ]
    };
    Prism2.languages.markup["tag"].inside["attr-value"].inside["entity"] = Prism2.languages.markup["entity"];
    Prism2.languages.markup["doctype"].inside["internal-subset"].inside = Prism2.languages.markup;
    Prism2.hooks.add("wrap", function(env) {
      if (env.type === "entity") {
        env.attributes["title"] = env.content.replace(/&amp;/, "&");
      }
    });
    Object.defineProperty(Prism2.languages.markup.tag, "addInlined", {
      value: function addInlined2(tagName, lang) {
        var includedCdataInside = {};
        includedCdataInside["language-" + lang] = {
          pattern: /(^<!\[CDATA\[)[\s\S]+?(?=\]\]>$)/i,
          lookbehind: true,
          inside: Prism2.languages[lang]
        };
        includedCdataInside["cdata"] = /^<!\[CDATA\[|\]\]>$/i;
        var inside = {
          "included-cdata": {
            pattern: /<!\[CDATA\[[\s\S]*?\]\]>/i,
            inside: includedCdataInside
          }
        };
        inside["language-" + lang] = {
          pattern: /[\s\S]+/,
          inside: Prism2.languages[lang]
        };
        var def = {};
        def[tagName] = {
          pattern: RegExp(/(<__[^>]*>)(?:<!\[CDATA\[(?:[^\]]|\](?!\]>))*\]\]>|(?!<!\[CDATA\[)[\s\S])*?(?=<\/__>)/.source.replace(/__/g, function() {
            return tagName;
          }), "i"),
          lookbehind: true,
          greedy: true,
          inside
        };
        Prism2.languages.insertBefore("markup", "cdata", def);
      }
    });
    Object.defineProperty(Prism2.languages.markup.tag, "addAttribute", {
      value: function(attrName, lang) {
        Prism2.languages.markup.tag.inside["special-attr"].push({
          pattern: RegExp(/(^|["'\s])/.source + "(?:" + attrName + ")" + /\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))/.source, "i"),
          lookbehind: true,
          inside: {
            "attr-name": /^[^\s=]+/,
            "attr-value": {
              pattern: /=[\s\S]+/,
              inside: {
                "value": {
                  pattern: /(^=\s*(["']|(?!["'])))\S[\s\S]*(?=\2$)/,
                  lookbehind: true,
                  alias: [lang, "language-" + lang],
                  inside: Prism2.languages[lang]
                },
                "punctuation": [
                  {
                    pattern: /^=/,
                    alias: "attr-equals"
                  },
                  /"|'/
                ]
              }
            }
          }
        });
      }
    });
    Prism2.languages.html = Prism2.languages.markup;
    Prism2.languages.mathml = Prism2.languages.markup;
    Prism2.languages.svg = Prism2.languages.markup;
    Prism2.languages.xml = Prism2.languages.extend("markup", {});
    Prism2.languages.ssml = Prism2.languages.xml;
    Prism2.languages.atom = Prism2.languages.xml;
    Prism2.languages.rss = Prism2.languages.xml;
    (function(Prism3) {
      var string2 = /(?:"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"|'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n])*')/;
      Prism3.languages.css = {
        "comment": /\/\*[\s\S]*?\*\//,
        "atrule": {
          pattern: /@[\w-](?:[^;{\s]|\s+(?![\s{]))*(?:;|(?=\s*\{))/,
          inside: {
            "rule": /^@[\w-]+/,
            "selector-function-argument": {
              pattern: /(\bselector\s*\(\s*(?![\s)]))(?:[^()\s]|\s+(?![\s)])|\((?:[^()]|\([^()]*\))*\))+(?=\s*\))/,
              lookbehind: true,
              alias: "selector"
            },
            "keyword": {
              pattern: /(^|[^\w-])(?:and|not|only|or)(?![\w-])/,
              lookbehind: true
            }
          }
        },
        "url": {
          pattern: RegExp("\\burl\\((?:" + string2.source + "|" + /(?:[^\\\r\n()"']|\\[\s\S])*/.source + ")\\)", "i"),
          greedy: true,
          inside: {
            "function": /^url/i,
            "punctuation": /^\(|\)$/,
            "string": {
              pattern: RegExp("^" + string2.source + "$"),
              alias: "url"
            }
          }
        },
        "selector": {
          pattern: RegExp(`(^|[{}\\s])[^{}\\s](?:[^{};"'\\s]|\\s+(?![\\s{])|` + string2.source + ")*(?=\\s*\\{)"),
          lookbehind: true
        },
        "string": {
          pattern: string2,
          greedy: true
        },
        "property": {
          pattern: /(^|[^-\w\xA0-\uFFFF])(?!\s)[-_a-z\xA0-\uFFFF](?:(?!\s)[-\w\xA0-\uFFFF])*(?=\s*:)/i,
          lookbehind: true
        },
        "important": /!important\b/i,
        "function": {
          pattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\()/i,
          lookbehind: true
        },
        "punctuation": /[(){};:,]/
      };
      Prism3.languages.css["atrule"].inside.rest = Prism3.languages.css;
      var markup = Prism3.languages.markup;
      if (markup) {
        markup.tag.addInlined("style", "css");
        markup.tag.addAttribute("style", "css");
      }
    })(Prism2);
    Prism2.languages.clike = {
      "comment": [
        {
          pattern: /(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,
          lookbehind: true,
          greedy: true
        },
        {
          pattern: /(^|[^\\:])\/\/.*/,
          lookbehind: true,
          greedy: true
        }
      ],
      "string": {
        pattern: /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
        greedy: true
      },
      "class-name": {
        pattern: /(\b(?:class|interface|extends|implements|trait|instanceof|new)\s+|\bcatch\s+\()[\w.\\]+/i,
        lookbehind: true,
        inside: {
          "punctuation": /[.\\]/
        }
      },
      "keyword": /\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\b/,
      "boolean": /\b(?:true|false)\b/,
      "function": /\b\w+(?=\()/,
      "number": /\b0x[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i,
      "operator": /[<>]=?|[!=]=?=?|--?|\+\+?|&&?|\|\|?|[?*/~^%]/,
      "punctuation": /[{}[\];(),.:]/
    };
    Prism2.languages.javascript = Prism2.languages.extend("clike", {
      "class-name": [
        Prism2.languages.clike["class-name"],
        {
          pattern: /(^|[^$\w\xA0-\uFFFF])(?!\s)[_$A-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\.(?:prototype|constructor))/,
          lookbehind: true
        }
      ],
      "keyword": [
        {
          pattern: /((?:^|\})\s*)catch\b/,
          lookbehind: true
        },
        {
          pattern: /(^|[^.]|\.\.\.\s*)\b(?:as|assert(?=\s*\{)|async(?=\s*(?:function\b|\(|[$\w\xA0-\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\s*(?:\{|$))|for|from(?=\s*(?:['"]|$))|function|(?:get|set)(?=\s*(?:[#\[$\w\xA0-\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\b/,
          lookbehind: true
        }
      ],
      "function": /#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*(?:\.\s*(?:apply|bind|call)\s*)?\()/,
      "number": /\b(?:(?:0[xX](?:[\dA-Fa-f](?:_[\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\d(?:_\d)?)+n|NaN|Infinity)\b|(?:\b(?:\d(?:_\d)?)+\.?(?:\d(?:_\d)?)*|\B\.(?:\d(?:_\d)?)+)(?:[Ee][+-]?(?:\d(?:_\d)?)+)?/,
      "operator": /--|\+\+|\*\*=?|=>|&&=?|\|\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\.{3}|\?\?=?|\?\.?|[~:]/
    });
    Prism2.languages.javascript["class-name"][0].pattern = /(\b(?:class|interface|extends|implements|instanceof|new)\s+)[\w.\\]+/;
    Prism2.languages.insertBefore("javascript", "keyword", {
      "regex": {
        pattern: /((?:^|[^$\w\xA0-\uFFFF."'\])\s]|\b(?:return|yield))\s*)\/(?:\[(?:[^\]\\\r\n]|\\.)*\]|\\.|[^/\\\[\r\n])+\/[dgimyus]{0,7}(?=(?:\s|\/\*(?:[^*]|\*(?!\/))*\*\/)*(?:$|[\r\n,.;:})\]]|\/\/))/,
        lookbehind: true,
        greedy: true,
        inside: {
          "regex-source": {
            pattern: /^(\/)[\s\S]+(?=\/[a-z]*$)/,
            lookbehind: true,
            alias: "language-regex",
            inside: Prism2.languages.regex
          },
          "regex-delimiter": /^\/|\/$/,
          "regex-flags": /^[a-z]+$/
        }
      },
      "function-variable": {
        pattern: /#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*[=:]\s*(?:async\s*)?(?:\bfunction\b|(?:\((?:[^()]|\([^()]*\))*\)|(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)\s*=>))/,
        alias: "function"
      },
      "parameter": [
        {
          pattern: /(function(?:\s+(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)?\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\))/,
          lookbehind: true,
          inside: Prism2.languages.javascript
        },
        {
          pattern: /(^|[^$\w\xA0-\uFFFF])(?!\s)[_$a-z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*=>)/i,
          lookbehind: true,
          inside: Prism2.languages.javascript
        },
        {
          pattern: /(\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*=>)/,
          lookbehind: true,
          inside: Prism2.languages.javascript
        },
        {
          pattern: /((?:\b|\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\w\xA0-\uFFFF]))(?:(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*)\(\s*|\]\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*\{)/,
          lookbehind: true,
          inside: Prism2.languages.javascript
        }
      ],
      "constant": /\b[A-Z](?:[A-Z_]|\dx?)*\b/
    });
    Prism2.languages.insertBefore("javascript", "string", {
      "hashbang": {
        pattern: /^#!.*/,
        greedy: true,
        alias: "comment"
      },
      "template-string": {
        pattern: /`(?:\\[\s\S]|\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}|(?!\$\{)[^\\`])*`/,
        greedy: true,
        inside: {
          "template-punctuation": {
            pattern: /^`|`$/,
            alias: "string"
          },
          "interpolation": {
            pattern: /((?:^|[^\\])(?:\\{2})*)\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}/,
            lookbehind: true,
            inside: {
              "interpolation-punctuation": {
                pattern: /^\$\{|\}$/,
                alias: "punctuation"
              },
              rest: Prism2.languages.javascript
            }
          },
          "string": /[\s\S]+/
        }
      }
    });
    if (Prism2.languages.markup) {
      Prism2.languages.markup.tag.addInlined("script", "javascript");
      Prism2.languages.markup.tag.addAttribute(/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source, "javascript");
    }
    Prism2.languages.js = Prism2.languages.javascript;
    (function() {
      if (typeof Prism2 === "undefined" || typeof document === "undefined") {
        return;
      }
      if (!Element.prototype.matches) {
        Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;
      }
      var LOADING_MESSAGE = "Loading\u2026";
      var FAILURE_MESSAGE = function(status, message) {
        return "\u2716 Error " + status + " while fetching file: " + message;
      };
      var FAILURE_EMPTY_MESSAGE = "\u2716 Error: File does not exist or is empty";
      var EXTENSIONS = {
        "js": "javascript",
        "py": "python",
        "rb": "ruby",
        "ps1": "powershell",
        "psm1": "powershell",
        "sh": "bash",
        "bat": "batch",
        "h": "c",
        "tex": "latex"
      };
      var STATUS_ATTR = "data-src-status";
      var STATUS_LOADING = "loading";
      var STATUS_LOADED = "loaded";
      var STATUS_FAILED = "failed";
      var SELECTOR = "pre[data-src]:not([" + STATUS_ATTR + '="' + STATUS_LOADED + '"]):not([' + STATUS_ATTR + '="' + STATUS_LOADING + '"])';
      var lang = /\blang(?:uage)?-([\w-]+)\b/i;
      function setLanguageClass(element, language) {
        var className = element.className;
        className = className.replace(lang, " ") + " language-" + language;
        element.className = className.replace(/\s+/g, " ").trim();
      }
      Prism2.hooks.add("before-highlightall", function(env) {
        env.selector += ", " + SELECTOR;
      });
      Prism2.hooks.add("before-sanity-check", function(env) {
        var pre = env.element;
        if (pre.matches(SELECTOR)) {
          env.code = "";
          pre.setAttribute(STATUS_ATTR, STATUS_LOADING);
          var code = pre.appendChild(document.createElement("CODE"));
          code.textContent = LOADING_MESSAGE;
          var src2 = pre.getAttribute("data-src");
          var language = env.language;
          if (language === "none") {
            var extension = (/\.(\w+)$/.exec(src2) || [, "none"])[1];
            language = EXTENSIONS[extension] || extension;
          }
          setLanguageClass(code, language);
          setLanguageClass(pre, language);
          var autoloader = Prism2.plugins.autoloader;
          if (autoloader) {
            autoloader.loadLanguages(language);
          }
          var xhr = new XMLHttpRequest();
          xhr.open("GET", src2, true);
          xhr.onreadystatechange = function() {
            if (xhr.readyState == 4) {
              if (xhr.status < 400 && xhr.responseText) {
                pre.setAttribute(STATUS_ATTR, STATUS_LOADED);
                code.textContent = xhr.responseText;
                Prism2.highlightElement(code);
              } else {
                pre.setAttribute(STATUS_ATTR, STATUS_FAILED);
                if (xhr.status >= 400) {
                  code.textContent = FAILURE_MESSAGE(xhr.status, xhr.statusText);
                } else {
                  code.textContent = FAILURE_EMPTY_MESSAGE;
                }
              }
            }
          };
          xhr.send(null);
        }
      });
      Prism2.plugins.fileHighlight = {
        highlight: function highlight(container) {
          var elements = (container || document).querySelectorAll(SELECTOR);
          for (var i = 0, element; element = elements[i++]; ) {
            Prism2.highlightElement(element);
          }
        }
      };
      var logged = false;
      Prism2.fileHighlight = function() {
        if (!logged) {
          console.warn("Prism.fileHighlight is deprecated. Use `Prism.plugins.fileHighlight.highlight` instead.");
          logged = true;
        }
        Prism2.plugins.fileHighlight.highlight.apply(this, arguments);
      };
    })();
  }
});

// node_modules/prismjs/plugins/line-numbers/prism-line-numbers.js
var init_prism_line_numbers = __esm({
  "node_modules/prismjs/plugins/line-numbers/prism-line-numbers.js"() {
    init_shims();
    (function() {
      if (typeof Prism === "undefined" || typeof document === "undefined") {
        return;
      }
      var PLUGIN_NAME = "line-numbers";
      var NEW_LINE_EXP = /\n(?!$)/g;
      var config = Prism.plugins.lineNumbers = {
        getLine: function(element, number2) {
          if (element.tagName !== "PRE" || !element.classList.contains(PLUGIN_NAME)) {
            return;
          }
          var lineNumberRows = element.querySelector(".line-numbers-rows");
          if (!lineNumberRows) {
            return;
          }
          var lineNumberStart = parseInt(element.getAttribute("data-start"), 10) || 1;
          var lineNumberEnd = lineNumberStart + (lineNumberRows.children.length - 1);
          if (number2 < lineNumberStart) {
            number2 = lineNumberStart;
          }
          if (number2 > lineNumberEnd) {
            number2 = lineNumberEnd;
          }
          var lineIndex = number2 - lineNumberStart;
          return lineNumberRows.children[lineIndex];
        },
        resize: function(element) {
          resizeElements([element]);
        },
        assumeViewportIndependence: true
      };
      function resizeElements(elements) {
        elements = elements.filter(function(e) {
          var codeStyles = getStyles(e);
          var whiteSpace = codeStyles["white-space"];
          return whiteSpace === "pre-wrap" || whiteSpace === "pre-line";
        });
        if (elements.length == 0) {
          return;
        }
        var infos = elements.map(function(element) {
          var codeElement = element.querySelector("code");
          var lineNumbersWrapper = element.querySelector(".line-numbers-rows");
          if (!codeElement || !lineNumbersWrapper) {
            return void 0;
          }
          var lineNumberSizer = element.querySelector(".line-numbers-sizer");
          var codeLines = codeElement.textContent.split(NEW_LINE_EXP);
          if (!lineNumberSizer) {
            lineNumberSizer = document.createElement("span");
            lineNumberSizer.className = "line-numbers-sizer";
            codeElement.appendChild(lineNumberSizer);
          }
          lineNumberSizer.innerHTML = "0";
          lineNumberSizer.style.display = "block";
          var oneLinerHeight = lineNumberSizer.getBoundingClientRect().height;
          lineNumberSizer.innerHTML = "";
          return {
            element,
            lines: codeLines,
            lineHeights: [],
            oneLinerHeight,
            sizer: lineNumberSizer
          };
        }).filter(Boolean);
        infos.forEach(function(info) {
          var lineNumberSizer = info.sizer;
          var lines = info.lines;
          var lineHeights = info.lineHeights;
          var oneLinerHeight = info.oneLinerHeight;
          lineHeights[lines.length - 1] = void 0;
          lines.forEach(function(line, index) {
            if (line && line.length > 1) {
              var e = lineNumberSizer.appendChild(document.createElement("span"));
              e.style.display = "block";
              e.textContent = line;
            } else {
              lineHeights[index] = oneLinerHeight;
            }
          });
        });
        infos.forEach(function(info) {
          var lineNumberSizer = info.sizer;
          var lineHeights = info.lineHeights;
          var childIndex = 0;
          for (var i = 0; i < lineHeights.length; i++) {
            if (lineHeights[i] === void 0) {
              lineHeights[i] = lineNumberSizer.children[childIndex++].getBoundingClientRect().height;
            }
          }
        });
        infos.forEach(function(info) {
          var lineNumberSizer = info.sizer;
          var wrapper = info.element.querySelector(".line-numbers-rows");
          lineNumberSizer.style.display = "none";
          lineNumberSizer.innerHTML = "";
          info.lineHeights.forEach(function(height, lineNumber) {
            wrapper.children[lineNumber].style.height = height + "px";
          });
        });
      }
      function getStyles(element) {
        if (!element) {
          return null;
        }
        return window.getComputedStyle ? getComputedStyle(element) : element.currentStyle || null;
      }
      var lastWidth = void 0;
      window.addEventListener("resize", function() {
        if (config.assumeViewportIndependence && lastWidth === window.innerWidth) {
          return;
        }
        lastWidth = window.innerWidth;
        resizeElements(Array.prototype.slice.call(document.querySelectorAll("pre." + PLUGIN_NAME)));
      });
      Prism.hooks.add("complete", function(env) {
        if (!env.code) {
          return;
        }
        var code = env.element;
        var pre = code.parentNode;
        if (!pre || !/pre/i.test(pre.nodeName)) {
          return;
        }
        if (code.querySelector(".line-numbers-rows")) {
          return;
        }
        if (!Prism.util.isActive(code, PLUGIN_NAME)) {
          return;
        }
        code.classList.remove(PLUGIN_NAME);
        pre.classList.add(PLUGIN_NAME);
        var match = env.code.match(NEW_LINE_EXP);
        var linesNum = match ? match.length + 1 : 1;
        var lineNumbersWrapper;
        var lines = new Array(linesNum + 1).join("<span></span>");
        lineNumbersWrapper = document.createElement("span");
        lineNumbersWrapper.setAttribute("aria-hidden", "true");
        lineNumbersWrapper.className = "line-numbers-rows";
        lineNumbersWrapper.innerHTML = lines;
        if (pre.hasAttribute("data-start")) {
          pre.style.counterReset = "linenumber " + (parseInt(pre.getAttribute("data-start"), 10) - 1);
        }
        env.element.appendChild(lineNumbersWrapper);
        resizeElements([pre]);
        Prism.hooks.run("line-numbers", env);
      });
      Prism.hooks.add("line-numbers", function(env) {
        env.plugins = env.plugins || {};
        env.plugins.lineNumbers = true;
      });
    })();
  }
});

// node_modules/prismjs/plugins/normalize-whitespace/prism-normalize-whitespace.js
var require_prism_normalize_whitespace = __commonJS({
  "node_modules/prismjs/plugins/normalize-whitespace/prism-normalize-whitespace.js"(exports, module2) {
    init_shims();
    (function() {
      if (typeof Prism === "undefined") {
        return;
      }
      var assign2 = Object.assign || function(obj1, obj2) {
        for (var name in obj2) {
          if (obj2.hasOwnProperty(name)) {
            obj1[name] = obj2[name];
          }
        }
        return obj1;
      };
      function NormalizeWhitespace(defaults) {
        this.defaults = assign2({}, defaults);
      }
      function toCamelCase(value) {
        return value.replace(/-(\w)/g, function(match, firstChar) {
          return firstChar.toUpperCase();
        });
      }
      function tabLen(str) {
        var res = 0;
        for (var i = 0; i < str.length; ++i) {
          if (str.charCodeAt(i) == "	".charCodeAt(0)) {
            res += 3;
          }
        }
        return str.length + res;
      }
      NormalizeWhitespace.prototype = {
        setDefaults: function(defaults) {
          this.defaults = assign2(this.defaults, defaults);
        },
        normalize: function(input, settings) {
          settings = assign2(this.defaults, settings);
          for (var name in settings) {
            var methodName = toCamelCase(name);
            if (name !== "normalize" && methodName !== "setDefaults" && settings[name] && this[methodName]) {
              input = this[methodName].call(this, input, settings[name]);
            }
          }
          return input;
        },
        leftTrim: function(input) {
          return input.replace(/^\s+/, "");
        },
        rightTrim: function(input) {
          return input.replace(/\s+$/, "");
        },
        tabsToSpaces: function(input, spaces) {
          spaces = spaces | 0 || 4;
          return input.replace(/\t/g, new Array(++spaces).join(" "));
        },
        spacesToTabs: function(input, spaces) {
          spaces = spaces | 0 || 4;
          return input.replace(RegExp(" {" + spaces + "}", "g"), "	");
        },
        removeTrailing: function(input) {
          return input.replace(/\s*?$/gm, "");
        },
        removeInitialLineFeed: function(input) {
          return input.replace(/^(?:\r?\n|\r)/, "");
        },
        removeIndent: function(input) {
          var indents = input.match(/^[^\S\n\r]*(?=\S)/gm);
          if (!indents || !indents[0].length) {
            return input;
          }
          indents.sort(function(a, b) {
            return a.length - b.length;
          });
          if (!indents[0].length) {
            return input;
          }
          return input.replace(RegExp("^" + indents[0], "gm"), "");
        },
        indent: function(input, tabs) {
          return input.replace(/^[^\S\n\r]*(?=\S)/gm, new Array(++tabs).join("	") + "$&");
        },
        breakLines: function(input, characters) {
          characters = characters === true ? 80 : characters | 0 || 80;
          var lines = input.split("\n");
          for (var i = 0; i < lines.length; ++i) {
            if (tabLen(lines[i]) <= characters) {
              continue;
            }
            var line = lines[i].split(/(\s+)/g);
            var len = 0;
            for (var j = 0; j < line.length; ++j) {
              var tl = tabLen(line[j]);
              len += tl;
              if (len > characters) {
                line[j] = "\n" + line[j];
                len = tl;
              }
            }
            lines[i] = line.join("");
          }
          return lines.join("\n");
        }
      };
      if (typeof module2 !== "undefined" && module2.exports) {
        module2.exports = NormalizeWhitespace;
      }
      Prism.plugins.NormalizeWhitespace = new NormalizeWhitespace({
        "remove-trailing": true,
        "remove-indent": true,
        "left-trim": true,
        "right-trim": true
      });
      Prism.hooks.add("before-sanity-check", function(env) {
        var Normalizer = Prism.plugins.NormalizeWhitespace;
        if (env.settings && env.settings["whitespace-normalization"] === false) {
          return;
        }
        if (!Prism.util.isActive(env.element, "whitespace-normalization", true)) {
          return;
        }
        if ((!env.element || !env.element.parentNode) && env.code) {
          env.code = Normalizer.normalize(env.code, env.settings);
          return;
        }
        var pre = env.element.parentNode;
        if (!env.code || !pre || pre.nodeName.toLowerCase() !== "pre") {
          return;
        }
        var children = pre.childNodes;
        var before = "";
        var after = "";
        var codeFound = false;
        for (var i = 0; i < children.length; ++i) {
          var node = children[i];
          if (node == env.element) {
            codeFound = true;
          } else if (node.nodeName === "#text") {
            if (codeFound) {
              after += node.nodeValue;
            } else {
              before += node.nodeValue;
            }
            pre.removeChild(node);
            --i;
          }
        }
        if (!env.element.children.length || !Prism.plugins.KeepMarkup) {
          env.code = before + env.code + after;
          env.code = Normalizer.normalize(env.code, env.settings);
        } else {
          var html = before + env.element.innerHTML + after;
          env.element.innerHTML = Normalizer.normalize(html, env.settings);
          env.code = env.element.textContent;
        }
      });
    })();
  }
});

// node_modules/prismjs/plugins/line-highlight/prism-line-highlight.js
var init_prism_line_highlight = __esm({
  "node_modules/prismjs/plugins/line-highlight/prism-line-highlight.js"() {
    init_shims();
    (function() {
      if (typeof Prism === "undefined" || typeof document === "undefined" || !document.querySelector) {
        return;
      }
      var LINE_NUMBERS_CLASS = "line-numbers";
      var LINKABLE_LINE_NUMBERS_CLASS = "linkable-line-numbers";
      function $$(selector, container) {
        return Array.prototype.slice.call((container || document).querySelectorAll(selector));
      }
      function hasClass(element, className) {
        return element.classList.contains(className);
      }
      function callFunction(func) {
        func();
      }
      var isLineHeightRounded = function() {
        var res;
        return function() {
          if (typeof res === "undefined") {
            var d = document.createElement("div");
            d.style.fontSize = "13px";
            d.style.lineHeight = "1.5";
            d.style.padding = "0";
            d.style.border = "0";
            d.innerHTML = "&nbsp;<br />&nbsp;";
            document.body.appendChild(d);
            res = d.offsetHeight === 38;
            document.body.removeChild(d);
          }
          return res;
        };
      }();
      function getContentBoxTopOffset(parent, child) {
        var parentStyle = getComputedStyle(parent);
        var childStyle = getComputedStyle(child);
        function pxToNumber(px) {
          return +px.substr(0, px.length - 2);
        }
        return child.offsetTop + pxToNumber(childStyle.borderTopWidth) + pxToNumber(childStyle.paddingTop) - pxToNumber(parentStyle.paddingTop);
      }
      function isActiveFor(pre) {
        if (!pre || !/pre/i.test(pre.nodeName)) {
          return false;
        }
        if (pre.hasAttribute("data-line")) {
          return true;
        }
        if (pre.id && Prism.util.isActive(pre, LINKABLE_LINE_NUMBERS_CLASS)) {
          return true;
        }
        return false;
      }
      var scrollIntoView = true;
      function highlightLines(pre, lines, classes) {
        lines = typeof lines === "string" ? lines : pre.getAttribute("data-line") || "";
        var ranges = lines.replace(/\s+/g, "").split(",").filter(Boolean);
        var offset = +pre.getAttribute("data-line-offset") || 0;
        var parseMethod = isLineHeightRounded() ? parseInt : parseFloat;
        var lineHeight = parseMethod(getComputedStyle(pre).lineHeight);
        var hasLineNumbers = Prism.util.isActive(pre, LINE_NUMBERS_CLASS);
        var codeElement = pre.querySelector("code");
        var parentElement = hasLineNumbers ? pre : codeElement || pre;
        var mutateActions = [];
        var codePreOffset = !codeElement || parentElement == codeElement ? 0 : getContentBoxTopOffset(pre, codeElement);
        ranges.forEach(function(currentRange) {
          var range = currentRange.split("-");
          var start2 = +range[0];
          var end = +range[1] || start2;
          var line = pre.querySelector('.line-highlight[data-range="' + currentRange + '"]') || document.createElement("div");
          mutateActions.push(function() {
            line.setAttribute("aria-hidden", "true");
            line.setAttribute("data-range", currentRange);
            line.className = (classes || "") + " line-highlight";
          });
          if (hasLineNumbers && Prism.plugins.lineNumbers) {
            var startNode = Prism.plugins.lineNumbers.getLine(pre, start2);
            var endNode = Prism.plugins.lineNumbers.getLine(pre, end);
            if (startNode) {
              var top = startNode.offsetTop + codePreOffset + "px";
              mutateActions.push(function() {
                line.style.top = top;
              });
            }
            if (endNode) {
              var height = endNode.offsetTop - startNode.offsetTop + endNode.offsetHeight + "px";
              mutateActions.push(function() {
                line.style.height = height;
              });
            }
          } else {
            mutateActions.push(function() {
              line.setAttribute("data-start", String(start2));
              if (end > start2) {
                line.setAttribute("data-end", String(end));
              }
              line.style.top = (start2 - offset - 1) * lineHeight + codePreOffset + "px";
              line.textContent = new Array(end - start2 + 2).join(" \n");
            });
          }
          mutateActions.push(function() {
            line.style.width = pre.scrollWidth + "px";
          });
          mutateActions.push(function() {
            parentElement.appendChild(line);
          });
        });
        var id = pre.id;
        if (hasLineNumbers && Prism.util.isActive(pre, LINKABLE_LINE_NUMBERS_CLASS) && id) {
          if (!hasClass(pre, LINKABLE_LINE_NUMBERS_CLASS)) {
            mutateActions.push(function() {
              pre.classList.add(LINKABLE_LINE_NUMBERS_CLASS);
            });
          }
          var start = parseInt(pre.getAttribute("data-start") || "1");
          $$(".line-numbers-rows > span", pre).forEach(function(lineSpan, i) {
            var lineNumber = i + start;
            lineSpan.onclick = function() {
              var hash2 = id + "." + lineNumber;
              scrollIntoView = false;
              location.hash = hash2;
              setTimeout(function() {
                scrollIntoView = true;
              }, 1);
            };
          });
        }
        return function() {
          mutateActions.forEach(callFunction);
        };
      }
      function applyHash() {
        var hash2 = location.hash.slice(1);
        $$(".temporary.line-highlight").forEach(function(line) {
          line.parentNode.removeChild(line);
        });
        var range = (hash2.match(/\.([\d,-]+)$/) || [, ""])[1];
        if (!range || document.getElementById(hash2)) {
          return;
        }
        var id = hash2.slice(0, hash2.lastIndexOf("."));
        var pre = document.getElementById(id);
        if (!pre) {
          return;
        }
        if (!pre.hasAttribute("data-line")) {
          pre.setAttribute("data-line", "");
        }
        var mutateDom = highlightLines(pre, range, "temporary ");
        mutateDom();
        if (scrollIntoView) {
          document.querySelector(".temporary.line-highlight").scrollIntoView();
        }
      }
      var fakeTimer = 0;
      Prism.hooks.add("before-sanity-check", function(env) {
        var pre = env.element.parentElement;
        if (!isActiveFor(pre)) {
          return;
        }
        var num = 0;
        $$(".line-highlight", pre).forEach(function(line) {
          num += line.textContent.length;
          line.parentNode.removeChild(line);
        });
        if (num && /^(?: \n)+$/.test(env.code.slice(-num))) {
          env.code = env.code.slice(0, -num);
        }
      });
      Prism.hooks.add("complete", function completeHook(env) {
        var pre = env.element.parentElement;
        if (!isActiveFor(pre)) {
          return;
        }
        clearTimeout(fakeTimer);
        var hasLineNumbers = Prism.plugins.lineNumbers;
        var isLineNumbersLoaded = env.plugins && env.plugins.lineNumbers;
        if (hasClass(pre, LINE_NUMBERS_CLASS) && hasLineNumbers && !isLineNumbersLoaded) {
          Prism.hooks.add("line-numbers", completeHook);
        } else {
          var mutateDom = highlightLines(pre);
          mutateDom();
          fakeTimer = setTimeout(applyHash, 1);
        }
      });
      window.addEventListener("hashchange", applyHash);
      window.addEventListener("resize", function() {
        var actions = $$("pre").filter(isActiveFor).map(function(pre) {
          return highlightLines(pre);
        });
        actions.forEach(callFunction);
      });
    })();
  }
});

// node_modules/prismjs/plugins/file-highlight/prism-file-highlight.js
var init_prism_file_highlight = __esm({
  "node_modules/prismjs/plugins/file-highlight/prism-file-highlight.js"() {
    init_shims();
    (function() {
      if (typeof Prism === "undefined" || typeof document === "undefined") {
        return;
      }
      if (!Element.prototype.matches) {
        Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;
      }
      var LOADING_MESSAGE = "Loading\u2026";
      var FAILURE_MESSAGE = function(status, message) {
        return "\u2716 Error " + status + " while fetching file: " + message;
      };
      var FAILURE_EMPTY_MESSAGE = "\u2716 Error: File does not exist or is empty";
      var EXTENSIONS = {
        "js": "javascript",
        "py": "python",
        "rb": "ruby",
        "ps1": "powershell",
        "psm1": "powershell",
        "sh": "bash",
        "bat": "batch",
        "h": "c",
        "tex": "latex"
      };
      var STATUS_ATTR = "data-src-status";
      var STATUS_LOADING = "loading";
      var STATUS_LOADED = "loaded";
      var STATUS_FAILED = "failed";
      var SELECTOR = "pre[data-src]:not([" + STATUS_ATTR + '="' + STATUS_LOADED + '"]):not([' + STATUS_ATTR + '="' + STATUS_LOADING + '"])';
      var lang = /\blang(?:uage)?-([\w-]+)\b/i;
      function setLanguageClass(element, language) {
        var className = element.className;
        className = className.replace(lang, " ") + " language-" + language;
        element.className = className.replace(/\s+/g, " ").trim();
      }
      Prism.hooks.add("before-highlightall", function(env) {
        env.selector += ", " + SELECTOR;
      });
      Prism.hooks.add("before-sanity-check", function(env) {
        var pre = env.element;
        if (pre.matches(SELECTOR)) {
          env.code = "";
          pre.setAttribute(STATUS_ATTR, STATUS_LOADING);
          var code = pre.appendChild(document.createElement("CODE"));
          code.textContent = LOADING_MESSAGE;
          var src2 = pre.getAttribute("data-src");
          var language = env.language;
          if (language === "none") {
            var extension = (/\.(\w+)$/.exec(src2) || [, "none"])[1];
            language = EXTENSIONS[extension] || extension;
          }
          setLanguageClass(code, language);
          setLanguageClass(pre, language);
          var autoloader = Prism.plugins.autoloader;
          if (autoloader) {
            autoloader.loadLanguages(language);
          }
          var xhr = new XMLHttpRequest();
          xhr.open("GET", src2, true);
          xhr.onreadystatechange = function() {
            if (xhr.readyState == 4) {
              if (xhr.status < 400 && xhr.responseText) {
                pre.setAttribute(STATUS_ATTR, STATUS_LOADED);
                code.textContent = xhr.responseText;
                Prism.highlightElement(code);
              } else {
                pre.setAttribute(STATUS_ATTR, STATUS_FAILED);
                if (xhr.status >= 400) {
                  code.textContent = FAILURE_MESSAGE(xhr.status, xhr.statusText);
                } else {
                  code.textContent = FAILURE_EMPTY_MESSAGE;
                }
              }
            }
          };
          xhr.send(null);
        }
      });
      Prism.plugins.fileHighlight = {
        highlight: function highlight(container) {
          var elements = (container || document).querySelectorAll(SELECTOR);
          for (var i = 0, element; element = elements[i++]; ) {
            Prism.highlightElement(element);
          }
        }
      };
      var logged = false;
      Prism.fileHighlight = function() {
        if (!logged) {
          console.warn("Prism.fileHighlight is deprecated. Use `Prism.plugins.fileHighlight.highlight` instead.");
          logged = true;
        }
        Prism.plugins.fileHighlight.highlight.apply(this, arguments);
      };
    })();
  }
});

// node_modules/prismjs/components/prism-bash.js
var init_prism_bash = __esm({
  "node_modules/prismjs/components/prism-bash.js"() {
    init_shims();
    (function(Prism2) {
      var envVars = "\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\b";
      var commandAfterHeredoc = {
        pattern: /(^(["']?)\w+\2)[ \t]+\S.*/,
        lookbehind: true,
        alias: "punctuation",
        inside: null
      };
      var insideString = {
        "bash": commandAfterHeredoc,
        "environment": {
          pattern: RegExp("\\$" + envVars),
          alias: "constant"
        },
        "variable": [
          {
            pattern: /\$?\(\([\s\S]+?\)\)/,
            greedy: true,
            inside: {
              "variable": [
                {
                  pattern: /(^\$\(\([\s\S]+)\)\)/,
                  lookbehind: true
                },
                /^\$\(\(/
              ],
              "number": /\b0x[\dA-Fa-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee]-?\d+)?/,
              "operator": /--|\+\+|\*\*=?|<<=?|>>=?|&&|\|\||[=!+\-*/%<>^&|]=?|[?~:]/,
              "punctuation": /\(\(?|\)\)?|,|;/
            }
          },
          {
            pattern: /\$\((?:\([^)]+\)|[^()])+\)|`[^`]+`/,
            greedy: true,
            inside: {
              "variable": /^\$\(|^`|\)$|`$/
            }
          },
          {
            pattern: /\$\{[^}]+\}/,
            greedy: true,
            inside: {
              "operator": /:[-=?+]?|[!\/]|##?|%%?|\^\^?|,,?/,
              "punctuation": /[\[\]]/,
              "environment": {
                pattern: RegExp("(\\{)" + envVars),
                lookbehind: true,
                alias: "constant"
              }
            }
          },
          /\$(?:\w+|[#?*!@$])/
        ],
        "entity": /\\(?:[abceEfnrtv\\"]|O?[0-7]{1,3}|x[0-9a-fA-F]{1,2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8})/
      };
      Prism2.languages.bash = {
        "shebang": {
          pattern: /^#!\s*\/.*/,
          alias: "important"
        },
        "comment": {
          pattern: /(^|[^"{\\$])#.*/,
          lookbehind: true
        },
        "function-name": [
          {
            pattern: /(\bfunction\s+)[\w-]+(?=(?:\s*\(?:\s*\))?\s*\{)/,
            lookbehind: true,
            alias: "function"
          },
          {
            pattern: /\b[\w-]+(?=\s*\(\s*\)\s*\{)/,
            alias: "function"
          }
        ],
        "for-or-select": {
          pattern: /(\b(?:for|select)\s+)\w+(?=\s+in\s)/,
          alias: "variable",
          lookbehind: true
        },
        "assign-left": {
          pattern: /(^|[\s;|&]|[<>]\()\w+(?=\+?=)/,
          inside: {
            "environment": {
              pattern: RegExp("(^|[\\s;|&]|[<>]\\()" + envVars),
              lookbehind: true,
              alias: "constant"
            }
          },
          alias: "variable",
          lookbehind: true
        },
        "string": [
          {
            pattern: /((?:^|[^<])<<-?\s*)(\w+)\s[\s\S]*?(?:\r?\n|\r)\2/,
            lookbehind: true,
            greedy: true,
            inside: insideString
          },
          {
            pattern: /((?:^|[^<])<<-?\s*)(["'])(\w+)\2\s[\s\S]*?(?:\r?\n|\r)\3/,
            lookbehind: true,
            greedy: true,
            inside: {
              "bash": commandAfterHeredoc
            }
          },
          {
            pattern: /(^|[^\\](?:\\\\)*)"(?:\\[\s\S]|\$\([^)]+\)|\$(?!\()|`[^`]+`|[^"\\`$])*"/,
            lookbehind: true,
            greedy: true,
            inside: insideString
          },
          {
            pattern: /(^|[^$\\])'[^']*'/,
            lookbehind: true,
            greedy: true
          },
          {
            pattern: /\$'(?:[^'\\]|\\[\s\S])*'/,
            greedy: true,
            inside: {
              "entity": insideString.entity
            }
          }
        ],
        "environment": {
          pattern: RegExp("\\$?" + envVars),
          alias: "constant"
        },
        "variable": insideString.variable,
        "function": {
          pattern: /(^|[\s;|&]|[<>]\()(?:add|apropos|apt|aptitude|apt-cache|apt-get|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\s;|&])/,
          lookbehind: true
        },
        "keyword": {
          pattern: /(^|[\s;|&]|[<>]\()(?:if|then|else|elif|fi|for|while|in|case|esac|function|select|do|done|until)(?=$|[)\s;|&])/,
          lookbehind: true
        },
        "builtin": {
          pattern: /(^|[\s;|&]|[<>]\()(?:\.|:|break|cd|continue|eval|exec|exit|export|getopts|hash|pwd|readonly|return|shift|test|times|trap|umask|unset|alias|bind|builtin|caller|command|declare|echo|enable|help|let|local|logout|mapfile|printf|read|readarray|source|type|typeset|ulimit|unalias|set|shopt)(?=$|[)\s;|&])/,
          lookbehind: true,
          alias: "class-name"
        },
        "boolean": {
          pattern: /(^|[\s;|&]|[<>]\()(?:true|false)(?=$|[)\s;|&])/,
          lookbehind: true
        },
        "file-descriptor": {
          pattern: /\B&\d\b/,
          alias: "important"
        },
        "operator": {
          pattern: /\d?<>|>\||\+=|=[=~]?|!=?|<<[<-]?|[&\d]?>>|\d[<>]&?|[<>][&=]?|&[>&]?|\|[&|]?/,
          inside: {
            "file-descriptor": {
              pattern: /^\d/,
              alias: "important"
            }
          }
        },
        "punctuation": /\$?\(\(?|\)\)?|\.\.|[{}[\];\\]/,
        "number": {
          pattern: /(^|\s)(?:[1-9]\d*|0)(?:[.,]\d+)?\b/,
          lookbehind: true
        }
      };
      commandAfterHeredoc.inside = Prism2.languages.bash;
      var toBeCopied = [
        "comment",
        "function-name",
        "for-or-select",
        "assign-left",
        "string",
        "environment",
        "function",
        "keyword",
        "builtin",
        "boolean",
        "file-descriptor",
        "operator",
        "punctuation",
        "number"
      ];
      var inside = insideString.variable[1].inside;
      for (var i = 0; i < toBeCopied.length; i++) {
        inside[toBeCopied[i]] = Prism2.languages.bash[toBeCopied[i]];
      }
      Prism2.languages.shell = Prism2.languages.bash;
    })(Prism);
  }
});

// node_modules/prismjs/components/prism-css.js
var init_prism_css = __esm({
  "node_modules/prismjs/components/prism-css.js"() {
    init_shims();
    (function(Prism2) {
      var string2 = /(?:"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"|'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n])*')/;
      Prism2.languages.css = {
        "comment": /\/\*[\s\S]*?\*\//,
        "atrule": {
          pattern: /@[\w-](?:[^;{\s]|\s+(?![\s{]))*(?:;|(?=\s*\{))/,
          inside: {
            "rule": /^@[\w-]+/,
            "selector-function-argument": {
              pattern: /(\bselector\s*\(\s*(?![\s)]))(?:[^()\s]|\s+(?![\s)])|\((?:[^()]|\([^()]*\))*\))+(?=\s*\))/,
              lookbehind: true,
              alias: "selector"
            },
            "keyword": {
              pattern: /(^|[^\w-])(?:and|not|only|or)(?![\w-])/,
              lookbehind: true
            }
          }
        },
        "url": {
          pattern: RegExp("\\burl\\((?:" + string2.source + "|" + /(?:[^\\\r\n()"']|\\[\s\S])*/.source + ")\\)", "i"),
          greedy: true,
          inside: {
            "function": /^url/i,
            "punctuation": /^\(|\)$/,
            "string": {
              pattern: RegExp("^" + string2.source + "$"),
              alias: "url"
            }
          }
        },
        "selector": {
          pattern: RegExp(`(^|[{}\\s])[^{}\\s](?:[^{};"'\\s]|\\s+(?![\\s{])|` + string2.source + ")*(?=\\s*\\{)"),
          lookbehind: true
        },
        "string": {
          pattern: string2,
          greedy: true
        },
        "property": {
          pattern: /(^|[^-\w\xA0-\uFFFF])(?!\s)[-_a-z\xA0-\uFFFF](?:(?!\s)[-\w\xA0-\uFFFF])*(?=\s*:)/i,
          lookbehind: true
        },
        "important": /!important\b/i,
        "function": {
          pattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\()/i,
          lookbehind: true
        },
        "punctuation": /[(){};:,]/
      };
      Prism2.languages.css["atrule"].inside.rest = Prism2.languages.css;
      var markup = Prism2.languages.markup;
      if (markup) {
        markup.tag.addInlined("style", "css");
        markup.tag.addAttribute("style", "css");
      }
    })(Prism);
  }
});

// node_modules/prismjs/components/prism-r.js
var init_prism_r = __esm({
  "node_modules/prismjs/components/prism-r.js"() {
    init_shims();
    Prism.languages.r = {
      "comment": /#.*/,
      "string": {
        pattern: /(['"])(?:\\.|(?!\1)[^\\\r\n])*\1/,
        greedy: true
      },
      "percent-operator": {
        pattern: /%[^%\s]*%/,
        alias: "operator"
      },
      "boolean": /\b(?:TRUE|FALSE)\b/,
      "ellipsis": /\.\.(?:\.|\d+)/,
      "number": [
        /\b(?:NaN|Inf)\b/,
        /(?:\b0x[\dA-Fa-f]+(?:\.\d*)?|\b\d+(?:\.\d*)?|\B\.\d+)(?:[EePp][+-]?\d+)?[iL]?/
      ],
      "keyword": /\b(?:if|else|repeat|while|function|for|in|next|break|NULL|NA|NA_integer_|NA_real_|NA_complex_|NA_character_)\b/,
      "operator": /->?>?|<(?:=|<?-)?|[>=!]=?|::?|&&?|\|\|?|[+*\/^$@~]/,
      "punctuation": /[(){}\[\],;]/
    };
  }
});

// node_modules/prismjs/components/prism-json.js
var init_prism_json = __esm({
  "node_modules/prismjs/components/prism-json.js"() {
    init_shims();
    Prism.languages.json = {
      "property": {
        pattern: /(^|[^\\])"(?:\\.|[^\\"\r\n])*"(?=\s*:)/,
        lookbehind: true,
        greedy: true
      },
      "string": {
        pattern: /(^|[^\\])"(?:\\.|[^\\"\r\n])*"(?!\s*:)/,
        lookbehind: true,
        greedy: true
      },
      "comment": {
        pattern: /\/\/.*|\/\*[\s\S]*?(?:\*\/|$)/,
        greedy: true
      },
      "number": /-?\b\d+(?:\.\d+)?(?:e[+-]?\d+)?\b/i,
      "punctuation": /[{}[\],]/,
      "operator": /:/,
      "boolean": /\b(?:true|false)\b/,
      "null": {
        pattern: /\bnull\b/,
        alias: "keyword"
      }
    };
    Prism.languages.webmanifest = Prism.languages.json;
  }
});

// node_modules/prismjs/components/prism-yaml.js
var init_prism_yaml = __esm({
  "node_modules/prismjs/components/prism-yaml.js"() {
    init_shims();
    (function(Prism2) {
      var anchorOrAlias = /[*&][^\s[\]{},]+/;
      var tag = /!(?:<[\w\-%#;/?:@&=+$,.!~*'()[\]]+>|(?:[a-zA-Z\d-]*!)?[\w\-%#;/?:@&=+$.~*'()]+)?/;
      var properties = "(?:" + tag.source + "(?:[ 	]+" + anchorOrAlias.source + ")?|" + anchorOrAlias.source + "(?:[ 	]+" + tag.source + ")?)";
      var plainKey = /(?:[^\s\x00-\x08\x0e-\x1f!"#%&'*,\-:>?@[\]`{|}\x7f-\x84\x86-\x9f\ud800-\udfff\ufffe\uffff]|[?:-]<PLAIN>)(?:[ \t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(/<PLAIN>/g, function() {
        return /[^\s\x00-\x08\x0e-\x1f,[\]{}\x7f-\x84\x86-\x9f\ud800-\udfff\ufffe\uffff]/.source;
      });
      var string2 = /"(?:[^"\\\r\n]|\\.)*"|'(?:[^'\\\r\n]|\\.)*'/.source;
      function createValuePattern(value, flags) {
        flags = (flags || "").replace(/m/g, "") + "m";
        var pattern = /([:\-,[{]\s*(?:\s<<prop>>[ \t]+)?)(?:<<value>>)(?=[ \t]*(?:$|,|\]|\}|(?:[\r\n]\s*)?#))/.source.replace(/<<prop>>/g, function() {
          return properties;
        }).replace(/<<value>>/g, function() {
          return value;
        });
        return RegExp(pattern, flags);
      }
      Prism2.languages.yaml = {
        "scalar": {
          pattern: RegExp(/([\-:]\s*(?:\s<<prop>>[ \t]+)?[|>])[ \t]*(?:((?:\r?\n|\r)[ \t]+)\S[^\r\n]*(?:\2[^\r\n]+)*)/.source.replace(/<<prop>>/g, function() {
            return properties;
          })),
          lookbehind: true,
          alias: "string"
        },
        "comment": /#.*/,
        "key": {
          pattern: RegExp(/((?:^|[:\-,[{\r\n?])[ \t]*(?:<<prop>>[ \t]+)?)<<key>>(?=\s*:\s)/.source.replace(/<<prop>>/g, function() {
            return properties;
          }).replace(/<<key>>/g, function() {
            return "(?:" + plainKey + "|" + string2 + ")";
          })),
          lookbehind: true,
          greedy: true,
          alias: "atrule"
        },
        "directive": {
          pattern: /(^[ \t]*)%.+/m,
          lookbehind: true,
          alias: "important"
        },
        "datetime": {
          pattern: createValuePattern(/\d{4}-\d\d?-\d\d?(?:[tT]|[ \t]+)\d\d?:\d{2}:\d{2}(?:\.\d*)?(?:[ \t]*(?:Z|[-+]\d\d?(?::\d{2})?))?|\d{4}-\d{2}-\d{2}|\d\d?:\d{2}(?::\d{2}(?:\.\d*)?)?/.source),
          lookbehind: true,
          alias: "number"
        },
        "boolean": {
          pattern: createValuePattern(/true|false/.source, "i"),
          lookbehind: true,
          alias: "important"
        },
        "null": {
          pattern: createValuePattern(/null|~/.source, "i"),
          lookbehind: true,
          alias: "important"
        },
        "string": {
          pattern: createValuePattern(string2),
          lookbehind: true,
          greedy: true
        },
        "number": {
          pattern: createValuePattern(/[+-]?(?:0x[\da-f]+|0o[0-7]+|(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?|\.inf|\.nan)/.source, "i"),
          lookbehind: true
        },
        "tag": tag,
        "important": anchorOrAlias,
        "punctuation": /---|[:[\]{}\-,|>?]|\.\.\./
      };
      Prism2.languages.yml = Prism2.languages.yaml;
    })(Prism);
  }
});

// .svelte-kit/output/server/chunks/Code-71f36c68.js
var import_prismjs, import_prism_normalize_whitespace, blocks, css6, Code;
var init_Code_71f36c68 = __esm({
  ".svelte-kit/output/server/chunks/Code-71f36c68.js"() {
    init_shims();
    init_app_9f378dda();
    import_prismjs = __toModule(require_prism());
    init_prism_line_numbers();
    import_prism_normalize_whitespace = __toModule(require_prism_normalize_whitespace());
    init_prism_line_highlight();
    init_prism_file_highlight();
    init_prism_bash();
    init_prism_css();
    init_prism_r();
    init_prism_json();
    init_prism_yaml();
    blocks = "(if|else if|await|then|catch|each|html|debug)";
    Prism.languages.svelte = Prism.languages.extend("markup", {
      each: {
        pattern: new RegExp("{[#/]each(?:(?:\\{(?:(?:\\{(?:[^{}])*\\})|(?:[^{}]))*\\})|(?:[^{}]))*}"),
        inside: {
          "language-javascript": [
            {
              pattern: /(as[\s\S]*)\([\s\S]*\)(?=\s*\})/,
              lookbehind: true,
              inside: Prism.languages["javascript"]
            },
            {
              pattern: /(as[\s]*)[\s\S]*(?=\s*)/,
              lookbehind: true,
              inside: Prism.languages["javascript"]
            },
            {
              pattern: /(#each[\s]*)[\s\S]*(?=as)/,
              lookbehind: true,
              inside: Prism.languages["javascript"]
            }
          ],
          keyword: /[#/]each|as/,
          punctuation: /{|}/
        }
      },
      block: {
        pattern: new RegExp("{[#:/@]/s" + blocks + "(?:(?:\\{(?:(?:\\{(?:[^{}])*\\})|(?:[^{}]))*\\})|(?:[^{}]))*}"),
        inside: {
          punctuation: /^{|}$/,
          keyword: [new RegExp("[#:/@]" + blocks + "( )*"), /as/, /then/],
          "language-javascript": {
            pattern: /[\s\S]*/,
            inside: Prism.languages["javascript"]
          }
        }
      },
      tag: {
        pattern: /<\/?(?!\d)[^\s>\/=$<%]+(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))|(?:"[^"]*"|'[^']*'|{[\s\S]+?}(?=[\s/>])))|(?=[\s/>])))+)?\s*\/?>/i,
        greedy: true,
        inside: {
          tag: {
            pattern: /^<\/?[^\s>\/]+/i,
            inside: {
              punctuation: /^<\/?/,
              namespace: /^[^\s>\/:]+:/
            }
          },
          "language-javascript": {
            pattern: /\{(?:(?:\{(?:(?:\{(?:[^{}])*\})|(?:[^{}]))*\})|(?:[^{}]))*\}/,
            inside: Prism.languages["javascript"]
          },
          "attr-value": {
            pattern: /=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+)/i,
            inside: {
              punctuation: [
                /^=/,
                {
                  pattern: /^(\s*)["']|["']$/,
                  lookbehind: true
                }
              ],
              "language-javascript": {
                pattern: /{[\s\S]+}/,
                inside: Prism.languages["javascript"]
              }
            }
          },
          punctuation: /\/?>/,
          "attr-name": {
            pattern: /[^\s>\/]+/,
            inside: {
              namespace: /^[^\s>\/:]+:/
            }
          }
        }
      },
      "language-javascript": {
        pattern: /\{(?:(?:\{(?:(?:\{(?:[^{}])*\})|(?:[^{}]))*\})|(?:[^{}]))*\}/,
        lookbehind: true,
        inside: Prism.languages["javascript"]
      }
    });
    Prism.languages.svelte["tag"].inside["attr-value"].inside["entity"] = Prism.languages.svelte["entity"];
    Prism.hooks.add("wrap", (env) => {
      if (env.type === "entity") {
        env.attributes["title"] = env.content.replace(/&amp;/, "&");
      }
    });
    Object.defineProperty(Prism.languages.svelte.tag, "addInlined", {
      value: function addInlined(tagName, lang) {
        const includedCdataInside = {};
        includedCdataInside["language-" + lang] = {
          pattern: /(^<!\[CDATA\[)[\s\S]+?(?=\]\]>$)/i,
          lookbehind: true,
          inside: Prism.languages[lang]
        };
        includedCdataInside["cdata"] = /^<!\[CDATA\[|\]\]>$/i;
        const inside = {
          "included-cdata": {
            pattern: /<!\[CDATA\[[\s\S]*?\]\]>/i,
            inside: includedCdataInside
          }
        };
        inside["language-" + lang] = {
          pattern: /[\s\S]+/,
          inside: Prism.languages[lang]
        };
        const def = {};
        def[tagName] = {
          pattern: RegExp(/(<__[\s\S]*?>)(?:<!\[CDATA\[[\s\S]*?\]\]>\s*|[\s\S])*?(?=<\/__>)/.source.replace(/__/g, tagName), "i"),
          lookbehind: true,
          greedy: true,
          inside
        };
        Prism.languages.insertBefore("svelte", "cdata", def);
      }
    });
    Prism.languages.svelte.tag.addInlined("style", "css");
    Prism.languages.svelte.tag.addInlined("script", "javascript");
    css6 = {
      code: ".filename-container.svelte-qjxfwc{text-align:right;width:100%;height:30px;margin-bottom:-0.55em;border-radius:5px 5px 0 0;background:rgba(var(--accent-color-rgb), 0.9);display:flex;justify-content:flex-end;place-items:center}.filename.svelte-qjxfwc{color:white;padding:0.4rem;letter-spacing:1.4px;font-weight:400}.language.svelte-qjxfwc{position:absolute;top:0;right:0;color:#cecece;font-size:0.7rem;text-transform:uppercase;padding:3px 4px;background:rgba(1, 22, 39, 0.79);user-select:none}",
      map: null
    };
    Code = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let prismClasses;
      let $$restProps = compute_rest_props($$props, [
        "code",
        "filename",
        "highlightedLines",
        "language",
        "showLanguage",
        "showLineNumbers",
        "normalizeWhiteSpace",
        "normalizeWhiteSpaceConfig",
        "classes"
      ]);
      let { code = "" } = $$props;
      let { filename = "" } = $$props;
      let { highlightedLines = "" } = $$props;
      let { language = "javascript" } = $$props;
      let { showLanguage = true } = $$props;
      let { showLineNumbers = false } = $$props;
      let { normalizeWhiteSpace = true } = $$props;
      let { normalizeWhiteSpaceConfig = {
        "remove-trailing": true,
        "remove-indent": false
      } } = $$props;
      let { classes = "" } = $$props;
      let fakeCodeEl;
      let preEl;
      let formattedCode = "";
      if ($$props.code === void 0 && $$bindings.code && code !== void 0)
        $$bindings.code(code);
      if ($$props.filename === void 0 && $$bindings.filename && filename !== void 0)
        $$bindings.filename(filename);
      if ($$props.highlightedLines === void 0 && $$bindings.highlightedLines && highlightedLines !== void 0)
        $$bindings.highlightedLines(highlightedLines);
      if ($$props.language === void 0 && $$bindings.language && language !== void 0)
        $$bindings.language(language);
      if ($$props.showLanguage === void 0 && $$bindings.showLanguage && showLanguage !== void 0)
        $$bindings.showLanguage(showLanguage);
      if ($$props.showLineNumbers === void 0 && $$bindings.showLineNumbers && showLineNumbers !== void 0)
        $$bindings.showLineNumbers(showLineNumbers);
      if ($$props.normalizeWhiteSpace === void 0 && $$bindings.normalizeWhiteSpace && normalizeWhiteSpace !== void 0)
        $$bindings.normalizeWhiteSpace(normalizeWhiteSpace);
      if ($$props.normalizeWhiteSpaceConfig === void 0 && $$bindings.normalizeWhiteSpaceConfig && normalizeWhiteSpaceConfig !== void 0)
        $$bindings.normalizeWhiteSpaceConfig(normalizeWhiteSpaceConfig);
      if ($$props.classes === void 0 && $$bindings.classes && classes !== void 0)
        $$bindings.classes(classes);
      $$result.css.add(css6);
      prismClasses = `language-${language} ${showLineNumbers || highlightedLines.length > 0 ? "line-numbers" : ""} ${normalizeWhiteSpace === true ? "" : "no-whitespace-normalization"}`;
      {
        if (typeof Prism !== "undefined" && code) {
          formattedCode = Prism.highlight(code, Prism.languages["r"], language);
        }
      }
      return `${filename.length > 0 ? `<div class="${"filename-container svelte-qjxfwc"}"><span class="${"filename svelte-qjxfwc"}">${escape(filename)}</span></div>` : ``}
<code style="${"display: none;"}"${add_attribute("this", fakeCodeEl, 0)}>${slots.default ? slots.default({}) : ``}</code>
<pre${spread([
        {
          class: escape(prismClasses) + " " + escape(classes)
        },
        {
          "data-line": escape_attribute_value(highlightedLines)
        },
        escape_object($$restProps)
      ], "svelte-qjxfwc")}${add_attribute("this", preEl, 0)}>${showLanguage && filename.length == 0 ? `<span class="${"language svelte-qjxfwc"}">${escape(language)}</span>` : ``}
  <code class="${"language-" + escape(language) + " svelte-qjxfwc"}"><!-- HTML_TAG_START -->${formattedCode}<!-- HTML_TAG_END --></code>
</pre>`;
    });
  }
});

// .svelte-kit/output/server/chunks/HighlightFromProp-41fd8065.js
var css7, HighlightFromProp;
var init_HighlightFromProp_41fd8065 = __esm({
  ".svelte-kit/output/server/chunks/HighlightFromProp-41fd8065.js"() {
    init_shims();
    init_app_9f378dda();
    css7 = {
      code: "span.svelte-p78l24{background:rgba(var(--accent-color-rgb), 0.2);padding:1px 4px}",
      map: null
    };
    HighlightFromProp = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { hoveredIdProp } = $$props;
      let { highlightedLinesProp } = $$props;
      let { hoveredId } = $$props;
      let { highlightedLines } = $$props;
      if ($$props.hoveredIdProp === void 0 && $$bindings.hoveredIdProp && hoveredIdProp !== void 0)
        $$bindings.hoveredIdProp(hoveredIdProp);
      if ($$props.highlightedLinesProp === void 0 && $$bindings.highlightedLinesProp && highlightedLinesProp !== void 0)
        $$bindings.highlightedLinesProp(highlightedLinesProp);
      if ($$props.hoveredId === void 0 && $$bindings.hoveredId && hoveredId !== void 0)
        $$bindings.hoveredId(hoveredId);
      if ($$props.highlightedLines === void 0 && $$bindings.highlightedLines && highlightedLines !== void 0)
        $$bindings.highlightedLines(highlightedLines);
      $$result.css.add(css7);
      return `<span class="${"svelte-p78l24"}">${slots.default ? slots.default({}) : ``}</span>`;
    });
  }
});

// .svelte-kit/output/server/chunks/Info-43a233e8.js
var css8, Info;
var init_Info_43a233e8 = __esm({
  ".svelte-kit/output/server/chunks/Info-43a233e8.js"() {
    init_shims();
    init_app_9f378dda();
    css8 = {
      code: '.info.svelte-1oeu49g::before{content:"\u2757\uFE0F";font-size:1.5rem;margin-right:1rem}.info.svelte-1oeu49g{display:flex;place-items:center;border-radius:10px;font-weight:normal;background:var(--semitransparent-bg);box-shadow:2px 2px 5px 1px var(--box-shadow-color);padding:1rem;margin:1.75rem 0}.info .text p:not(:last-child){margin-bottom:1rem}.info .text p:last-child{margin-bottom:0}',
      map: null
    };
    Info = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      $$result.css.add(css8);
      return `<div class="${"info svelte-1oeu49g"}"><div class="${"text"}"><p>${slots.default ? slots.default({}) : ``}</p></div>
</div>`;
    });
  }
});

// .svelte-kit/output/server/chunks/adding-a-chart-to-your-d3-tooltip-67831f20.js
var adding_a_chart_to_your_d3_tooltip_67831f20_exports = {};
__export(adding_a_chart_to_your_d3_tooltip_67831f20_exports, {
  default: () => Adding_a_chart_to_your_d3_tooltip,
  metadata: () => metadata34
});
var import_bowser40, import_prismjs2, import_prism_normalize_whitespace2, metadata34, Adding_a_chart_to_your_d3_tooltip;
var init_adding_a_chart_to_your_d3_tooltip_67831f20 = __esm({
  ".svelte-kit/output/server/chunks/adding-a-chart-to-your-d3-tooltip-67831f20.js"() {
    init_shims();
    init_app_9f378dda();
    init_layout_ef610ed1();
    init_Image_8e30e86c();
    init_Code_71f36c68();
    init_HighlightFromProp_41fd8065();
    init_Info_43a233e8();
    init_BackTo_d882ed88();
    init_global_130d3fe3();
    import_bowser40 = __toModule(require_es5());
    init_CornerTitle_6f993505();
    init_store_8bf23024();
    init_utils_09998264();
    init_IntersectionObserver_4cd4a541();
    import_prismjs2 = __toModule(require_prism());
    init_prism_line_numbers();
    import_prism_normalize_whitespace2 = __toModule(require_prism_normalize_whitespace());
    init_prism_line_highlight();
    init_prism_file_highlight();
    init_prism_bash();
    init_prism_css();
    init_prism_r();
    init_prism_json();
    init_prism_yaml();
    metadata34 = {
      "layout": "blog",
      "title": "How to Add a Chart to Your D3 Tooltip",
      "description": "A few lines of code can make your D3 tooltips significantly more informative",
      "date": "2020-06-02",
      "image": "adding-a-chart-to-your-d3-tooltip/header.png",
      "tags": ["d3", "html", "tutorial"]
    };
    Adding_a_chart_to_your_d3_tooltip = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let hoveredId;
      let highlightedLines;
      let $$settled;
      let $$rendered;
      do {
        $$settled = true;
        $$rendered = `${validate_component(Layout4, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata34), {}, {
          default: () => `<p>I think tooltips are one of the most underrated parts of a visualization. When users are initially confused by a visualization, they often hover over a data point of interest to get more information.</p>
<p>Unfortunately, many tooltips fail to really illuminate much about our data. They often recapitulate what is already being presented without clarifying any of the confusing parts of the data. Most frequently, I see (and even create \u{1F626}) tooltips which present the most basic information (in a map, a tooltip would present the state name and the value of interest), and nothing else!</p>
<p>Of course, there\u2019s nothing <em>wrong</em> with these kinds of tooltips. But they are truly doing the bare minimum, and, as a result, they\u2019re missing out on the full potential of tooltips. <strong>If users are actively seeking more information by hovering over data, we ought to reward them with the most helpful and interesting information we can.</strong></p>
<p>That\u2019s why I recently updated one of my tooltips from a static presentation of textual information to a line chart depicting change over time. In other words, I went from this:</p>
${validate_component(Image, "Image").$$render($$result, {
            src: "../images/post/adding-a-chart-to-your-d3-tooltip/old-tooltip.gif",
            alt: "A GIF depicting the old tooltip, which contained static values in textual form"
          }, {}, {})}
<p>to this:</p>
${validate_component(Image, "Image").$$render($$result, {
            src: "../images/post/adding-a-chart-to-your-d3-tooltip/new-tooltip.gif",
            alt: "A GIF depicting the old tooltip, which contained dynamic, temporal data over time for a given state upon hover"
          }, {}, {})}
<h2 id="${"why-did-i-make-that-change"}"><a href="${"#why-did-i-make-that-change"}">Why did I make that change?</a></h2>
<p>The former tooltip provided information which was rather uninteresting. Although it clarified the exact <em>rate</em> of overdose deaths in a given state at a given time, it didn\u2019t do much else. It did provide the year currently in view, but this was also visible in the bottom right corner of the visualization! It also provided the state name, but most of my viewers have likely taken US geography in middle school.</p>
<p>Thus, this tooltip was rather redundant. At best, it provided the <em>exact</em> rate, so that a viewer could compare two states, or learn more information about a given state without solely relying on color encoding (<a href="${"https://courses.cs.washington.edu/courses/cse442/17au/lectures/CSE442-VisualEncoding.pdf"}" rel="${"nofollow"}">which can be somewhat unreliable when it comes to quantitative encoding</a>, as is the case in a choropleth map).</p>
<p>The new tooltip shows a trend over time. It also shows the state name (just in case you skipped that day in US geography!), and also the most recent data on overdose deaths. Because this map is meant to show how the opioid crisis <em>has evolved</em>, showing a line chart for each state in my tooltip allows the user to explore state-by-state trends on hover! This is much easier than hovering on each state during each year and trying to keep track of the trends.</p>
<p>For example, hovering on West Virginia, which in 2017 seemed to have the highest opioid-involved overdose death rate (as indicated by it having the darkest shade of red), reveals that its also experienced one of the largest over-time increase in this rate since 1999:</p>
${validate_component(Image, "Image").$$render($$result, {
            src: "../images/post/adding-a-chart-to-your-d3-tooltip/west-virginia.jpg",
            alt: "A static image focusing on West Virginia, showcasing the tooltip which shows a line chart increasing over time."
          }, {}, {})}
<h2 id="${"so-how-do-you-do-it"}"><a href="${"#so-how-do-you-do-it"}">So, how do you do it?</a></h2>
<p>Great question! It\u2019s thankfully not that hard, but the payoff is huge. The shift from my old, boring tooltip to my new, sexy one took only a couple of hours, thanks to a few <a href="${"https://stackoverflow.com/questions/43904643/add-chart-to-tooltip-in-d3"}" rel="${"nofollow"}">Stack Overflow answers</a> and <a href="${"https://bl.ocks.org/maelafifi/ee7fecf90bb5060d5f9a7551271f4397"}" rel="${"nofollow"}">online examples</a>.</p>
<h3 id="${"step-1-load-d3-tip"}"><a href="${"#step-1-load-d3-tip"}">Step 1: Load <code>d3-tip</code></a></h3>
<p>The process mostly relies on <code>d3-tip</code>, which you can learn more about <a href="${"http://labratrevenge.com/d3-tip/"}" rel="${"nofollow"}">here</a>.</p>
<p>You can load <code>d3-tip</code> with the following code:</p>
${validate_component(Code, "Code").$$render($$result, { language: "js" }, {}, {
            default: () => `<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/d3-tip/0.7.1/d3-tip.min.js&quot;&gt;&lt;/script&gt;</code>`}<!-- HTML_TAG_END --></pre>`
          })}
<h3 id="${"step-2-create-a-tooltip-object"}"><a href="${"#step-2-create-a-tooltip-object"}">Step 2: Create a tooltip object</a></h3>
<p>Next, we initialize our tooltip.</p>
${validate_component(Code, "Code").$$render($$result, {
            language: "js",
            showLineNumbers: true,
            highlightedLines: hoveredId == "init-tooltip" ? highlightedLines : null
          }, {}, {
            default: () => `<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">// Define the tooltip
var tool_tip = d3.tip()
  .attr(&quot;class&quot;, &quot;d3-tip&quot;)
  // If the mouse position is greater beyond ~ Kentucky/Missouri,
  // Offset tooltip left instead of right
  .offset(current_position[0] &gt; 650 ? [-20, -120] : [20, 120])
  // Input the title, and include the div with an id of #tipDiv
  .html(
    &quot;&lt;p&gt;Opioid-involved deaths over time in&lt;/p&gt;
    &lt;div id=&#39;tipDiv&#39;&gt;&lt;/div&gt;&quot;
    );

// Call it as a function to our app-wide SVG
svg.call(tool_tip);</code>`}<!-- HTML_TAG_END --></pre>`
          })}
<p>${validate_component(HighlightFromProp, "HighlightFromProp").$$render($$result, {
            hoveredIdProp: "init-tooltip",
            highlightedLinesProp: "2-3",
            hoveredId,
            highlightedLines
          }, {
            hoveredId: ($$value) => {
              hoveredId = $$value;
              $$settled = false;
            },
            highlightedLines: ($$value) => {
              highlightedLines = $$value;
              $$settled = false;
            }
          }, {
            default: () => `Lines 2 and 3
`
          })} 
  simply create our tooltip and give it a class (for CSS styling). 
</p>
<p>Then, on 
${validate_component(HighlightFromProp, "HighlightFromProp").$$render($$result, {
            hoveredIdProp: "init-tooltip",
            highlightedLinesProp: "6",
            hoveredId,
            highlightedLines
          }, {
            hoveredId: ($$value) => {
              hoveredId = $$value;
              $$settled = false;
            },
            highlightedLines: ($$value) => {
              highlightedLines = $$value;
              $$settled = false;
            }
          }, { default: () => `line 6` })}, we provide the specified <code>offset</code>. In my example, I define my offset according to the <a href="${"https://stackoverflow.com/questions/28536367/in-d3-js-how-to-adjust-tooltip-up-and-down-based-on-the-screen-position"}" target="${"_blank"}" rel="${"noopener noreferrer"}">user&#39;s mouse position</a>. That way, if a user hovers over an eastern state, the tooltip doesn&#39;t disappear off the screen! (<code>current_position</code> is defined down below.)
</p>
<p>In   
${validate_component(HighlightFromProp, "HighlightFromProp").$$render($$result, {
            hoveredIdProp: "init-tooltip",
            highlightedLinesProp: "8-11",
            hoveredId,
            highlightedLines
          }, {
            hoveredId: ($$value) => {
              hoveredId = $$value;
              $$settled = false;
            },
            highlightedLines: ($$value) => {
              highlightedLines = $$value;
              $$settled = false;
            }
          }, { default: () => `lines 8-11` })}, we define the append content to our tooltip. In our case, we 1. provide a title, &quot;Opioid-involved deaths over time&quot;, and 2. specify the div that the tooltip should include. Right now, <code>tipDiv</code> is undefined, which is what we&#39;ll cover next.
</p>
<h3 id="${"step-3-create-the-tipdiv-object"}"><a href="${"#step-3-create-the-tipdiv-object"}">Step 3: Create the <code>tipDiv</code> object</a></h3>
<p>Finally, we can create the <code>tipDiv</code> object we referenced in the above code. The object will be created on mouseover of the group of interest (in my case, states). Our code will look something like this (don\u2019t worry too much about it, I\u2019ll explain step by step below):</p>
${validate_component(Code, "Code").$$render($$result, { language: "js" }, {}, {
            default: () => `<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">states = svg.append(&quot;g&quot;)
  .attr(&quot;class&quot;, &quot;states&quot;)
  .selectAll(&quot;path&quot;)
  .data(topojson.feature(us, us.objects.states).features)
  .enter()
  .append(&quot;path&quot;)
  .attr(&quot;d&quot;, path)
  .on(&#39;mouseout&#39;, tool_tip.hide) // On mouseout, hide the tooltip
  .on(&#39;mouseover&#39;, function(d) &#123;
    // Define and store the mouse position;
    // This is used to define tooltip offset, seen above
    current_position = d3.mouse(this);

    // Record current state
    current_state = nameById[d.id]

    // Show the tooltip
    tool_tip.show();

    // ... Continued below</code>`}<!-- HTML_TAG_END --></pre>`
          })}
<p>After that initialization and <code>show</code> function, we can define the <code>tipDiv</code> object:</p>
${validate_component(Code, "Code").$$render($$result, { language: "js" }, {}, {
            default: () => `<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">/* ... Continued from above 
       Select the #tipDiv element, and append an SVG (this is the tooltip) */
var tipSVG = d3.select(&quot;#tipDiv&quot;)
     .append(&quot;svg&quot;)
     .attr(&quot;width&quot;, 220)
     .attr(&quot;height&quot;, 55);

/* Apply the same logic you would to a regular chart, 
   but append it to our tipSVG */
tipSVG.append(&quot;path&quot;)
     .datum(overdoses.filter((d) =&gt; &#123; nameById[d.id] == current_state &#125;))
     .style(&quot;stroke&quot;, rateById[d.id] &lt; 10 ? &quot;grey&quot; : color(rateById[d.id]))
     .style(&quot;stroke-width&quot;, 1.5)
     .style(&quot;fill&quot;, &quot;none&quot;)
     .attr(&quot;d&quot;, line)

// Same as above (this is the circle at the end of the line)
tipSVG.append(&quot;circle&quot;)
    .attr(&quot;fill&quot;, rateById[d.id] &lt; 10 ? &quot;grey&quot; : color(rateById[d.id]))
    .attr(&quot;stroke&quot;, &quot;black&quot;)
    .attr(&quot;cx&quot;, 130)
    .attr(&quot;cy&quot;, y_tooltip(rateById[d.id]))
    .attr(&quot;r&quot;, 3)

// Tooltip labelling on last value
tipSVG.append(&quot;text&quot;)
     .text(rateById[d.id] + &quot; deaths&quot;)
     .attr(&quot;x&quot;, 140)
     .attr(&quot;y&quot;, y_tooltip(rateById[d.id]) &lt; 15 ? 10 
              : y_tooltip(rateById[d.id]) - 7)

// Same as above
tipSVG.append(&quot;text&quot;)
     .text(&quot;per 100,000&quot;)
     .attr(&quot;x&quot;, 140)
     .attr(&quot;y&quot;, y_tooltip(rateById[d.id]) &lt; 15 ? 24
     		      : y_tooltip(rateById[d.id]) + 7)

// State name
tipSVG.append(&quot;text&quot;)
     .text(current_state)
     .attr(&quot;x&quot;, 0)
     .attr(&quot;y&quot;, 15)
     .style(&quot;font-size&quot;, 18)
     .style(&quot;font-weight&quot;, 400)
 &#125;) // &lt;- This is the end of the whole .on(&#39;mouseover&#39;) function</code>`}<!-- HTML_TAG_END --></pre>`
          })}
<p>What\u2019s happening here? Let\u2019s look at one piece of our mouseover function at a time.</p>
<p><strong>First</strong>, we define the object and name it <code>tipSVG</code>. <code>tipSVG</code> selects <code>#tipDiv</code> (defined in our d3-tip) and appends an SVG. We also define the width and height of the tooltip.</p>
${validate_component(Code, "Code").$$render($$result, { language: "js" }, {}, {
            default: () => `<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">var tipSVG = d3
  .select(&quot;#tipDiv&quot;)
  .append(&quot;svg&quot;)
  .attr(&quot;width&quot;, 220)
  .attr(&quot;height&quot;, 55);</code>`}<!-- HTML_TAG_END --></pre>`
          })}
<p><strong>Next</strong>, we append a path to that SVG. This could be a circle, or a rectangle, or any other appendable shape. Because I am drawing a simple line, we use <code>path</code>.</p>
${validate_component(Code, "Code").$$render($$result, { language: "js" }, {}, {
            default: () => `<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">tipSVG
  .append(&quot;path&quot;)
  .datum(overdoses.filter((d) =&gt; &#123; nameById[d.id] == current_state &#125;))
  .style(&quot;stroke&quot;, rateById[d.id] &lt; 10 ? &quot;grey&quot; : color(rateById[d.id]))
  .style(&quot;stroke-width&quot;, 1.5)
  .style(&quot;fill&quot;, &quot;none&quot;)
  .attr(&quot;d&quot;, line);</code>`}<!-- HTML_TAG_END --></pre>`
          })}
<p>In defining the <code>d</code> attribute, you see I reference <code>line</code>. This is a function defined earlier in my code to return the <code>x</code> and <code>y</code> position of each data point, to create the path itself, as you can see below:</p>
${validate_component(Code, "Code").$$render($$result, { language: "js" }, {}, {
            default: () => `<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">var x_tooltip = d3
  .scaleLinear()
  .domain(d3.extent(overdoses, (d) =&gt; &#123; d.year &#125;))
  .range([0, 130]);

var y_tooltip = d3.scaleLinear().domain([0, 60]).range([50, 0]);

var line = d3
  .line()
  .x((d) =&gt; &#123; x_tooltip(d.year) &#125;)
  .y((d) =&gt; &#123; y_tooltip(+d.rate) &#125;)</code>`}<!-- HTML_TAG_END --></pre>`
          })}
${validate_component(Info, "Info").$$render($$result, {}, {}, {
            default: () => `<p>Because the tooltip contains its own chart with a predefined with and height, we need to provide scale functions as we would in a normal chart. We name this <code>x_tooltip</code> and <code>y_tooltip</code> so as to avoid confusion with our main scaling functions.</p>`
          })}
<p><strong>Lastly</strong>, we add a circle at the end of the line to signify the final data point. We also add the text label for the year 2017.</p>
${validate_component(Code, "Code").$$render($$result, { language: "js" }, {}, {
            default: () => `<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">// Final point
tipSVG.append(&quot;circle&quot;)
    .attr(&quot;fill&quot;, rateById[d.id] &lt; 10 ? &quot;grey&quot; : color(rateById[d.id]))
    .attr(&quot;stroke&quot;, &quot;black&quot;)
    .attr(&quot;cx&quot;, 130)
    .attr(&quot;cy&quot;, y_tooltip(rateById[d.id]))
    .attr(&quot;r&quot;, 3)

// Text label (##### deaths)
tipSVG.append(&quot;text&quot;)
     .text(rateById[d.id] + &quot; deaths&quot;)
     .attr(&quot;x&quot;, 140)
     .attr(&quot;y&quot;, y_tooltip(rateById[d.id]) &lt; 15 ? 10 
              : y_tooltip(rateById[d.id]) - 7)

// Per 100,00
tipSVG.append(&quot;text&quot;)
     .text(&quot;per 100,000&quot;)
     .attr(&quot;x&quot;, 140)
     .attr(&quot;y&quot;, y_tooltip(rateById[d.id]) &lt; 15 ? 24
     		      : y_tooltip(rateById[d.id]) + 7)

// State name
tipSVG.append(&quot;text&quot;)
     .text(current_state)
     .attr(&quot;x&quot;, 0)
     .attr(&quot;y&quot;, 15)
     .style(&quot;font-size&quot;, 18)
     .style(&quot;font-weight&quot;, 400)
 &#125;) // End mouseover function</code>`}<!-- HTML_TAG_END --></pre>`
          })}
<h2 id="${"in-sum"}"><a href="${"#in-sum"}">In sum</a></h2>
<p>The process of appending a chart to your tooltip in a D3.js visualization is as simple as:</p>
<ol><li>Load <code>d3-tip</code> via a <code>&lt;script&gt;</code> tag</li>
<li>Create a tooltip object using <code>d3-tip</code>, which can be done easily upon consulting their documentation</li>
<li>Add an SVG element to the tooltip we created, as we would create a chart normally using D3 syntax</li></ol>
<p>Voila! You can find the code all in one place <a href="${"https://github.com/connorrothschild/D3.js/blob/master/map-overdoses/index.html"}" rel="${"nofollow"}">here</a>. Please note that I made this visualization early in my career, so I\u2019m not particularly proud of the code \u{1F605}</p>
<p>You can play around with the visualization and checkout the tooltip for yourself below (find the fullscreen version <a href="${"https://connorrothschild.github.io/D3.js/map-overdoses/"}" rel="${"nofollow"}">here</a>):</p>
<iframe loading="${"lazy"}" title="${"Map of opioid-related overdoses, by state, between 1999 and 2017."}" src="${"https://connorrothschild.github.io/D3.js/map-overdoses/"}" width="${"100%"}" height="${"768px"}" style="${"background: white;"}"></iframe>`
        })}`;
      } while (!$$settled);
      return $$rendered;
    });
  }
});

// .svelte-kit/output/server/chunks/animate-hugo-academic-123d84a8.js
var animate_hugo_academic_123d84a8_exports = {};
__export(animate_hugo_academic_123d84a8_exports, {
  default: () => Animate_hugo_academic,
  metadata: () => metadata35
});
var import_bowser41, import_prismjs3, import_prism_normalize_whitespace3, metadata35, Animate_hugo_academic;
var init_animate_hugo_academic_123d84a8 = __esm({
  ".svelte-kit/output/server/chunks/animate-hugo-academic-123d84a8.js"() {
    init_shims();
    init_app_9f378dda();
    init_layout_ef610ed1();
    init_Image_8e30e86c();
    init_Code_71f36c68();
    init_Info_43a233e8();
    init_BackTo_d882ed88();
    init_global_130d3fe3();
    import_bowser41 = __toModule(require_es5());
    init_CornerTitle_6f993505();
    init_store_8bf23024();
    init_utils_09998264();
    init_IntersectionObserver_4cd4a541();
    import_prismjs3 = __toModule(require_prism());
    init_prism_line_numbers();
    import_prism_normalize_whitespace3 = __toModule(require_prism_normalize_whitespace());
    init_prism_line_highlight();
    init_prism_file_highlight();
    init_prism_bash();
    init_prism_css();
    init_prism_r();
    init_prism_json();
    init_prism_yaml();
    metadata35 = {
      "layout": "blog",
      "title": "Animating Your Hugo Academic Site",
      "description": "Make your Hugo Academic homepage more engaging with a few lines of code",
      "date": "2020-07-02",
      "image": "animate-hugo-academic/header.png",
      "tags": ["html", "r", "tutorial"]
    };
    Animate_hugo_academic = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return `${validate_component(Layout4, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata35), {}, {
        default: () => `${validate_component(Image, "Image").$$render($$result, {
          src: "../images/post/animate-hugo-academic/final.gif",
          alt: "A GIF showcasing the final version of my animated homepage."
        }, {}, {})}
<p>The R package <code>blogdown</code> is an incredibly powerful tool\u2014it allows R users with little to no familiarity in web development to build a fully functional, content-oriented, beautiful website using a language they\u2019re already familiar with. It\u2019s built on top of <a href="${"https://gohugo.io/"}" rel="${"nofollow"}">Hugo</a>, the world\u2019s (self-proclaimed) \u2018fastest framework for building websites,\u2019 which comes with a <a href="${"https://themes.gohugo.io/"}" rel="${"nofollow"}">variety of themes</a> suitable for a variety of different uses.</p>
<p>Within the R community, perhaps one of the most popular themes is <a href="${"https://themes.gohugo.io/academic/"}" rel="${"nofollow"}">Hugo Academic</a>. As the name implies, the theme is geared toward those working academia\u2014more generally, it provides a great starter kit for those interested in showcasing blog posts, projects, and other media on a minimalist site.</p>
<p>Given its popularity, the Hugo Academic landing page is far-too-familiar. Although not unattractive, no one is particularly surprised or engaged by the standard Academic homepage.</p>
<p>One way to spice up Hugo Academic is to use animations on our home pages. In this post, I outline three simple steps and a few lines of code to create a fully functional, beautifully-animated landing page. By leveraging the flexibility of Hugo\u2019s framework, and introducing a little bit of HTML and CSS, we can take our Hugo Academic home pages from zero to hero (at least, in terms of animation!).</p>
${validate_component(Info, "Info").$$render($$result, {}, {}, {
          default: () => `<p>This tutorial assumes you are starting a Hugo Academic site from scratch. If you already have a Hugo Academic website up and running, you should be able to <a href="${"#step-1-create-abouthtml"}">skip step 0</a> and modify the remaining steps slightly.</p>
<p>It also assumes that you have little to no knowledge about HTML and CSS (which is fine!). If that\u2019s <em>not</em> the case, you can likely go ahead and skip to <a href="${"#step-3-add-css"}">step 3</a>.</p>
<p>If you\u2019d like to skip this tutorial and just start a Hugo Academic site that\u2019s animated, feel free to <a href="${"https://github.com/connorrothschild/animate-hugo-academic"}" rel="${"nofollow"}">fork my repository</a> which includes all the code you need for an animated homepage. The repo includes my <a href="${"https://github.com/connorrothschild/animate-hugo-academic/blob/master/layouts/partials/widgets/about.html"}" rel="${"nofollow"}"><code>about.html</code> page</a> and a <a href="${"https://github.com/connorrothschild/animate-hugo-academic/blob/master/assets/scss/custom.scss"}" rel="${"nofollow"}">custom SCSS file</a>!</p>`
        })}
<h2 id="${"step-0-make-your-about-page-your-actual-homepage"}"><a href="${"#step-0-make-your-about-page-your-actual-homepage"}">Step 0) Make your \u2018about\u2019 page your actual homepage</a></h2>
<p>By default, the Hugo Academic theme\u2019s first section is a grandiose self-introduction (I guess the creators of the theme do deserve such credit). Before we incorporate any of our animations, lets go ahead and make our \u2018about\u2019 page the landing page users first see when they visit our site. This requires us to find the files <code>hero.md</code> and <code>demo.md</code>, and in each of those files, set <code>active</code> equal to <code>false</code>. That takes our home page from this:</p>
${validate_component(Image, "Image").$$render($$result, {
          src: "../images/post/animate-hugo-academic/before-demo-hero-remove.png",
          alt: "A GIF showcasing the initial version of my homepage, before any edits."
        }, {}, {})}
<p>to this:</p>
${validate_component(Image, "Image").$$render($$result, {
          src: "../images/post/animate-hugo-academic/after-demo-hero-remove.png",
          alt: "A GIF showcasing a version of my homepage where I replace \u2018hero' with \u2018about\u2019."
        }, {}, {})}
<p>(As you progress, you might have to make additional small changes, such as removing \u2018Demo\u2019 from the navbar menu.)</p>
<h2 id="${"step-1-create-abouthtml"}"><a href="${"#step-1-create-abouthtml"}">Step 1) Create <code>about.html</code></a></h2>
<p>The first <em>real</em> step in our process is modifying the default layout of our about page. More specifically, our animations will rely on CSS selectors which our about page currently doesn\u2019t have. In order to animate certain elements, we will need unique identifiers, such as CSS classes and IDs, to target.</p>
<p>To play around with our about page, we take advantage of Hugo\u2019s flexibility toward structural changes. As they <a href="${"https://bwaycer.github.io/hugo_tutorial.hugo/themes/customizing/"}" rel="${"nofollow"}">say</a> on their website:</p>
<blockquote><p>Hugo permits you to <strong>supplement or override</strong> any theme template or static file, with files in your working directory.</p></blockquote>
<p>In order to override Hugo Academic\u2019s about page, we need to copy their existing structure into our own folder and modify it there. To do so, navigate to <code>themes/hugo-academic/layouts/partials/widgets/</code> and copy the file titled <code>about.html</code>.</p>
<p>Now, create <em>a new file path</em> in your root directory titled <code>layouts/partials/widgets/</code>. Copy your <code>about.html</code> file here. (Look familiar? All we\u2019re doing is recreating <code>about.html</code> in a <em>personal</em> version of our project, thus overriding the <code>about.html</code> that Hugo Academic provides.)</p>
${validate_component(Info, "Info").$$render($$result, {}, {}, {
          default: () => `Alternatively, you can copy the about.html file that I used for this project and paste it into <code>layouts/partials/widgets/</code>. <a href="${"https://github.com/connorrothschild/animate-hugo-academic/blob/master/layouts/partials/widgets/about.html"}" target="${"_blank"}" rel="${"noopener noreferrer"}">You can find my file here</a>. This will also allow you to skip step 2 and move on to <a href="${"#step-3-add-css"}">step 3</a>!
`
        })}
<h2 id="${"step-2-customize-your-file"}"><a href="${"#step-2-customize-your-file"}">Step 2) Customize your file</a></h2>
<p>With that newly created <code>about.html</code> living in <code>layouts/partials/widgets/</code>, you may notice that your homepage looks the exact same. This is correct! In this step, we\u2019ll customize that html file so that it can be animated.</p>
<p>Within <code>about.html</code>, you\u2019ll notice all of your page\u2019s elements in order of appearance, despite a lot of extra characters that don\u2019t make much sense. It should look like this (don\u2019t read into this code, just verify it looks the same):</p>
${validate_component(Image, "Image").$$render($$result, {
          src: "../images/post/animate-hugo-academic/about.png",
          alt: "A screenshot of complicated code that is initially used to render the homepage."
        }, {}, {})}
<p>Throughout step 3, we\u2019ll use each element\u2019s class to target it for animations. In the above screenshot (and in your <code>about.html</code> page), you\u2019ll see classes scattered throughout. Although learning everything about CSS and CSS selectors is beyond the scope of this tutorial, I would recommend reading a brief primer on classes and selectors in CSS, which can be found <a href="${"https://www.w3schools.com/cssref/sel_class.asp"}" rel="${"nofollow"}">here</a>.</p>
<p>In this step, we\u2019ll add classes to the elements we want to animate. (Again, if this seems to be overwhelming, feel free to copy <a href="${"https://github.com/connorrothschild/animate-hugo-academic/blob/master/layouts/partials/widgets/about.html"}" rel="${"nofollow"}">my HTML file.</a>) Specifically, we\u2019ll make three changes. (For each, feel free to just control-F the content and add the class right before.)</p>
<p>First, we\u2019ll add a class of <code>biography-title</code> to our h1 (header 1) element. Here, we will change</p>
${validate_component(Code, "Code").$$render($$result, { language: "html", filename: "about.html" }, {}, {
          default: () => `<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">&lt;h1&gt;&#123;&#123; $page.Title | markdownify | emojify &#125;&#125;&lt;/h1&gt;
&#123;&#123; end &#125;&#125;</code>`}<!-- HTML_TAG_END --></pre>`
        })}
<p>to</p>
${validate_component(Code, "Code").$$render($$result, { language: "html", filename: "about.html" }, {}, {
          default: () => `<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">&lt;h1 class=&quot;biography-title&quot;&gt;&#123;&#123; $page.Title | markdownify | emojify &#125;&#125;&lt;/h1&gt;
&#123;&#123; end &#125;&#125;</code>`}<!-- HTML_TAG_END --></pre>`
        })}
<p>Next, we need to wrap the main content, aka the big text blocks in the middle of the page, in their own class too. Here, we take</p>
${validate_component(Code, "Code").$$render($$result, { language: "html", filename: "about.html" }, {}, {
          default: () => `<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">&#123;&#123; $person_page.Content &#125;&#125;</code>`}<!-- HTML_TAG_END --></pre>`
        })}
<p>and wrap it in a <code>div</code>, so it looks like this:</p>
${validate_component(Code, "Code").$$render($$result, { language: "html", filename: "about.html" }, {}, {
          default: () => `<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">&lt;div class=&quot;main-content&quot;&gt;&#123;&#123; $person_page.Content &#125;&#125;&lt;/div&gt;</code>`}<!-- HTML_TAG_END --></pre>`
        })}
<p>Finally, we\u2019ll add a class to our interests and and education blocks. We can take this row:</p>
${validate_component(Code, "Code").$$render($$result, { language: "html", filename: "about.html" }, {}, {
          default: () => `<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">&lt;div class=&quot;row&quot;&gt;
  &#123;&#123; with $person.interests &#125;&#125;
  &lt;div class=&quot;col-md-5&quot;&gt;
    &lt;h3&gt;&#123;&#123; i18n &quot;interests&quot; | markdownify &#125;&#125;&lt;/h3&gt;
    &lt;ul class=&quot;ul-interests&quot;&gt;
      &#123;&#123; range . &#125;&#125;
      &lt;li&gt;&#123;&#123; . | markdownify | emojify &#125;&#125;&lt;/li&gt;
      &#123;&#123; end &#125;&#125;
    &lt;/ul&gt;
  &lt;/div&gt;
  &#123;&#123; end &#125;&#125; &#123;&#123; with $person.education &#125;&#125;
  &lt;div class=&quot;col-md-7&quot;&gt;
    &lt;h3&gt;&#123;&#123; i18n &quot;education&quot; | markdownify &#125;&#125;&lt;/h3&gt;
    &lt;ul class=&quot;ul-edu fa-ul&quot;&gt;
      &#123;&#123; range .courses &#125;&#125;
      &lt;li&gt;
        &lt;i class=&quot;fa-li fas fa-graduation-cap&quot;&gt;&lt;/i&gt;
        &lt;div class=&quot;description&quot;&gt;
          &lt;p class=&quot;course&quot;&gt;&#123;&#123; .course &#125;&#125;&#123;&#123; with .year &#125;&#125;, &#123;&#123; . &#125;&#125;&#123;&#123; end &#125;&#125;&lt;/p&gt;
          &lt;p class=&quot;institution&quot;&gt;&#123;&#123; .institution &#125;&#125;&lt;/p&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &#123;&#123; end &#125;&#125;
    &lt;/ul&gt;
  &lt;/div&gt;
  &#123;&#123; end &#125;&#125;
&lt;/div&gt;</code>`}<!-- HTML_TAG_END --></pre>`
        })}
<p>and replace it with this:</p>
${validate_component(Code, "Code").$$render($$result, { language: "html", filename: "about.html" }, {}, {
          default: () => `<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">&lt;div class=&quot;row&quot;&gt;
  &#123;&#123; with $person.interests &#125;&#125;
  &lt;div class=&quot;interests-div col-md-5&quot;&gt;
    &lt;h3&gt;&#123;&#123; i18n &quot;interests&quot; | markdownify &#125;&#125;&lt;/h3&gt;
    &lt;ul class=&quot;ul-interests&quot;&gt;
      &#123;&#123; range . &#125;&#125;
      &lt;li&gt;&#123;&#123; . | markdownify | emojify &#125;&#125;&lt;/li&gt;
      &#123;&#123; end &#125;&#125;
    &lt;/ul&gt;
  &lt;/div&gt;
  &#123;&#123; end &#125;&#125; &#123;&#123; with $person.education &#125;&#125;
  &lt;div class=&quot;education-div col-md-7&quot;&gt;
    &lt;h3&gt;&#123;&#123; i18n &quot;education&quot; | markdownify &#125;&#125;&lt;/h3&gt;
    &lt;ul class=&quot;ul-edu fa-ul&quot;&gt;
      &#123;&#123; range .courses &#125;&#125;
      &lt;li&gt;
        &lt;i class=&quot;fa-li fas fa-graduation-cap&quot;&gt;&lt;/i&gt;
        &lt;div class=&quot;description&quot;&gt;
          &lt;p class=&quot;course&quot;&gt;&#123;&#123; .course &#125;&#125;&#123;&#123; with .year &#125;&#125;, &#123;&#123; . &#125;&#125;&#123;&#123; end &#125;&#125;&lt;/p&gt;
          &lt;p class=&quot;institution&quot;&gt;&#123;&#123; .institution &#125;&#125;&lt;/p&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &#123;&#123; end &#125;&#125;
    &lt;/ul&gt;
  &lt;/div&gt;
  &#123;&#123; end &#125;&#125;
&lt;/div&gt;</code>`}<!-- HTML_TAG_END --></pre>`
        })}
${validate_component(Info, "Info").$$render($$result, {}, {}, {
          default: () => `<p>A quick tip to identify the classes and IDs of individual elements is to use the browser\u2019s <strong>inspect element</strong> tool. To do so, right click on the element you\u2019re interested in and click inspect element; what you\u2019ll see is a highlighted box that tells you that object\u2019s class and/or ID. For more on inspect element and your browser, <a href="${"https://blog.devmountain.com/how-to-use-inspect-element-jump-into-what-makes-a-web-page-tick/"}" rel="${"nofollow"}">see this page</a>.</p>`
        })}
<p>Now, we can reference the existing CSS classes, and our new ones, in our pretty animation in Step 3!</p>
<h2 id="${"step-3-add-css"}"><a href="${"#step-3-add-css"}">Step 3) Add CSS</a></h2>
<p>Now that we\u2019ve created our classes, we can target them in a CSS file and tell them exactly <em>how</em> to animate.</p>
<p>But first, you\u2019ll need to create a custom CSS file in your root directly. In your <code>assets/</code> folder, create a <em>new</em> folder called <code>scss/</code> and within this folder, create a <em>new</em> file called <code>custom.scss</code>.</p>
${validate_component(Info, "Info").$$render($$result, {}, {}, {
          default: () => `<p>An SCSS file is essentially a CSS file but extended with Sass, which describes <a href="${"https://sass-lang.com/"}" rel="${"nofollow"}">itself</a> as \u2018CSS with superpowers.\u2019 For an overview of the intricacies of Sass, like nesting selectors, visit <a href="${"https://sass-lang.com/guide"}" rel="${"nofollow"}">their guide</a>.</p>`
        })}
<p>Within <code>custom.scss</code>, we\u2019re going to target everything <em>within our about section</em>. In order to do so, we create a selector that targets everything within the ID of <code>about</code>.</p>
${validate_component(Code, "Code").$$render($$result, { language: "css", filename: "custom.scss" }, {}, {
          default: () => `<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">#about &#123;
  /* Some CSS will go here soon! */
  /* This is a comment, by the way. */
&#125;</code>`}<!-- HTML_TAG_END --></pre>`
        })}
<p>To ensure that we\u2019ve targeted the right section, we can go ahead and add the property <code>background-color: red</code> to that element. As the name implies, this will make the section \u2728 red. \u2728</p>
${validate_component(Code, "Code").$$render($$result, { language: "css", filename: "custom.scss" }, {}, {
          default: () => `<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">#about &#123;
  background-color: red;
&#125;</code>`}<!-- HTML_TAG_END --></pre>`
        })}
<p>As we expected, our section background is now an (unbelievably ugly shade of) red.</p>
${validate_component(Image, "Image").$$render($$result, {
          src: "../images/post/animate-hugo-academic/bg-red.png",
          alt: "An example of turning the background color of the page red."
        }, {}, {})}
<p>(Now remove that property immediately! This is not quite the welcome we want for our visitors.) We can also target elements <em>within</em> the section by nesting new selectors inside of <code>#about</code>. For example, if we wanted to change the color of our \u2018biography\u2019 title text, we could do so with the following code. (This is because we created a class named <code>biography-title</code> in step 1):</p>
${validate_component(Code, "Code").$$render($$result, { language: "css", filename: "custom.scss" }, {}, {
          default: () => `<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">#about &#123;
  .biography-title &#123;
    color: red;
  &#125;
&#125;</code>`}<!-- HTML_TAG_END --></pre>`
        })}
${validate_component(Image, "Image").$$render($$result, {
          src: "../images/post/animate-hugo-academic/font-red.png",
          alt: "An example of turning the font color  red."
        }, {}, {})}
${validate_component(Info, "Info").$$render($$result, {}, {}, {
          default: () => `<p>You may notice that <code>about</code> is targeted with a pound (#) and <code>biography-title</code> is targeted with a period (.). This is the difference between CSS <em>IDs</em> and <em>classes</em>. If you\u2019re curious about the distinction, here\u2019s a <a href="${"https://www.htmldog.com/guides/css/intermediate/classid/"}" rel="${"nofollow"}">helpful guide</a>.</p>`
        })}
<p>Now that we know how to target specific objects within our <code>about</code> section, we can animate our first element!</p>
<h3 id="${"step-3a-your-first-animation"}"><a href="${"#step-3a-your-first-animation"}">Step 3A) Your first animation!</a></h3>
<p>Creating your first animation is as simple as a few lines of code. To illustrate, we\u2019ll test out an animation which changes our text from red and invisible to black and visible. In the code, we\u2019ll have to do two things:</p>
<ol><li>Create an animation with <code>@keyframes</code></li></ol>
${validate_component(Code, "Code").$$render($$result, { language: "css", filename: "custom.scss" }, {}, {
          default: () => `<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">@keyframes yourfirstanimation &#123;
  from &#123;
    opacity: 0;
    color: red;
  &#125;
  to &#123;
    opacity: 1;
    color: black;
  &#125;
&#125;</code>`}<!-- HTML_TAG_END --></pre>`
        })}
<ol start="${"2"}"><li>Bind the animation to an element</li></ol>
${validate_component(Code, "Code").$$render($$result, { language: "css", filename: "custom.scss" }, {}, {
          default: () => `<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">.biography-title &#123;
  animation: yourfirstanimation 5s forwards;
&#125;</code>`}<!-- HTML_TAG_END --></pre>`
        })}
<p>To break down the above code, we create an animation that has a <em>start point</em> (<code>0%</code>) and an <em>end point</em> (<code>100%</code>). At both of these points, we define CSS properties, such as color and opacity, seen above. When we bind the animation to an element, which is as simple as <code>animation: &lt;animation_name&gt; &lt;duration&gt; &lt;fill_mode&gt;</code>, CSS deals with all the inbetween and automatically creates a smooth transition! (Fill mode is the most complicated of these three properties, but for our purposes we will always be using <code>forwards</code>. For more information, visit <a href="${"https://developer.mozilla.org/en-US/docs/Web/CSS/animation-fill-mode"}" rel="${"nofollow"}">this page</a>.)</p>
<p>Altogether, this code creates this output:</p>
${validate_component(Code, "Code").$$render($$result, { language: "css", filename: "custom.scss" }, {}, {
          default: () => `<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">#about &#123;
  @keyframes yourfirstanimation &#123;
    0% &#123;
      opacity: 0;
      color: red;
    &#125;
    100% &#123;
      opacity: 1;
      color: black;
    &#125;
  &#125;

  .biography-title &#123;
    animation: yourfirstanimation 5s forwards;
  &#125;
&#125;</code>`}<!-- HTML_TAG_END --></pre>`
        })}
${validate_component(Image, "Image").$$render($$result, {
          src: "../images/post/animate-hugo-academic/red.gif",
          alt: "An example transition, turning the font color to red over a 5 second duration."
        }, {}, {})}
<p>Of course, we don\u2019t want a 5 second animation, nor do we want our text to start off as red. A cleaner animation might leverage the power of CSS to modify an element\u2019s <em>position</em>. In our case, we want an element to <strong>slide in from the right side of the screen</strong>, and so we make a few tweaks to the code above. Let\u2019s make a new animation called <code>slide-from-right</code> which starts (at keyframe 0%) with our element 150% to the right of its original position (therefore off the screen) and ends (at keyframe 100%) with it at its original position. This involves the use of <code>translateX</code>, which you can read about <a href="${"https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/translateX"}" rel="${"nofollow"}">here</a>.</p>
${validate_component(Code, "Code").$$render($$result, { language: "css", filename: "custom.scss" }, {}, {
          default: () => `<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">@keyframes slide-from-right &#123;
  0% &#123;
    transform: translateX(150%);
  &#125;
  100% &#123;
    transform: translateX(0%);
  &#125;
&#125;

.biography-title &#123;
  animation: slide-from-right 1s forwards;
&#125;</code>`}<!-- HTML_TAG_END --></pre>`
        })}
${validate_component(Image, "Image").$$render($$result, {
          src: "../images/post/animate-hugo-academic/slide-from-right.gif",
          alt: "A gif of the content sliding in from the right side of the page"
        }, {}, {})}
<p>There is one slight improvement we can make on the above transition. Specifically, we can call an <em>easing function</em> on our animation. <a href="${"https://developer.mozilla.org/en-US/docs/Web/CSS/easing-function"}" rel="${"nofollow"}">Easing functions</a> give a more natural feel to a transition\u2019s flow\u2014rather than our object flying in at a perfectly linear rate, we can add some personality by specifying its speed at different points in the transition. To find an easing function, visit <a href="${"https://easings.net/en#"}" rel="${"nofollow"}">easings.net</a>, which allows you to visualize all of the different ways to modify your transition\u2019s ease. (For this tutorial, I chose a clean-looking \u201C<em>easeInOutQuint</em>\u201C function, which looks like this: <code>cubic-bezier(0.83, 0, 0.17, 1)</code>.)</p>
<hr>
<h3 id="${"step-3b-dont-wait-to-delay"}"><a href="${"#step-3b-dont-wait-to-delay"}">Step 3B) Don\u2019t Wait to Delay</a></h3>
<p>We want our homepage to have more than just one title animation. We might also want to <strong>animate the paragraphs below it</strong>, with the same \u2019slide from right\u2019 transition we defined earlier. While doing this, we can add one property to our element to make the overall transition seem more fluid: <code>animation-delay</code>. As the name suggests, this property defines how long the browser should wait before it <em>begins</em> the transition you\u2019ve specified. Animating our <code>main-content</code> div is as simple as copying the above code and adding a 100 millisecond animation delay.</p>
${validate_component(Code, "Code").$$render($$result, { language: "css", filename: "custom.scss" }, {}, {
          default: () => `<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">.main-content &#123;
  animation: slide-from-right 1s cubic-bezier(0.87, 0, 0.13, 1) forwards;
  animation-delay: 100ms;
&#125;</code>`}<!-- HTML_TAG_END --></pre>`
        })}
<p>In combination with above, this creates a transition that looks like this:</p>
${validate_component(Image, "Image").$$render($$result, {
          src: "../images/post/animate-hugo-academic/double-slide.gif",
          alt: "A gif of two pieces of content sliding in, one after another (with a 100ms delay)"
        }, {}, {})}
<p>Nice! That looks clean. It looks like those two text blocks are racing to greet your new site visitor :)</p>
<hr>
<h3 id="${"step-3c-to-the-left"}"><a href="${"#step-3c-to-the-left"}">Step 3C) To the Left!</a></h3>
<p>Let\u2019s go ahead and replicate that \u2019slide in\u2019 transition for our profile on the left side of our webpage. As you could probably gather, this is as simple as copying the above code and changing the value in <code>translateX</code> from 150% to -150% (from just outside the right side of our webpage <a href="${"https://www.youtube.com/watch?v=2EwViQxSJJQ&feature=youtu.be&t=25"}" rel="${"nofollow"}">to the left!</a>). As above, we\u2019ll define this transition in a <code>@keyframes</code> rule and apply it to our CSS transition afterward.</p>
${validate_component(Code, "Code").$$render($$result, { language: "css", filename: "custom.scss" }, {}, {
          default: () => `<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">@keyframes slide-from-left &#123;
  0% &#123;
    transform: translateX(-150%);
  &#125;
  100% &#123;
    transform: translateX(0%);
  &#125;
&#125;

#profile &#123;
  animation: slide-from-left 1s cubic-bezier(0.87, 0, 0.13, 1) forwards;
&#125;</code>`}<!-- HTML_TAG_END --></pre>`
        })}
${validate_component(Image, "Image").$$render($$result, {
          src: "../images/post/animate-hugo-academic/left-and-right.gif",
          alt: "Two paragraphs of content sliding in from opposite directions."
        }, {}, {})}
<h3 id="${"step-3d-finally-the-fade"}"><a href="${"#step-3d-finally-the-fade"}">Step 3D) Finally, the Fade</a></h3>
<p>The only thing not yet animated on our page are the \u2018interests\u2019 and \u2018education\u2019 content blocks. Of course, you might not want these on your homepage (my educational journey isn\u2019t yet formidable enough to warrant its own section on my homepage!). But for the sake of animating the homepage <em>as its configured by default</em>, let\u2019s go ahead and have those content blocks fade in <em>once the sliding transitions complete</em>.</p>
<p>If you\u2019ve been paying attention to the prior <code>@keyframes</code> rules, you might have guessed that the code would look like this:</p>
${validate_component(Code, "Code").$$render($$result, { language: "css", filename: "custom.scss" }, {}, {
          default: () => `<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">@keyframes fade-in &#123;
  0% &#123;
    opacity: 0;
  &#125;
  100% &#123;
    opacity: 1;
  &#125;
&#125;</code>`}<!-- HTML_TAG_END --></pre>`
        })}
<p>\u2026 and you would be correct!</p>
<p>Now, we apply this <code>fade-in</code> rule to both our <code>interests-div</code> and our <code>education-div</code>, which we created in step 1. But notably, we want to wait to fade in each of these divs until <em>after our content has slid in from either side of the webpage.</em> And so, we\u2019ll once again use the <code>animation-delay</code> property. Because our slide-in animations take one second to complete, we can begin our fade-in animations after a one-second delay. To make the transition a little more visually appealling, we can also stagger them, so the <code>education-div</code> fades in half a second <em>after</em> <code>interests-div</code>.</p>
${validate_component(Code, "Code").$$render($$result, { language: "css", filename: "custom.scss" }, {}, {
          default: () => `<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">.interests-div &#123;
  opacity: 0;
  animation: fade-in 1s forwards;
  animation-delay: 1s;
&#125;

.education-div &#123;
  opacity: 0;
  animation: fade-in 1s forwards;
  animation-delay: 1.5s;
&#125;</code>`}<!-- HTML_TAG_END --></pre>`
        })}
<p>Now, we have a final homepage that looks like this:</p>
${validate_component(Image, "Image").$$render($$result, {
          src: "../images/post/animate-hugo-academic/final.gif",
          alt: "A GIF showing the final iteration of a homepage, with animations."
        }, {}, {})}
<p>To make our SCSS file more robust across different browsers, we can take our completed file and put it into the <a href="${"https://autoprefixer.github.io/"}" rel="${"nofollow"}">CSS Autoprefixer</a>. This adds additional lines of code to our CSS file so that all browsers render the same animations upon page load. Your completed SCSS file should look like <a href="${"https://github.com/connorrothschild/animate-hugo-academic/blob/master/assets/scss/custom.scss"}" rel="${"nofollow"}">this</a>.</p>
<h2 id="${"extending-animations"}"><a href="${"#extending-animations"}">Extending Animations</a></h2>
<p>This tutorial is meant to teach you the essentials of <em>how</em> to animate your homepage (for any Hugo site, not just Academic). Specifically, you should be able to 1) create and identify CSS elements via their classes and IDs, 2) target them using CSS, and 3) animate them using <code>@keyframes</code> rules. Although easier said then done, applying these three rules will go a long way in making your homepage much more appealling to new visitors.</p>
<p>The complete power of CSS animations is not covered in this tutorial. Further applications of animations could do <strong>much</strong> more than just animate an object\u2019s position. I leave that to you!</p>
<p>For those that are interested, <a href="${"https://connorrothschild.github.io/v2/"}" rel="${"nofollow"}">my old homepage</a> is chock-full of CSS properties which make it unique from most; some visitors are surprised to hear that my site is Hugo Academic at all!</p>
<p>For those interested, the code for my Hugo Academic personal site (now archived) can be found <a href="${"https://github.com/connorrothschild/v2"}" rel="${"nofollow"}">here</a>. I look forward to seeing your animated homepages!</p>`
      })}`;
    });
  }
});

// .svelte-kit/output/server/chunks/automation-scrollytell-6d42332b.js
var automation_scrollytell_6d42332b_exports = {};
__export(automation_scrollytell_6d42332b_exports, {
  default: () => Automation_scrollytell,
  metadata: () => metadata36
});
var import_bowser42, import_prismjs4, import_prism_normalize_whitespace4, metadata36, Automation_scrollytell;
var init_automation_scrollytell_6d42332b = __esm({
  ".svelte-kit/output/server/chunks/automation-scrollytell-6d42332b.js"() {
    init_shims();
    init_app_9f378dda();
    init_layout_ef610ed1();
    init_Code_71f36c68();
    init_HighlightFromProp_41fd8065();
    init_BackTo_d882ed88();
    init_global_130d3fe3();
    import_bowser42 = __toModule(require_es5());
    init_CornerTitle_6f993505();
    init_store_8bf23024();
    init_utils_09998264();
    init_IntersectionObserver_4cd4a541();
    import_prismjs4 = __toModule(require_prism());
    init_prism_line_numbers();
    import_prism_normalize_whitespace4 = __toModule(require_prism_normalize_whitespace());
    init_prism_line_highlight();
    init_prism_file_highlight();
    init_prism_bash();
    init_prism_css();
    init_prism_r();
    init_prism_json();
    init_prism_yaml();
    metadata36 = {
      "layout": "blog",
      "title": "How to Scrollytell in R",
      "description": "Because its easier than doing it in D3",
      "image": "automation-scrollytell/header.png",
      "date": "2019-10-02",
      "tags": ["r", "tutorial"]
    };
    Automation_scrollytell = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let hoveredId;
      let highlightedLines;
      let $$settled;
      let $$rendered;
      do {
        $$settled = true;
        $$rendered = `${validate_component(Layout4, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata36), {}, {
          default: () => `<p>I\u2019ve always been interested in data visualization, and my most recent
sub-passion has been <em>scrollytelling</em>. I\u2019ve seen numerous examples of
amazing scrolling articles, from sites such as <a href="${"https://pudding.cool/"}" rel="${"nofollow"}">The
Pudding</a>, the <a href="${"https://www.nytimes.com/"}" rel="${"nofollow"}">New York
Times</a>, and
<a href="${"https://fivethirtyeight.com/"}" rel="${"nofollow"}">FiveThirtyEight</a>.</p>
<p>Although most of these sites rely on the same high-powered visualization
tools (such as <a href="${"https://d3js.org/"}" rel="${"nofollow"}">D3.js</a>) to create their stories, the
learning curve for those are a bit steep! Thankfully, I came across some examples of scrollytelling in my language
of choice, R.</p>
<p>Today, I\u2019ll walk you through a tutorial of scrollytelling in R. It\u2019s a bit complicated, and the output isn\u2019t as powerful as a full-fledged D3 project, but its a rough sketch, and it works. Here\u2019s the output:</p>
<iframe loading="${"lazy"}" title="${"Automation and Its Impact on Jobs"}" src="${"https://connorrothschild.shinyapps.io/automation/"}" width="${"100%"}" height="${"800px"}"></iframe>
<h3 id="${"load-libraries"}"><a href="${"#load-libraries"}">Load libraries</a></h3>
<p>We begin by loading the libraries required for our project:</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">library<span class="token punctuation">(</span>shiny<span class="token punctuation">)</span>
library<span class="token punctuation">(</span>scrollytell<span class="token punctuation">)</span>
library<span class="token punctuation">(</span>shinyjs<span class="token punctuation">)</span>
library<span class="token punctuation">(</span>ggvis<span class="token punctuation">)</span>
library<span class="token punctuation">(</span>plotly<span class="token punctuation">)</span>

theme_set<span class="token punctuation">(</span>theme_minimal<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
<h2 id="${"construct-an-updating-plot-object"}"><a href="${"#construct-an-updating-plot-object"}">Construct an updating plot object</a></h2>
<p>Once the data (<a href="${"https://github.com/connorrothschild/shiny-scrollytell/tree/master/data"}" rel="${"nofollow"}">which can be found
here</a>)
is already <a href="${"https://github.com/connorrothschild/shiny-scrollytell/blob/master/scripts/merge_data.R"}" rel="${"nofollow"}">loaded and
cleaned</a>,
we construct a plot object that will update as the user scrolls. (<a href="${"https://github.com/scottyd22/dream_team"}" rel="${"nofollow"}">Other
R users</a> make multiple plots;
either way is fine.)</p>
${validate_component(Code, "Code").$$render($$result, {
            language: "r",
            showLineNumbers: true,
            highlightedLines: hoveredId == "create-plot" ? highlightedLines : null
          }, {}, {
            default: () => `<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">plot <span class="token operator">&lt;-</span> data <span class="token percent-operator operator">%>%</span>
  filter<span class="token punctuation">(</span><span class="token keyword">if</span> <span class="token punctuation">(</span>add <span class="token operator">!=</span> <span class="token number">8</span><span class="token punctuation">)</span> add <span class="token operator">>=</span> reveal <span class="token keyword">else</span> reveal <span class="token percent-operator operator">%in%</span> c<span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  ggplot<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  geom_point<span class="token punctuation">(</span>mapping<span class="token operator">=</span>aes<span class="token punctuation">(</span>x<span class="token operator">=</span>A_MEDIAN<span class="token punctuation">,</span> y<span class="token operator">=</span>probability<span class="token punctuation">,</span> size<span class="token operator">=</span>TOT_EMP<span class="token punctuation">,</span>
                         alpha<span class="token operator">=</span>ifelse<span class="token punctuation">(</span>add <span class="token operator">==</span> reveal<span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">/</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">/</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span> col<span class="token operator">=</span>typicaled<span class="token punctuation">,</span>
                         text <span class="token operator">=</span> glue<span class="token operator">::</span>glue<span class="token punctuation">(</span>'<span class="token operator">&lt;</span>b<span class="token operator">></span>Occupation<span class="token operator">&lt;</span><span class="token operator">/</span>b<span class="token operator">></span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>occupation<span class="token punctuation">&#125;</span>
                                            <span class="token operator">&lt;</span>b<span class="token operator">></span>Probability of Automation<span class="token operator">&lt;</span><span class="token operator">/</span>b<span class="token operator">></span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>probability<span class="token punctuation">&#125;</span>%
                                            <span class="token operator">&lt;</span>b<span class="token operator">></span>Median Income<span class="token operator">&lt;</span><span class="token operator">/</span>b<span class="token operator">></span><span class="token operator">:</span> <span class="token operator">$</span><span class="token punctuation">&#123;</span>A_MEDIAN<span class="token punctuation">&#125;</span>
                                            <span class="token operator">&lt;</span>b<span class="token operator">></span>Number of Workers<span class="token operator">&lt;</span><span class="token operator">/</span>b<span class="token operator">></span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>TOT_EMP<span class="token punctuation">&#125;</span>'<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  scale_size<span class="token punctuation">(</span>range <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  xlab<span class="token punctuation">(</span><span class="token string">"&#92;nMedian Income"</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  ylab<span class="token punctuation">(</span><span class="token string">"Probability of Automation"</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  labs<span class="token punctuation">(</span>size <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">,</span> col <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">,</span> alpha <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  scale_color_manual<span class="token punctuation">(</span>values <span class="token operator">=</span> cols<span class="token punctuation">,</span> breaks <span class="token operator">=</span> legend_ord<span class="token punctuation">)</span> <span class="token operator">+</span>
  scale_x_continuous<span class="token punctuation">(</span>labels <span class="token operator">=</span> scales<span class="token operator">::</span>dollar_format<span class="token punctuation">(</span>prefix<span class="token operator">=</span><span class="token string">"$"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> limits <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">25000</span><span class="token punctuation">,</span><span class="token number">200000</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  scale_y_continuous<span class="token punctuation">(</span>labels <span class="token operator">=</span> scales<span class="token operator">::</span>number_format<span class="token punctuation">(</span>suffix<span class="token operator">=</span><span class="token string">"%"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> limits <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  theme<span class="token punctuation">(</span>axis.line.x <span class="token operator">=</span> ggplot2<span class="token operator">::</span>element_line<span class="token punctuation">(</span>colour <span class="token operator">=</span> <span class="token keyword">NULL</span><span class="token punctuation">,</span>
                                            size <span class="token operator">=</span> <span class="token keyword">NULL</span><span class="token punctuation">,</span> linetype <span class="token operator">=</span> <span class="token keyword">NULL</span><span class="token punctuation">,</span> lineend <span class="token operator">=</span> <span class="token keyword">NULL</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        axis.line.y <span class="token operator">=</span> ggplot2<span class="token operator">::</span>element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        panel.grid.major.x <span class="token operator">=</span> element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>`
          })}
<p>But wait, what\u2019s that ${validate_component(HighlightFromProp, "HighlightFromProp").$$render($$result, {
            hoveredIdProp: "create-plot",
            highlightedLinesProp: "2",
            hoveredId,
            highlightedLines
          }, {
            hoveredId: ($$value) => {
              hoveredId = $$value;
              $$settled = false;
            },
            highlightedLines: ($$value) => {
              highlightedLines = $$value;
              $$settled = false;
            }
          }, { default: () => `second line of code` })}?
</p>
<p>This may make <em>0 sense</em> right now, but here\u2019s why we have it.</p>
<p>The important part (and somewhat difficult thing to understand) about
this step is that your plot object has some <strong>data which corresponds to
an updating variable</strong>. For me, I added a variable called <code>reveal</code> for
each step of the visualization. For me, this meant having <code>reveal</code>
correspond to a typical level of education for a given job.</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">data <span class="token operator">&lt;-</span> data <span class="token percent-operator operator">%>%</span>
  mutate<span class="token punctuation">(</span>reveal <span class="token operator">=</span> case_when<span class="token punctuation">(</span>
    typicaled <span class="token operator">==</span> <span class="token string">"No formal educational credential"</span> <span class="token operator">~</span> <span class="token number">1</span><span class="token punctuation">,</span>
    typicaled <span class="token operator">==</span> <span class="token string">"High school diploma or equivalent"</span> <span class="token operator">~</span> <span class="token number">2</span><span class="token punctuation">,</span>
    typicaled <span class="token operator">==</span> <span class="token string">"Postsecondary nondegree award"</span> <span class="token operator">~</span> <span class="token number">3</span><span class="token punctuation">,</span>
    typicaled <span class="token operator">==</span> <span class="token string">"Some college, no degree"</span> <span class="token operator">~</span> <span class="token number">0</span><span class="token punctuation">,</span>
    typicaled <span class="token operator">==</span> <span class="token string">"Associate's degree"</span> <span class="token operator">~</span> <span class="token number">4</span><span class="token punctuation">,</span>
    typicaled <span class="token operator">==</span> <span class="token string">"Bachelor's degree"</span> <span class="token operator">~</span> <span class="token number">5</span><span class="token punctuation">,</span>
    typicaled <span class="token operator">==</span> <span class="token string">"Master's degree"</span> <span class="token operator">~</span> <span class="token number">6</span><span class="token punctuation">,</span>
    typicaled <span class="token operator">==</span> <span class="token string">"Doctoral or professional degree"</span> <span class="token operator">~</span> <span class="token number">7</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
<p>So, when my plot object has a line of code which says:</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">filter<span class="token punctuation">(</span><span class="token keyword">if</span> <span class="token punctuation">(</span>add <span class="token operator">!=</span> <span class="token number">8</span><span class="token punctuation">)</span> add <span class="token operator">>=</span> reveal <span class="token keyword">else</span> reveal <span class="token percent-operator operator">%in%</span> c<span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
<p>That can be read as \u201CUpdate the plot object to include all data points
<strong>up until the current point</strong> encoded in <code>reveal</code>.\u201D</p>
<p>But, it also depends on what level of <code>add</code> we are at; if <code>add</code> == 8
(the last data point, e.g.\xA0the concluding plot), then we want to show
<em>all data points</em>.</p>
<p>\u201COkay, okay. But what is <code>add</code>???\u201D</p>
<p>Good question. <code>add</code> is the variable I constructed to correspond to the
user\u2019s input (in this case, the scroll!). When we put it all together,
we\u2019re going to wrap our plot object into a rendering function <em>inside</em>
the server function. Confusing? It looks like this:</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">server <span class="token operator">&lt;-</span> <span class="token keyword">function</span><span class="token punctuation">(</span>input<span class="token punctuation">,</span> output<span class="token punctuation">,</span> session<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>

  output<span class="token operator">$</span>plot <span class="token operator">&lt;-</span> renderPlotly<span class="token punctuation">(</span><span class="token punctuation">&#123;</span>

    add <span class="token operator">&lt;-</span> input<span class="token operator">$</span>scr

    plot <span class="token operator">&lt;-</span>
      <span class="token comment"># static ggplot goes here</span>

      ggplotly<span class="token punctuation">(</span>plot<span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
      <span class="token comment"># other ggplotly parameters go here</span>

  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>

  <span class="token comment"># render the plot here</span>
  output<span class="token operator">$</span>scr <span class="token operator">&lt;-</span> renderScrollytell<span class="token punctuation">(</span><span class="token punctuation">&#123;</span>scrollytell<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
  renderText<span class="token punctuation">(</span>paste0<span class="token punctuation">(</span><span class="token string">"Section: "</span><span class="token punctuation">,</span> input<span class="token operator">$</span>scr<span class="token punctuation">)</span><span class="token punctuation">)</span>
  observe<span class="token punctuation">(</span><span class="token punctuation">&#123;</span>cat<span class="token punctuation">(</span><span class="token string">"section:"</span><span class="token punctuation">,</span> input<span class="token operator">$</span>scr<span class="token punctuation">,</span> <span class="token string">"&#92;n"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>

<span class="token punctuation">&#125;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>What\u2019s happening here? Within the server function, we\u2019re doing two
things:</p>
<p>First, we\u2019re creating the plot object. Because we have the command <code>add &lt;- input$scr</code> <strong>inside</strong> the function <code>renderPlotly</code>, our plot object will be dynamically updated along with <code>input$scr</code>.</p>
<p>This makes more sense when you connect it to the UI. In our <code>ui</code> function,
we include a <code>scrolly_container</code> from the scrollytell package. Within
that, we make our <code>outputId</code> correspond to the name of our updating
input (in this case, <em>scr</em>).</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">ui <span class="token operator">&lt;-</span> fluidPage<span class="token punctuation">(</span>

  <span class="token comment"># a bunch of introductory stuff, css stuff</span>

  <span class="token comment"># scrollytelling plot</span>
  scrolly_container<span class="token punctuation">(</span>outputId <span class="token operator">=</span> <span class="token string">"scr"</span><span class="token punctuation">,</span>
                       scrolly_graph<span class="token punctuation">(</span>
                                     <span class="token comment">## this is the plot object that we made earlier:</span>
                                     plotlyOutput<span class="token punctuation">(</span><span class="token string">"plot"</span><span class="token punctuation">,</span> height <span class="token operator">=</span> <span class="token string">'600px'</span><span class="token punctuation">)</span>

                    <span class="token punctuation">)</span><span class="token punctuation">,</span>
                    scrolly_sections<span class="token punctuation">(</span>
                      <span class="token comment">## each of these sections corresponds to an update</span>
                      <span class="token comment">## the number after id = corresponds to the &#96;scr&#96; update</span>
                      <span class="token comment">## the render_text() function will be discussed later</span>
                      scrolly_section<span class="token punctuation">(</span>id <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> render_text<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                      scrolly_section<span class="token punctuation">(</span>id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> render_text<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                      scrolly_section<span class="token punctuation">(</span>id <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span> render_text<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                      scrolly_section<span class="token punctuation">(</span>id <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">,</span> render_text<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                      scrolly_section<span class="token punctuation">(</span>id <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">,</span> render_text<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                      scrolly_section<span class="token punctuation">(</span>id <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">,</span> render_text<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                      scrolly_section<span class="token punctuation">(</span>id <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">,</span> render_text<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                      scrolly_section<span class="token punctuation">(</span>id <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">,</span> render_text<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                      scrolly_section<span class="token punctuation">(</span>id <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">,</span> render_text<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                      <span class="token comment"># add a scrolly_section with nothing in it;</span>
                      <span class="token comment"># this buffer prevents the plot from disappearing while reading last section</span>
                      scrolly_section<span class="token punctuation">(</span>id <span class="token operator">=</span> <span class="token string">"buffer"</span><span class="token punctuation">,</span> br<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">)</span>

  <span class="token punctuation">)</span><span class="token punctuation">,</span>

  <span class="token comment"># a bunch of concluding stuff, other html</span>

<span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
<p>So, the simplest way to think about this so far is:</p>
<p>Construct a plot object with some updating variable (in my case, <code>reveal</code>).</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">filter<span class="token punctuation">(</span><span class="token keyword">if</span> <span class="token punctuation">(</span>add <span class="token operator">!=</span> <span class="token number">8</span><span class="token punctuation">)</span> add <span class="token operator">>=</span> reveal <span class="token keyword">else</span> reveal <span class="token percent-operator operator">%in%</span> c<span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Make that variable correspond with some input variable (in my case <code>add</code>, which is created from the <code>input$scr</code>).</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">server <span class="token operator">&lt;-</span> <span class="token keyword">function</span><span class="token punctuation">(</span>input<span class="token punctuation">,</span> output<span class="token punctuation">,</span> session<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>

  output<span class="token operator">$</span>plot <span class="token operator">&lt;-</span> renderPlotly<span class="token punctuation">(</span><span class="token punctuation">&#123;</span>

    add <span class="token operator">&lt;-</span> input<span class="token operator">$</span>scr
    <span class="token comment">#...</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Render your plot object in <code>scrolly_graph</code>, and provide input updates
via each <code>scrolly_section</code>.</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">ui <span class="token operator">&lt;-</span> fluidPage<span class="token punctuation">(</span>

  <span class="token comment"># a bunch of introductory stuff, css stuff</span>

  <span class="token comment"># scrollytelling plot</span>
  scrolly_container<span class="token punctuation">(</span>outputId <span class="token operator">=</span> <span class="token string">"scr"</span><span class="token punctuation">,</span>
                       scrolly_graph<span class="token punctuation">(</span>plotlyOutput<span class="token punctuation">(</span><span class="token string">"plot"</span><span class="token punctuation">,</span> height <span class="token operator">=</span> <span class="token string">'600px'</span><span class="token punctuation">)</span>

                    <span class="token punctuation">)</span><span class="token punctuation">,</span>
                    scrolly_sections<span class="token punctuation">(</span>
                      scrolly_section<span class="token punctuation">(</span>id <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> render_text<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                      scrolly_section<span class="token punctuation">(</span>id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> render_text<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>

                      <span class="token comment"># ...</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Render your plots in your server function.</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">server <span class="token operator">&lt;-</span> <span class="token keyword">function</span><span class="token punctuation">(</span>input<span class="token punctuation">,</span> output<span class="token punctuation">,</span> session<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>

  output<span class="token operator">$</span>plot <span class="token operator">&lt;-</span>
    <span class="token comment">#...</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>

  output<span class="token operator">$</span>scr <span class="token operator">&lt;-</span> renderScrollytell<span class="token punctuation">(</span><span class="token punctuation">&#123;</span>scrollytell<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
  renderText<span class="token punctuation">(</span>paste0<span class="token punctuation">(</span><span class="token string">"Section: "</span><span class="token punctuation">,</span> input<span class="token operator">$</span>scr<span class="token punctuation">)</span><span class="token punctuation">)</span>
  observe<span class="token punctuation">(</span><span class="token punctuation">&#123;</span>cat<span class="token punctuation">(</span><span class="token string">"section:"</span><span class="token punctuation">,</span> input<span class="token operator">$</span>scr<span class="token punctuation">,</span> <span class="token string">"&#92;n"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>

<span class="token punctuation">&#125;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>That\u2019s (most of) it for the plot section. You can play around with other
customizations too (for example, the alphas for my circles correspond to
an <code>ifelse</code> around <code>reveal</code>, so old circles are faded out compared to
new ones).</p>
<h3 id="${"create-a-series-of-text-reveals"}"><a href="${"#create-a-series-of-text-reveals"}">Create a series of text reveals</a></h3>
<p>Next, we create text sections using <code>HTML</code> and some helper functions
which beautify them.</p>
<p>First, we create the text boxes for each section following a similar
naming convention:</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">text1 <span class="token operator">&lt;-</span> HTML<span class="token punctuation">(</span>"<span class="token operator">&lt;</span>H2<span class="token operator">></span> No education credentials <span class="token operator">&lt;</span><span class="token operator">/</span>H2<span class="token operator">></span>
              <span class="token operator">&lt;</span>br<span class="token operator">></span> <span class="token operator">&lt;</span>p<span class="token operator">></span> Workers with <span class="token operator">&lt;</span>font color<span class="token operator">=</span><span class="token string">'#A00042'</span><span class="token operator">></span>no formal education credential<span class="token operator">&lt;</span><span class="token operator">/</span>font<span class="token operator">></span> have a median income of <span class="token operator">$</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">636.</span>
              <span class="token operator">&lt;</span>br<span class="token operator">></span> On average<span class="token punctuation">,</span> those occupations have a <span class="token operator">&lt;</span>b<span class="token operator">></span><span class="token number">90</span>% chance<span class="token operator">&lt;</span><span class="token operator">/</span>b<span class="token operator">></span> of job automation.
              <span class="token operator">&lt;</span>br<span class="token operator">></span><span class="token operator">&lt;</span>br<span class="token operator">></span> There are <span class="token number">23</span><span class="token punctuation">,</span><span class="token number">765</span><span class="token punctuation">,</span><span class="token number">700</span> workers with <span class="token operator">&lt;</span>font color<span class="token operator">=</span><span class="token string">'#A00042'</span><span class="token operator">></span>no formal education credential<span class="token operator">&lt;</span><span class="token operator">/</span>font<span class="token operator">></span>.<span class="token operator">&lt;</span>p<span class="token operator">></span>"<span class="token punctuation">)</span>

text2 <span class="token operator">&lt;-</span> HTML<span class="token punctuation">(</span>"<span class="token operator">&lt;</span>H2<span class="token operator">></span> High school diplomas <span class="token operator">&lt;</span><span class="token operator">/</span>H2<span class="token operator">></span>
              <span class="token operator">&lt;</span>br<span class="token operator">></span> <span class="token operator">&lt;</span>p<span class="token operator">></span>Workers with <span class="token operator">&lt;</span>font color<span class="token operator">=</span><span class="token string">'#F56C42'</span><span class="token operator">></span>high school diplomas<span class="token operator">&lt;</span><span class="token operator">/</span>font<span class="token operator">></span> have a median income of <span class="token operator">$</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">636.</span>
              <span class="token operator">&lt;</span>br<span class="token operator">></span> On average<span class="token punctuation">,</span> those occupations have a <span class="token operator">&lt;</span>b<span class="token operator">></span><span class="token number">60</span>% chance<span class="token operator">&lt;</span><span class="token operator">/</span>b<span class="token operator">></span> of job automation.
              <span class="token operator">&lt;</span>br<span class="token operator">></span><span class="token operator">&lt;</span>br<span class="token operator">></span> There are <span class="token number">33</span><span class="token punctuation">,</span><span class="token number">129</span><span class="token punctuation">,</span><span class="token number">910</span> workers with a <span class="token operator">&lt;</span>font color<span class="token operator">=</span><span class="token string">'#F56C42'</span><span class="token operator">></span>high school diploma<span class="token operator">&lt;</span><span class="token operator">/</span>font<span class="token operator">></span>.<span class="token operator">&lt;</span>p<span class="token operator">></span>"<span class="token punctuation">)</span>

<span class="token comment"># ...</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Then, we create a function <code>render_text</code> which simply parses that HTML, adds it into a div, and appends a class of \u2018text.\u2019</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">text <span class="token operator">&lt;-</span> <span class="token keyword">function</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
  p<span class="token punctuation">(</span>
    switch<span class="token punctuation">(</span>num<span class="token punctuation">,</span>
           text1<span class="token punctuation">,</span>
           text2<span class="token punctuation">,</span>
           text3<span class="token punctuation">,</span>
           text4<span class="token punctuation">,</span>
           text5<span class="token punctuation">,</span>
           text6<span class="token punctuation">,</span>
           text7<span class="token punctuation">,</span>
           text8
    <span class="token punctuation">)</span>
  <span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span>

render_text <span class="token operator">&lt;-</span> <span class="token keyword">function</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
  div<span class="token punctuation">(</span>
    text<span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">,</span> class <span class="token operator">=</span> <span class="token string">"text"</span>
  <span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>For all 8 of the above <code>text</code>s, we\u2019ve created a switch function which
calls them depending on the number passed to <code>render_text</code>. Then, we
apply paragraph format, put them in their own div, and apply the <em>text</em>
class in our CSS sheet.</p>
<p>How does this work?</p>
<p>Recall that above, in our ui section, we had the following:</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">scrolly_sections<span class="token punctuation">(</span>
  HTML<span class="token punctuation">(</span><span class="token string">'&lt;center>'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  scrolly_section<span class="token punctuation">(</span>id <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> render_text<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  scrolly_section<span class="token punctuation">(</span>id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> render_text<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token comment"># ... continued</span>
<span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Here, our <code>scrolly_section</code>s take two inputs: our ID and our
corresponding text. Rather than write out lengthy text boxes in each
<code>scrolly_section</code>, we can construct them in a single file and then knit
them all into the same format using <code>render_text</code>. This makes life a lot
easier.</p>
<p>So, on each scroll (or observation), the app will update 1) the plot
object, by adding <code>add</code> and updating according to <code>reveal</code>, and 2) the
text, by running <code>render_text</code> which calls <code>text</code> which beautifies our
HTML text.</p>
<h3 id="${"final-touches"}"><a href="${"#final-touches"}">Final touches</a></h3>
<p>The rest of the app is built via
<code>fluidPage</code>, and organizing via rows and columns in your shiny app. Your
app should have a CSS style sheet (in the <a href="${"https://shiny.rstudio.com/articles/css.html"}" rel="${"nofollow"}">www
folder</a>). You may also
include other plots (for my post, I have an introductory plot with a bit
more context), which you will have to separately create and render in
your server function.</p>
<p>All in all, my UI code looks like this:</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">ui <span class="token operator">&lt;-</span> fluidPage<span class="token punctuation">(</span>

  <span class="token comment"># suppress warning messages while data is loading on-screen</span>
  tags<span class="token operator">$</span>style<span class="token punctuation">(</span>type<span class="token operator">=</span><span class="token string">"text/css"</span><span class="token punctuation">,</span>
             <span class="token string">".shiny-output-error &#123; visibility: hidden; &#125;"</span><span class="token punctuation">,</span>
             <span class="token string">".shiny-output-error:before &#123; visibility: hidden; &#125;"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  tags<span class="token operator">$</span>head<span class="token punctuation">(</span>
    includeCSS<span class="token punctuation">(</span><span class="token string">"www/style.css"</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">,</span>

  <span class="token comment"># article title &amp; name</span>
  fluidRow<span class="token punctuation">(</span>HTML<span class="token punctuation">(</span>"<span class="token operator">&lt;</span>center<span class="token operator">></span>
                <span class="token operator">&lt;</span>h1<span class="token operator">></span>Automation and Its Impact on Jobs<span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">></span>
                <span class="token operator">&lt;</span>p style<span class="token operator">=</span><span class="token string">'font-size:26px'</span><span class="token operator">></span> by <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">'https://connorrothschild.github.io/'</span> target<span class="token operator">=</span><span class="token string">'_blank'</span><span class="token operator">></span>Connor Rothschild<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>
                <span class="token operator">&lt;</span><span class="token operator">/</span>center<span class="token operator">></span>"<span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">,</span>

  br<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>

  fluidRow<span class="token punctuation">(</span>
    column<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>

    column<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span>
           <span class="token comment"># intro text</span>
           fluidRow<span class="token punctuation">(</span>id<span class="token operator">=</span><span class="token string">'text'</span><span class="token punctuation">,</span>
                    column<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    column<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span>
                           br<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                           text0<span class="token punctuation">,</span>
                           hr<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                           h1<span class="token punctuation">(</span>
                             class <span class="token operator">=</span> <span class="token string">"instructions"</span><span class="token punctuation">,</span>
                             <span class="token string">"How to read this chart:"</span><span class="token punctuation">,</span>
                             br<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                             br<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                             <span class="token string">"The size of each"</span><span class="token punctuation">,</span> icon<span class="token punctuation">(</span><span class="token string">"circle"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"corresponds to the number of workers in that job."</span><span class="token punctuation">,</span>
                             br<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                             <span class="token string">"Hover over each"</span><span class="token punctuation">,</span> icon<span class="token punctuation">(</span><span class="token string">"circle"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"to see details on the occupation's income and probability of automation."</span><span class="token punctuation">,</span>
                             br<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                             <span class="token string">"Double click on a"</span><span class="token punctuation">,</span> icon<span class="token punctuation">(</span><span class="token string">"circle"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"in the legend to focus on a specific level of education."</span>
                           <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    column<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
           <span class="token comment"># plot object for intro</span>
           plotlyOutput<span class="token punctuation">(</span><span class="token string">"introPlot"</span><span class="token punctuation">,</span> height <span class="token operator">=</span> <span class="token string">'400px'</span><span class="token punctuation">)</span>
           <span class="token punctuation">)</span><span class="token punctuation">,</span>

    column<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>

           <span class="token punctuation">)</span><span class="token punctuation">,</span>

  <span class="token comment"># scrollytelling plot</span>
  scrolly_container<span class="token punctuation">(</span><span class="token string">"scr"</span>
                    <span class="token punctuation">,</span> scrolly_graph<span class="token punctuation">(</span> br<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                     br<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                     textOutput<span class="token punctuation">(</span><span class="token string">"section"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                     br<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                     HTML<span class="token punctuation">(</span><span class="token string">'&lt;center>'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                     plotlyOutput<span class="token punctuation">(</span><span class="token string">"plot"</span><span class="token punctuation">,</span> height <span class="token operator">=</span> <span class="token string">'600px'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                     HTML<span class="token punctuation">(</span><span class="token string">'&lt;/center>'</span><span class="token punctuation">)</span>

                    <span class="token punctuation">)</span>
                    <span class="token punctuation">,</span> scrolly_sections<span class="token punctuation">(</span>
                      HTML<span class="token punctuation">(</span><span class="token string">'&lt;center>'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                      scrolly_section<span class="token punctuation">(</span>id <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> render_text<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                      scrolly_section<span class="token punctuation">(</span>id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> render_text<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                      scrolly_section<span class="token punctuation">(</span>id <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span> render_text<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                      scrolly_section<span class="token punctuation">(</span>id <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">,</span> render_text<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                      scrolly_section<span class="token punctuation">(</span>id <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">,</span> render_text<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                      scrolly_section<span class="token punctuation">(</span>id <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">,</span> render_text<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                      scrolly_section<span class="token punctuation">(</span>id <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">,</span> render_text<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                      scrolly_section<span class="token punctuation">(</span>id <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">,</span> render_text<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                      scrolly_section<span class="token punctuation">(</span>id <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">,</span> render_text<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                      <span class="token comment"># add a scrolly_section with nothing in it;</span>
                      <span class="token comment"># this buffer prevents the plot from disappearing while reading last section</span>
                      scrolly_section<span class="token punctuation">(</span>id <span class="token operator">=</span> <span class="token string">"buffer"</span><span class="token punctuation">,</span> br<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                      HTML<span class="token punctuation">(</span><span class="token string">'&lt;/center>'</span><span class="token punctuation">)</span>
                    <span class="token punctuation">)</span>

  <span class="token punctuation">)</span><span class="token punctuation">,</span>

  <span class="token comment"># concluding text</span>
  div<span class="token punctuation">(</span>fluidRow<span class="token punctuation">(</span>id <span class="token operator">=</span> <span class="token string">'text'</span><span class="token punctuation">,</span>
               column<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
               column<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span>
                      concludingtext<span class="token punctuation">,</span>
                      br<span class="token punctuation">(</span><span class="token punctuation">)</span>
               <span class="token punctuation">)</span><span class="token punctuation">,</span>
               column<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">,</span> style <span class="token operator">=</span> <span class="token string">'margin-top: -300px;'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>

  br<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  br<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  br<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  hr<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>

  fluidRow<span class="token punctuation">(</span>
    column<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    column<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span>
           technicalnotes
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
    column<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">,</span>
  br<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  br<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
column<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>

<span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
<p>And the server looks like this:</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">server <span class="token operator">&lt;-</span> <span class="token keyword">function</span><span class="token punctuation">(</span>input<span class="token punctuation">,</span> output<span class="token punctuation">,</span> session<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>

  output<span class="token operator">$</span>plot <span class="token operator">&lt;-</span> renderPlotly<span class="token punctuation">(</span><span class="token punctuation">&#123;</span>

    add <span class="token operator">&lt;-</span> input<span class="token operator">$</span>scr

    plot <span class="token operator">&lt;-</span> data <span class="token percent-operator operator">%>%</span>
      filter<span class="token punctuation">(</span>typicaled <span class="token operator">!=</span> <span class="token string">"Some college, no degree"</span><span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
      filter<span class="token punctuation">(</span><span class="token keyword">if</span> <span class="token punctuation">(</span>add <span class="token operator">!=</span> <span class="token number">8</span><span class="token punctuation">)</span> add <span class="token operator">>=</span> reveal <span class="token keyword">else</span> reveal <span class="token percent-operator operator">%in%</span> c<span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
      ggplot<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>
      geom_point<span class="token punctuation">(</span>mapping<span class="token operator">=</span>aes<span class="token punctuation">(</span>x<span class="token operator">=</span>A_MEDIAN<span class="token punctuation">,</span> y<span class="token operator">=</span>probability<span class="token punctuation">,</span> size<span class="token operator">=</span>TOT_EMP<span class="token punctuation">,</span>
                             alpha<span class="token operator">=</span>ifelse<span class="token punctuation">(</span>add <span class="token operator">==</span> reveal<span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">/</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">/</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span> col<span class="token operator">=</span>typicaled<span class="token punctuation">,</span>
                             text <span class="token operator">=</span> glue<span class="token operator">::</span>glue<span class="token punctuation">(</span>'<span class="token operator">&lt;</span>b<span class="token operator">></span>Occupation<span class="token operator">&lt;</span><span class="token operator">/</span>b<span class="token operator">></span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>occupation<span class="token punctuation">&#125;</span>
                                                <span class="token operator">&lt;</span>b<span class="token operator">></span>Probability of Automation<span class="token operator">&lt;</span><span class="token operator">/</span>b<span class="token operator">></span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>probability<span class="token punctuation">&#125;</span>%
                                                <span class="token operator">&lt;</span>b<span class="token operator">></span>Median Income<span class="token operator">&lt;</span><span class="token operator">/</span>b<span class="token operator">></span><span class="token operator">:</span> <span class="token operator">$</span><span class="token punctuation">&#123;</span>A_MEDIAN<span class="token punctuation">&#125;</span>
                                                <span class="token operator">&lt;</span>b<span class="token operator">></span>Number of Workers<span class="token operator">&lt;</span><span class="token operator">/</span>b<span class="token operator">></span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>TOT_EMP<span class="token punctuation">&#125;</span>'<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
      scale_size<span class="token punctuation">(</span>range <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
      xlab<span class="token punctuation">(</span><span class="token string">"&#92;nMedian Income"</span><span class="token punctuation">)</span> <span class="token operator">+</span>
      ylab<span class="token punctuation">(</span><span class="token string">"Probability of Automation"</span><span class="token punctuation">)</span> <span class="token operator">+</span>
      labs<span class="token punctuation">(</span>size<span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">,</span> col<span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">,</span> alpha <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">)</span> <span class="token operator">+</span>
      scale_color_manual<span class="token punctuation">(</span>values <span class="token operator">=</span> cols<span class="token punctuation">,</span> breaks <span class="token operator">=</span> legend_ord<span class="token punctuation">)</span> <span class="token operator">+</span>
      scale_x_continuous<span class="token punctuation">(</span>labels<span class="token operator">=</span>scales<span class="token operator">::</span>dollar_format<span class="token punctuation">(</span>prefix<span class="token operator">=</span><span class="token string">"$"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> limits <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">25000</span><span class="token punctuation">,</span><span class="token number">200000</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
      scale_y_continuous<span class="token punctuation">(</span>labels<span class="token operator">=</span>scales<span class="token operator">::</span>number_format<span class="token punctuation">(</span>suffix<span class="token operator">=</span><span class="token string">"%"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> limits <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
      theme<span class="token punctuation">(</span>axis.line.x <span class="token operator">=</span> ggplot2<span class="token operator">::</span>element_line<span class="token punctuation">(</span>colour <span class="token operator">=</span> <span class="token keyword">NULL</span><span class="token punctuation">,</span>
                                                size <span class="token operator">=</span> <span class="token keyword">NULL</span><span class="token punctuation">,</span> linetype <span class="token operator">=</span> <span class="token keyword">NULL</span><span class="token punctuation">,</span> lineend <span class="token operator">=</span> <span class="token keyword">NULL</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            axis.line.y <span class="token operator">=</span> ggplot2<span class="token operator">::</span>element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            panel.grid.major.x <span class="token operator">=</span> element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    ggplotly<span class="token punctuation">(</span>plot<span class="token punctuation">,</span> tooltip <span class="token operator">=</span> <span class="token string">'text'</span><span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
    layout<span class="token punctuation">(</span>
      title <span class="token operator">=</span> list<span class="token punctuation">(</span>element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      legend <span class="token operator">=</span> list<span class="token punctuation">(</span>x <span class="token operator">=</span> <span class="token number">0.65</span><span class="token punctuation">,</span> y <span class="token operator">=</span> <span class="token number">0.925</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      font <span class="token operator">=</span> list<span class="token punctuation">(</span>family <span class="token operator">=</span> <span class="token string">'Lato'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      margin<span class="token operator">=</span>list<span class="token punctuation">(</span>t<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      hoverlabel <span class="token operator">=</span> list<span class="token punctuation">(</span>bgcolor <span class="token operator">=</span> <span class="token string">'whitesmoke'</span><span class="token punctuation">,</span> color <span class="token operator">=</span> <span class="token string">'DarkGray'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
    config<span class="token punctuation">(</span>displaylogo <span class="token operator">=</span> F<span class="token punctuation">,</span> showSendToCloud <span class="token operator">=</span> F<span class="token punctuation">,</span> displayModeBar <span class="token operator">=</span> F<span class="token punctuation">)</span>

  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>

  output<span class="token operator">$</span>introPlot <span class="token operator">&lt;-</span> renderPlotly<span class="token punctuation">(</span><span class="token punctuation">&#123;</span>introPlot<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
  output<span class="token operator">$</span>scr <span class="token operator">&lt;-</span> renderScrollytell<span class="token punctuation">(</span><span class="token punctuation">&#123;</span>scrollytell<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
  renderText<span class="token punctuation">(</span>paste0<span class="token punctuation">(</span><span class="token string">"Section: "</span><span class="token punctuation">,</span> input<span class="token operator">$</span>scr<span class="token punctuation">)</span><span class="token punctuation">)</span>
  observe<span class="token punctuation">(</span><span class="token punctuation">&#123;</span>cat<span class="token punctuation">(</span><span class="token string">"section:"</span><span class="token punctuation">,</span> input<span class="token operator">$</span>scr<span class="token punctuation">,</span> <span class="token string">"&#92;n"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>

<span class="token punctuation">&#125;</span></code>`}<!-- HTML_TAG_END --></pre>
<h2 id="${"the-output"}"><a href="${"#the-output"}">The output</a></h2>
<p>You can look at the code and all of its context on GitHub
<a href="${"https://github.com/connorrothschild/shiny-scrollytell"}" rel="${"nofollow"}">here</a>. Want to visit the live page? You can access it <a href="${"https://connorrothschild.shinyapps.io/automation/"}" rel="${"nofollow"}">here</a>, or embedded below!</p>
<iframe loading="${"lazy"}" title="${"Automation and Its Impact on Jobs"}" src="${"https://connorrothschild.shinyapps.io/automation/"}" width="${"100%"}" height="${"800px"}"></iframe>`
        })}`;
      } while (!$$settled);
      return $$rendered;
    });
  }
});

// .svelte-kit/output/server/chunks/color-in-data-vis-3bd4b890.js
var color_in_data_vis_3bd4b890_exports = {};
__export(color_in_data_vis_3bd4b890_exports, {
  default: () => Color_in_data_vis,
  metadata: () => metadata37
});
var import_bowser43, metadata37, Color_in_data_vis;
var init_color_in_data_vis_3bd4b890 = __esm({
  ".svelte-kit/output/server/chunks/color-in-data-vis-3bd4b890.js"() {
    init_shims();
    init_app_9f378dda();
    init_layout_ef610ed1();
    init_Image_8e30e86c();
    init_BackTo_d882ed88();
    init_global_130d3fe3();
    import_bowser43 = __toModule(require_es5());
    init_CornerTitle_6f993505();
    init_store_8bf23024();
    init_utils_09998264();
    init_IntersectionObserver_4cd4a541();
    metadata37 = {
      "layout": "blog",
      "title": "Color in Data Visualization: Less How, More Why",
      "description": "An overview of the use of color in data visualization",
      "image": "color-in-data-vis/header.png",
      "date": "2020-01-02",
      "tags": ["color", "theory"]
    };
    Color_in_data_vis = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return `${validate_component(Layout4, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata37), {}, {
        default: () => `<p>If our use of color in visualizations follows the <a href="${"https://en.wikipedia.org/wiki/Five_Ws"}" rel="${"nofollow"}">Five Ws (and one H)</a>, we\u2019re spending too much time on <em>how</em>, and not enough time on <em>why</em>. Color is too often seen as a tool to make pretty pictures, when it should be used to inform our audiences.</p>
<p>For one example, look at this \u201CColor Emotion Guide\u201D from marketing site <a href="${"https://www.tapclicks.com/resources/post/the-influence-of-color-in-data-visualization/"}" rel="${"nofollow"}">TapClicks</a> (one of the top results when you Google \u201Ccolor in data visualization\u201D \u{1F9D0}).</p>
${validate_component(Image, "Image").$$render($$result, {
          alt: "Color guide that doesn\u2019t make any sense. Random emotions are assigned to different brand colors, with no apparent pattern.",
          src: "../images/post/color-in-data-vis/color-emotion-guide-lol.jpg"
        }, {}, {})}
<p>The implicit suggestion here is that we should use color\u2014whenever and however we can\u2014to capture some form of emotion. Not only is this specific categorization rather odd (Monster energy drinks are peaceful, Virgin Mobile embodies \u201Cbold excitement\u201D, and Harley Davidson motorcycles just scream \u201Ccheerful friendliness\u201D \u{1F929}), it leads novice practitioners to believe that color should be used just for the sake of using color.</p>
<p>Examples of gratuitous color use abound.</p>
${validate_component(Image, "Image").$$render($$result, {
          alt: "A pie chart with far too many colors.",
          src: "../images/post/color-in-data-vis/bad-color-use-1.jpg",
          width: "29.2%"
        }, {}, {})}
${validate_component(Image, "Image").$$render($$result, {
          alt: "Multiple pie charts, all with poor color usage.",
          src: "../images/post/color-in-data-vis/bad-color-use-2.jpg",
          width: "69%"
        }, {}, {})}
<p>These examples illustrate my thesis: <strong>Too often, we ask <em>how</em> we can use color in our visualizations when we should be asking <em>why</em> we are using it.</strong></p>
<p>Some combination of 1) default software settings, 2) an obsession with pretty color palettes, and 3) a lack of emphasis on careful color consideration has led to a sloppy use of color in some of our most popular data visualizations.</p>
<p>One of the most common errors I see is the <em>overuse</em> of color. In the charts above, for example, it\u2019s evident that there are far too many colors, with no apparent reason for the</p>
<p>Often times, those creating visualizations will argue that they <em>must</em> include a 14 colors in their chart because the dataset has 14 data points of interest! It doesn\u2019t help that the default settings of some of the most popular data viz tools (such as Excel) by default map categorical variables to colors.</p>
<p>The reality is, however, that if you need more than a handful of colors in your chart, you can probably present your data in a different way. Take <a href="${"https://blog.datawrapper.de/colors/"}" rel="${"nofollow"}">this example</a> from Datawrapper:</p>
${validate_component(Image, "Image").$$render($$result, {
          alt: "An example of a poor and better visualization. One has many colors sequentially, while the other breaks up each color into its own bar for clarity's sake.",
          src: "../images/post/color-in-data-vis/bad-and-better.jpg"
        }, {}, {})}
<p>The takeaway? When you emphasize <em>everything</em>, you end up emphasizing <em>nothing</em>. That\u2019s why its important that we stop uncritically asking <em>how</em> we can use color in our charts.</p>
<p>A data visualization is nothing more than a pretty picture if it does not <em>inform</em> its viewer. And if your chart presents 14 different data points all mapped to different colors, what kind of story is it telling? I really like this from Apple\u2019s data visualization practitioner <a href="${"https://medium.com/@Elijah_Meeks/viz-palette-for-data-visualization-color-8e678d996077?"}" rel="${"nofollow"}">Elijah Meeks</a>:</p>
<blockquote><p>Rather than trying to find that impossible 20-color palette, stop using color when you have so many dimensions. It\u2019s indistinguishable, it\u2019s confusing and you\u2019re just off-loading the complexity and decision-making to your reader.</p></blockquote>
<p>That\u2019s why color should be used <em>more sparingly</em> and <em>more thoughtfully</em>. Color is one of the most important parts of our visualizations, yet their current use is far too often gratuitous and overwhelming.</p>
<h2 id="${"so-how-should-you-use-color"}"><a href="${"#so-how-should-you-use-color"}">So, how <em>should</em> you use color?</a></h2>
<p>Color is not the enemy. Rather, the (far too frequent) abuse and misuse of color is. So, how can you use color correctly? It depends on the purpose of your visualization, and, as a corollary, the purpose of color. You should ask: <strong>why am I using color?</strong></p>
<h3 id="${"1-color-to-differentiate"}"><a href="${"#1-color-to-differentiate"}">1) Color to differentiate</a></h3>
<p>One use of color is to draw attention to a data point of interest. This kind of color use would fall into the category of <a href="${"https://www.oreilly.com/library/view/designing-data-visualizations/9781449314774/ch01.html"}" rel="${"nofollow"}">explanatory visualization</a>, as opposed to its exploratory counterpart. If you\u2019ve already explored, analyzed, and probed your data, you now need to deliver those insights to someone else (a supervisor, a client, or a curious friend). It would be a waste of time to present to them all of the exploratory work you did, which is why your presentation should make use of color to focus on your findings.</p>
<p>As practitioner Andy Kirk <a href="${"https://www.visualisingdata.com/2015/01/make-grey-best-friend/"}" rel="${"nofollow"}">puts it</a>, visualization practitioners in this stage of presentation should <strong>make grey their best friend</strong>. This is because the <em>absence of color</em>, not the excessive use of it, helps paint a picture and tell a story. By using grey as the primary color in a visualization, we automatically draw our viewers\u2019 eyes to <span style="${"background: #FF9B9B; color: black; padding: 3px; border-radius: 3px; box-decoration-break: clone;"}">whatever isn\u2019t grey</span>. That way, if we are interested in telling a story about <em>one data point</em>, we can do so quite easily.</p>
<p>Here\u2019s a quick <a href="${"https://github.com/connorrothschild/bbdata"}" rel="${"nofollow"}">example</a> I made in R a while back:</p>
${validate_component(Image, "Image").$$render($$result, {
          alt: "A barplot showcasing vaccination by county in Texas. All bars are grey except the lowest bar, representing Terry County (78% vaccinated), which is highlighted in a royal blue.",
          src: "../images/post/color-in-data-vis/color-emphasized.png"
        }, {}, {})}
<p>The point of the visualization is not to show our audience the kindergarten vaccination rate of <em>every county</em> in Texas. It is instead to highlight the lowest rate\u2014Terry County. This visualization leverages the grey fill of every other bar to immediately draw the audiences\u2019 eyes to Terry County. Because we used only two colors, we can also highlight text in the subtitle to make the connection even clearer for our audience. Color\u2014if used prudently\u2014makes our visualizations more digestible and more informative.</p>
<p>Now, imagine if I visualized that same data in the following way:</p>
${validate_component(Image, "Image").$$render($$result, {
          alt: "A barplot showcasing vaccination by county in Texas. All bars are grey.",
          src: "../images/post/color-in-data-vis/all-grey.jpg"
        }, {}, {})}
<p>Or, even worse:</p>
${validate_component(Image, "Image").$$render($$result, {
          alt: "A barplot showcasing vaccination by county in Texas. All bars are separate colors, with no pattern present.",
          src: "../images/post/color-in-data-vis/all-color.jpg"
        }, {}, {})}
<p>After seeing those eyesores, aren\u2019t you thankful that we used color sparingly in the initial plot?</p>
<p>Perhaps you\u2019re interested in a county-by-county overview of 2016 election results. Although you might be tempted to code all counties according to their Trump/Clinton split, that\u2019s prettier than it is insightful. What if, instead, we focused on those notable counties which flipped from one party to another between 2012 and 2016? From Kieran Healy\u2019s book <a href="${"https://socviz.co/refineplots.html#use-color-to-your-advantage"}" rel="${"nofollow"}">Data Visualization</a>:</p>
${validate_component(Image, "Image").$$render($$result, {
          alt: "A scatterplot where each point represents a county's voting between 2016 and 2020. Highlighted counties 'flipped' between 2016 and 2020, with Republicans highlighted in red and Democrats in blue.",
          src: "../images/post/color-in-data-vis/flipping-points-color.jpg",
          width: "80%",
          centered: "true"
        }, {}, {})}
<p>As we can see here, more counties flipped from majority-Democratic in 2012 to majority-Republican in 2016 than vice-versa. Because we\u2019re focusing on only a fraction of all of the data points, we can also observe trends: The majority of counties that flipped had a small black population. No county that had over a ~53% black population flipped in either direction (annotation my own):</p>
${validate_component(Image, "Image").$$render($$result, {
          alt: "A scatterplot where each point represents a county's voting between 2016 and 2020. Highlighted counties 'flipped' between 2016 and 2020, with Republicans highlighted in red and Democrats in blue. There is an annotation above 53% black to show that no counties with such a population flipped in either direction.",
          src: "../images/post/color-in-data-vis/flipping-points-color-annotate1.jpg",
          width: "80%",
          centered: "true"
        }, {}, {})}
<p>We also notice that flipping direction might be correlated with population size: nearly all of the flipping counties with a log population under 100,000 flipped to Republicans, while a greater proportion of all switching counties flipped toward the Democratic Party if their log population was greater than 100,000.</p>
${validate_component(Image, "Image").$$render($$result, {
          alt: "A scatterplot where each point represents a county's voting between 2016 and 2020. Highlighted counties 'flipped' between 2016 and 2020, with Republicans highlighted in red and Democrats in blue. There is an annotation past population 100,000 to show that more populous counties were more likely to flip Democratic.",
          src: "../images/post/color-in-data-vis/flipping-points-color-annotate2.jpg",
          width: "80%",
          centered: "true"
        }, {}, {})}
<p>Color can, and should, be used to focus on the key parts of your visualization that you want your audience to see. By using color strategically, we can reduce the cognitive load required to understand <em>what</em> a visualization is depicting. <a href="${"https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0183884#pone.0183884.ref008"}" rel="${"nofollow"}">Kalyuga et al.</a> found that color-coding \u201Cameliorated split-attention effects, resulting in lower perceived difficulty.\u201D <a href="${"https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0183884#pone.0183884.ref024"}" rel="${"nofollow"}">Other researchers</a> have reported reductions in cognitive load when experiment participants were provided color-coding.</p>
<p>The overuse of colors can have the opposite effect. In one <a href="${"https://journals-sagepub-com.ezproxy.rice.edu/doi/full/10.1177/1747021818781425"}" rel="${"nofollow"}">2019 paper</a>, researchers found \u201Ctask-irrelevant digit colour information hampers the learning process only in instances where it triggers a conflict with the semantic properties of the base-code words.\u201D What does this mean? If color encoding conflicts with the objects it represents, it impedes learning and weakens understanding. You don\u2019t have to understand what all this means (I don\u2019t dully understand all of it). This point is simply to illustrate: <em>we should care about color</em>. Color can be confusing and complicated, which is why its use should be intentional and minimal. It should be used to draw attention to the important parts of our charts.</p>
<h3 id="${"2-color-to-explore"}"><a href="${"#2-color-to-explore"}">2) Color to explore</a></h3>
<p>Color does not have to be used in contrast to plain old grey. It can also be used as a tool to showcase a variety of data points all mapped to different colors. The important note is that this usage should be sparing. Given our prior examples, we definitely don\u2019t want a plot like this one (from <a href="${"https://serialmentor.com/dataviz/color-pitfalls.html"}" rel="${"nofollow"}">Chapter 19 of Claus Wilke\u2019s <em>Fundamentals of Data Visualization</em></a>):</p>
${validate_component(Image, "Image").$$render($$result, {
          alt: "A scatterplot where each point represents a state, and the x and y axis position showcase population vs population growth. Each state is shaded to a separate color, with no pattern.",
          src: "../images/post/color-in-data-vis/bad-chart.jpg",
          width: "50%",
          centered: "true"
        }, {}, {})}
<p>A more appropriate alternative may look something like this:</p>
${validate_component(Image, "Image").$$render($$result, {
          alt: "A scatterplot where each point represents a state, and the x and y axis position showcase population vs population growth. Each state is shaded according to its region.",
          src: "../images/post/color-in-data-vis/betterchart-1.jpg",
          width: "70%",
          centered: "true"
        }, {}, {})}
<p>This way, the audience can still see general patterns in the data, but they don\u2019t have to treat the fill legend like a lookup table! Most ideally, this chart would have some interactivity, so that a user could hover over a point to see its respective data.</p>
<p>In examples like this, where we are <em>exploring</em> rather than <em>explaining</em>, we leave the exploration to our users; they can see what they want to see and we give them the information they need to do exactly that.</p>
<p>Another common use of color for exploratory purposes is showing data progression across a gradient (e.g. low to high, bad to good, cold to warm).</p>
<p>These examples are most commonly found in <a href="${"https://en.wikipedia.org/wiki/Choropleth_map"}" rel="${"nofollow"}">choropleth maps</a>, where the shade of color in a given state (or county, or region) corresponds to a value of interest. As an example, here\u2019s a <a href="${"https://connorrothschild.github.io/D3.js/map-overdoses/"}" rel="${"nofollow"}">choropleth map</a> I created using D3.js, which visualizes opioid-involved overdose deaths in the United States:</p>
${validate_component(Image, "Image").$$render($$result, {
          alt: "A choropleth chart wherein each state is shaded according to its opioid overdose rate.",
          src: "../images/post/color-in-data-vis/choropleth-ex.jpg",
          width: "70%",
          centered: "true"
        }, {}, {})}
<p>As we can see from the map, \u201Crust belt\u201D states are suffering from the opioid crisis to a much greater degree than those in western states. Choropleth maps utilize color to show regional variation and illustrate the power of color <em>shading</em> to represent the severity or extent of a given variable.</p>
<p>However, color in this context can also be misused. Data may be mapped according to a categorical color scale, or a rainbow scale which makes it difficult to see progression. This chart from <a href="${"https://serialmentor.com/dataviz/color-pitfalls.html"}" rel="${"nofollow"}">Claus O. Wilke</a> is a good (bad) example:</p>
${validate_component(Image, "Image").$$render($$result, {
          alt: "A map of Texas where each county is shaded according to its proportional white population. The color scale is rainbow, making it difficult to detect relative differences.",
          src: "../images/post/color-in-data-vis/map-Texas-rainbow-1.jpg",
          width: "70%",
          centered: "true"
        }, {}, {})}
<p>This chart is pretty! When rainbow scales are used in the media or elsewhere, it may be because their creator asked \u201CHow can I use color to make a pretty picture?\u201D But this use of a non-monotonic color scale means that the relative size of differences between data points are difficult to detect. As an illustration, see how long it takes you to answer this question: using the legend above, what is the percent difference between <span style="${"color:#FF6701;"}">this color </span>and <span style="${"color:#3736FF;"}">this color</span>? (The answer is ~70%.)</p>
<p>In 2019, <a href="${"https://ieeexplore.ieee.org/document/8494817"}" rel="${"nofollow"}">a group of researchers</a> asked climate scientists to evaluate maps depicting changes in climate, where maps were either rainbow (similar to the Texas map above) or monotonic (such as the opioid map earlier). The researchers found that evaluations of magnitude difference in these maps were significantly more accurate when they were encoded with monotonic luminance scales rather than traditional rainbow scales. Other research consistently finds that rainbow color scales are both <a href="${"http://people.renci.org/~borland/pdfs/RainbowColorMap_VisViewpoints.pdf"}" rel="${"nofollow"}">harmful and popular</a>. All this to say: color matters.</p>
<p>So, color can be used for exploratory purposes. That is to say, color doesn\u2019t have to be used exclusively for focus, and it can be used in charts that have colors other than just grey! But exploratory color usage (as with all use of color) requires caution.</p>
<h2 id="${"conclusion"}"><a href="${"#conclusion"}">Conclusion</a></h2>
<p>Color is tricky. While it can take your plot to the next level, it can also ruin it. The difference? The questions we ask. Are we questioning <em>how</em> we can use color; which of the many palettes to use, and how we can map them across variables? These are <a href="${"https://socviz.co/refineplots.html#use-color-to-your-advantage"}" rel="${"nofollow"}">important questions</a>, but they have to be preceded by the question of <em>why</em> we use color in the first place. If color doesn\u2019t serve the purpose of informing, clarifying, or guiding our audience, what purpose does it serve?</p>`
      })}`;
    });
  }
});

// .svelte-kit/output/server/chunks/TableHandler-a93fb82a.js
var css9, TableHandler;
var init_TableHandler_a93fb82a = __esm({
  ".svelte-kit/output/server/chunks/TableHandler-a93fb82a.js"() {
    init_shims();
    init_app_9f378dda();
    css9 = {
      code: "div.svelte-17u5tpa{margin:1.35rem auto}img.svelte-17u5tpa{margin-bottom:0.5rem}a.svelte-17u5tpa{font-weight:300;font-family:var(--font-sans);text-align:right;letter-spacing:0.64px;width:100%;margin-left:auto;display:block}@media screen and (max-width: 768px){div.svelte-17u5tpa{width:100% !important}}",
      map: null
    };
    TableHandler = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { src: src2 } = $$props;
      let { alt } = $$props;
      let { link } = $$props;
      let { width = "100%" } = $$props;
      if ($$props.src === void 0 && $$bindings.src && src2 !== void 0)
        $$bindings.src(src2);
      if ($$props.alt === void 0 && $$bindings.alt && alt !== void 0)
        $$bindings.alt(alt);
      if ($$props.link === void 0 && $$bindings.link && link !== void 0)
        $$bindings.link(link);
      if ($$props.width === void 0 && $$bindings.width && width !== void 0)
        $$bindings.width(width);
      $$result.css.add(css9);
      return `<div style="${"width: " + escape(width) + ";"}" class="${"svelte-17u5tpa"}"><img loading="${"lazy"}"${add_attribute("src", src2, 0)}${add_attribute("alt", alt, 0)} width="${"100%"}" class="${"svelte-17u5tpa"}">
  <a${add_attribute("href", link, 0)} target="${"_blank"}" rel="${"noopener noreferrer"}" class="${"no-underline svelte-17u5tpa"}">The original, interactive table can be found here</a>
</div>`;
    });
  }
});

// .svelte-kit/output/server/chunks/covid-gun-spikes-595c3f78.js
var covid_gun_spikes_595c3f78_exports = {};
__export(covid_gun_spikes_595c3f78_exports, {
  default: () => Covid_gun_spikes,
  metadata: () => metadata38
});
var import_bowser44, import_prismjs5, import_prism_normalize_whitespace5, metadata38, Covid_gun_spikes;
var init_covid_gun_spikes_595c3f78 = __esm({
  ".svelte-kit/output/server/chunks/covid-gun-spikes-595c3f78.js"() {
    init_shims();
    init_app_9f378dda();
    init_layout_ef610ed1();
    init_Image_8e30e86c();
    init_TableHandler_a93fb82a();
    init_Code_71f36c68();
    init_BackTo_d882ed88();
    init_global_130d3fe3();
    import_bowser44 = __toModule(require_es5());
    init_CornerTitle_6f993505();
    init_store_8bf23024();
    init_utils_09998264();
    init_IntersectionObserver_4cd4a541();
    import_prismjs5 = __toModule(require_prism());
    init_prism_line_numbers();
    import_prism_normalize_whitespace5 = __toModule(require_prism_normalize_whitespace());
    init_prism_line_highlight();
    init_prism_file_highlight();
    init_prism_bash();
    init_prism_css();
    init_prism_r();
    init_prism_json();
    init_prism_yaml();
    metadata38 = {
      "layout": "blog",
      "title": "Firearm Background Checks Are Spiking",
      "description": "Visualizing the precipitous rise in gun sales during COVID-19",
      "date": "2020-07-02",
      "image": "covid-gun-spikes/header.png",
      "featured": true,
      "tags": ["analysis", "r"]
    };
    Covid_gun_spikes = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return `${validate_component(Layout4, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata38), {}, {
        default: () => `${validate_component(Image, "Image").$$render($$result, {
          src: "../images/post/covid-gun-spikes/featured.png",
          alt: "A small multiples map showing spikes in firearm background checks in 2020, compared to 1999-2019"
        }, {}, {})}
<p>So far in 2020, firearm background checks are happening <strong>significantly</strong> more frequently than they did during the first six months of the last 20 years. Some <a href="${"https://www.nytimes.com/interactive/2020/04/01/business/coronavirus-gun-sales.html"}" rel="${"nofollow"}">media reports</a> captured the gun-buying frenzy during its apparent peak in March, but according to data from the <a href="${"https://www.fbi.gov/file-repository/nics_firearm_checks_-_month_year_by_state_type.pdf/view"}" rel="${"nofollow"}">FBI NICS</a>, <em>the month of June saw the largest single month count of firearm background checks in the last 20 years.</em></p>
<p>The data, <a href="${"https://github.com/BuzzFeedNews/nics-firearm-background-checks"}" rel="${"nofollow"}">which is scraped and cleaned by BuzzFeed News</a>, shows a massive spike in firearm background checks in the last 5 months:</p>
${validate_component(Code, "Code").$$render($$result, { language: "r", showLineNumbers: false }, {}, {
          default: () => `<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">library<span class="token punctuation">(</span>reactable<span class="token punctuation">)</span>
library<span class="token punctuation">(</span>tidyverse<span class="token punctuation">)</span>
library<span class="token punctuation">(</span>geofacet<span class="token punctuation">)</span>
library<span class="token punctuation">(</span>scales<span class="token punctuation">)</span>

theme_set<span class="token punctuation">(</span>theme_minimal<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

data <span class="token operator">&lt;-</span> readr<span class="token operator">::</span>read_csv<span class="token punctuation">(</span><span class="token string">'data/data.csv'</span><span class="token punctuation">)</span>

data <span class="token operator">&lt;-</span> data <span class="token percent-operator operator">%>%</span>
  mutate<span class="token punctuation">(</span>month <span class="token operator">=</span> as.Date<span class="token punctuation">(</span>paste<span class="token punctuation">(</span>month<span class="token punctuation">,</span> <span class="token string">"-01"</span><span class="token punctuation">,</span> sep <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        year <span class="token operator">=</span> lubridate<span class="token operator">::</span>year<span class="token punctuation">(</span>month<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  filter<span class="token punctuation">(</span>year <span class="token operator">!=</span> <span class="token number">1998</span><span class="token punctuation">)</span>

data <span class="token percent-operator operator">%>%</span>
  mutate<span class="token punctuation">(</span>month <span class="token operator">=</span> lubridate<span class="token operator">::</span>month<span class="token punctuation">(</span>month<span class="token punctuation">)</span><span class="token punctuation">,</span>
        month <span class="token operator">=</span> month.abb<span class="token punctuation">[</span>month<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  group_by<span class="token punctuation">(</span>year<span class="token punctuation">,</span> month<span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  summarise<span class="token punctuation">(</span>sum <span class="token operator">=</span> sum<span class="token punctuation">(</span>totals<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  reactable<span class="token punctuation">(</span>
    defaultSorted <span class="token operator">=</span> <span class="token string">'sum'</span><span class="token punctuation">,</span>
    defaultSortOrder <span class="token operator">=</span> <span class="token string">'desc'</span><span class="token punctuation">,</span>
    defaultColDef <span class="token operator">=</span> colDef<span class="token punctuation">(</span>headerClass <span class="token operator">=</span> <span class="token string">"header"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    compact <span class="token operator">=</span> <span class="token boolean">TRUE</span><span class="token punctuation">,</span>
    fullWidth <span class="token operator">=</span> <span class="token boolean">FALSE</span><span class="token punctuation">,</span>
    columns <span class="token operator">=</span> list<span class="token punctuation">(</span>
      month <span class="token operator">=</span> colDef<span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"Month"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      year <span class="token operator">=</span> colDef<span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"Year"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      sum <span class="token operator">=</span> colDef<span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"# of Firearm Background Checks"</span><span class="token punctuation">,</span>
                  format <span class="token operator">=</span> colFormat<span class="token punctuation">(</span>separators <span class="token operator">=</span> <span class="token boolean">TRUE</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
    rowStyle <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>.<span class="token punctuation">[</span>index<span class="token punctuation">,</span> <span class="token string">"year"</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">2020</span><span class="token punctuation">)</span>
        list<span class="token punctuation">(</span>fontWeight <span class="token operator">=</span> <span class="token string">"bold"</span><span class="token punctuation">,</span>
            background <span class="token operator">=</span> <span class="token string">"rgba(0, 0, 0, 0.05)"</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#125;</span>
  <span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>`
        })}
${validate_component(TableHandler, "TableHandler").$$render($$result, {
          src: "../images/post/covid-gun-spikes/table-replacement.png",
          alt: "A table showing the years and months with the greatest number of firearm background checks. Those in 2020 are among the highest.",
          link: "http://connorrothschild.github.io/v2/post/covid-gun-spikes/",
          width: "70%"
        }, {}, {})}
<p>As the table shows, the last 5 months have seen some of the greatest numbers of firearm background checks since the FBI has collected such data. It seems as if the only non-2020 entrants to the top 7 are from December 2015, and December 2019, which are (perhaps coincidentally) both the final months before new presidents took office.</p>
<p>Visually, we see that firearm background checks follow some seasonal trends, but by and large, have undergone unprecedented spikes in the last 5 months:</p>
${validate_component(Code, "Code").$$render($$result, { language: "r", showLineNumbers: false }, {}, {
          default: () => `<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">data %&gt;%
  group_by(month) %&gt;%
  summarise(sum = sum(totals)) %&gt;%
  ggplot(aes(x = month, y = sum)) +
  geom_line() +
  geom_area(alpha = .7, fill = &#39;red&#39;) +
  labs(y = element_blank(), x = element_blank(),
       title = &#39;Firearm background checks, over time&#39;) +
  scale_x_date(expand = expansion(c(0, 0.001))) +
  scale_y_continuous(expand = expansion(c(0, 0.001)),
                     labels = unit_format(
                       unit = &quot;M&quot;,
                       scale = 1e-6,
                       sep = &quot;&quot;,
                       accuracy = 1
                     ))</code>`}<!-- HTML_TAG_END --></pre>`
        })}
${validate_component(Image, "Image").$$render($$result, {
          src: "../images/post/covid-gun-spikes/unnamed-chunk-4-1.png",
          alt: "An area chart showing background checks over time. Despite some seasonaility, the trend is increasing over time, and is at its highest point at the end of the chart in 2020."
        }, {}, {})}
<p>And we can better understand the magnitude of these shifts by visualizing year-to-year changes:</p>
${validate_component(Code, "Code").$$render($$result, { language: "r" }, {}, {
          default: () => `<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">data <span class="token percent-operator operator">%>%</span>
  mutate<span class="token punctuation">(</span>month <span class="token operator">=</span> lubridate<span class="token operator">::</span>month<span class="token punctuation">(</span>month<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  filter<span class="token punctuation">(</span>month <span class="token operator">&lt;</span> <span class="token number">7</span><span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  group_by<span class="token punctuation">(</span>year<span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  summarise<span class="token punctuation">(</span>sum <span class="token operator">=</span> sum<span class="token punctuation">(</span>totals<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  ungroup<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  mutate<span class="token punctuation">(</span>last_year <span class="token operator">=</span> lag<span class="token punctuation">(</span>sum<span class="token punctuation">)</span><span class="token punctuation">,</span>
         perc_change <span class="token operator">=</span>  <span class="token punctuation">(</span><span class="token punctuation">(</span>sum <span class="token operator">-</span> last_year<span class="token punctuation">)</span> <span class="token operator">/</span> last_year<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  ggplot<span class="token punctuation">(</span>aes<span class="token punctuation">(</span>x <span class="token operator">=</span> year<span class="token punctuation">,</span> y <span class="token operator">=</span> perc_change<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  geom_col<span class="token punctuation">(</span>alpha <span class="token operator">=</span> <span class="token number">.7</span><span class="token punctuation">,</span> fill <span class="token operator">=</span> <span class="token string">'red'</span><span class="token punctuation">,</span> color <span class="token operator">=</span> <span class="token string">'black'</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  geom_hline<span class="token punctuation">(</span>yintercept <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  scale_x_continuous<span class="token punctuation">(</span>expand <span class="token operator">=</span> expansion<span class="token punctuation">(</span>c<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.001</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  scale_y_continuous<span class="token punctuation">(</span>labels <span class="token operator">=</span> percent_format<span class="token punctuation">(</span>accuracy <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  labs<span class="token punctuation">(</span>x <span class="token operator">=</span> element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> y <span class="token operator">=</span> element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
       title <span class="token operator">=</span> <span class="token string">"Year-on-year changes in firearm background checks, 1999-2020"</span><span class="token punctuation">,</span>
       subtitle <span class="token operator">=</span> <span class="token string">"January through June"</span><span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>`
        })}
${validate_component(Image, "Image").$$render($$result, {
          src: "../images/post/covid-gun-spikes/unnamed-chunk-5-1.png",
          alt: "A barchart showing the temporal year-on-year change in background checks for firearms over time. The last year, 2020, is the highest, meaning background checks have seen the greatest year on year growth this year."
        }, {}, {})}
<p>Visualized another way, we can explore the temporal change <strong>within each year</strong> for every year between 1999 and 2020, with 2020 <span style="${"color:red"}">highlighted in red.</span></p>
${validate_component(Code, "Code").$$render($$result, { language: "r" }, {}, {
          default: () => `<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">data <span class="token percent-operator operator">%>%</span>
  mutate<span class="token punctuation">(</span>month <span class="token operator">=</span> lubridate<span class="token operator">::</span>month<span class="token punctuation">(</span>month<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  filter<span class="token punctuation">(</span>month <span class="token operator">&lt;</span> <span class="token number">7</span><span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  group_by<span class="token punctuation">(</span>month<span class="token punctuation">,</span> year<span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  summarise<span class="token punctuation">(</span>sum <span class="token operator">=</span> sum<span class="token punctuation">(</span>totals<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  mutate<span class="token punctuation">(</span>fill <span class="token operator">=</span> ifelse<span class="token punctuation">(</span>year <span class="token operator">==</span> <span class="token number">2020</span><span class="token punctuation">,</span> <span class="token string">"2020"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  ggplot<span class="token punctuation">(</span>aes<span class="token punctuation">(</span>group <span class="token operator">=</span> year<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  geom_line<span class="token punctuation">(</span>aes<span class="token punctuation">(</span>x <span class="token operator">=</span> month<span class="token punctuation">,</span> y <span class="token operator">=</span> sum<span class="token punctuation">,</span> color <span class="token operator">=</span> fill<span class="token punctuation">,</span> alpha <span class="token operator">=</span> fill<span class="token punctuation">)</span><span class="token punctuation">,</span> show.legend <span class="token operator">=</span> <span class="token boolean">FALSE</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  scale_y_continuous<span class="token punctuation">(</span>limits <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">4000000</span><span class="token punctuation">)</span><span class="token punctuation">,</span> labels <span class="token operator">=</span> unit_format<span class="token punctuation">(</span>unit <span class="token operator">=</span> <span class="token string">"M"</span><span class="token punctuation">,</span> sep <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">,</span> scale <span class="token operator">=</span> <span class="token number">1e-6</span><span class="token punctuation">,</span> accuracy <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  scale_x_continuous<span class="token punctuation">(</span>breaks <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">,</span> labels <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token string">"Jan"</span><span class="token punctuation">,</span> <span class="token string">"Feb"</span><span class="token punctuation">,</span> <span class="token string">"Mar"</span><span class="token punctuation">,</span> <span class="token string">"April"</span><span class="token punctuation">,</span> <span class="token string">"May"</span><span class="token punctuation">,</span> <span class="token string">"June"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  scale_color_manual<span class="token punctuation">(</span>values <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token string">"gray"</span><span class="token punctuation">,</span> <span class="token string">"red"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  scale_alpha_manual<span class="token punctuation">(</span>values <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">.7</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  labs<span class="token punctuation">(</span>x <span class="token operator">=</span> element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> y <span class="token operator">=</span> element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      title <span class="token operator">=</span> "Firearm background checks <span class="token keyword">in</span> <span class="token operator">&lt;</span>span style <span class="token operator">=</span> <span class="token string">'color: red;'</span><span class="token operator">></span><span class="token number">2020</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>
      compared to <span class="token operator">&lt;</span>span style <span class="token operator">=</span> <span class="token string">'color: #343434'</span><span class="token operator">></span><span class="token number">1999</span> <span class="token operator">-</span> <span class="token number">2019</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>"<span class="token punctuation">,</span>
      subtitle <span class="token operator">=</span> <span class="token string">"January to June"</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  theme<span class="token punctuation">(</span>plot.title <span class="token operator">=</span> ggtext<span class="token operator">::</span>element_markdown<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>`
        })}
${validate_component(Image, "Image").$$render($$result, {
          src: "../images/post/covid-gun-spikes/unnamed-chunk-6-1.png",
          alt: "A line chart wherein each line shows a year, and the x axis corresponds to the month. The y axis represents the sum of background checks. The highest line is 2020, highlighted in red, indicating that across the entire year, 2020 has seen the greatest number of background checks."
        }, {}, {})}
<p>The FBI database also includes background check data for each U.S. state. This data allows us to compare trends <em>across</em> states and over time (using <code>geofacet</code>):</p>
${validate_component(Code, "Code").$$render($$result, { language: "r" }, {}, {
          default: () => `<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">data <span class="token percent-operator operator">%>%</span>
  mutate<span class="token punctuation">(</span>month <span class="token operator">=</span> lubridate<span class="token operator">::</span>month<span class="token punctuation">(</span>month<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  filter<span class="token punctuation">(</span>month <span class="token operator">&lt;</span> <span class="token number">7</span><span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  group_by<span class="token punctuation">(</span>month<span class="token punctuation">,</span> year<span class="token punctuation">,</span> state<span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  summarise<span class="token punctuation">(</span>sum <span class="token operator">=</span> sum<span class="token punctuation">(</span>totals<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  mutate<span class="token punctuation">(</span>fill <span class="token operator">=</span> ifelse<span class="token punctuation">(</span>year <span class="token operator">==</span> <span class="token number">2020</span><span class="token punctuation">,</span> <span class="token string">"2020"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  ggplot<span class="token punctuation">(</span>aes<span class="token punctuation">(</span>group <span class="token operator">=</span> year<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  geom_line<span class="token punctuation">(</span>aes<span class="token punctuation">(</span>x <span class="token operator">=</span> month<span class="token punctuation">,</span> y <span class="token operator">=</span> sum<span class="token punctuation">,</span> color <span class="token operator">=</span> fill<span class="token punctuation">,</span> alpha <span class="token operator">=</span> fill<span class="token punctuation">)</span><span class="token punctuation">,</span>
            size <span class="token operator">=</span> <span class="token number">.2</span><span class="token punctuation">,</span> show.legend <span class="token operator">=</span> <span class="token boolean">FALSE</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  scale_color_manual<span class="token punctuation">(</span>values <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token string">"gray"</span><span class="token punctuation">,</span> <span class="token string">"red"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  scale_alpha_manual<span class="token punctuation">(</span>values <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">.5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  facet_geo<span class="token punctuation">(</span><span class="token operator">~</span> state<span class="token punctuation">,</span> scales <span class="token operator">=</span> <span class="token string">'free_y'</span><span class="token punctuation">,</span> grid <span class="token operator">=</span> <span class="token string">"us_state_grid1"</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  theme<span class="token punctuation">(</span>text <span class="token operator">=</span> element_text<span class="token punctuation">(</span>color <span class="token operator">=</span> <span class="token string">"white"</span><span class="token punctuation">,</span>
                            family <span class="token operator">=</span> <span class="token string">"IBM Plex Sans"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        axis.title<span class="token operator">=</span>element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        axis.text<span class="token operator">=</span>element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        axis.ticks<span class="token operator">=</span>element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        strip.background <span class="token operator">=</span> element_rect<span class="token punctuation">(</span>fill <span class="token operator">=</span> <span class="token string">'black'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        strip.text <span class="token operator">=</span> element_text<span class="token punctuation">(</span>size <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">,</span> color <span class="token operator">=</span> <span class="token string">'white'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        panel.background <span class="token operator">=</span> element_rect<span class="token punctuation">(</span>fill <span class="token operator">=</span> <span class="token string">'black'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        plot.background <span class="token operator">=</span> element_rect<span class="token punctuation">(</span>fill <span class="token operator">=</span> <span class="token string">'black'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        panel.grid <span class="token operator">=</span> element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  labs<span class="token punctuation">(</span>x <span class="token operator">=</span> element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
       y <span class="token operator">=</span> element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
       title <span class="token operator">=</span> <span class="token string">"Spikes in gun ownership during COVID-19"</span><span class="token punctuation">,</span>
       subtitle <span class="token operator">=</span> <span class="token string">"How the first six months of 2020 compare to 1999-2019"</span><span class="token punctuation">)</span>

<span class="token comment">## With additional styling changes made in Illustrator!</span></code>`}<!-- HTML_TAG_END --></pre>`
        })}
${validate_component(Image, "Image").$$render($$result, {
          src: "../images/post/covid-gun-spikes/featured.png",
          alt: "A small multiples map showing spikes in firearm background checks in 2020, compared to 1999-2019"
        }, {}, {})}
<h2 id="${"the-impact"}"><a href="${"#the-impact"}">The impact</a></h2>
<p>Most obviously, background checks are a proxy for gun purchases and gun ownership; as such, this data informs us that more and more people are grabbing for guns during COVID-19, perhaps in anticipation of some post-COVID apocalypse or perceived government overreach during.</p>
<p>In addition, one risk is that more guns can lead to greater numbers of firearm suicides. <a href="${"https://everytownresearch.org/reports/covid-gun-violence/"}" rel="${"nofollow"}">One group of researchers</a> at the gun safety organization Everytown predicted that COVID-related unemployment would lead to a 20-30% increase in firearm suicides (5000 to 7000 people). As such, a rise in firearm-related background checks may signal an impending surge of gun violence in the forms of both homicide and suicide.</p>
<p>Firearm background check data, however, requires close scrutiny. The way that these data are acquired on a state-by-state basis means that we might not be able to safely make comparisons <em>across</em> states. Moreover, according to <a href="${"https://www.thetrace.org/2015/10/private-sale-loophole-background-check-harvard-research/"}" rel="${"nofollow"}">one group of Harvard researchers</a>, upwards of 40% of all gun owners report acquiring their most recent gun <em>without a background check.</em></p>
<p>Thus, these numbers may tell a different story than one of \u2018guns are being purchased more frequently.\u2019 Although not employed in this post, there are some novel ways to develop stories similar to that one, like using <a href="${"https://github.com/nytimes/gunsales#getting-gun-sales-estimates-from-background-checks"}" rel="${"nofollow"}">NYT\u2019s methodology</a> to estimate gun sales from background check data. I encourage those interested to pursue their work, alongside the <a href="${"https://github.com/BuzzFeedNews/nics-firearm-background-checks"}" rel="${"nofollow"}">BuzzFeed News repository</a> where this data came from, and analyze such questions yourself.</p>`
      })}`;
    });
  }
});

// .svelte-kit/output/server/chunks/covid-on-campus-09e3e28f.js
var covid_on_campus_09e3e28f_exports = {};
__export(covid_on_campus_09e3e28f_exports, {
  default: () => Covid_on_campus,
  metadata: () => metadata39
});
var import_bowser45, metadata39, Covid_on_campus;
var init_covid_on_campus_09e3e28f = __esm({
  ".svelte-kit/output/server/chunks/covid-on-campus-09e3e28f.js"() {
    init_shims();
    init_app_9f378dda();
    init_layout_ef610ed1();
    init_Image_8e30e86c();
    init_TableHandler_a93fb82a();
    init_BackTo_d882ed88();
    init_global_130d3fe3();
    import_bowser45 = __toModule(require_es5());
    init_CornerTitle_6f993505();
    init_store_8bf23024();
    init_utils_09998264();
    init_IntersectionObserver_4cd4a541();
    metadata39 = {
      "layout": "blog",
      "title": "An Analysis of COVID on Campus",
      "date": "2020-10-02",
      "description": "Where university reopenings led to spikes in COVID-19 case counts",
      "image": "covid-on-campus/header.png",
      "tags": ["analysis", "r"]
    };
    Covid_on_campus = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return `${$$result.head += `<script async src="${"https://platform.twitter.com/widgets.js"}" charset="${"utf-8"}" data-svelte="svelte-lj1ja"><\/script>`, ""}
${validate_component(Layout4, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata39), {}, {
        default: () => `<p>On July 17, Rice University announced <a href="${"https://coronavirus.rice.edu/news/message-president-leebron-july-17"}" rel="${"nofollow"}">its
plan</a>
for the fall semester, which included a hybrid mode of instruction where
students could attend classes either virtually or in person. The
decision wasn\u2019t without controversy; in the weeks that followed,
<a href="${"https://www.ricethresher.org/article/2020/08/return-to-campus-but-to-what-end"}" rel="${"nofollow"}">multiple</a>
<a href="${"https://www.ricethresher.org/article/2020/07/letter-to-the-editor-on-returning-to-the-classroom"}" rel="${"nofollow"}">faculty</a>
<a href="${"https://www.ricethresher.org/article/2020/07/letter-to-the-editor-re-evaluate-return-to-campus"}" rel="${"nofollow"}">members</a>
at Rice wrote of their concerns with the plan to begin classes,
eventually culminating in a
<a href="${"https://www.ricethresher.org/article/2020/08/faculty-senate-will-meet-to-discuss-risks-and-benefits-of-returning-to-campus"}" rel="${"nofollow"}">petition</a>
to convene a campus-wide discussion regarding the risks and benefits of
opening campus. The petition garnered nearly 100 faculty signatures.</p>
<p>Despite such complaints, Rice opened its doors to in-person students on
August 11th. And despite all of the concerns, the university has done a
remarkable job at keeping COVID case counts relatively low.</p>
<blockquote class="${"twitter-tweet"}"><p lang="${"en"}" dir="${"ltr"}">A big part of <a href="${"https://twitter.com/RiceUniversity?ref_src=twsrc%5Etfw"}">@RiceUniversity</a>&#39;s approach to COVID-19: test often. Within the first two weeks of August, the university recorded over 4000 tests, with a total of 19 positive cases (0.41%). <a href="${"https://t.co/IDI3qtIE6f"}">pic.twitter.com/IDI3qtIE6f</a></p>\u2014 Connor Rothschild (@CL_Rothschild) <a href="${"https://twitter.com/CL_Rothschild/status/1296495845664272386?ref_src=twsrc%5Etfw"}">August 20, 2020</a></blockquote>
<p>Rice\u2019s success at maintaining low case
counts\u2013<a href="${"https://coronavirus.rice.edu/"}" rel="${"nofollow"}">recording</a> only 37 positive cases
across 36,183 tests as of October 10\u2013is not typical of most colleges. At
universities across the country, reopening was often accompanied by a
<a href="${"https://apnews.com/article/virus-outbreak-indiana-muncie-b62eacec9bd3fff89eeab1a8de72f819"}" rel="${"nofollow"}">surge</a>
in new COVID-19 cases; surges that, in many instances, forced those
universities to
<a href="${"https://www.jsonline.com/story/news/education/2020/09/09/uw-madison-pauses-person-classes-two-weeks/5766409002/"}" rel="${"nofollow"}">reverse</a>
their
<a href="${"https://www.nytimes.com/2020/08/17/us/unc-chapel-hill-covid.html"}" rel="${"nofollow"}">reopening</a>
<a href="${"https://www.usnews.com/news/education-news/articles/2020-09-08/facing-coronavirus-spikes-colleges-send-students-home-against-the-warnings-of-public-health-officials"}" rel="${"nofollow"}">decisions</a>
within just a few weeks.</p>
<p>The table below presents cumulative university-affiliated COVID cases,
broken down by college (from the <a href="${"https://github.com/nytimes/covid-19-data/tree/master/colleges"}" rel="${"nofollow"}">New York
Times</a>):</p>
${validate_component(TableHandler, "TableHandler").$$render($$result, {
          src: "../images/post/covid-on-campus/table1.png",
          alt: "A table showcasing universities that have the greatest number of COVID-19 cases. University of Georgia leads the pack at 3888 cases. Last updated October 11, 2020",
          link: "http://connorrothschild.github.io/v2/post/covid-on-campus/",
          width: "80%"
        }, {}, {})}
<p>In addition to the criticism leveled against university administrators
for jeopardizing the health and safety of their <em>students</em>, to what
extent have reopenings put the community at large at greater risk?</p>
<p>One way to answer this question is to analyze case counts attributable
to university students as a relative proportion of a county\u2019s overall
case counts. The New York Times offers data in both forms:
<a href="${"https://github.com/nytimes/covid-19-data/tree/master/colleges"}" rel="${"nofollow"}">college-affiliated
cases</a>
and <a href="${"https://github.com/nytimes/covid-19-data/blob/master/live/us-counties.csv"}" rel="${"nofollow"}">county
cases</a>
(cumulative). In combination, the data tells a story about which
colleges are struggling the most with COVID-19, which college towns saw
a COVID spike after university reopenings, and which cities have
problems much larger than students throwing fraternity parties.</p>
<p>Below, you can explore your county\u2019s case count relative to its
university-affiliated case counts.</p>
${validate_component(TableHandler, "TableHandler").$$render($$result, {
          src: "../images/post/covid-on-campus/table2.png",
          alt: "A table showcasing counties that have the greatest number of COVID-19 cases attributable to colleges. Pickens, South Carolina is expanded, showcasing two universities which account for 105% of the county's total cases. Last updated October 11, 2020",
          link: "http://connorrothschild.github.io/v2/post/covid-on-campus/",
          width: "80%"
        }, {}, {})}
<p>In two counties, Otsego County (New York) and Pickens County (South
Carolina), university-affiliated COVID-19 case counts actually <em>outpace</em>
officially recorded COVID-19 cases in their respective counties. This
might signal an issue with the data, or a unique way of treating
university students in county-wide case counts. According to one of the
investigative reporters who recorded this data at the New York Times,
county-wide case totals might not include out-of-state residents, such
as college students:</p>
<blockquote class="${"twitter-tweet"}"><p lang="${"en"}" dir="${"ltr"}">Coronavirus infections on campuses might go unnoticed if not for reporting by academic institutions themselves because they do not always show up in official state or countywide tallies, which generally exclude people who have permanent addresses elsewhere, as students often do.</p>\u2014 Danielle Ivory (@danielle_ivory) <a href="${"https://twitter.com/danielle_ivory/status/1314597852782489602?ref_src=twsrc%5Etfw"}">October 9, 2020</a></blockquote>
<p>In other counties, we see a more intuitive picture, where college cases
constitute a proportion of overall county cases. Even if the same issue
is present in these counties, you can understand generally where
university COVID case counts are high relative to their county-wide
totals, and where they are not.</p>
<h3 id="${"university-affiliated-covid-cases-across-states"}"><a href="${"#university-affiliated-covid-cases-across-states"}">University-affiliated COVID cases across states</a></h3>
<p>The data also tells a story about COVID case counts on a state-by-state
basis, and where college-affiliated cases make up a disproportionate
share of cases in the state overall.</p>
<p>Geographically, the data looks like this (note the x-axis runs from 0 to
10%):</p>
${validate_component(Image, "Image").$$render($$result, {
          src: "../images/post/covid-on-campus/geofacet_processed.png",
          alt: "A geofaceted map that shows percent of COVID cases attributable to colleges, by US state. Each state ranges between 0 and 10% of total cases attributable to colleges."
        }, {}, {})}
<p>In the table below, you can search for your state and drill down on
which counties within your state make up the greatest share of COVID-19
cases.</p>
${validate_component(TableHandler, "TableHandler").$$render($$result, {
          src: "../images/post/covid-on-campus/table3.png",
          alt: "A table showcasing states that have the greatest number of COVID-19 cases attributable to colleges. Wyoming (number 1) is expanded, showcasing three universities which account for 7% of the state's total cases. Last updated October 11, 2020",
          link: "http://connorrothschild.github.io/v2/post/covid-on-campus/",
          width: "80%"
        }, {}, {})}
<p>Thanks for reading. You can find the code that creates the tables and
graphics for this post <a href="${"https://github.com/connorrothschild/v2/tree/master/content/post/covid-on-campus/index.Rmd"}" rel="${"nofollow"}">on
GitHub</a>.
As always, feel free to message me on
<a href="${"https://twitter.com/CL_Rothschild"}" rel="${"nofollow"}">Twitter</a> with any questions,
comments, or just to say hi \u{1F642}</p>`
      })}`;
    });
  }
});

// .svelte-kit/output/server/chunks/covid-posts-32b068ed.js
var covid_posts_32b068ed_exports = {};
__export(covid_posts_32b068ed_exports, {
  default: () => Covid_posts,
  metadata: () => metadata40
});
var import_bowser46, metadata40, Covid_posts;
var init_covid_posts_32b068ed = __esm({
  ".svelte-kit/output/server/chunks/covid-posts-32b068ed.js"() {
    init_shims();
    init_app_9f378dda();
    init_layout_ef610ed1();
    init_Image_8e30e86c();
    init_BackTo_d882ed88();
    init_global_130d3fe3();
    import_bowser46 = __toModule(require_es5());
    init_CornerTitle_6f993505();
    init_store_8bf23024();
    init_utils_09998264();
    init_IntersectionObserver_4cd4a541();
    metadata40 = {
      "layout": "blog",
      "title": "COVID-19 Posts: A Novel Dataset",
      "description": "Making hundreds of COVID-19 blog posts from the R community available for public use",
      "date": "2020-11-02",
      "image": "covid-posts/header.png",
      "archived": true,
      "tags": ["analysis", "r"]
    };
    Covid_posts = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return `${validate_component(Layout4, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata40), {}, {
        default: () => `<p>Over the last few months, we\u2019ve been collecting hundreds of COVID-19
blog posts from the R community. Today, we are excited to share this
dataset publicly, to help bloggers who want to analyze COVID-19 data by
unleashing R and the resources of its community by being able to
research such posts.</p>
<p>So far, we have found and recorded 423 COVID posts in English. In an
effort to encourage others to explore such posts, we\u2019ve published a <a href="${"https://connorrothschild.shinyapps.io/covid-posts/"}" target="${"_blank"}" rel="${"noopener noreferrer"}">Shiny web app</a>
which allow users to find the names of the 231 bloggers who wrote those
posts, their roles, and their country of focus. The app also lets users
interactively search the collection of posts by primary topic, post
title, date, and whether the post uses a particular mathematical
technique or data source. To learn more about the evolution of this
dataset, one of the authors (Rees) has published nine articles on
Medium, which you can find <a href="${"https://medium.com/@rees_32356"}" target="${"_blank"}" rel="${"noopener noreferrer"}">here</a>.</p>
<p>We encourage users to submit their own posts\u2013or others\u2019 posts\u2013for
inclusion, which can be done on this <a href="${"https://docs.google.com/forms/d/e/1FAIpQLScfob3uBoumXIRcSW83T0GhXCfi-KI_psGxIqtl_rQ5VHu9ZQ/viewform?usp=sf_link"}" target="${"_blank"}" rel="${"noopener noreferrer"}">Google Form</a>.
Our dataset, as well as the code for the Shiny app, is available on <a href="${"https://github.com/connorrothschild/covid-posts"}" target="${"_blank"}" rel="${"noopener noreferrer"}">GitHub</a>.
If anyone has corrections to the dataset, please write Rees (at)
ReesMorrison (dot) com.</p>
<p>The remainder of this post highlights some of the findings from the
dataset of COVID-19 posts. As will be made evident by the plots that
follow, this is by no means a comprehensive review of <em>every</em> COVID-19 R
blog post, but rather an overview of the data <em>that we have found</em>.</p>
<h3 id="${"posts-over-time"}"><a href="${"#posts-over-time"}">Posts over time</a></h3>
<p>As the pandemic has progressed, fewer bloggers have engaged with
COVID-related data, as we notice that blog posts peaked in March of 2020.</p>
${validate_component(Image, "Image").$$render($$result, {
          alt: "COVID-19 blog posts by week. There is a peak in mid March (40 posts).",
          src: "../images/post/covid-posts/weekly-1.png"
        }, {}, {})}
<p>Some bloggers have been prolific; many more have been one and done. The
plot below shows the names and posts of the 23 bloggers who have so far
published at least four posts. For an example of how to read the plot,
Tim Churches, at the bottom of the y-axis, has published a total of nine
posts, but none after early April.</p>
<p>The color of the points corresponds to the work role of the blogger as
explained in the legend at the bottom. It is immediately apparent that
professors and academic researchers predominate in this group of
bloggers. If you include the postgraduate students, universities writ
large account for nearly all of the prolific bloggers.</p>
${validate_component(Image, "Image").$$render($$result, {
          alt: "A dumbbell chart showcasing the timing of posts among 'prolific authors' (4 or more total posts). It shows temporally when these individuals post. ",
          src: "../images/post/covid-posts/prolificVer2-1.png"
        }, {}, {})}
<h3 id="${"roles-of-authors"}"><a href="${"#roles-of-authors"}">Roles of authors</a></h3>
<p>The bloggers in our dataset describe their work-day roles in a variety
of ways. One of the authors (Rees) standardized these job roles by
categorizing the multitude of terms and descriptions, but it is quite
possible that this effort misrepresented what some of these bloggers do
for a living. We welcome corrections.</p>
<p>We\u2019ve further categorized roles into a broad typology where professions
fall into one of five categories: <em>university</em>, <em>corporate</em>,
<em>professional</em>, <em>government</em>, and <em>nonprofit</em>. Those broader categories
are represented as columns in the following chart.</p>
${validate_component(Image, "Image").$$render($$result, {
          alt: "A barchart showcasing the roles of authors in our dataset. The most common is university (205) followed by corporate (140).",
          src: "../images/post/covid-posts/authorVer2-1.png"
        }, {}, {})}
<h3 id="${"data-sources"}"><a href="${"#data-sources"}">Data sources</a></h3>
<p>A greater number of data sources related to COVID-19 will yield richer
insights. Combining different datasets can shed new light on an issue,
yield improvements, and allow authors to contruct better indices and
measures. For that reason, one of the authors (Rees) extracted <em>dataset
information</em> from our collection of blog posts.</p>
<p>For the most part, bloggers identified the data source they drew on for
their analysis. On occasion, we had to apply some effort to standardize
the 140 data sources.</p>
<p>By far the most prevalent data source is Johns Hopkins University, who
early, comprehensively and consistently has set the standard for
COVID-19 data collection and dissemination to the public.</p>
${validate_component(Image, "Image").$$render($$result, {
          alt: "A barchart showcasing the most common data sources in our dataset. John Hopkins leads the pack at 51.",
          src: "../images/post/covid-posts/dataTable-1.png"
        }, {}, {})}
<p>Below, you can look at <em>all</em> data sources and how often they were
referenced in COVID-19 blog posts.</p>
<div class="${"table-container"}"><table><thead><tr><th align="${"left"}">Data Source</th>
<th align="${"right"}">Count</th></tr></thead>
<tbody><tr><td align="${"left"}">Johns Hopkins University</td>
<td align="${"right"}">51</td></tr>
<tr><td align="${"left"}">New York Times</td>
<td align="${"right"}">14</td></tr>
<tr><td align="${"left"}">Wikipedia</td>
<td align="${"right"}">13</td></tr>
<tr><td align="${"left"}">Apple Mobility</td>
<td align="${"right"}">8</td></tr>
<tr><td align="${"left"}">COVID Tracking Project</td>
<td align="${"right"}">8</td></tr>
<tr><td align="${"left"}">World Bank</td>
<td align="${"right"}">7</td></tr>
<tr><td align="${"left"}">European Centre for Disease Control (ECDC)</td>
<td align="${"right"}">6</td></tr>
<tr><td align="${"left"}">U.S. Census Bureau</td>
<td align="${"right"}">6</td></tr>
<tr><td align="${"left"}">Our World in Data</td>
<td align="${"right"}">5</td></tr>
<tr><td align="${"left"}">Twitter</td>
<td align="${"right"}">5</td></tr>
<tr><td align="${"left"}">Assessment Capacities Project (ACAPS)</td>
<td align="${"right"}">4</td></tr>
<tr><td align="${"left"}">COVID19 package</td>
<td align="${"right"}">4</td></tr></tbody></table></div>
<h3 id="${"blog-post-topics"}"><a href="${"#blog-post-topics"}">Blog post topics</a></h3>
<p>It may also be the case that readers want a summary of blogs, or to only
look at posts that pertain to a certain topic. Assigning each blog post
a primary topic introduces a fair amount of subjectivity, to be sure,
but the hope is that these broad topics will help researchers find
content and colleagues who share similar interests.</p>
<p>Here, a balloon plot shows various categories that the 423 posts address
as their primary topic. Topics fall on the y axis and the blogger\u2019s
category of employment is on the x axis. The size (and opacity) of each
bubble represents the count of posts that match that combination.
Epidemiology leads the way, as might be expected, but quite a few posts
seem to use COVID data to showcase something else, or apply R in novel
ways.</p>
${validate_component(Image, "Image").$$render($$result, {
          alt: "A balloon plot shows the number of posts by topic and employment category. The most common is university/epidemiology (107 posts).",
          src: "../images/post/covid-posts/topicsVer2-1.png"
        }, {}, {})}
<h2 id="${"concluding-thoughts"}"><a href="${"#concluding-thoughts"}">Concluding thoughts</a></h2>
<p>We encourage you to use our <a href="${"https://connorrothschild.shinyapps.io/covid-posts/"}" target="${"_blank"}" rel="${"noopener noreferrer"}">Shiny application</a>
to explore the data for yourself. If you\u2019d like to submit your post to
be included, fill out this <a href="${"https://docs.google.com/forms/d/e/1FAIpQLScfob3uBoumXIRcSW83T0GhXCfi-KI_psGxIqtl_rQ5VHu9ZQ/viewform?usp=sf_link"}" target="${"_blank"}" rel="${"noopener noreferrer"}">Google Form</a>.</p>
<p>As we note in the footer of the application, the R community is
intelligent and produces interesting content, but not all of us are
experts when it comes to COVID-19. Engaging with these posts will allow
you to better understand the application of R to our current moment, and
perhaps provide feedback to post authors. We do not endorse the findings
of any particular author and encourage you to find accurate, relevant,
and recent information from reputable sources such as the <a href="${"https://www.cdc.gov/"}" target="${"_blank"}" rel="${"noopener noreferrer"}">CDC</a> and the <a href="${"https://www.who.int/"}" target="${"_blank"}" rel="${"noopener noreferrer"}">WHO</a>.</p>
<p>As always, thanks for reading.</p>`
      })}`;
    });
  }
});

// .svelte-kit/output/server/chunks/do-something-else-1f16f77a.js
var do_something_else_1f16f77a_exports = {};
__export(do_something_else_1f16f77a_exports, {
  default: () => Do_something_else,
  metadata: () => metadata41
});
var import_bowser47, metadata41, Do_something_else;
var init_do_something_else_1f16f77a = __esm({
  ".svelte-kit/output/server/chunks/do-something-else-1f16f77a.js"() {
    init_shims();
    init_app_9f378dda();
    init_layout_ef610ed1();
    init_Image_8e30e86c();
    init_Info_43a233e8();
    init_BackTo_d882ed88();
    init_global_130d3fe3();
    import_bowser47 = __toModule(require_es5());
    init_CornerTitle_6f993505();
    init_store_8bf23024();
    init_utils_09998264();
    init_IntersectionObserver_4cd4a541();
    metadata41 = {
      "layout": "blog",
      "title": 'Feel Free to Do "Something Else" After Graduation',
      "description": "Finding meaningful work",
      "image": "adding-a-chart-to-your-d3-tooltip/header.png",
      "date": "2021-05-02",
      "draft": true,
      "tags": ["personal"]
    };
    Do_something_else = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return `${validate_component(Layout4, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata41), {}, {
        default: () => `<p><a href="${"https://angel.co/post/over-60-of-employees-are-happy-at-startups-far-outpacing-faang-and-msft"}" rel="${"nofollow"}">https://angel.co/post/over-60-of-employees-are-happy-at-startups-far-outpacing-faang-and-msft</a>
<a href="${"https://www.bizjournals.com/sanjose/news/2019/10/17/best-faang-companies-to-work-for-vs-startups.html"}" rel="${"nofollow"}">https://www.bizjournals.com/sanjose/news/2019/10/17/best-faang-companies-to-work-for-vs-startups.html</a>
<a href="${"https://ed.stanford.edu/news/stanford-education-study-provides-new-evidence-big-fish-little-pond-effect-students-globally"}" rel="${"nofollow"}">https://ed.stanford.edu/news/stanford-education-study-provides-new-evidence-big-fish-little-pond-effect-students-globally</a></p>
<p>I graduated college last week. I\u2019ve been thinking about what it means for a new graduate to find a career that they find <em>fulfilling</em>. In my view of things, it seems as if new grads\u2019 plans fall into one of a few categories, which you can usually split up by degree focus.</p>
<p><strong>Non-technical graduates</strong>:</p>
<ol><li>Big consulting (McKinsey, BCG, &amp; Bain, etc.)</li>
<li>Something else (fellowship, graduate school, journalism, government, etc.)</li></ol>
<p><strong>Technical graduates</strong>:</p>
<ol><li>Big tech (FAANG, etc.)</li>
<li>Something else (startup, civic tech, etc.)</li></ol>
<p>Is it reductive to categorize <em>all jobs</em> into these four categories? Check my LinkedIn feed, and you\u2019ll realize that enough graduates pursue the first option from each group (big consulting/big tech) that other jobs almost seem like an afterthought. (Apparently, <a href="${"https://medium.com/s/story/a-culture-of-prestige-98c8671ceade"}" rel="${"nofollow"}">~40% of Harvard grads</a> and <a href="${"https://yaledailynews.com/post/2019/11/01/mckinsey-and-the-fig-tree/"}" rel="${"nofollow"}">~29% of Yale grads</a> go into finance or consulting after college.)</p>
<p>Of course, these sets of options mirror one another. Most students who aren\u2019t set on a JD, PhD, or MD will ask themselves whether they want to pursue the safe, well-paying, \u201Cbig\u201D option after graduating, or something else. </p>
<p>When they do choose, there\u2019s not much enthusiasm\u2014it\u2019s a tradeoff. These bigger companies offer alluring signing bonuses, prestige, and exorbitant salaries. In return, they ask you to put up with longer-than-usual hours and more monotonous work.</p>
<p>I\u2019m writing about <em>taking the risk</em>\u2014doing the \u201Csomething else\u201D that isn\u2019t McKinsey or Microsoft. There\u2019s value in the something else, and I hope I can encourage you it\u2019s more than consolation, it\u2019s a career.</p>
${validate_component(Info, "Info").$$render($$result, {}, {}, {
          default: () => `<p>Please note that I\u2019m not dunking on my friends who take these impressive jobs, but instead writing to people who are doing something else, whether by their own choice or not. Microsoft friends, I love you</p>`
        })}
<h2 id="${"establishing-the-stakes"}"><a href="${"#establishing-the-stakes"}">Establishing the stakes</a></h2>
<p><strong>Work is the most important thing we do.</strong> Not in the late-capitalism/workaholic-father type of way, but in the sense that you spend the majority of your day doing it. Every (week)day, you spend between 8 and 10 hours on work, and so you <em>cannot overstate</em> how important work is. If you dislike your work, you\u2019re unlikely to enjoy your life.  All this to say, make the decisions you make about work <em>intentionally</em> and not because of pressure, prestige, or anything else.</p>
<h2 id="${"fulfillment"}"><a href="${"#fulfillment"}">Fulfillment</a></h2>
<p>In 2019, <a href="${"https://angel.co/"}" rel="${"nofollow"}">AngelList</a> and <a href="${"https://www.teamblind.com/"}" rel="${"nofollow"}">Blind</a> surveyed 11,000 employees across FAANG and various startups, asking about job satisfaction and the factors that influence it. Their findings? <strong>Employees at startups were much happier than their FAANG counterparts.</strong></p>
${validate_component(Image, "Image").$$render($$result, {
          src: "post/do-something-else/startup-faang-satisfaction.png",
          alt: "A bar graph showing higher rates of job satisfaction among startup employees compared to FAANG employees."
        }, {}, {})}
<p>Data on early-career consultants in non-technical fields is harder to come by, but generally employees are <a href="${"https://poetsandquants.com/2017/09/10/job-satisfaction-rates-at-top-consulting-firms/3/"}" rel="${"nofollow"}">relatively satisfied despite the long hours</a>. Many consultants, however, do quit their job and pursue <a href="${"https://hbr.org/2019/07/why-consultants-quit-their-jobs-to-go-independent"}" rel="${"nofollow"}">independent consulting</a>, where they tend to be <a href="${"https://www.consultancy.uk/news/12795/independent-management-consultants-are-happier-and-half-earn-more"}" rel="${"nofollow"}">happier</a>.</p>
<p>And so there might be a tradeoff between prestige and satisfaction within these high-profile organizations. Definitely in tech, and perhaps in other spaces, work can be <em>better paying</em> but <em>less fulfilling</em>.</p>
<p>There could be many reasons for this, but I suspect a large one is <strong>structure</strong>. Taking a job at a big tech or big consulting company means you\u2019re subject to their structure. More often than not, the organizations have narrowly defined roles due to their massive size. As such, you assume whatever role they give you, with perhaps a little wiggle room. Some like this scope of work. For others, it can be stifling. It can come at the expense of your creativity and feel as if you have little room to grow.</p>
<p>The \u201Csomething else\u201D jobs, by contrast, are probably more variegated. To feel fulfilled, I think a job needs two things: 1) work that is <em>in line with your passions</em>, and 2) work that is <em>commensurate with your capacity</em>.</p>
<h4 id="${"passion"}"><a href="${"#passion"}">Passion</a></h4>
<p>If you don\u2019t like the work you do, you won\u2019t feel fulfilled. If your values don\u2019t align with the mission of your organization, you feel tension at work. When graduating seniors talk about post-grad plans, they sometimes mention \u201Cselling their soul\u201D to work for organizations that they disagree with. (E.g. graduates working for McKinsey after news broke of their <a href="${"https://www.nytimes.com/2019/12/03/us/mckinsey-ICE-immigration.html"}" rel="${"nofollow"}">partnerships with ICE</a>, or working for Facebook amidst one of their many controversies.)</p>
<p>It\u2019s totally fine to disagree with some of the values of your employer. Many do it their entire life. But wouldn\u2019t it be nice to be passionate about the work you do on a daily basis? The \u201Csomething else\u201D jobs offer this kind of relief; depending on <em>what</em> you pursue, you can find a job that not only aligns with, but strengthens, your existing passions.</p>
<h4 id="${"capacity"}"><a href="${"#capacity"}">Capacity</a></h4>
<p>But perhaps the bigger component of fulfillment, on a day-to-day basis, is how challenged you are by your work. Material success and external validation make you feel good, but work has to be sufficiently <em>intellectually stimulating</em> to make you feel fulfilled on a daily basis.</p>
<p>The problem is, big consulting and big tech companies <strong>necessarily</strong> constrain the work you do to better meet the needs of their organization. Rarely can you work in such a behemoth of an organization and also do work that lines up well with your skillset, capacity, and interests. </p>
<p>As an incoming entry-level employee at Microsoft, you join 144,000 other employees. The organization is structured hierarchically, and you assume the role that you\u2019re given. Is there some level of matching at play? Definitely. But are you able to apply yourself as you would in a personal project, or as you could in a smaller, less rigid organization? Definitely not. </p>
<p>As an incoming entry-level employee at McKinsey, share a similar experience. Your job infamously requires you to travel often, sit through countless meetings, and work long hours. Peers in these positions joke about how their job responsibilities are 1) sending emails, 2) sitting through meetings, and 3) designing PowerPoints.</p>
<p>In both of these contexts, you have this much capacity and competence:</p>
<progress style="${"width: 80%;"}" value="${"100"}" max="${"100"}"></progress>
<p>But larger companies hire you <em>so that you can exercise this much of it</em>:</p>
<progress style="${"width: 80%;"}" value="${"30"}" max="${"100"}"></progress>
<p>To make matters worse, we start working in these rigid organizations right after we graduate, which (for most people) is the <em>most exhilarating, unique, and stimulting experience of our lives</em>. We\u2019re familiar with challenging work (often too challenging), and so the contrast between college and work becomes even more stark. </p>
<h2 id="${"conclusion"}"><a href="${"#conclusion"}">Conclusion</a></h2>
<p><em>Searching for jobs is stressful.</em> When we\u2019re anxious about where we\u2019ll be after graduation, the prospect of earning six figures with a hefty signing bonus is an appealing one. But how often does this mean exchanging passion, creativity &amp; fulfillment for money &amp; status?</p>
<p><strong>Please don\u2019t be scared to do \u201Csomething else.\u201D</strong> Find the job that makes you tick, even if its risky. Work is the most important thing we do, and if it <em>can be</em> fulfilling, make it so! </p>
<hr>
<h1 id="${"counterarguments"}"><a href="${"#counterarguments"}">Counterarguments</a></h1>
<p>Here are some valid counterarguments to my thinking:</p>
<h3 id="${"consultants-like-their-jobs"}"><a href="${"#consultants-like-their-jobs"}">Consultants like their jobs</a></h3>
<ul><li>A <a href="${"https://www.ft.com/content/2cc98fb4-049d-11e1-ac2a-00144feabdc0"}" rel="${"nofollow"}">2011 survey</a> from the Management Consultancies Association found that two thirds of young consultants ranked their job satisfaction as \u201Cgood\u201D or \u201Cvery good.\u201D</li>
<li>There seems to be great heterogeneity in job satisfaction; <a href="${"https://poetsandquants.com/2017/09/10/job-satisfaction-rates-at-top-consulting-firms/3/"}" rel="${"nofollow"}">Wall Street Oasis data</a> has McKinsey with a remarkable 98.6/100, compared to the lowest at Chatham Financial, with 57.7. (I have no idea what their methodology is.)</li></ul>
<h3 id="${"consultantsbig-tech-employees-are-only-there-for-a-short-period-of-time"}"><a href="${"#consultantsbig-tech-employees-are-only-there-for-a-short-period-of-time"}">Consultants/big tech employees are only there for a short period of time</a></h3>
<p>Many recent graduates </p>
<h3 id="${"something-else-jobs-arent-well-paying-enough"}"><a href="${"#something-else-jobs-arent-well-paying-enough"}">\u201CSomething else\u201D jobs aren\u2019t well-paying enough</a></h3>
<h1 id="${"appendix"}"><a href="${"#appendix"}">Appendix</a></h1>
<p>Consultants work <em>so much</em>. From <a href="${"https://poetsandquants.com/2017/09/10/job-satisfaction-rates-at-top-consulting-firms/3/"}" rel="${"nofollow"}">Poets and Quants</a>:</p>
<table><thead><tr><th>Firm</th>
<th>Average Weekly Hours Worked</th></tr></thead>
<tbody><tr><td>EVA Dimensions</td>
<td>75.0</td></tr>
<tr><td>Teneo</td>
<td>72.5</td></tr>
<tr><td>Galt and Company</td>
<td>70.0</td></tr>
<tr><td>McKinsey &amp; Co.</td>
<td>68.8</td></tr>
<tr><td>Strategy&amp;</td>
<td>67.2</td></tr>
<tr><td>Keystone Strategy</td>
<td>65.0</td></tr>
<tr><td>Bain &amp; Co.</td>
<td>64.7</td></tr>
<tr><td>Oliver Wyman</td>
<td>64.6</td></tr>
<tr><td>The Parthenon Group</td>
<td>63.9</td></tr>
<tr><td>BCG</td>
<td>63.6</td></tr>
<tr><td>A.T. Kearney</td>
<td>63.0</td></tr>
<tr><td>Mars &amp; Co.</td>
<td>63.0</td></tr>
<tr><td>LEK Consulting</td>
<td>62.6</td></tr>
<tr><td>OCC Strategy Consultants</td>
<td>62.5</td></tr>
<tr><td>Arthur D. Little</td>
<td>62.5</td></tr>
<tr><td>Roland Berger Strategy Consultants</td>
<td>62.0</td></tr>
<tr><td>The Cambridge Group</td>
<td>61.7</td></tr>
<tr><td>IMS Consulting Group</td>
<td>60.7</td></tr>
<tr><td>Public Consulting Group</td>
<td>60.0</td></tr>
<tr><td>Crowe Horwath</td>
<td>60.0</td></tr>
<tr><td>Simon Kucher Partners</td>
<td>60.0</td></tr>
<tr><td>Corporate Value Associates</td>
<td>60.0</td></tr>
<tr><td>Parthenon Group-EY</td>
<td>58.3</td></tr>
<tr><td>The Brattle Group</td>
<td>58.3</td></tr>
<tr><td>Innosight</td>
<td>58.3</td></tr>
<tr><td>Marakon</td>
<td>57.5</td></tr>
<tr><td>Accenture</td>
<td>55.8</td></tr>
<tr><td>ZS Associates</td>
<td>55.6</td></tr>
<tr><td>Deloitte</td>
<td>55.5</td></tr>
<tr><td>PwC</td>
<td>55.5</td></tr></tbody></table>
`
      })}`;
    });
  }
});

// .svelte-kit/output/server/chunks/dumbbell-plots-da9731c3.js
var dumbbell_plots_da9731c3_exports = {};
__export(dumbbell_plots_da9731c3_exports, {
  default: () => Dumbbell_plots,
  metadata: () => metadata42
});
var import_bowser48, metadata42, Dumbbell_plots;
var init_dumbbell_plots_da9731c3 = __esm({
  ".svelte-kit/output/server/chunks/dumbbell-plots-da9731c3.js"() {
    init_shims();
    init_app_9f378dda();
    init_layout_ef610ed1();
    init_Image_8e30e86c();
    init_BackTo_d882ed88();
    init_global_130d3fe3();
    import_bowser48 = __toModule(require_es5());
    init_CornerTitle_6f993505();
    init_store_8bf23024();
    init_utils_09998264();
    init_IntersectionObserver_4cd4a541();
    metadata42 = {
      "layout": "blog",
      "title": "Create Dumbbell Plots to Visualize Group Differences in R",
      "description": "How to create dumbbell plots in R, using {ggalt}",
      "date": "2020-03-02",
      "image": "dumbbell-plots/header.png",
      "archived": true,
      "tags": ["r", "tutorial"]
    };
    Dumbbell_plots = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return `${validate_component(Layout4, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata42), {}, {
        default: () => `${validate_component(Image, "Image").$$render($$result, {
          alt: "A dumbbell plot depicting in-group differences between Republicans and Democrats' worry about the Coronavirus. It shows that Republicans are less worried than Democrats. The question text survey respondents answered is 'How concerned are you that you or someone you know will be infected with the Coronavirus?'",
          src: "../images/post/dumbbell-plots/featured.jpg"
        }, {}, {})}
<p>As of this writing, nearly <a href="${"https://www.worldometers.info/coronavirus/coronavirus-death-toll/"}" rel="${"nofollow"}">6000</a> people have died of COVID-19 and another <a href="${"https://www.worldometers.info/coronavirus/coronavirus-death-toll/"}" rel="${"nofollow"}">150,000</a> have been infected. All signs seem to show that the virus is only growing.</p>
<p>But some groups are less worried about COVID-19 than others. Recent <a href="${"https://poll.qu.edu/national/release-detail?ReleaseID=3657#.XmaSrM7okEs.twitter"}" rel="${"nofollow"}">polling</a> from Quinnipiac University suggests that worries about the coronavirus are related to one\u2019s partisan identity, age, and race.</p>
<p>Let\u2019s visualize that to see just how stark the differences are. I use dumbbell dot plots because they\u2019re some of the most powerful tools for visualizing differences between two groups (e.g. Republicans and Democrats).</p>
<h2 id="${"political-affiliation"}"><a href="${"#political-affiliation"}">Political affiliation</a></h2>
<p>Republicans tend to be significantly less worried about coronavirus than Democrats. This is true in two regards. First, with respect to <em>concern for becoming infected</em>:</p>
${validate_component(Image, "Image").$$render($$result, {
          alt: "A dumbbell plot depicting in-group differences between Republicans and Democrats' worry about the Coronavirus. It shows that Republicans are less worried than Democrats. The question text survey respondents answered is 'How concerned are you that you or someone you know will be infected with the Coronavirus?'",
          src: "../images/post/dumbbell-plots/partisan-worry.jpg"
        }, {}, {})}
<p>It\u2019s also true when we look at concern than COVID-19 will <em>disrupt an individual\u2019s life</em>:</p>
${validate_component(Image, "Image").$$render($$result, {
          alt: "A dumbbell plot depicting in-group differences between Republicans and Democrats' worry about the Coronavirus. It shows that Republicans are less worried than Democrats. The question text survey respondents answered is 'How concerned are you that the coronavirus will disrupt your daily life?'",
          src: "../images/post/dumbbell-plots/partisan-disrupt.jpg"
        }, {}, {})}
<p>Looking at the first plot, we notice that Republicans are <strong>3x more likely</strong> than Democrats to say that they are \u2019not concerned at all\u2019 by the prospect of coronavirus infecting them or someone they know. By contrast, Democrats are nearly <strong>3x as likely</strong> as Republicans to say that they are \u2018very concerned\u2019 by the same risk.</p>
<p>The second plot shows us similar trends for fears of disruption: 3 in 4 Democrats are concerned (very or somewhat) that COVID-19 will disrupt their daily lives, compared to only 38% of Republicans. While 26% of Democrats are not worried about disruption, the same is true for 61% of Republicans.</p>
<h2 id="${"age"}"><a href="${"#age"}">Age</a></h2>
<p>There is also a relationship between age and fears related to the coronavirus.</p>
${validate_component(Image, "Image").$$render($$result, {
          alt: "A dumbbell plot depicting in-group differences between different age groups' worry about the Coronavirus. It shows that older respondents are more concerned than younger ones. The question text survey respondents answered is 'How concerned are you that you or someone you know will be infected with the Coronavirus?'",
          src: "../images/post/dumbbell-plots/age-disrupt.jpg"
        }, {}, {})}
${validate_component(Image, "Image").$$render($$result, {
          alt: "A dumbbell plot depicting in-group differences between different age groups' worry about the Coronavirus. It shows that older respondents are more concerned than younger ones. The question text survey respondents answered is 'How concerned are you that you or someone you know will be infected with the Coronavirus?'",
          src: "../images/post/dumbbell-plots/age-worry.jpg"
        }, {}, {})}
<p>These plots show that there are significant differences in worry by age, but that fears of disruption are felt more universally than fears of infection. The first plot shows that <em>every age group</em> fears that COVID-19 will disrupt their daily lives; although younger people express this sentiment less frequently. The second plot <strong>the majority of people under age 50 are unconcerned by the prospect of COVID-19 infection</strong>. The opposite is true for older respondents; those aged 65 years and old are <strong>significantly</strong> more likely to be concerned by the risk of infection (62% vs 37%).</p>
<h2 id="${"why-dumbbell-plots"}"><a href="${"#why-dumbbell-plots"}">Why dumbbell plots?</a></h2>
<p>Dumbbell plots are an alternative to grouped barcharts. Like barcharts, they show differences between populations and they more powerfully represent the <em>distances between two groups</em>. They are frequently used by survey research firms such as the Pew Research Center, as seen in this <a href="${"https://twitter.com/pewresearch/status/1238345807348334593/photo/1"}" rel="${"nofollow"}">example</a>:</p>
${validate_component(Image, "Image").$$render($$result, {
          alt: "A dumbbell plot from the Pew Research Center, showcasing perceived importance of US military bases by the age of the respondent; older folks think overseas bases are more important.",
          src: "../images/post/dumbbell-plots/pew.jpg"
        }, {}, {})}
<p>While a barchart would require eight bars to visualize each datapoint above, a dumbbell dot plot shows eight dots <em>on four lines</em>, reducing clutter and emphasizing the differences <em>between groups</em>.</p>
<p>Here\u2019s another example, this time from <a href="${"https://www.axios.com/trumps-disapproval-rate-is-up-in-every-state-2495232720.html?utm_source=twitter&utm_medium=social&utm_campaign=organic&utm_content=infographic&utm_term=politics"}" rel="${"nofollow"}">Axios</a> (visualizing changes in presidential disapproval between January and October 2017):</p>
${validate_component(Image, "Image").$$render($$result, {
          alt: "A dumbbell plot from Axios, which showcases changes in approval ratings between January and October 2017, by state. Most states have become more disapproving of the President.",
          src: "../images/post/dumbbell-plots/axios.jpg"
        }, {}, {})}
<p>This pseudo-dumbbell plot (dumbbells with weird endpoints; don\u2019t pick up that side!) has 50 \u2018groups\u2019 (US states), but only two <em>outcomes</em> (January and October). A dumbbell plot is <em>far</em> superior to a grouped bar chart in this case because it emphasizes the difference is between two periods of time, and it does so with fewer objects (50 lines rather than 100 bars) than a barchart would use.</p>
<p>One key lesson from the examples above: If the <em>comparison</em> of interest is between two groups (e.g. Republicans and Democrats), or if the <em>outcome</em> of interest is two-fold (e.g. \u2018concerned\u2019 and \u2018not concerned\u2019), dot plots are a superior way to visualize your data.</p>
<h2 id="${"lets-make-it-in-r"}"><a href="${"#lets-make-it-in-r"}">Let\u2019s make it in R!</a></h2>
<p>Now it\u2019s time to make your own dumbbell dot plot. We\u2019ll be creating this viz:</p>
${validate_component(Image, "Image").$$render($$result, {
          alt: "A dumbbell plot depicting in-group differences between Republicans and Democrats' worry about the Coronavirus. It shows that Republicans are less worried than Democrats. The question text survey respondents answered is 'How concerned are you that you or someone you know will be infected with the Coronavirus?'",
          src: "../images/post/dumbbell-plots/partisan-worry.jpg"
        }, {}, {})}
<p>For reference, the data I\u2019m using looks like this:</p>
${validate_component(Image, "Image").$$render($$result, {
          alt: "A dumbbell plot depicting in-group differences between Republicans and Democrats' worry about the Coronavirus. It shows that Republicans are less worried than Democrats. The question text survey respondents answered is 'How concerned are you that the coronavirus will disrupt your daily life?'",
          src: "../images/post/dumbbell-plots/partisan-disrupt.jpg"
        }, {}, {})}
<p>Pretty simple, right? <a href="${"https://poll.qu.edu/national/release-detail?ReleaseID=3657#.XmaSrM7okEs.twitter"}" rel="${"nofollow"}">It comes from here, by the way.</a></p>
<p>The process relies on Bob Rudis\u2019s <code>ggalt</code> package and the <code>geom_dumbbell</code> function, which does most of the heavy lifting. This tutorial is mostly a step-by-step recreation of Rudis\u2019s code <a href="${"https://rud.is/b/2016/04/17/ggplot2-exercising-with-ggalt-dumbbells/"}" rel="${"nofollow"}">found here</a>.</p>
<p>For convenience, let\u2019s define a few things before we get started:</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">blue <span class="token operator">&lt;-</span> <span class="token string">"#0171CE"</span>
red <span class="token operator">&lt;-</span> <span class="token string">"#DE4433"</span></code>`}<!-- HTML_TAG_END --></pre>
<p>In addition to the colors, we create a hack-y function which allows us to selectively label points (thanks to Bob Rudis for <a href="${"https://rud.is/b/2016/04/17/ggplot2-exercising-with-ggalt-dumbbells/"}" rel="${"nofollow"}">this</a>, again):</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">percent_first <span class="token operator">&lt;-</span> <span class="token keyword">function</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  x <span class="token operator">&lt;-</span> sprintf<span class="token punctuation">(</span><span class="token string">"%d%%"</span><span class="token punctuation">,</span> round<span class="token punctuation">(</span>x<span class="token operator">*</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  x<span class="token punctuation">[</span><span class="token number">2</span><span class="token operator">:</span>length<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">&lt;-</span> sub<span class="token punctuation">(</span><span class="token string">"%$"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> x<span class="token punctuation">[</span><span class="token number">2</span><span class="token operator">:</span>length<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  x
<span class="token punctuation">&#125;</span></code>`}<!-- HTML_TAG_END --></pre>
<h3 id="${"step-1-barebones"}"><a href="${"#step-1-barebones"}">Step 1: Barebones</a></h3>
<p>We begin with a basic <code>ggplot</code> object. In <code>geom_segment</code>, we define the pseudo-grid lines (one for each \u2018level\u2019 of concern).</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">library<span class="token punctuation">(</span>ggplot2<span class="token punctuation">)</span>
library<span class="token punctuation">(</span>ggalt<span class="token punctuation">)</span>
library<span class="token punctuation">(</span>tidyverse<span class="token punctuation">)</span>

ggplot<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  geom_segment<span class="token punctuation">(</span>data<span class="token operator">=</span>infected<span class="token punctuation">,</span> aes<span class="token punctuation">(</span>y<span class="token operator">=</span>concerned<span class="token punctuation">,</span> yend<span class="token operator">=</span>concerned<span class="token punctuation">,</span> x<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> xend<span class="token operator">=</span><span class="token number">.5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
               color<span class="token operator">=</span><span class="token string">"#b2b2b2"</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">0.15</span><span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Here, <code>geom_segment</code> creates grey lines with a size of 0.15. The lines span from 0 to 0.5. This changes according to your data; because the largest number we are dealing with is .43 (representing 43% of Democrats), our bound on the right side can be 0.5; this also leaves room for the difference column which we create later.</p>
${validate_component(Image, "Image").$$render($$result, {
          alt: "A blank canvas with only plot bounds.",
          src: "../images/post/dumbbell-plots/process-0.jpg"
        }, {}, {})}
<p>Then, <code>geom_dumbbell</code> reads in our data and creates the dumbbells: we specify the <em>beginning</em> (<code>x</code>) of each dumbbell to represent Republicans and the <em>end</em> (<code>xend</code>) to correspond to Democrats. Other specifications affect the accompanying line and points.</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">geom_dumbbell<span class="token punctuation">(</span>data<span class="token operator">=</span>infected<span class="token punctuation">,</span> aes<span class="token punctuation">(</span>y<span class="token operator">=</span>concerned<span class="token punctuation">,</span> x<span class="token operator">=</span>rep<span class="token punctuation">,</span> xend<span class="token operator">=</span>dem<span class="token punctuation">)</span><span class="token punctuation">,</span>
                           size<span class="token operator">=</span><span class="token number">1.5</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">"#b2b2b2"</span><span class="token punctuation">,</span> size_x<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> size_xend <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">,</span>
                           colour_x <span class="token operator">=</span> red<span class="token punctuation">,</span> colour_xend <span class="token operator">=</span> blue<span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
<p>That code creates the following plot:</p>
${validate_component(Image, "Image").$$render($$result, {
          alt: "Four lines appear, each corresponding to the level of concern. The end of each line (signified with a blue or red dot) represents Democrats' and Republicans' level of concern. The x axis is percentage of respondents.",
          src: "../images/post/dumbbell-plots/process-1.jpg"
        }, {}, {})}
<p>Already, we can begin to see the barebones for the finished version: each dumbbell represents a level of concern, and visualizes Republicans and Democrats\u2019 proportions for that level.</p>
<h3 id="${"step-2-labels"}"><a href="${"#step-2-labels"}">Step 2: Labels</a></h3>
<p>The next step is creating the \u201CRepublican\u201D and \u201CDemocrat\u201D labels (in case colors aren\u2019t enough, or the image is seen in black and white!).</p>
<p>We can create labels with the following code:</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">geom_text<span class="token punctuation">(</span>data<span class="token operator">=</span>filter<span class="token punctuation">(</span>infected<span class="token punctuation">,</span> concerned<span class="token operator">==</span><span class="token string">"Very concerned"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
          aes<span class="token punctuation">(</span>x<span class="token operator">=</span>dem<span class="token punctuation">,</span> y<span class="token operator">=</span>concerned<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">"Democrats"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
          color<span class="token operator">=</span>blue<span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> vjust<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1.5</span><span class="token punctuation">,</span> fontface<span class="token operator">=</span><span class="token string">"bold"</span><span class="token punctuation">,</span> family<span class="token operator">=</span><span class="token string">"Lato"</span><span class="token punctuation">)</span> <span class="token operator">+</span>
geom_text<span class="token punctuation">(</span>data<span class="token operator">=</span>filter<span class="token punctuation">(</span>infected<span class="token punctuation">,</span> concerned<span class="token operator">==</span><span class="token string">"Very concerned"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
          aes<span class="token punctuation">(</span>x<span class="token operator">=</span>rep<span class="token punctuation">,</span> y<span class="token operator">=</span>concerned<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">"Republicans"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
          color<span class="token operator">=</span>red<span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> vjust<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1.5</span><span class="token punctuation">,</span> fontface<span class="token operator">=</span><span class="token string">"bold"</span><span class="token punctuation">,</span> family<span class="token operator">=</span><span class="token string">"Lato"</span><span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
<p>This code is hopefully quite intuitive. Since we are only showing the labels once, we specify a filter in the <code>data</code> argument of <code>geom_text</code>. If we instead wanted to show the labels for only the bottom level of concern, we would specify <code>data=filter(infected, concerned==&quot;Not concerned at all\u201D)</code>.</p>
<p>We label each point at its respective political affiliation, and we specify color according to the point color. The rest is just minor beautification for the text.</p>
${validate_component(Image, "Image").$$render($$result, {
          alt: "In addition to the prior plot, there are now labels appended for each party.",
          src: "../images/post/dumbbell-plots/process-2.jpg"
        }, {}, {})}
<p>We also have to add direct labels for values, so that the exact percentages for each group are clear:</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">geom_text<span class="token punctuation">(</span>data<span class="token operator">=</span>infected<span class="token punctuation">,</span> aes<span class="token punctuation">(</span>x<span class="token operator">=</span>rep<span class="token punctuation">,</span> y<span class="token operator">=</span>concerned<span class="token punctuation">,</span> label<span class="token operator">=</span>percent_first<span class="token punctuation">(</span>rep<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
          color<span class="token operator">=</span>red<span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">2.75</span><span class="token punctuation">,</span> vjust<span class="token operator">=</span><span class="token number">2.5</span><span class="token punctuation">,</span> family<span class="token operator">=</span><span class="token string">"Lato"</span><span class="token punctuation">)</span> <span class="token operator">+</span>
geom_text<span class="token punctuation">(</span>data<span class="token operator">=</span>infected<span class="token punctuation">,</span> color<span class="token operator">=</span>blue<span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">2.75</span><span class="token punctuation">,</span> vjust<span class="token operator">=</span><span class="token number">2.5</span><span class="token punctuation">,</span> family<span class="token operator">=</span><span class="token string">"Lato"</span><span class="token punctuation">,</span>
          aes<span class="token punctuation">(</span>x<span class="token operator">=</span>dem<span class="token punctuation">,</span> y<span class="token operator">=</span>concerned<span class="token punctuation">,</span> label<span class="token operator">=</span>percent_first<span class="token punctuation">(</span>dem<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Here, we utilize the function <code>percent_first</code> we defined earlier, because we only want percentages to appear on the first numbers (to reduce clutter). The rest of the labels are just numbers which represent percentages. The syntax here is simple syntax that should be familiar to <code>ggplot</code> users. It creates this output:</p>
${validate_component(Image, "Image").$$render($$result, {
          alt: "In addition to the prior plot, there are now direct labels for the percent of respondents represented by each point.",
          src: "../images/post/dumbbell-plots/process-3.jpg"
        }, {}, {})}
<h3 id="${"step-3-a-differences-column"}"><a href="${"#step-3-a-differences-column"}">Step 3: A differences column</a></h3>
<p>Finally, we want to help our viewers see <em>how stark</em> the differences between Democrats and Republicans really is. We do so with a differences column.</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">geom_rect<span class="token punctuation">(</span>data<span class="token operator">=</span>infected<span class="token punctuation">,</span> aes<span class="token punctuation">(</span>xmin<span class="token operator">=</span><span class="token number">.5</span><span class="token punctuation">,</span> xmax<span class="token operator">=</span><span class="token number">.6</span><span class="token punctuation">,</span> ymin<span class="token operator">=</span><span class="token operator">-</span><span class="token number">Inf</span><span class="token punctuation">,</span> ymax<span class="token operator">=</span><span class="token number">Inf</span><span class="token punctuation">)</span><span class="token punctuation">,</span> fill<span class="token operator">=</span><span class="token string">"grey"</span><span class="token punctuation">)</span> <span class="token operator">+</span>
geom_text<span class="token punctuation">(</span>data<span class="token operator">=</span>infected<span class="token punctuation">,</span> aes<span class="token punctuation">(</span>label<span class="token operator">=</span>paste0<span class="token punctuation">(</span>diff<span class="token operator">*</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">"%"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> y<span class="token operator">=</span>concerned<span class="token punctuation">,</span> x<span class="token operator">=</span><span class="token number">.55</span><span class="token punctuation">)</span><span class="token punctuation">,</span> fontface<span class="token operator">=</span><span class="token string">"bold"</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> family<span class="token operator">=</span><span class="token string">"Lato"</span><span class="token punctuation">)</span> <span class="token operator">+</span>
geom_text<span class="token punctuation">(</span>data<span class="token operator">=</span>filter<span class="token punctuation">(</span>infected<span class="token punctuation">,</span> concerned<span class="token operator">==</span><span class="token string">"Very concerned"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            aes<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token number">.55</span><span class="token punctuation">,</span> y<span class="token operator">=</span>concerned<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">"Difference"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            color<span class="token operator">=</span><span class="token string">"black"</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">3.1</span><span class="token punctuation">,</span> vjust<span class="token operator">=</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> fontface<span class="token operator">=</span><span class="token string">"bold"</span><span class="token punctuation">,</span> family<span class="token operator">=</span><span class="token string">"Lato"</span><span class="token punctuation">)</span> <span class="token operator">+</span>
scale_x_continuous<span class="token punctuation">(</span>expand<span class="token operator">=</span>c<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> limits<span class="token operator">=</span>c<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">.625</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
scale_y_discrete<span class="token punctuation">(</span>expand<span class="token operator">=</span>c<span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Here, we first create a grey rectangle with <code>geom_rect</code>. It spans the entire chart vertically, hence why <code>ymin</code> and <code>ymax</code> range from negative to positive infinity. Next, we create labels according to the differences column. We position each of them according to the degree of concern (our y-axis). Finally, we expand the bounds of the chart so its a bit prettier:</p>
${validate_component(Image, "Image").$$render($$result, {
          alt: "In addition to the prior plot, there is now a 'differences' column which has the difference between Republican and Democrat proportions added as a percent.",
          src: "../images/post/dumbbell-plots/process-4.jpg"
        }, {}, {})}
<h3 id="${"step-4-titles-labels--captions"}"><a href="${"#step-4-titles-labels--captions"}">Step 4: Titles, labels &amp; captions</a></h3>
<p>Finally, let\u2019s add our title, subtitle, caption, and axis labels:</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">labs<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token keyword">NULL</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token keyword">NULL</span><span class="token punctuation">,</span> title<span class="token operator">=</span><span class="token string">"Republicans are less worried about COVID-19"</span><span class="token punctuation">,</span>
       subtitle<span class="token operator">=</span>"How concerned are you that you or someone
								 you know will be infected with the coronavirus?"<span class="token punctuation">,</span>
       caption<span class="token operator">=</span>"Source<span class="token operator">:</span> Quinnipiac University Poll<span class="token punctuation">,</span> March <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">2020.</span> Q27
								&#92;n&#92;nDesign<span class="token operator">:</span> Connor Rothschild"<span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
${validate_component(Image, "Image").$$render($$result, {
          alt: "In addition to the prior plot, there are now axis labels and a title.",
          src: "../images/post/dumbbell-plots/process-5.jpg"
        }, {}, {})}
<p>That\u2019s our plot! Too bad its kinda ugly. Let\u2019s fix that in our final step.</p>
<h3 id="${"step-5-beautification"}"><a href="${"#step-5-beautification"}">Step 5: Beautification</a></h3>
<p>Beautification occurs using the <code>theme</code> argument.</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">theme_bw<span class="token punctuation">(</span>base_family<span class="token operator">=</span><span class="token string">"Lato"</span><span class="token punctuation">)</span> <span class="token operator">+</span>
theme<span class="token punctuation">(</span>
  panel.grid.major<span class="token operator">=</span>element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  panel.grid.minor<span class="token operator">=</span>element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  panel.border<span class="token operator">=</span>element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  axis.ticks<span class="token operator">=</span>element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  axis.text.x<span class="token operator">=</span>element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  plot.title<span class="token operator">=</span>element_text<span class="token punctuation">(</span>size <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">,</span> face<span class="token operator">=</span><span class="token string">"bold"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  plot.title.position <span class="token operator">=</span> <span class="token string">"plot"</span><span class="token punctuation">,</span>
  plot.subtitle<span class="token operator">=</span>element_text<span class="token punctuation">(</span>face<span class="token operator">=</span><span class="token string">"italic"</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">,</span> margin<span class="token operator">=</span>margin<span class="token punctuation">(</span>b<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  plot.caption<span class="token operator">=</span>element_text<span class="token punctuation">(</span>size<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">,</span> margin<span class="token operator">=</span>margin<span class="token punctuation">(</span>t<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">"#7a7d7e"</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
<p>After specifying our base <code>ggplot</code> theme, <code>theme_bw</code>, we use <code>theme()</code> to specify a whole host of arguments.</p>
<p>To simplify, the above code:</p>
<ul><li>Removes grid lines (<code>panel.grid.major</code>, <code>panel.grid.minor</code>)</li>
<li>Removes the panel border (<code>panel.border</code>)</li>
<li>Removes axis ticks and axis text (<code>axis.ticks</code>, <code>axis.text.x</code>)</li>
<li>Positions the axis plot, subtitle, and caption, and styles them as well (<code>plot.title</code>, <code>plot.title.position</code>,<code>plot.subtitle</code>,<code>plot.caption</code>).</li></ul>
<p>Our final output:</p>
${validate_component(Image, "Image").$$render($$result, {
          alt: "Stylization is added to the chart. There is now a white background, Lato font, and better typography rules are followed.",
          src: "../images/post/dumbbell-plots/process-6.jpg"
        }, {}, {})}
<h2 id="${"to-summarize"}"><a href="${"#to-summarize"}">To summarize</a></h2>
<p>Our process looked like this:</p>
${validate_component(Image, "Image").$$render($$result, {
          alt: "A GIF showcasing the prior six steps outlined in this blog post; the GIF shows the chart going from a blank canvas to a full visual.",
          src: "../images/post/dumbbell-plots/process-gif.gif"
        }, {}, {})}
<p>The code for the above visualizations, as well as the underlying datasets and outputs, can be found <a href="${"https://github.com/connorrothschild/R/tree/master/covid"}" rel="${"nofollow"}">here</a>.</p>
<p>Thanks for reading!</p>`
      })}`;
    });
  }
});

// .svelte-kit/output/server/chunks/economist-table-replication-using-reactable-d59c42a0.js
var economist_table_replication_using_reactable_d59c42a0_exports = {};
__export(economist_table_replication_using_reactable_d59c42a0_exports, {
  default: () => Economist_table_replication_using_reactable,
  metadata: () => metadata43
});
var import_bowser49, metadata43, Economist_table_replication_using_reactable;
var init_economist_table_replication_using_reactable_d59c42a0 = __esm({
  ".svelte-kit/output/server/chunks/economist-table-replication-using-reactable-d59c42a0.js"() {
    init_shims();
    init_app_9f378dda();
    init_layout_ef610ed1();
    init_Image_8e30e86c();
    init_BackTo_d882ed88();
    init_global_130d3fe3();
    import_bowser49 = __toModule(require_es5());
    init_CornerTitle_6f993505();
    init_store_8bf23024();
    init_utils_09998264();
    init_IntersectionObserver_4cd4a541();
    metadata43 = {
      "layout": "blog",
      "title": "Recreating a Table by The Economist Using Reactable",
      "description": "Recreating a table by The Economist entirely in R, using reactable",
      "date": "2020-05-02",
      "image": "economist-table-replication-using-reactable/header.png",
      "archived": true,
      "tags": ["r", "tutorial"]
    };
    Economist_table_replication_using_reactable = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return `${validate_component(Layout4, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata43), {}, {
        default: () => `<p>Thanks for visiting this blog post, but it has moved! It can be found in its fully interactive form <a href="${"https://connorrothschild.github.io/v2/post/economist-table-replication-using-reactable/"}" rel="${"nofollow"}">here</a>.</p>
<p><a href="${"https://connorrothschild.github.io/v2/post/economist-table-replication-using-reactable/"}" rel="${"nofollow"}">${validate_component(Image, "Image").$$render($$result, {
          alt: "A table depicting excess deaths by country during 2020.",
          src: "../images/post/economist-table-replication-using-reactable/featured.png"
        }, {}, {})}</a></p>`
      })}`;
    });
  }
});

// .svelte-kit/output/server/chunks/flat-data-r-0a30bdaf.js
var flat_data_r_0a30bdaf_exports = {};
__export(flat_data_r_0a30bdaf_exports, {
  default: () => Flat_data_r,
  metadata: () => metadata44
});
var import_bowser50, import_prismjs6, import_prism_normalize_whitespace6, metadata44, Flat_data_r;
var init_flat_data_r_0a30bdaf = __esm({
  ".svelte-kit/output/server/chunks/flat-data-r-0a30bdaf.js"() {
    init_shims();
    init_app_9f378dda();
    init_layout_ef610ed1();
    init_Code_71f36c68();
    init_Image_8e30e86c();
    init_Info_43a233e8();
    init_BackTo_d882ed88();
    init_global_130d3fe3();
    import_bowser50 = __toModule(require_es5());
    init_CornerTitle_6f993505();
    init_store_8bf23024();
    init_utils_09998264();
    init_IntersectionObserver_4cd4a541();
    import_prismjs6 = __toModule(require_prism());
    init_prism_line_numbers();
    import_prism_normalize_whitespace6 = __toModule(require_prism_normalize_whitespace());
    init_prism_line_highlight();
    init_prism_file_highlight();
    init_prism_bash();
    init_prism_css();
    init_prism_r();
    init_prism_json();
    init_prism_yaml();
    metadata44 = {
      "layout": "blog",
      "title": "Including R in your Flat Data Workflow",
      "description": "Fetch and clean data automatically with GitHub Actions + R",
      "image": "flat-data-r/header.png",
      "date": "2021-05-02",
      "featured": true,
      "tags": ["r", "github", "tutorial"]
    };
    Flat_data_r = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return `${validate_component(Layout4, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata44), {}, {
        default: () => `<p>The <a href="${"https://octo.github.com/"}" rel="${"nofollow"}">GitHub OCTO team</a> recently released their first project: <a href="${"https://octo.github.com/project/flat-data"}" rel="${"nofollow"}"><strong>Flat Data</strong></a>. The project aims to offer \u201Ca simple pattern for bringing working datasets into your repositories and versioning them.\u201D And it succeeds in doing so! I recently incorporated Flat Data into <a href="${"https://github.com/connorrothschild/police-killings"}" rel="${"nofollow"}">one of my projects</a>, allowing me to finally stop manually updating the data on a semiregular basis (yikes!). While working, I couldn\u2019t find any documentation on using R with Flat Data. Here, I\u2019ll explain the steps I took to incorporate R scripts into a Flat Data pipeline.</p>
${validate_component(Info, "Info").$$render($$result, {}, {}, {
          default: () => `<p><strong>Note:</strong> If you want to follow along, the GitHub repo can be found <a href="${"https://github.com/connorrothschild/flat-demo-r-processing/"}" rel="${"nofollow"}">here</a>.</p>`
        })}
<h2 id="${"whats-flat-data"}"><a href="${"#whats-flat-data"}">What\u2019s Flat Data?</a></h2>
<p><a href="${"https://octo.github.com/project/flat-data"}" rel="${"nofollow"}">Flat Data</a> solves the problem of carrying out the same repetitive tasks\u2014retrieving, cleaning, and then republishing data\u2014that commonly affects developers who want to present rapidly updating data (for example, COVID-19 data that updates daily). And although alternative solutions exist, Flat Data is easy, intuitive, and integrated directly with your GitHub repository (via <a href="${"https://octo.github.com/project/flat-data"}" rel="${"nofollow"}">GitHub</a>):</p>
${validate_component(Image, "Image").$$render($$result, {
          src: "../images/post/flat-data-r/flat-diagram.png",
          alt: "A diagram showcasing a common Flat Data workflow"
        }, {}, {})}
<p>The idea, as seen above, is essentially to read in data (<em>data.json</em>), conduct some postprocessing (<em>process.js</em>), and output some better data (<em>processed-data.json</em>).</p>
<h2 id="${"doing-it-in-r"}"><a href="${"#doing-it-in-r"}">Doing it in R</a></h2>
<p>The most essential step of a Flat Data project is <em>postprocessing</em>. This occurs <strong>after data retrieval</strong> and <strong>before data output</strong>, and it can be done in a few different languages. By default, the OCTO team\u2019s <a href="${"https://github.com/githubocto/flat-postprocessing/tree/main/examples"}" rel="${"nofollow"}">examples</a> are done in JavaScript/TypeScript, and one user has given an example of postprocessing in <a href="${"https://github.com/pierrotsmnrd/flat_data_py_example"}" rel="${"nofollow"}">Python</a>. To the best of my knowledge, though, there aren\u2019t any examples of including R in the postprocessing stage, hence the reason for this post! </p>
<p><strong>Using R in a Flat Data pipeline is as simple as installing the necessary packages and then sourcing your R cleaning script from a postprocessing TypeScript file.</strong> Let\u2019s explore how that works.</p>
<p>We\u2019ll be grabbing data from the <a href="${"https://mappingpoliceviolence.org/"}" rel="${"nofollow"}">Mapping Police Violence</a> homepage, tidying it up, and then republishing it. (This cleaned data is the source for my <a href="${"https://connorrothschild.github.io/police-killings/"}" rel="${"nofollow"}">visualization</a> on police violence.)  Here\u2019s a sample of the final data output:</p>
<iframe title="${"Flat GitHub data table"}" src="${"https://flatgithub.com/connorrothschild/flat-demo-r-processing?filename=sample.csv&sha=585d7221d2712494195dea616bac68dc864025b1"}" loading="${"lazy"}" style="${"height: 90vh;"}" width="${"100%"}"></iframe>
<h3 id="${"01-setup-flatyml"}"><a href="${"#01-setup-flatyml"}">01. Setup <code>flat.yml</code></a></h3>
<p>The first step in any Flat Data pipeline is to create <code>.github/workflows/flat.yml</code>, which will include the configuration for your project. You can do so by using GitHub\u2019s <a href="${"https://marketplace.visualstudio.com/items?itemName=GitHubOCTO.flat"}" rel="${"nofollow"}">VSCode extension</a>, or by creating your own YAML file manually. The YAML file we use in this project is remarkably similar to the <a href="${"https://github.com/marketplace/actions/flat-data"}" rel="${"nofollow"}">boilerplate</a> file, with a few differences:</p>
${validate_component(Code, "Code").$$render($$result, { language: "yaml", filename: "flat.yml" }, {}, {
          default: () => `<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">name: Update data
on:
  schedule:
    - cron: 0 0 * * * # Runs daily. See https://crontab.cronhub.io/
  workflow_dispatch: &#123;&#125;
  push:
    branches:
      - main # Or master, or whatever branch you&#39;d like to &#39;watch&#39;
jobs:
  scheduled:
    runs-on: ubuntu-latest
    steps:
      # This step installs Deno, which is a Javascript runtime
      - name: Setup deno
        uses: denoland/setup-deno@main
        with:
          deno-version: v1.x
      # Check out the repository so it can read the files inside of it and do other operations
      - name: Check out repo
        uses: actions/checkout@v2
      # The Flat Action step. We fetch the data in the http_url and save it as downloaded_filename
      - name: Fetch data
        uses: githubocto/flat@v2
        with:
          http_url: https://mappingpoliceviolence.org/s/MPVDatasetDownload.xlsx # File to download
          downloaded_filename: raw.xlsx # Name of downloaded file
          postprocess: ./postprocess.ts # Script to run upon download completion</code>`}<!-- HTML_TAG_END --></pre>`
        })}
<p>The tweaks you would make to this workflow are most likely in <code>http_url</code> and <code>schedule</code>. To confirm, visit GitHub\u2019s <a href="${"https://github.com/marketplace/actions/flat-data"}" rel="${"nofollow"}">documentation</a>. </p>
<h2 id="${"02-postprocess"}"><a href="${"#02-postprocess"}">02. Postprocess</a></h2>
<p>We pick up at the last line of code in the previous chunk:</p>
${validate_component(Code, "Code").$$render($$result, { language: "yaml", filename: "flat.yml" }, {}, {
          default: () => `<pre class="${"language-yaml"}"><!-- HTML_TAG_START -->${`<code class="language-yaml"><span class="token key atrule">postprocess</span><span class="token punctuation">:</span> ./postprocess.ts </code>`}<!-- HTML_TAG_END --></pre>`
        })}
<p>Here, we reference a TypeScript file titled <code>postprocess.ts</code>. Upon completion of the data download, GitHub will run <em>this script</em> for any additional processing steps. This file must be a <code>.js</code> or <code>.ts</code> file.</p>
<p>Those who are skilled in data wrangling with JavaScript might be able to write their additional processing <em>in JavaScript itself</em>, but few of us are skilled in data wrangling with JavaScript. Moreover, some users want to migrate their existing projects and workflows to Flat Data, and so including languages other than JavaScript (in this case, R) is essential. </p>
<p>The <code>postprocess.ts</code> file I use in my workflow looks like this (it might help to see how <a href="${"https://deno.land/manual@v1.10.2/examples/subprocess"}" rel="${"nofollow"}">Deno works</a>):</p>
${validate_component(Code, "Code").$$render($$result, {
          language: "javascript",
          filename: "postprocess.ts"
        }, {}, {
          default: () => `<pre class="${"language-js"}"><!-- HTML_TAG_START -->${`<code class="language-js"><span class="token comment">// 1. Install necessary packages</span>
<span class="token keyword">const</span> r_install <span class="token operator">=</span> Deno<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
    cmd<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'sudo'</span><span class="token punctuation">,</span> <span class="token string">'Rscript'</span><span class="token punctuation">,</span> <span class="token string">'-e'</span><span class="token punctuation">,</span> <span class="token string">"install.packages(c('dplyr', 'readxl', 'readr', 'lubridate', 'stringr'))"</span><span class="token punctuation">]</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">await</span> r_install<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 2. Forward the execution to the R script</span>
<span class="token keyword">const</span> r_run <span class="token operator">=</span> Deno<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
    cmd<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'Rscript'</span><span class="token punctuation">,</span> <span class="token string">'./clean.R'</span><span class="token punctuation">]</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">await</span> r_run<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>`
        })}
<p>The above script is rather simple: it 1) installs packages, and 2) runs the processing script, titled <code>clean.R</code>.</p>
<p>The first step is important.  <strong>Package management was the biggest issue I ran into while setting up this workflow; if you\u2019re having issues, pay attention to this step.</strong> You\u2019ll need to identify all the packages that are required in your R processing script, but you can\u2019t install those packages <em>in the script itself</em>, due to virtual machine permissions. You instead have to run them via the command line, using <code>sudo Rscript -e</code>, as I do above (in step 1). </p>
<p>The command <code>sudo Rscript -e</code> precedes any regular function or command that you would run in an R script. It executes those commands via the command line, rather than within a script. (We add sudo to overcome system user permission problems.) For more, see <a href="${"https://stackoverflow.com/questions/18306362/run-r-script-from-command-line"}" rel="${"nofollow"}">this page</a>. </p>
<h2 id="${"03-clean-the-data"}"><a href="${"#03-clean-the-data"}">03. Clean the data!</a></h2>
<p>My <code>clean.R</code> script, which I reference at the bottom of <code>postprocess.ts</code> looks like this:</p>
${validate_component(Code, "Code").$$render($$result, { language: "r", filename: "clean.R" }, {}, {
          default: () => `<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r"><span class="token comment"># Load libraries</span>
library<span class="token punctuation">(</span>dplyr<span class="token punctuation">)</span>
library<span class="token punctuation">(</span>stringr<span class="token punctuation">)</span>

<span class="token comment"># Read in data, with the same name that we specified in &#96;flat.yml&#96;</span>
raw_data <span class="token operator">&lt;-</span> readxl<span class="token operator">::</span>read_excel<span class="token punctuation">(</span><span class="token string">"./raw.xlsx"</span><span class="token punctuation">)</span>

<span class="token comment"># All the processing!</span>
clean_data <span class="token operator">&lt;-</span> raw_data <span class="token percent-operator operator">%>%</span> 
  mutate<span class="token punctuation">(</span>Zipcode <span class="token operator">=</span> as.character<span class="token punctuation">(</span>Zipcode<span class="token punctuation">)</span><span class="token punctuation">,</span>
         Year <span class="token operator">=</span> lubridate<span class="token operator">::</span>year<span class="token punctuation">(</span>Date<span class="token punctuation">)</span><span class="token punctuation">,</span>
         Sex <span class="token operator">=</span> ifelse<span class="token punctuation">(</span>is.na<span class="token punctuation">(</span>Sex<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'Unknown'</span><span class="token punctuation">,</span> Sex<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">### Additional processing goes here...</span>

<span class="token comment"># Output data</span>
readr<span class="token operator">::</span>write_csv<span class="token punctuation">(</span>clean_data<span class="token punctuation">,</span> <span class="token string">"./output.csv"</span><span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>`
        })}
<p>Obviously, the content in the above cleaning script is irrelevant. It functions as any other R script would: it reads in data (based on the data we downloaded in <code>postprocess.ts</code>), does some cleaning, and then outputs the new data. The <a href="${"https://github.com/connorrothschild/flat-demo-r-processing/blob/master/clean.R"}" rel="${"nofollow"}">real script</a> is around 55 lines. Now you know why keeping the postprocessing in R was preferable!</p>
<h2 id="${"in-sum"}"><a href="${"#in-sum"}">In sum</a></h2>
<p>Upon completing these steps and pushing the above to a repository, GitHub will automatically set up the action and run it on a daily basis. You can then examine the logs for each run in the <strong>Actions</strong> tab. This tab will be helpful for debugging, and you can force workflow executions manually here as well. In sum, the process of carrying out a GitHub Flat Data workflow, with the addition of an R postprocessing script, looks something like this:</p>
${validate_component(Image, "Image").$$render($$result, {
          src: "../images/post/flat-data-r/header.png",
          alt: "Diagram of flat data processing in R"
        }, {}, {})}
<p>Thanks for reading! You might learn more by perusing the <a href="${"https://github.com/connorrothschild/flat-demo-r-processing"}" rel="${"nofollow"}">GitHub repository</a> that accompanies this post; otherwise, please send any questions via <a href="${"https://twitter.com/CL_Rothschild"}" rel="${"nofollow"}">Twitter</a> \u{1F642}</p>`
      })}`;
    });
  }
});

// .svelte-kit/output/server/chunks/introducing-tpltheme-70118bb6.js
var introducing_tpltheme_70118bb6_exports = {};
__export(introducing_tpltheme_70118bb6_exports, {
  default: () => Introducing_tpltheme,
  metadata: () => metadata45
});
var import_bowser51, metadata45, Introducing_tpltheme;
var init_introducing_tpltheme_70118bb6 = __esm({
  ".svelte-kit/output/server/chunks/introducing-tpltheme-70118bb6.js"() {
    init_shims();
    init_app_9f378dda();
    init_layout_ef610ed1();
    init_Image_8e30e86c();
    init_BackTo_d882ed88();
    init_global_130d3fe3();
    import_bowser51 = __toModule(require_es5());
    init_CornerTitle_6f993505();
    init_store_8bf23024();
    init_utils_09998264();
    init_IntersectionObserver_4cd4a541();
    metadata45 = {
      "layout": "blog",
      "title": "My First Package! Introducing tpltheme",
      "description": "Introducing {tpltheme}, a toolkit to create publication-ready plots in the style of the Texas Policy Lab.",
      "image": "introducing-tpltheme/header.png",
      "date": "2019-07-02",
      "archived": true,
      "tags": ["r"]
    };
    Introducing_tpltheme = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return `${validate_component(Layout4, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata45), {}, {
        default: () => `<p>I\u2019ve spent the majority of the summer as an
<a href="${"https://www.texaspolicylab.org/profile/connor-rothschild/"}" rel="${"nofollow"}">intern</a> with
the Texas Policy Lab, working on primarily data science-related matters
such as data cleaning and visualization. Most recently, I sought to
create a custom theme in <code>ggplot2</code> for TPL.</p>
<p>The project was my first experience in developing my own R package.
Prior to this project, the most familiarity I had with packages were
from the <code>install.packages()</code> and <code>library()</code> commands.</p>
<p>Hadley Wickham\u2019s book <strong><a href="${"http://r-pkgs.had.co.nz/"}" rel="${"nofollow"}">R Packages</a></strong> was
enormously helpful in introducing package development to me. I ran into
(a lot of) issues in building the package, specifically encountering
problems related to local file paths and logo placement on plots.</p>
<p>Creating your own package is a great exercise in trial and error, and
taught me a lot about programming in R that I wouldn\u2019t have learned
otherwise. I was also struck by how remarkably easy it was to create
one\u2019s own package (seriously, it requires the same amount of clicks as
starting a new R project), and how thorough online resources were.</p>
<h2 id="${"inspiration"}"><a href="${"#inspiration"}">Inspiration</a></h2>
<p>The catalyst for creating this package was coming across the Urban
Institute\u2019s <a href="${"https://github.com/UrbanInstitute/urbnthemes"}" rel="${"nofollow"}">urbnthemes</a>
package on GitHub. I also gathered a lot of inspiration (and borrowed
some code) from <a href="${"https://github.com/jrnold/ggthemes"}" rel="${"nofollow"}">ggthemes</a> (Jeffrey
Arnold), <a href="${"https://github.com/bbc/bbplot"}" rel="${"nofollow"}">bbplot</a> (BBC News), and
<a href="${"https://github.com/hrbrmstr/hrbrthemes"}" rel="${"nofollow"}">hrbrthemes</a> (Bob Rudis). I was
impressed by the fact that these organizations were able to use R to
create publication-ready plots despite the fact that base ggplot figures
can look rather ugly (if we\u2019re being honest).</p>
<p>Because the organization I intern with is still in its infancy, I
thought it would be a perfect time to create a standardized theme for
figures made in the future. So long as future employees adopt the theme,
this package has the potential to create figures specific to our
publications, lending TPL organizational credibility and creating
cross-report consistency.</p>
<p>I thought a lot about some basic tenets of design, such as font
readability, text size, and color contrast. I learned a lot about visual
and aesthetic design I wouldn\u2019t know otherwise (Kieran Healy\u2019s section
on how graphs can deceive the reader\u2013intentionally or not\u2013opened my eyes
to a lot of important visual concepts.</p>
<h1 id="${"overview"}"><a href="${"#overview"}">Overview</a></h1>
<p>Here\u2019s an overview of some of the packages key features:</p>
<h2 id="${"installation-and-usage"}"><a href="${"#installation-and-usage"}">Installation and Usage</a></h2>
<p>You can install the package via GitHub:</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">library<span class="token punctuation">(</span>ggplot2<span class="token punctuation">)</span>
library<span class="token punctuation">(</span>tidyverse<span class="token punctuation">)</span>

<span class="token comment">#devtools::install_github("connorrothschild/tpltheme")</span>
library<span class="token punctuation">(</span>tpltheme<span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Always load <code>library(tpltheme)</code> <strong>after</strong> <code>library(ggplot2)</code> and/or
<code>library(tidyverse)</code>.</p>
<p>The package creates a standardized formats for plots to be used in
reports created by the Texas Policy Lab. It primarily relies on
<code>set_tpl_theme()</code>, which allows the user to specify whether the plot
theme should align with a standard plot (<code>style = &quot;print&quot;</code>), or one
specially created for plotting geographical data (<code>style = &quot;Texas&quot;</code>).
Calling <code>set_tpl_theme()</code> after <code>library(tpltheme)</code> does most of the
work for this package!</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">set_tpl_theme<span class="token punctuation">(</span>font <span class="token operator">=</span> <span class="token string">'IBM Plex Sans'</span><span class="token punctuation">)</span>

ggplot<span class="token punctuation">(</span>iris<span class="token punctuation">,</span> aes<span class="token punctuation">(</span>x<span class="token operator">=</span>Species<span class="token punctuation">,</span> y<span class="token operator">=</span>Sepal.Width<span class="token punctuation">,</span> fill<span class="token operator">=</span>Species<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
    geom_bar<span class="token punctuation">(</span>stat<span class="token operator">=</span><span class="token string">"summary"</span><span class="token punctuation">,</span> fun.y<span class="token operator">=</span><span class="token string">"mean"</span><span class="token punctuation">,</span> show.legend <span class="token operator">=</span> <span class="token boolean">FALSE</span><span class="token punctuation">)</span> <span class="token operator">+</span>
    scale_y_continuous<span class="token punctuation">(</span>expand <span class="token operator">=</span> expand_scale<span class="token punctuation">(</span>mult <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.001</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
    labs<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">"Species"</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token string">"Mean Sepal Width (cm)"</span><span class="token punctuation">,</span> fill<span class="token operator">=</span><span class="token string">"Species"</span><span class="token punctuation">,</span> title<span class="token operator">=</span><span class="token string">"Iris Dataset"</span><span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
${validate_component(Image, "Image").$$render($$result, {
          alt: "An example of a plot in the TPL theme.",
          src: "../images/post/introducing-tpltheme/unnamed-chunk-3-1.png"
        }, {}, {})}
<h3 id="${"fonts"}"><a href="${"#fonts"}">Fonts</a></h3>
<p>The user is able to specify whether they want to use <em>Lato</em> or <em>Adobe
Caslon Pro</em> in their figures.</p>
<p>To ensure that these fonts are installed and registered, use
<code>tpl_font_test()</code>. If fonts are not properly installed, install both
fonts online and then run <code>tpl_font_install()</code>.</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">tpl_font_test<span class="token punctuation">(</span><span class="token punctuation">)</span>
tpl_font_install<span class="token punctuation">(</span><span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Here are some examples of sample TPL plots with different specifications
for <code>style</code> and <code>font</code>.</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">set_tpl_theme<span class="token punctuation">(</span>style <span class="token operator">=</span> <span class="token string">"print"</span><span class="token punctuation">,</span> font <span class="token operator">=</span> <span class="token string">"lato"</span><span class="token punctuation">)</span>

ggplot<span class="token punctuation">(</span>iris<span class="token punctuation">,</span> aes<span class="token punctuation">(</span>x<span class="token operator">=</span>jitter<span class="token punctuation">(</span>Sepal.Width<span class="token punctuation">)</span><span class="token punctuation">,</span> y<span class="token operator">=</span>jitter<span class="token punctuation">(</span>Sepal.Length<span class="token punctuation">)</span><span class="token punctuation">,</span> col<span class="token operator">=</span>Species<span class="token punctuation">,</span> size <span class="token operator">=</span> Petal.Length<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
    geom_point<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>
    labs<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">"Sepal Width (cm)"</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token string">"Sepal Length (cm)"</span><span class="token punctuation">,</span> col<span class="token operator">=</span><span class="token string">"Species"</span><span class="token punctuation">,</span> size <span class="token operator">=</span> <span class="token string">"Petal Length"</span><span class="token punctuation">,</span> title<span class="token operator">=</span><span class="token string">"Iris Dataset"</span><span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
${validate_component(Image, "Image").$$render($$result, {
          alt: "An example of a plot in the TPL theme.",
          src: "../images/post/introducing-tpltheme/unnamed-chunk-5-1.png"
        }, {}, {})}
<p>By specifying <code>style = &quot;Texas&quot;</code> within <code>set_tpl_theme</code>, the user may
also create Texas-specific plots.</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">tx_vac <span class="token operator">&lt;-</span> readr<span class="token operator">::</span>read_csv<span class="token punctuation">(</span><span class="token string">"https://raw.githubusercontent.com/connorrothschild/tpltheme/master/data/tx_vac_example.csv"</span><span class="token punctuation">)</span>
set_tpl_theme<span class="token punctuation">(</span>style <span class="token operator">=</span> <span class="token string">"Texas"</span><span class="token punctuation">,</span> font <span class="token operator">=</span> <span class="token string">"adobe"</span><span class="token punctuation">)</span>

ggplot<span class="token punctuation">(</span>data <span class="token operator">=</span> tx_vac<span class="token punctuation">,</span> mapping <span class="token operator">=</span> aes<span class="token punctuation">(</span>x <span class="token operator">=</span> long<span class="token punctuation">,</span> y <span class="token operator">=</span> lat<span class="token punctuation">,</span> group <span class="token operator">=</span> group<span class="token punctuation">,</span> fill <span class="token operator">=</span> avgvac<span class="token operator">*</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  coord_fixed<span class="token punctuation">(</span><span class="token number">1.3</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  scale_fill_continuous<span class="token punctuation">(</span>limits <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">78.3</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  geom_polygon<span class="token punctuation">(</span>color <span class="token operator">=</span> <span class="token string">"black"</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  labs<span class="token punctuation">(</span>title <span class="token operator">=</span> <span class="token string">"Texas Vaccination Rate by County"</span><span class="token punctuation">,</span>
       subtitle <span class="token operator">=</span> <span class="token string">"Among Kindergarteners"</span><span class="token punctuation">,</span>
       fill <span class="token operator">=</span> <span class="token string">"Percent&#92;nVaccinated"</span><span class="token punctuation">,</span>
       caption <span class="token operator">=</span> <span class="token string">"Source: Texas DSHS"</span><span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
${validate_component(Image, "Image").$$render($$result, {
          alt: "An example of a plot in the TPL theme.",
          src: "../images/post/introducing-tpltheme/unnamed-chunk-6-1.png"
        }, {}, {})}
<p>And it also works for categorical variables:</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">set_tpl_theme<span class="token punctuation">(</span>style <span class="token operator">=</span> <span class="token string">"Texas"</span><span class="token punctuation">,</span> font <span class="token operator">=</span> <span class="token string">"lato"</span><span class="token punctuation">)</span>

tx_vac <span class="token percent-operator operator">%>%</span>
  dplyr<span class="token operator">::</span>mutate<span class="token punctuation">(</span>cat <span class="token operator">=</span> factor<span class="token punctuation">(</span>dplyr<span class="token operator">::</span>case_when<span class="token punctuation">(</span>avgvac<span class="token operator">*</span><span class="token number">100</span> <span class="token operator">></span> <span class="token number">99</span> <span class="token operator">~</span> <span class="token string">"Great"</span><span class="token punctuation">,</span>
                         avgvac<span class="token operator">*</span><span class="token number">100</span> <span class="token operator">></span> <span class="token number">90</span> <span class="token operator">~</span> <span class="token string">"Average"</span><span class="token punctuation">,</span>
                         avgvac<span class="token operator">*</span><span class="token number">100</span> <span class="token operator">&lt;</span> <span class="token number">90</span> <span class="token operator">~</span> <span class="token string">"Bad"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  ggplot<span class="token punctuation">(</span>mapping <span class="token operator">=</span> aes<span class="token punctuation">(</span>x <span class="token operator">=</span> long<span class="token punctuation">,</span> y <span class="token operator">=</span> lat<span class="token punctuation">,</span> group <span class="token operator">=</span> group<span class="token punctuation">,</span> fill <span class="token operator">=</span> cat<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  coord_fixed<span class="token punctuation">(</span><span class="token number">1.3</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  geom_polygon<span class="token punctuation">(</span>color <span class="token operator">=</span> <span class="token string">"black"</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  labs<span class="token punctuation">(</span>title <span class="token operator">=</span> <span class="token string">"Texas Vaccination Rate by County"</span><span class="token punctuation">,</span>
       subtitle <span class="token operator">=</span> <span class="token string">"Among Kindergarteners"</span><span class="token punctuation">,</span>
       fill <span class="token operator">=</span> <span class="token string">"Vaccination Rating"</span><span class="token punctuation">,</span>
       caption <span class="token operator">=</span> <span class="token string">"Source: Texas DSHS"</span><span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
${validate_component(Image, "Image").$$render($$result, {
          alt: "An example of a plot in the TPL theme.",
          src: "../images/post/introducing-tpltheme/unnamed-chunk-7-1.png"
        }, {}, {})}
<p>If the number of colors exceeds the number of colors in the TPL palette
(9), the function <code>tpl_color_pal()</code> will drop the TPL color palette and
return the greatest number of unique colors possible within the
RColorBrewer\u2019s \u201CPaired\u201D palette (for more information on the use of
RColorBrewer palettes, see <a href="${"https://bookdown.org/rdpeng/exdata/plotting-and-color-in-r.html#using-the-rcolorbrewer-palettes"}" rel="${"nofollow"}">this
chapter</a>).</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">tx_vac <span class="token percent-operator operator">%>%</span>
  ggplot<span class="token punctuation">(</span>mapping <span class="token operator">=</span> aes<span class="token punctuation">(</span>x <span class="token operator">=</span> long<span class="token punctuation">,</span> y <span class="token operator">=</span> lat<span class="token punctuation">,</span> group <span class="token operator">=</span> group<span class="token punctuation">,</span> fill <span class="token operator">=</span> subregion<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  coord_fixed<span class="token punctuation">(</span><span class="token number">1.3</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  geom_polygon<span class="token punctuation">(</span>color <span class="token operator">=</span> <span class="token string">"black"</span><span class="token punctuation">,</span> show.legend <span class="token operator">=</span> <span class="token boolean">FALSE</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  labs<span class="token punctuation">(</span>title <span class="token operator">=</span> <span class="token string">"Texas Counties"</span><span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
${validate_component(Image, "Image").$$render($$result, {
          alt: "An example of a plot in the TPL theme.",
          src: "../images/post/introducing-tpltheme/unnamed-chunk-8-1.png"
        }, {}, {})}
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r"><span class="token comment"># default to print afterwards</span>
set_tpl_theme<span class="token punctuation">(</span>style <span class="token operator">=</span> <span class="token string">"print"</span><span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
<h3 id="${"tpl-branding"}"><a href="${"#tpl-branding"}">TPL Branding</a></h3>
<h4 id="${"logo"}"><a href="${"#logo"}">Logo</a></h4>
<p>The user also has the option to include the TPL logo in single plots.
This may be preferred for those reports being made especially public, or
to serve as a pseudo-watermark in proprietary plots.</p>
<p>The user can specify the <code>position</code> of the logo as well as its <code>scale</code>.
The scale argument refers to the size of the logo object, with the
specified number corresponding to a multiplication with the normal logo
size. In other words, <code>scale = 2</code> will <em>double</em> the size of the logo.
The logo defaults to 1/7th of the size of the plot.</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">plot <span class="token operator">&lt;-</span> ggplot<span class="token punctuation">(</span>iris<span class="token punctuation">,</span> aes<span class="token punctuation">(</span>x<span class="token operator">=</span>Species<span class="token punctuation">,</span> y<span class="token operator">=</span>Sepal.Width<span class="token punctuation">,</span> fill<span class="token operator">=</span>Species<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
    geom_bar<span class="token punctuation">(</span>stat<span class="token operator">=</span><span class="token string">"summary"</span><span class="token punctuation">,</span> fun.y<span class="token operator">=</span><span class="token string">"mean"</span><span class="token punctuation">,</span> show.legend <span class="token operator">=</span> <span class="token boolean">FALSE</span><span class="token punctuation">)</span> <span class="token operator">+</span>
    scale_y_continuous<span class="token punctuation">(</span>expand <span class="token operator">=</span> expand_scale<span class="token punctuation">(</span>mult <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.001</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
    labs<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">"Species"</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token string">"Mean Sepal Width (cm)"</span><span class="token punctuation">,</span> fill<span class="token operator">=</span><span class="token string">"Species"</span><span class="token punctuation">,</span> title<span class="token operator">=</span><span class="token string">"Iris Dataset"</span><span class="token punctuation">)</span>

add_tpl_logo<span class="token punctuation">(</span>plot<span class="token punctuation">,</span> position <span class="token operator">=</span> <span class="token string">"top right"</span><span class="token punctuation">,</span> scale <span class="token operator">=</span> <span class="token number">1.5</span><span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
${validate_component(Image, "Image").$$render($$result, {
          alt: "An example of a plot in the TPL theme.",
          src: "../images/post/introducing-tpltheme/unnamed-chunk-9-1.png"
        }, {}, {})}
<h4 id="${"logo-text"}"><a href="${"#logo-text"}">Logo text</a></h4>
<p>There may be some instances when an all-out logo is not warranted or
preferred. If that is the case and the user would still like to
watermark their figures, they can use the function <code>add_tpl_logo_text()</code>
to add text to an existing plot object:</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">plot <span class="token operator">&lt;-</span> ggplot<span class="token punctuation">(</span>iris<span class="token punctuation">,</span> aes<span class="token punctuation">(</span>x<span class="token operator">=</span>jitter<span class="token punctuation">(</span>Sepal.Width<span class="token punctuation">)</span><span class="token punctuation">,</span> y<span class="token operator">=</span>jitter<span class="token punctuation">(</span>Sepal.Length<span class="token punctuation">)</span><span class="token punctuation">,</span> col<span class="token operator">=</span>Species<span class="token punctuation">,</span> size <span class="token operator">=</span> Petal.Length<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
    geom_point<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>
    labs<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">"Sepal Width (cm)"</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token string">"Sepal Length (cm)"</span><span class="token punctuation">,</span> col<span class="token operator">=</span><span class="token string">"Species"</span><span class="token punctuation">,</span> size <span class="token operator">=</span> <span class="token string">"Petal Length"</span><span class="token punctuation">,</span> title<span class="token operator">=</span><span class="token string">"Iris Dataset"</span><span class="token punctuation">)</span>

add_tpl_logo_text<span class="token punctuation">(</span>plot<span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
${validate_component(Image, "Image").$$render($$result, {
          alt: "An example of a plot in the TPL theme.",
          src: "../images/post/introducing-tpltheme/unnamed-chunk-10-1.png"
        }, {}, {})}
<p>The user may also need to specify <code>align</code>, which moves the plot
horizontally across the bottom of the page.</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">plot <span class="token operator">&lt;-</span> ggplot<span class="token punctuation">(</span>iris<span class="token punctuation">,</span> aes<span class="token punctuation">(</span>x<span class="token operator">=</span>Species<span class="token punctuation">,</span> y<span class="token operator">=</span>Sepal.Width<span class="token punctuation">,</span> fill<span class="token operator">=</span>Species<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
    geom_boxplot<span class="token punctuation">(</span>show.legend <span class="token operator">=</span> <span class="token boolean">FALSE</span><span class="token punctuation">)</span> <span class="token operator">+</span>
    labs<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">"Species"</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token string">"Sepal Width (cm)"</span><span class="token punctuation">,</span> fill<span class="token operator">=</span><span class="token string">"Species"</span><span class="token punctuation">,</span> title<span class="token operator">=</span><span class="token string">"Iris Dataset"</span><span class="token punctuation">,</span> subtitle <span class="token operator">=</span><span class="token string">"When specifying align = 1"</span><span class="token punctuation">)</span>

add_tpl_logo_text<span class="token punctuation">(</span>plot<span class="token punctuation">,</span> align <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
${validate_component(Image, "Image").$$render($$result, {
          alt: "An example of a plot in the TPL theme.",
          src: "../images/post/introducing-tpltheme/unnamed-chunk-11-1.png"
        }, {}, {})}
<h3 id="${"additional-functions"}"><a href="${"#additional-functions"}">Additional functions</a></h3>
<h4 id="${"drop-axes"}"><a href="${"#drop-axes"}">Drop axes</a></h4>
<p>In the event that the user wishes to drop an axis, they may do so with
<code>drop_axis()</code>. The function may drop any combination of axes depending
on the user\u2019s input (<code>drop = &quot;x&quot;</code>, <code>drop = &quot;y&quot;</code>, <code>drop = &quot;both&quot;</code>,
<code>drop = &quot;neither&quot;</code>).</p>
<p>Unlike <code>add_tpl_logo()</code>, <code>drop_axis()</code> should be <em>added</em> to an existing
plot object:</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">ggplot<span class="token punctuation">(</span>iris<span class="token punctuation">,</span> aes<span class="token punctuation">(</span>x<span class="token operator">=</span>jitter<span class="token punctuation">(</span>Sepal.Width<span class="token punctuation">)</span><span class="token punctuation">,</span> y<span class="token operator">=</span>jitter<span class="token punctuation">(</span>Sepal.Length<span class="token punctuation">)</span><span class="token punctuation">,</span> col<span class="token operator">=</span>Species<span class="token punctuation">,</span> size <span class="token operator">=</span> Petal.Length<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
    geom_point<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>
    labs<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">"Sepal Width (cm)"</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token string">"Sepal Length (cm)"</span><span class="token punctuation">,</span> col<span class="token operator">=</span><span class="token string">"Species"</span><span class="token punctuation">,</span> size <span class="token operator">=</span> <span class="token string">"Petal Length"</span><span class="token punctuation">,</span> title<span class="token operator">=</span><span class="token string">"Iris Dataset"</span><span class="token punctuation">)</span> <span class="token operator">+</span>
    drop_axis<span class="token punctuation">(</span>axis <span class="token operator">=</span> <span class="token string">"y"</span><span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
${validate_component(Image, "Image").$$render($$result, {
          alt: "An example of a plot in the TPL theme.",
          src: "../images/post/introducing-tpltheme/unnamed-chunk-12-1.png"
        }, {}, {})}
<h3 id="${"colors"}"><a href="${"#colors"}">Colors</a></h3>
<p>I also put a lot of time into creating a color palette which was both
aesthetically pleasing and accessible to color-blind viewers. This was
somewhat difficult because there are <a href="${"https://nei.nih.gov/learn-about-eye-health/eye-conditions-and-diseases/color-blindness"}" rel="${"nofollow"}">quite a few types of
colorblindness</a>.
Thankfully, my boss is colorblind, making test cases a lot more
accessible!</p>
<p>The function <code>view_palette</code> plots base color palettes included in
<code>tpltheme</code>. All TPL color palettes are led by the notation
<code>palette_tpl_*</code> and therefore can be easily autocompleted within
RStudio.</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">p1 <span class="token operator">&lt;-</span> view_palette<span class="token punctuation">(</span>palette <span class="token operator">=</span> palette_tpl_main<span class="token punctuation">)</span> <span class="token operator">+</span> ggtitle<span class="token punctuation">(</span><span class="token string">"Categorical"</span><span class="token punctuation">)</span>
p2 <span class="token operator">&lt;-</span> view_palette<span class="token punctuation">(</span>palette <span class="token operator">=</span> palette_tpl_diverging<span class="token punctuation">)</span> <span class="token operator">+</span> ggtitle<span class="token punctuation">(</span><span class="token string">"Diverging"</span><span class="token punctuation">)</span>
p3 <span class="token operator">&lt;-</span> view_palette<span class="token punctuation">(</span>palette <span class="token operator">=</span> palette_tpl_sequential<span class="token punctuation">)</span> <span class="token operator">+</span> ggtitle<span class="token punctuation">(</span><span class="token string">"Sequential"</span><span class="token punctuation">)</span>

gridExtra<span class="token operator">::</span>grid.arrange<span class="token punctuation">(</span>p1<span class="token punctuation">,</span> p2<span class="token punctuation">,</span> p3<span class="token punctuation">,</span> nrow <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
${validate_component(Image, "Image").$$render($$result, {
          alt: "An example of a plot in the TPL theme.",
          src: "../images/post/introducing-tpltheme/unnamed-chunk-13-1.png"
        }, {}, {})}
<p>These palettes were created using <a href="${"http://colorbrewer2.org"}" rel="${"nofollow"}">http://colorbrewer2.org</a> and
<a href="${"http://coloors.co"}" rel="${"nofollow"}">http://coloors.co</a> and are colorblind friendly.</p>
<p>The diverging and sequential color palettes are from
<a href="${"http://colorbrewer2.org"}" rel="${"nofollow"}">http://colorbrewer2.org</a> and the categorical palette is composed of a
variety of colors from <a href="${"https://coolors.co/"}" rel="${"nofollow"}">https://coolors.co/</a> and the TPL website.</p>
<p>In action, the color palette looks like this:</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">normal <span class="token operator">&lt;-</span> diamonds <span class="token percent-operator operator">%>%</span>
  group_by<span class="token punctuation">(</span>clarity<span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  summarise<span class="token punctuation">(</span>price <span class="token operator">=</span> mean<span class="token punctuation">(</span>price<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  mutate<span class="token punctuation">(</span>clarity <span class="token operator">=</span> forcats<span class="token operator">::</span>fct_reorder<span class="token punctuation">(</span>clarity<span class="token punctuation">,</span> price<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  ggplot<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  geom_col<span class="token punctuation">(</span>aes<span class="token punctuation">(</span>x <span class="token operator">=</span> clarity<span class="token punctuation">,</span> y <span class="token operator">=</span> price<span class="token punctuation">,</span> fill <span class="token operator">=</span> clarity<span class="token punctuation">)</span><span class="token punctuation">,</span> show.legend <span class="token operator">=</span> <span class="token boolean">FALSE</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  labs<span class="token punctuation">(</span>title <span class="token operator">=</span> <span class="token string">"TPL Color Palette"</span><span class="token punctuation">,</span>
       subtitle <span class="token operator">=</span> <span class="token string">"in action"</span><span class="token punctuation">,</span>
       x <span class="token operator">=</span> <span class="token string">"Clarity"</span><span class="token punctuation">,</span>
       y <span class="token operator">=</span> <span class="token string">"Price"</span><span class="token punctuation">,</span>
       fill <span class="token operator">=</span> element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  theme<span class="token punctuation">(</span>axis.text.x <span class="token operator">=</span> element_text<span class="token punctuation">(</span>angle <span class="token operator">=</span> <span class="token number">45</span><span class="token punctuation">,</span> hjust <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  coord_flip<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  scale_fill_discrete<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  scale_y_continuous<span class="token punctuation">(</span>expand <span class="token operator">=</span> expand_scale<span class="token punctuation">(</span>mult <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.001</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  drop_axis<span class="token punctuation">(</span>axis <span class="token operator">=</span> <span class="token string">"x"</span><span class="token punctuation">)</span>

reversed <span class="token operator">&lt;-</span> normal <span class="token operator">+</span>
  labs<span class="token punctuation">(</span>subtitle <span class="token operator">=</span> <span class="token string">"(reversed)"</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  scale_fill_discrete<span class="token punctuation">(</span>reverse <span class="token operator">=</span> <span class="token boolean">TRUE</span><span class="token punctuation">)</span>

gridExtra<span class="token operator">::</span>grid.arrange<span class="token punctuation">(</span>normal<span class="token punctuation">,</span> reversed<span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
${validate_component(Image, "Image").$$render($$result, {
          alt: "An example of a plot in the TPL theme.",
          src: "../images/post/introducing-tpltheme/unnamed-chunk-14-1.png"
        }, {}, {})}
<p>The user may specify the color palette in the <code>scale_fill_*</code> or
<code>scale_color_*</code> functions in a ggplot call. Specifically, the user can
specify the <code>palette</code> (categorical, diverging, sequential) and whether
the palette should be reversed.</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">set_tpl_theme<span class="token punctuation">(</span>style <span class="token operator">=</span> <span class="token string">"print"</span><span class="token punctuation">,</span> font <span class="token operator">=</span> <span class="token string">"lato"</span><span class="token punctuation">)</span>
normal <span class="token operator">&lt;-</span> ggplot<span class="token punctuation">(</span>diamonds<span class="token punctuation">)</span> <span class="token operator">+</span>
  geom_bar<span class="token punctuation">(</span>aes<span class="token punctuation">(</span>x <span class="token operator">=</span> cut<span class="token punctuation">,</span> fill <span class="token operator">=</span> clarity<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  labs<span class="token punctuation">(</span>title <span class="token operator">=</span> <span class="token string">"TPL Color Palette"</span><span class="token punctuation">,</span>
       subtitle <span class="token operator">=</span> <span class="token string">"On sample data"</span><span class="token punctuation">,</span>
       x <span class="token operator">=</span> <span class="token string">"Cut"</span><span class="token punctuation">,</span>
       y <span class="token operator">=</span> <span class="token string">"Count"</span><span class="token punctuation">,</span>
       fill <span class="token operator">=</span> <span class="token string">"Clarity"</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  scale_y_continuous<span class="token punctuation">(</span>expand <span class="token operator">=</span> expand_scale<span class="token punctuation">(</span>mult <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.001</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  theme<span class="token punctuation">(</span>axis.text.x <span class="token operator">=</span> element_text<span class="token punctuation">(</span>angle <span class="token operator">=</span> <span class="token number">45</span><span class="token punctuation">,</span> hjust <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

reversed <span class="token operator">&lt;-</span> normal <span class="token operator">+</span>
  labs<span class="token punctuation">(</span>subtitle <span class="token operator">=</span> <span class="token string">"(reversed)"</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  scale_fill_discrete<span class="token punctuation">(</span>reverse <span class="token operator">=</span> <span class="token boolean">TRUE</span><span class="token punctuation">)</span>

gridExtra<span class="token operator">::</span>grid.arrange<span class="token punctuation">(</span>normal<span class="token punctuation">,</span> reversed<span class="token punctuation">,</span> nrow <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
${validate_component(Image, "Image").$$render($$result, {
          alt: "An example of a plot in the TPL theme.",
          src: "../images/post/introducing-tpltheme/unnamed-chunk-15-1.png"
        }, {}, {})}
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">data <span class="token operator">&lt;-</span> gapminder<span class="token operator">::</span>gapminder <span class="token percent-operator operator">%>%</span>
  dplyr<span class="token operator">::</span>filter<span class="token punctuation">(</span>gapminder<span class="token operator">::</span>gapminder<span class="token operator">$</span>country <span class="token percent-operator operator">%in%</span> c<span class="token punctuation">(</span><span class="token string">"France"</span><span class="token punctuation">,</span> <span class="token string">"Germany"</span><span class="token punctuation">,</span> <span class="token string">"Ireland"</span><span class="token punctuation">,</span> <span class="token string">"Italy"</span><span class="token punctuation">,</span> <span class="token string">"Japan"</span><span class="token punctuation">,</span> <span class="token string">"Norway"</span><span class="token punctuation">,</span> <span class="token string">"Mexico"</span><span class="token punctuation">,</span> <span class="token string">"United States"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  dplyr<span class="token operator">::</span>mutate<span class="token punctuation">(</span>year <span class="token operator">=</span> as.Date<span class="token punctuation">(</span>paste<span class="token punctuation">(</span>year<span class="token punctuation">,</span> <span class="token string">"-01-01"</span><span class="token punctuation">,</span> sep <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">,</span> format<span class="token operator">=</span><span class="token string">'%Y-%b-%d'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

ggplot<span class="token punctuation">(</span>data <span class="token operator">=</span> data<span class="token punctuation">,</span> aes<span class="token punctuation">(</span>x <span class="token operator">=</span> year<span class="token punctuation">,</span> y <span class="token operator">=</span> gdpPercap<span class="token punctuation">,</span> fill <span class="token operator">=</span> country<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  geom_area<span class="token punctuation">(</span>alpha <span class="token operator">=</span> <span class="token number">0.8</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  scale_x_date<span class="token punctuation">(</span>expand <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  scale_y_continuous<span class="token punctuation">(</span>expand <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> labels <span class="token operator">=</span> scales<span class="token operator">::</span>dollar<span class="token punctuation">)</span> <span class="token operator">+</span>
  labs<span class="token punctuation">(</span>title <span class="token operator">=</span> <span class="token string">"GDP Per Capita Over Time"</span><span class="token punctuation">,</span>
       subtitle <span class="token operator">=</span> <span class="token string">"Using the TPL Color Palette"</span><span class="token punctuation">,</span>
       x <span class="token operator">=</span> element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
       y <span class="token operator">=</span> <span class="token string">"GDP Per Capita"</span><span class="token punctuation">,</span>
       fill <span class="token operator">=</span> <span class="token string">"Country"</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  theme<span class="token punctuation">(</span>axis.text.x <span class="token operator">=</span> element_text<span class="token punctuation">(</span>angle <span class="token operator">=</span> <span class="token number">45</span><span class="token punctuation">,</span> hjust <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
${validate_component(Image, "Image").$$render($$result, {
          alt: "An example of a plot in the TPL theme.",
          src: "../images/post/introducing-tpltheme/unnamed-chunk-16-1.png"
        }, {}, {})}
<h3 id="${"restore-defaults"}"><a href="${"#restore-defaults"}">Restore Defaults</a></h3>
<p>By calling <code>undo_tpl_theme</code>, you are able to remove TPL-specific theme
settings and restores to ggplot defaults (but why would you want to do
that?).</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">undo_tpl_theme<span class="token punctuation">(</span><span class="token punctuation">)</span>

ggplot<span class="token punctuation">(</span>iris<span class="token punctuation">,</span> aes<span class="token punctuation">(</span>x<span class="token operator">=</span>jitter<span class="token punctuation">(</span>Sepal.Width<span class="token punctuation">)</span><span class="token punctuation">,</span> y<span class="token operator">=</span>jitter<span class="token punctuation">(</span>Sepal.Length<span class="token punctuation">)</span><span class="token punctuation">,</span> col<span class="token operator">=</span>Species<span class="token punctuation">,</span> size <span class="token operator">=</span> Petal.Length<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
    geom_point<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>
    labs<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">"Sepal Width (cm)"</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token string">"Sepal Length (cm)"</span><span class="token punctuation">,</span> col<span class="token operator">=</span><span class="token string">"Species"</span><span class="token punctuation">,</span> size <span class="token operator">=</span> <span class="token string">"Petal Length"</span><span class="token punctuation">,</span> title<span class="token operator">=</span><span class="token string">"Iris Dataset"</span><span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
<p>This results in the following plot:</p>
${validate_component(Image, "Image").$$render($$result, {
          alt: "An example of a plot in the TPL theme.",
          src: "../images/post/introducing-tpltheme/unnamed-chunk-17-1.png"
        }, {}, {})}
<p>To restore the TPL theme, simply call <code>set_tpl_theme()</code>:</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">set_tpl_theme<span class="token punctuation">(</span><span class="token punctuation">)</span>
last_plot<span class="token punctuation">(</span><span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
${validate_component(Image, "Image").$$render($$result, {
          alt: "An example of a plot in the TPL theme.",
          src: "../images/post/introducing-tpltheme/unnamed-chunk-18-1.png"
        }, {}, {})}`
      })}`;
    });
  }
});

// .svelte-kit/output/server/chunks/map-springfield-65bdac35.js
var map_springfield_65bdac35_exports = {};
__export(map_springfield_65bdac35_exports, {
  default: () => Map_springfield,
  metadata: () => metadata46
});
var import_bowser52, metadata46, Map_springfield;
var init_map_springfield_65bdac35 = __esm({
  ".svelte-kit/output/server/chunks/map-springfield-65bdac35.js"() {
    init_shims();
    init_app_9f378dda();
    init_layout_ef610ed1();
    init_Image_8e30e86c();
    init_BackTo_d882ed88();
    init_global_130d3fe3();
    import_bowser52 = __toModule(require_es5());
    init_CornerTitle_6f993505();
    init_store_8bf23024();
    init_utils_09998264();
    init_IntersectionObserver_4cd4a541();
    metadata46 = {
      "layout": "blog",
      "title": "Create a Streetmap of Any City in R",
      "description": "Creating a beautiful streetmap of my hometown, exclusively in R",
      "date": "2019-11-21",
      "image": "map-springfield/header.png",
      "archived": true,
      "tags": ["r"]
    };
    Map_springfield = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return `${validate_component(Layout4, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata46), {}, {
        default: () => `<p>In this post, I expand upon <a href="${"https://christianburkhart.de/"}" rel="${"nofollow"}">Christian
Burkhart</a>\u2019s wonderful <a href="${"https://ggplot2tutor.com/streetmaps/streetmaps/"}" rel="${"nofollow"}">ggplot2tor
tutorial</a> on streetmap
creation using ggplot2. My process differs slightly from his in that I
include text using <code>geom_label</code>, rather than PowerPoint, to create the
text annotations. (This was much more difficult!)</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">library<span class="token punctuation">(</span>tidyverse<span class="token punctuation">)</span>
library<span class="token punctuation">(</span>gridExtra<span class="token punctuation">)</span>
library<span class="token punctuation">(</span>grid<span class="token punctuation">)</span>
library<span class="token punctuation">(</span>ggplot2<span class="token punctuation">)</span>
library<span class="token punctuation">(</span>lattice<span class="token punctuation">)</span>
library<span class="token punctuation">(</span>osmdata<span class="token punctuation">)</span>
library<span class="token punctuation">(</span>sf<span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
<p>First, per the tutorial, we load street (and river, etc). data:</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">streets <span class="token operator">&lt;-</span> getbb<span class="token punctuation">(</span><span class="token string">"Springfield Missouri"</span><span class="token punctuation">)</span><span class="token percent-operator operator">%>%</span>
  opq<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  add_osm_feature<span class="token punctuation">(</span>key <span class="token operator">=</span> <span class="token string">"highway"</span><span class="token punctuation">,</span>
                  value <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token string">"motorway"</span><span class="token punctuation">,</span> <span class="token string">"primary"</span><span class="token punctuation">,</span>
                            <span class="token string">"secondary"</span><span class="token punctuation">,</span> <span class="token string">"tertiary"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  osmdata_sf<span class="token punctuation">(</span><span class="token punctuation">)</span>

small_streets <span class="token operator">&lt;-</span> getbb<span class="token punctuation">(</span><span class="token string">"Springfield Missouri"</span><span class="token punctuation">)</span><span class="token percent-operator operator">%>%</span>
  opq<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  add_osm_feature<span class="token punctuation">(</span>key <span class="token operator">=</span> <span class="token string">"highway"</span><span class="token punctuation">,</span>
                  value <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token string">"residential"</span><span class="token punctuation">,</span> <span class="token string">"living_street"</span><span class="token punctuation">,</span>
                            <span class="token string">"unclassified"</span><span class="token punctuation">,</span>
                            <span class="token string">"service"</span><span class="token punctuation">,</span> <span class="token string">"footway"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  osmdata_sf<span class="token punctuation">(</span><span class="token punctuation">)</span>

river <span class="token operator">&lt;-</span> getbb<span class="token punctuation">(</span><span class="token string">"Springfield Missouri"</span><span class="token punctuation">)</span><span class="token percent-operator operator">%>%</span>
  opq<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  add_osm_feature<span class="token punctuation">(</span>key <span class="token operator">=</span> <span class="token string">"waterway"</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">"river"</span><span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  osmdata_sf<span class="token punctuation">(</span><span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Next, we define the plot limits, using the lat-long found in the last
step.</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">right <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">93.175</span>
left <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">93.395</span>
bottom <span class="token operator">=</span> <span class="token number">37</span>
top <span class="token operator">=</span> <span class="token number">37.275</span></code>`}<!-- HTML_TAG_END --></pre>
<p>In my plot, I\u2019m going to create a text box to hold the city, state, and
lat/long combination.</p>
<p>We can create the parameters for this box through some manipulations of
the existing plot limits:</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">top_rect <span class="token operator">=</span> <span class="token punctuation">(</span>top <span class="token operator">+</span> bottom<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2.0035</span>
bot_rect <span class="token operator">=</span> bottom <span class="token operator">+</span> <span class="token number">.01</span>
box_height <span class="token operator">=</span> <span class="token punctuation">(</span>top_rect <span class="token operator">+</span> bot_rect<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span>
mid_box <span class="token operator">=</span> <span class="token punctuation">(</span>left <span class="token operator">+</span> right<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Finally, we can create a black and white plot. This follows the same
structure as the ggplot2tor tutorial:</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">plot_bw <span class="token operator">&lt;-</span> ggplot<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  geom_sf<span class="token punctuation">(</span>data <span class="token operator">=</span> streets<span class="token operator">$</span>osm_lines<span class="token punctuation">,</span>
          inherit.aes <span class="token operator">=</span> <span class="token boolean">FALSE</span><span class="token punctuation">,</span>
          color <span class="token operator">=</span> <span class="token string">"#000000"</span><span class="token punctuation">,</span>
          size <span class="token operator">=</span> <span class="token number">.3</span><span class="token punctuation">,</span>
          alpha <span class="token operator">=</span> <span class="token number">.8</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  geom_sf<span class="token punctuation">(</span>data <span class="token operator">=</span> small_streets<span class="token operator">$</span>osm_lines<span class="token punctuation">,</span>
          inherit.aes <span class="token operator">=</span> <span class="token boolean">FALSE</span><span class="token punctuation">,</span>
          color <span class="token operator">=</span> <span class="token string">"#000000"</span><span class="token punctuation">,</span>
          size <span class="token operator">=</span> <span class="token number">.1</span><span class="token punctuation">,</span>
          alpha <span class="token operator">=</span> <span class="token number">.6</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  geom_sf<span class="token punctuation">(</span>data <span class="token operator">=</span> river<span class="token operator">$</span>osm_lines<span class="token punctuation">,</span>
          inherit.aes <span class="token operator">=</span> <span class="token boolean">FALSE</span><span class="token punctuation">,</span>
          color <span class="token operator">=</span> <span class="token string">"#000000"</span><span class="token punctuation">,</span>
          size <span class="token operator">=</span> <span class="token number">.2</span><span class="token punctuation">,</span>
          alpha <span class="token operator">=</span> <span class="token number">.5</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  coord_sf<span class="token punctuation">(</span>xlim <span class="token operator">=</span> c<span class="token punctuation">(</span>left<span class="token punctuation">,</span> right<span class="token punctuation">)</span><span class="token punctuation">,</span>
           ylim <span class="token operator">=</span> c<span class="token punctuation">(</span>bottom<span class="token punctuation">,</span> top<span class="token punctuation">)</span><span class="token punctuation">,</span>
           expand <span class="token operator">=</span> <span class="token boolean">FALSE</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  theme_void<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  theme<span class="token punctuation">(</span>
    plot.background <span class="token operator">=</span> element_rect<span class="token punctuation">(</span>fill <span class="token operator">=</span> <span class="token string">"#FFFFFF"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    panel.background <span class="token operator">=</span> element_rect<span class="token punctuation">(</span>fill <span class="token operator">=</span> <span class="token string">"#FFFFFF"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    plot.margin<span class="token operator">=</span>unit<span class="token punctuation">(</span>c<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">0.5</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"mm"</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Finally, we can introduce our text elements using <code>geom_text</code> (as well
as borders using <code>geom_rect</code>).</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">map_bw <span class="token operator">&lt;-</span> plot_bw <span class="token operator">+</span>
  <span class="token comment"># big box</span>
  geom_rect<span class="token punctuation">(</span>
    aes<span class="token punctuation">(</span>
      xmax <span class="token operator">=</span> right <span class="token operator">-</span> <span class="token number">.005</span><span class="token punctuation">,</span>
      xmin <span class="token operator">=</span> left <span class="token operator">+</span> <span class="token number">.005</span><span class="token punctuation">,</span>
      ymin <span class="token operator">=</span> bottom <span class="token operator">+</span> <span class="token number">.005</span><span class="token punctuation">,</span>
      ymax <span class="token operator">=</span> top <span class="token operator">-</span> <span class="token number">.005</span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
    alpha <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
    color <span class="token operator">=</span> <span class="token string">"black"</span><span class="token punctuation">,</span>
    size <span class="token operator">=</span> <span class="token number">1</span>
  <span class="token punctuation">)</span> <span class="token operator">+</span>
  <span class="token comment"># smaller, label box</span>
  geom_rect<span class="token punctuation">(</span>
    aes<span class="token punctuation">(</span>
      xmax <span class="token operator">=</span> right <span class="token operator">-</span> <span class="token number">.01</span><span class="token punctuation">,</span>
      xmin <span class="token operator">=</span> left <span class="token operator">+</span> <span class="token number">.01</span><span class="token punctuation">,</span>
      ymin <span class="token operator">=</span> bot_rect<span class="token punctuation">,</span>
      ymax <span class="token operator">=</span> top_rect
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
    alpha <span class="token operator">=</span> <span class="token number">.75</span><span class="token punctuation">,</span>
    color <span class="token operator">=</span> <span class="token string">"black"</span><span class="token punctuation">,</span>
    fill <span class="token operator">=</span> <span class="token string">"white"</span><span class="token punctuation">,</span>
    size <span class="token operator">=</span> <span class="token number">.6</span>
  <span class="token punctuation">)</span> <span class="token operator">+</span>
  <span class="token comment"># springfield</span>
  geom_text<span class="token punctuation">(</span>
    aes<span class="token punctuation">(</span>x <span class="token operator">=</span> mid_box<span class="token punctuation">,</span> y <span class="token operator">=</span> box_height <span class="token operator">+</span> <span class="token number">.002</span><span class="token punctuation">,</span>
        label <span class="token operator">=</span> <span class="token string">"SPRINGFIELD&#92;n"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    color <span class="token operator">=</span> <span class="token string">"black"</span><span class="token punctuation">,</span>
    family <span class="token operator">=</span> <span class="token string">"Lato"</span><span class="token punctuation">,</span>
    fontface <span class="token operator">=</span> <span class="token string">"bold"</span><span class="token punctuation">,</span>
    size <span class="token operator">=</span> <span class="token number">9</span>
  <span class="token punctuation">)</span> <span class="token operator">+</span>
  <span class="token comment"># a line that goes behind 'Missouri'</span>
  geom_segment<span class="token punctuation">(</span>aes<span class="token punctuation">(</span>
    x <span class="token operator">=</span> left <span class="token operator">+</span> <span class="token number">.03</span><span class="token punctuation">,</span>
    y <span class="token operator">=</span> <span class="token punctuation">(</span>top_rect <span class="token operator">+</span> bottom<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span>
    xend <span class="token operator">=</span> right <span class="token operator">-</span> <span class="token number">.03</span><span class="token punctuation">,</span>
    yend <span class="token operator">=</span> <span class="token punctuation">(</span>top_rect <span class="token operator">+</span> bottom<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span>
  <span class="token punctuation">)</span><span class="token punctuation">,</span> color <span class="token operator">=</span> <span class="token string">"black"</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  <span class="token comment"># Missouri label</span>
  geom_label<span class="token punctuation">(</span>
    aes<span class="token punctuation">(</span>x <span class="token operator">=</span> mid_box<span class="token punctuation">,</span> y <span class="token operator">=</span> box_height <span class="token operator">-</span> <span class="token number">.005</span><span class="token punctuation">,</span>
        label <span class="token operator">=</span> <span class="token string">"MISSOURI"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    color <span class="token operator">=</span> <span class="token string">"black"</span><span class="token punctuation">,</span>
    fill <span class="token operator">=</span> <span class="token string">"white"</span><span class="token punctuation">,</span>
    <span class="token comment"># alpha = .9,</span>
    label.size <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
    family <span class="token operator">=</span> <span class="token string">"Lato"</span><span class="token punctuation">,</span>
    <span class="token comment"># fontface = "thin",</span>
    size <span class="token operator">=</span> <span class="token number">7</span>
  <span class="token punctuation">)</span> <span class="token operator">+</span>
  <span class="token comment"># coords</span>
  geom_text<span class="token punctuation">(</span>
    aes<span class="token punctuation">(</span>x <span class="token operator">=</span> mid_box<span class="token punctuation">,</span> y <span class="token operator">=</span> box_height <span class="token operator">-</span> <span class="token number">.02</span><span class="token punctuation">,</span>
        label <span class="token operator">=</span> <span class="token string">"37.2090\xB0 N / 93.2923\xB0 W"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    color <span class="token operator">=</span> <span class="token string">"black"</span><span class="token punctuation">,</span>
    family <span class="token operator">=</span> <span class="token string">"Lato"</span><span class="token punctuation">,</span>
    size <span class="token operator">=</span> <span class="token number">4</span>
  <span class="token punctuation">)</span> <span class="token operator">+</span>
  <span class="token comment"># me!</span>
  geom_label<span class="token punctuation">(</span>
    aes<span class="token punctuation">(</span>
      x <span class="token operator">=</span> left <span class="token operator">+</span> <span class="token number">.035</span><span class="token punctuation">,</span>
      y <span class="token operator">=</span> top_rect <span class="token operator">+</span> <span class="token number">.005</span><span class="token punctuation">,</span>
      label <span class="token operator">=</span> <span class="token string">"Design: Connor Rothschild"</span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
    size <span class="token operator">=</span> <span class="token number">1.5</span><span class="token punctuation">,</span>
    color <span class="token operator">=</span> <span class="token string">"black"</span><span class="token punctuation">,</span>
    fill <span class="token operator">=</span> <span class="token string">"white"</span><span class="token punctuation">,</span>
    label.size <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
    family <span class="token operator">=</span> <span class="token string">"Lato"</span>
  <span class="token punctuation">)</span>

map_bw</code>`}<!-- HTML_TAG_END --></pre>
${validate_component(Image, "Image").$$render($$result, {
          alt: "A black and white map of Springfield, Missouri.",
          src: "../images/post/map-springfield/bw_map_springfield.png",
          width: "50%",
          centered: true
        }, {}, {})}
<p>And if we replicate that code with different colors, the possibilities are endless:</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">plot_gold <span class="token operator">&lt;-</span> ggplot<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  geom_sf<span class="token punctuation">(</span>
    data <span class="token operator">=</span> streets<span class="token operator">$</span>osm_lines<span class="token punctuation">,</span>
    inherit.aes <span class="token operator">=</span> <span class="token boolean">FALSE</span><span class="token punctuation">,</span>
    color <span class="token operator">=</span> <span class="token string">"steelblue"</span><span class="token punctuation">,</span>
    size <span class="token operator">=</span> <span class="token number">.3</span><span class="token punctuation">,</span>
    alpha <span class="token operator">=</span> <span class="token number">.8</span>
  <span class="token punctuation">)</span> <span class="token operator">+</span>
  geom_sf<span class="token punctuation">(</span>
    data <span class="token operator">=</span> small_streets<span class="token operator">$</span>osm_lines<span class="token punctuation">,</span>
    inherit.aes <span class="token operator">=</span> <span class="token boolean">FALSE</span><span class="token punctuation">,</span>
    color <span class="token operator">=</span> <span class="token string">"#ffbe7f"</span><span class="token punctuation">,</span>
    size <span class="token operator">=</span> <span class="token number">.1</span><span class="token punctuation">,</span>
    alpha <span class="token operator">=</span> <span class="token number">.6</span>
  <span class="token punctuation">)</span> <span class="token operator">+</span>
  geom_sf<span class="token punctuation">(</span>
    data <span class="token operator">=</span> river<span class="token operator">$</span>osm_lines<span class="token punctuation">,</span>
    inherit.aes <span class="token operator">=</span> <span class="token boolean">FALSE</span><span class="token punctuation">,</span>
    color <span class="token operator">=</span> <span class="token string">"#ffbe7f"</span><span class="token punctuation">,</span>
    size <span class="token operator">=</span> <span class="token number">.2</span><span class="token punctuation">,</span>
    alpha <span class="token operator">=</span> <span class="token number">.5</span>
  <span class="token punctuation">)</span> <span class="token operator">+</span>
  coord_sf<span class="token punctuation">(</span>
    xlim <span class="token operator">=</span> c<span class="token punctuation">(</span>left<span class="token punctuation">,</span> right<span class="token punctuation">)</span><span class="token punctuation">,</span>
    ylim <span class="token operator">=</span> c<span class="token punctuation">(</span>bottom<span class="token punctuation">,</span> top<span class="token punctuation">)</span><span class="token punctuation">,</span>
    expand <span class="token operator">=</span> <span class="token boolean">FALSE</span>
  <span class="token punctuation">)</span> <span class="token operator">+</span>
  theme_void<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  theme<span class="token punctuation">(</span>
    plot.background <span class="token operator">=</span> element_rect<span class="token punctuation">(</span>fill <span class="token operator">=</span> <span class="token string">"#282828"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    panel.background <span class="token operator">=</span> element_rect<span class="token punctuation">(</span>fill <span class="token operator">=</span> <span class="token string">"#282828"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    plot.margin <span class="token operator">=</span> unit<span class="token punctuation">(</span>c<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"mm"</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span>

map_gold <span class="token operator">&lt;-</span> plot_gold <span class="token operator">+</span>
  geom_rect<span class="token punctuation">(</span>
    aes<span class="token punctuation">(</span>
      xmax <span class="token operator">=</span> right <span class="token operator">-</span> <span class="token number">.005</span><span class="token punctuation">,</span>
      xmin <span class="token operator">=</span> left <span class="token operator">+</span> <span class="token number">.005</span><span class="token punctuation">,</span>
      ymin <span class="token operator">=</span> bottom <span class="token operator">+</span> <span class="token number">.005</span><span class="token punctuation">,</span>
      ymax <span class="token operator">=</span> top <span class="token operator">-</span> <span class="token number">.005</span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
    alpha <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
    color <span class="token operator">=</span> <span class="token string">"white"</span><span class="token punctuation">,</span>
    size <span class="token operator">=</span> <span class="token number">1</span>
  <span class="token punctuation">)</span> <span class="token operator">+</span>
  geom_rect<span class="token punctuation">(</span>
    aes<span class="token punctuation">(</span>
      xmax <span class="token operator">=</span> right <span class="token operator">-</span> <span class="token number">.01</span><span class="token punctuation">,</span>
      xmin <span class="token operator">=</span> left <span class="token operator">+</span> <span class="token number">.01</span><span class="token punctuation">,</span>
      ymin <span class="token operator">=</span> bot_rect<span class="token punctuation">,</span>
      ymax <span class="token operator">=</span> top_rect
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
    alpha <span class="token operator">=</span> <span class="token number">.5</span><span class="token punctuation">,</span>
    color <span class="token operator">=</span> <span class="token string">"#ffbe7f"</span><span class="token punctuation">,</span>
    fill <span class="token operator">=</span> <span class="token string">"#282828"</span><span class="token punctuation">,</span>
    size <span class="token operator">=</span> <span class="token number">.5</span>
  <span class="token punctuation">)</span> <span class="token operator">+</span>
  geom_text<span class="token punctuation">(</span>
    aes<span class="token punctuation">(</span>x <span class="token operator">=</span> mid_box<span class="token punctuation">,</span> y <span class="token operator">=</span> box_height <span class="token operator">+</span> <span class="token number">.002</span><span class="token punctuation">,</span>
        label <span class="token operator">=</span> <span class="token string">"SPRINGFIELD&#92;n"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    color <span class="token operator">=</span> <span class="token string">"white"</span><span class="token punctuation">,</span>
    family <span class="token operator">=</span> <span class="token string">"Lato"</span><span class="token punctuation">,</span>
    fontface <span class="token operator">=</span> <span class="token string">"bold"</span><span class="token punctuation">,</span>
    size <span class="token operator">=</span> <span class="token number">9</span>
  <span class="token punctuation">)</span> <span class="token operator">+</span>
  geom_segment<span class="token punctuation">(</span>aes<span class="token punctuation">(</span>
    x <span class="token operator">=</span> left <span class="token operator">+</span> <span class="token number">.03</span><span class="token punctuation">,</span>
    y <span class="token operator">=</span> <span class="token punctuation">(</span>top_rect <span class="token operator">+</span> bottom<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span>
    xend <span class="token operator">=</span> right <span class="token operator">-</span> <span class="token number">.03</span><span class="token punctuation">,</span>
    yend <span class="token operator">=</span> <span class="token punctuation">(</span>top_rect <span class="token operator">+</span> bottom<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span>
  <span class="token punctuation">)</span><span class="token punctuation">,</span>
  color <span class="token operator">=</span> <span class="token string">"#ffbe7f"</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  geom_label<span class="token punctuation">(</span>
    aes<span class="token punctuation">(</span>x <span class="token operator">=</span> mid_box<span class="token punctuation">,</span> y <span class="token operator">=</span> box_height <span class="token operator">-</span> <span class="token number">.005</span><span class="token punctuation">,</span>
        label <span class="token operator">=</span> <span class="token string">"MISSOURI"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    color <span class="token operator">=</span> <span class="token string">"white"</span><span class="token punctuation">,</span>
    fill <span class="token operator">=</span> <span class="token string">"#282828"</span><span class="token punctuation">,</span>
    <span class="token comment"># alpha = .9,</span>
    label.size <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
    family <span class="token operator">=</span> <span class="token string">"Lato"</span><span class="token punctuation">,</span>
    <span class="token comment"># fontface = "thin",</span>
    size <span class="token operator">=</span> <span class="token number">7</span>
  <span class="token punctuation">)</span> <span class="token operator">+</span>
  geom_text<span class="token punctuation">(</span>
    aes<span class="token punctuation">(</span>x <span class="token operator">=</span> mid_box<span class="token punctuation">,</span> y <span class="token operator">=</span> box_height <span class="token operator">-</span> <span class="token number">.02</span><span class="token punctuation">,</span>
        label <span class="token operator">=</span> <span class="token string">"37.2090\xB0 N / 93.2923\xB0 W"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    color <span class="token operator">=</span> <span class="token string">"white"</span><span class="token punctuation">,</span>
    family <span class="token operator">=</span> <span class="token string">"Lato"</span><span class="token punctuation">,</span>
    size <span class="token operator">=</span> <span class="token number">4</span>
  <span class="token punctuation">)</span> <span class="token operator">+</span>
  geom_label<span class="token punctuation">(</span>
    aes<span class="token punctuation">(</span>
      x <span class="token operator">=</span> left <span class="token operator">+</span> <span class="token number">.035</span><span class="token punctuation">,</span>
      y <span class="token operator">=</span> top_rect <span class="token operator">+</span> <span class="token number">.005</span><span class="token punctuation">,</span>
      label <span class="token operator">=</span> <span class="token string">"Design: Connor Rothschild"</span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
    size <span class="token operator">=</span> <span class="token number">1.5</span><span class="token punctuation">,</span>
    color <span class="token operator">=</span> <span class="token string">"white"</span><span class="token punctuation">,</span>
    fill <span class="token operator">=</span> <span class="token string">"#282828"</span><span class="token punctuation">,</span>
    label.size <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
    family <span class="token operator">=</span> <span class="token string">"Lato"</span>
  <span class="token punctuation">)</span>

map_gold</code>`}<!-- HTML_TAG_END --></pre>
${validate_component(Image, "Image").$$render($$result, {
          alt: "A gold map of Springfield, Missouri.",
          src: "../images/post/map-springfield/gold_map_springfield.png",
          width: "50%",
          centered: true
        }, {}, {})}`
      })}`;
    });
  }
});

// .svelte-kit/output/server/chunks/nuxt-blog-starter-99b71689.js
var nuxt_blog_starter_99b71689_exports = {};
__export(nuxt_blog_starter_99b71689_exports, {
  default: () => Nuxt_blog_starter,
  metadata: () => metadata47
});
var import_bowser53, import_prismjs7, import_prism_normalize_whitespace7, metadata47, Nuxt_blog_starter;
var init_nuxt_blog_starter_99b71689 = __esm({
  ".svelte-kit/output/server/chunks/nuxt-blog-starter-99b71689.js"() {
    init_shims();
    init_app_9f378dda();
    init_layout_ef610ed1();
    init_Image_8e30e86c();
    init_Info_43a233e8();
    init_Code_71f36c68();
    init_BackTo_d882ed88();
    init_global_130d3fe3();
    import_bowser53 = __toModule(require_es5());
    init_CornerTitle_6f993505();
    init_store_8bf23024();
    init_utils_09998264();
    init_IntersectionObserver_4cd4a541();
    import_prismjs7 = __toModule(require_prism());
    init_prism_line_numbers();
    import_prism_normalize_whitespace7 = __toModule(require_prism_normalize_whitespace());
    init_prism_line_highlight();
    init_prism_file_highlight();
    init_prism_bash();
    init_prism_css();
    init_prism_r();
    init_prism_json();
    init_prism_yaml();
    metadata47 = {
      "layout": "blog",
      "title": "Announcing the Nuxt Blog Starter",
      "date": "2021-02-10",
      "description": "A minimal, content-focused blog site built with NuxtJS and Bulma",
      "image": "nuxt-blog-starter/header.png",
      "featured": true,
      "tags": ["vue", "nuxt", "package"]
    };
    Nuxt_blog_starter = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return `${validate_component(Layout4, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata47), {}, {
        default: () => `<p>I\u2019m happy to share a <a href="${"https://github.com/connorrothschild/nuxt-blog-starter"}" rel="${"nofollow"}">new starter template</a> for minimal, content-focused blogs using NuxtJS and Bulma for styling. The site is a more simplified version of <a href="${"https://www.connorrothschild.com/"}" rel="${"nofollow"}">my own site</a>.</p>
<h2 id="${"why-nuxt"}"><a href="${"#why-nuxt"}">Why Nuxt?</a></h2>
<p>I\u2019ve went through my fair share of blogs. See <a href="${"https://connorrothschild.github.io/v1/"}" rel="${"nofollow"}">version 1</a> and <a href="${"https://connorrothschild.github.io/v2/"}" rel="${"nofollow"}">version 2</a>. I moved to a site using Nuxt for three reasons:</p>
<h4 id="${"1-speed-and-user-experience"}"><a href="${"#1-speed-and-user-experience"}">1. Speed and user experience</a></h4>
<p>Nuxt is fast by default. It uses server-side rendering, rather than client-side rendering, which means that content is rendered before users visit your site. As explained on the <a href="${"https://nuxtjs.org/post/going-full-static/"}" rel="${"nofollow"}">Nuxt Blog</a>:</p>
<blockquote><p><code>nuxt generate</code> with <code>target: &#39;static&#39;</code> will pre-render all your pages to HTML and save a payload file in order to mock <code>asyncData</code> and <code>fetch</code> on client-side navigation, this means no more HTTP calls to your API on client-side navigation. By extracting the page payload to a js file, it also reduces the HTML size served as well as preloading it (from the in the header) for optimal performance.</p></blockquote>
<p>You can see the impact of SSR on performance by comparing my <a href="${"https://developers.google.com/speed/pagespeed/insights/?url=https%3A%2F%2Fconnorrothschild.github.io%2Fv2%2F&tab=desktop"}" rel="${"nofollow"}">last blog iteration</a> to <a href="${"https://developers.google.com/speed/pagespeed/insights/?url=https%3A%2F%2Fwww.connorrothschild.com%2F&tab=desktop"}" rel="${"nofollow"}">this one</a>.</p>
<p>The former, built using <a href="${"https://bookdown.org/yihui/blogdown/"}" rel="${"nofollow"}">R <code>blogdown</code></a> and <a href="${"https://themes.gohugo.io/academic/"}" rel="${"nofollow"}">Hugo Academic</a>, scored 72/100 on desktop performance, compared to a 100/100 on this version:</p>
${validate_component(Image, "Image").$$render($$result, {
          src: "../images/post/nuxt-blog-starter/old-site-perf.png",
          alt: "Old site performance. 72/100",
          width: "48%"
        }, {}, {})}
${validate_component(Image, "Image").$$render($$result, {
          src: "../images/post/nuxt-blog-starter/new-site-perf.png",
          alt: "New site performance. 100/100",
          width: "48%"
        }, {}, {})}
<h4 id="${"2-flexibility-and-power"}"><a href="${"#2-flexibility-and-power"}">2. Flexibility and power</a></h4>
<p>Too often, making \u2018fast\u2019 websites comes at the cost of flexibility and power. For example, the first version of my website was based on a <a href="${"https://github.com/katmh/point-theme"}" rel="${"nofollow"}">Jekyll theme</a> that was pretty, functional, and fast, but limited in its flexibility. That is, I was locked into the default appearance of the site, unless I wanted to really get into the weeds editing CSS and writing my own HTML markup. (At that point, I might as well had started a new blog or find another theme!)</p>
<p>I built this template because it is as performant as my V1 site (both receive over 95/100 on <a href="${"https://developers.google.com/speed/pagespeed/insights/"}" rel="${"nofollow"}">PageSpeed Insights</a>), but with much more flexibility. In my experience, modifying the appearance of this site\u2014whether thats through its constituent components in the <code>components/</code> folder, or globally in the <code>assets/scss/colors.scss</code> file\u2014is seamless while also allowing greater power than modifying the defaults in other, simpler blog templates.</p>
<p>Moreover, this kind of flexibility scales up with your knowledge of Vue and Nuxt. If you are already familiar with the technologies, this template should be ready for total transformation through whatever modifications you find necessary. Otherwise, all you need to do is follow the simple instructions in the template\u2019s <a href="${"https://github.com/connorrothschild/nuxt-blog-starter"}" rel="${"nofollow"}">README</a>. To test this, I\u2019ve helped a non-technical friend build out his <a href="${"https://dyllonschmehl.netlify.app/"}" rel="${"nofollow"}">own website</a> from this theme, and seen firsthand how intuitive getting started can really be.</p>
<h4 id="${"3-learning-new-tech"}"><a href="${"#3-learning-new-tech"}">3. Learning new tech</a></h4>
<p>A final reason to make this jump is to get familiar with <a href="${"https://www.javascript.com/"}" rel="${"nofollow"}">JavaScript</a>, <a href="${"https://vuejs.org/"}" rel="${"nofollow"}">Vue</a>, <a href="${"https://nuxtjs.org/"}" rel="${"nofollow"}">Nuxt</a>, and <a href="${"https://www.w3schools.com/css/"}" rel="${"nofollow"}">CSS</a>. Many of my readers come from a visualization-centric background, and are most proficient in R. (Awesome!) I learned Vue (and then Nuxt) from scratch, by building a <a href="${"https://connorrothschild.github.io/cudi-hums/"}" rel="${"nofollow"}">few</a> <a href="${"https://connorrothschild.github.io/how-many-people/"}" rel="${"nofollow"}">projects</a> and subsequently, my personal website!</p>
<p><strong>Learning new tech never hurts.</strong> You will almost never regret spending a few hours to have a basic handle of a new language or tool. Get started with this template, see how it feels, and see if you like it! (If not, ditch the site! I won\u2019t be offended.)</p>
<h2 id="${"why-this-template-specifically"}"><a href="${"#why-this-template-specifically"}">Why this template specifically?</a></h2>
<p>I didn\u2019t invent Nuxt, nor the portfolio site. There are a few other options for powerful, pretty starter templates using NuxtJS. In particular, I like <a href="${"https://github.com/marinaaisa/nuxt-markdown-blog-starter"}" rel="${"nofollow"}">Marina Aisa\u2019s</a> and <a href="${"https://templates.netlify.com/template/awake-blog-template-nuxt/"}" rel="${"nofollow"}">Daniel Kelly\u2019s</a>.</p>
<p>That being said, I think my site is pretty cool. In creating the template, I\u2019ve aimed for a mix of <strong>out-of-the-box features that \u201Cjust work\u201D</strong>, with the <strong>ability to customize as necessary.</strong> I want to allow new users, who have little to no experience with web development, to create a blog, and allow advanced users, who probably know this stuff better than me, to get started with a powerful and customizable template.</p>
<p>There are a few features I think make this starter template unique:</p>
<h3 id="${"easy-theming"}"><a href="${"#easy-theming"}">Easy theming</a></h3>
<p>The site relies on three colors: a primary (background), secondary (accent), and a primary-invert (text). These are all defined in Sass variables that live in <code>assets/scss/colors.scss</code>. To change the appearance of your site, simply modify the colors you\u2019d like to see as your background (<code>$primary</code>), your text (<code>$text</code>), and your accent (<code>$secondary</code>). Obviously, make sure your <code>$primary</code> and <code>$text</code> colors have sufficient contrast.</p>
<h4 id="${"dark-modelight-mode"}"><a href="${"#dark-modelight-mode"}">Dark mode/light mode</a></h4>
<p>An example of this can be seen below the Sass defaults that live within <code>assets/scss/colors.scss</code>. Simply uncomment those lines (preceded by the comment \u201CLIGHT MODE\u201D) to see your site with light mode defaults.</p>
${validate_component(Image, "Image").$$render($$result, {
          src: "../images/post/nuxt-blog-starter/dark.png",
          alt: "Dark mode",
          width: "49%"
        }, {}, {})}
${validate_component(Image, "Image").$$render($$result, {
          src: "../images/post/nuxt-blog-starter/light.png",
          alt: "Light mode",
          width: "49%"
        }, {}, {})}
<h3 id="${"dope-transitions"}"><a href="${"#dope-transitions"}">Dope transitions</a></h3>
<p>Nuxt makes transitions easy. This template expands upon Nuxt\u2019s powerful page transitions by using <a href="${"https://greensock.com/gsap/"}" rel="${"nofollow"}">Greensock\u2019s GSAP</a>. In particular, I define elements that should fade in nicely for each page, like this:</p>
${validate_component(Code, "Code").$$render($$result, { language: "js" }, {}, {
          default: () => `<pre class="${"language-js"}"><!-- HTML_TAG_START -->${`<code class="language-js">transition<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
    mode<span class="token operator">:</span> <span class="token string">'out-in'</span><span class="token punctuation">,</span>
    css<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token function">enter</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        TweenMax<span class="token punctuation">.</span><span class="token function">fromTo</span><span class="token punctuation">(</span><span class="token string">".title"</span><span class="token punctuation">,</span> 
            <span class="token punctuation">&#123;</span>x<span class="token operator">:</span> <span class="token string">"10%"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>x<span class="token operator">:</span> <span class="token string">"0%"</span> <span class="token punctuation">,</span> duration<span class="token operator">:</span> <span class="token number">0.1</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        TweenMax<span class="token punctuation">.</span><span class="token function">fromTo</span><span class="token punctuation">(</span><span class="token string">".subtitle, .card, .img"</span><span class="token punctuation">,</span>
            <span class="token punctuation">&#123;</span>x<span class="token operator">:</span> <span class="token string">"10%"</span><span class="token punctuation">,</span> autoAlpha<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
            <span class="token punctuation">&#123;</span>x<span class="token operator">:</span> <span class="token string">"0%"</span><span class="token punctuation">,</span> autoAlpha<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> delay<span class="token operator">:</span> <span class="token number">0.25</span><span class="token punctuation">,</span> duration<span class="token operator">:</span> <span class="token number">0.5</span><span class="token punctuation">,</span> ease<span class="token operator">:</span> Power3<span class="token punctuation">.</span>easeOut<span class="token punctuation">&#125;</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">,</span></code>`}<!-- HTML_TAG_END --></pre>`
        })}
<p>This creates some subtle yet attractive page transitions:</p>
${validate_component(Image, "Image").$$render($$result, {
          src: "../images/post/nuxt-blog-starter/transitions.gif",
          alt: "GIF showcasing transitions of home page, to blog post pagfe, to a single blog post."
        }, {}, {})}
<p>You can modify these transitions by adding and removing elements in the CSS selector parameters for each page\u2019s <code>enter()</code> property.</p>
<h3 id="${"meta-tagsseo"}"><a href="${"#meta-tagsseo"}">Meta tags/SEO</a></h3>
<p>The function <code>getSiteMeta()</code>, found in the <code>utils/</code> folder, allows for different meta tags for each page and for each blog post. The function allows the Twitter Cards for my home page and for a blog post to look different, like this:</p>
${validate_component(Image, "Image").$$render($$result, {
          src: "../images/post/nuxt-blog-starter/home-card.png",
          alt: "Twitter card of homepage",
          width: "47.2%"
        }, {}, {})}
${validate_component(Image, "Image").$$render($$result, {
          src: "../images/post/nuxt-blog-starter/blog-card.png",
          alt: "Twitter card of blog post page",
          width: "50%"
        }, {}, {})}
<p>The site is set up so that your cards will appear this way automatically! All you will have to do is edit <a href="${"https://github.com/connorrothschild/nuxt-blog-starter/blob/master/utils/getSiteMeta.js"}" rel="${"nofollow"}"><code>utils/getSiteMeta.js</code></a> with your specific information. Page-specific meta tags are also helpful for search engine optimization; your site might attract a larger number of visitors if it covers a wider variety of keywords.</p>
<h2 id="${"blog-features"}"><a href="${"#blog-features"}">Blog features</a></h2>
<p>This site comes with all the same blog capabilities as a normal site, such as syntax highlighting, images, HTML support, and Vue components. Read <a href="${"https://nuxtjs.org/post/creating-blog-with-nuxt-content/"}" rel="${"nofollow"}">this post</a> if you\u2019re curious about features.</p>
<p>You can also include a few custom components I\u2019ve made:</p>
<h3 id="${"info-boxes"}"><a href="${"#info-boxes"}">Info boxes</a></h3>
<p><strong><a href="${"https://github.com/connorrothschild/nuxt-blog-starter/blob/master/components/global/InfoBox.vue"}" rel="${"nofollow"}"><code>InfoBox.vue</code></a></strong> is a component that allows you to put notes/warnings/messages in your blog posts. Feel free to edit the component to adjust its styling.</p>
${validate_component(Info, "Info").$$render($$result, {}, {}, {
          default: () => `<p>Info boxes look like this!</p>`
        })}
<h3 id="${"images"}"><a href="${"#images"}">Images</a></h3>
<p><strong><a href="${"https://github.com/connorrothschild/nuxt-blog-starter/blob/master/components/global/InlineImage.vue"}" rel="${"nofollow"}"><code>InlineImage.vue</code></a></strong> optimizes and handles the messy parts of images.</p>
<p>In specific, it:</p>
<ul><li>Allows for fullscreen, gallery views via <a href="${"https://github.com/crowdbotics/v-img"}" rel="${"nofollow"}"><code>v-img</code></a>.</li>
<li>Optimizes images with <a href="${"https://github.com/juliomrqz/nuxt-optimized-images"}" rel="${"nofollow"}"><code>nuxt-optimized-images</code></a>.</li></ul>
<h3 id="${"videos"}"><a href="${"#videos"}">Videos</a></h3>
<p><strong><a href="${"https://github.com/connorrothschild/nuxt-blog-starter/blob/master/components/global/ResponsiveVideo.vue"}" rel="${"nofollow"}"><code>ResponsiveVideo.vue</code></a></strong> takes a YouTube url (or otherwise embeddable video link) and makes it responsive.</p>
<p>You can see all of these components in action in the <a href="${"https://nuxt-blog-starter.netlify.app/post/welcome"}" rel="${"nofollow"}">sample blog post</a>.</p>
<h2 id="${"get-started"}"><a href="${"#get-started"}">Get started</a></h2>
<p>Get started! <a href="${"https://github.com/connorrothschild/nuxt-blog-starter"}" rel="${"nofollow"}">Fork the repository here</a> and follow instructions in the README to get started. Please reach out with any questions, either through filing an issue or via <a href="${"mailto:connor@connorrothschild.com"}">email</a>.</p>`
      })}`;
    });
  }
});

// .svelte-kit/output/server/chunks/refugee-trends-97b67ae7.js
var refugee_trends_97b67ae7_exports = {};
__export(refugee_trends_97b67ae7_exports, {
  default: () => Refugee_trends,
  metadata: () => metadata48
});
var import_bowser54, metadata48, Refugee_trends;
var init_refugee_trends_97b67ae7 = __esm({
  ".svelte-kit/output/server/chunks/refugee-trends-97b67ae7.js"() {
    init_shims();
    init_app_9f378dda();
    init_layout_ef610ed1();
    init_Image_8e30e86c();
    init_BackTo_d882ed88();
    init_global_130d3fe3();
    import_bowser54 = __toModule(require_es5());
    init_CornerTitle_6f993505();
    init_store_8bf23024();
    init_utils_09998264();
    init_IntersectionObserver_4cd4a541();
    metadata48 = {
      "layout": "blog",
      "title": "Trends in Refugee Acceptance, 2002 to 2019",
      "description": "Or, how a single line of code can create a beautiful small multiples US map.",
      "date": "2020-02-02",
      "image": "refugee-trends/header.png",
      "archived": true,
      "tags": ["analysis", "r"]
    };
    Refugee_trends = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return `${validate_component(Layout4, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata48), {}, {
        default: () => `${validate_component(Image, "Image").$$render($$result, {
          alt: "A small multiples map of refugee acceptance over time, across states",
          src: "../images/post/refugee-trends/featured.png"
        }, {}, {})}
<p>In <a href="${"https://connorrothschild.github.io/map-missing-migrants/"}" rel="${"nofollow"}">previous projects</a>, I\u2019ve explored how migration has unfolded across <em>places</em>: where migrants travel, where they go missing, and where their journeys come to a fatal end.</p>
<p>Next, I wanted to see how <em>host countries</em> have approached the migrant and refugee crisis, with a particular focus on the United States. In my mind, an effective visualization of the U.S.\u2019s response to an increasing number of refugees needs to present two things: how refugee acceptance has changed <em>over time</em> and how refugee acceptance differs <em>across states.</em></p>
<p>An effective way to present both of these trends is with a map of <a href="${"https://en.wikipedia.org/wiki/Small_multiple"}" rel="${"nofollow"}">small multiple</a> line charts. For aesthetic purposes, it would also be nice to arrange these multiples in a shape that vaguely resembles the United States. (This also makes it easier for readers to find their state of interest.)</p>
<p>There are examples of these types of small multiple maps across the internet. The Washington Post\u2019s <a href="${"https://www.washingtonpost.com/graphics/politics/how-fair-is-the-electoral-college/"}" rel="${"nofollow"}">overview of the electoral college</a> was visualized in the following way:</p>
${validate_component(Image, "Image").$$render($$result, {
          alt: "Washington Post small multiples map of electoral college data",
          src: "../images/post/refugee-trends/wapo.png"
        }, {}, {})}
<p>You can also find an overview of <em>why</em> they work, and some additional examples, on the <a href="${"https://policyviz.com/2016/05/19/small-multiple-tile-grid-map/"}" rel="${"nofollow"}">PolicyViz</a> blog:</p>
${validate_component(Image, "Image").$$render($$result, {
          alt: "Policy Viz's small multiples of overall voting results over time",
          src: "../images/post/refugee-trends/policyviz.jpg"
        }, {}, {})}
<h2 id="${"making-it-in-r"}"><a href="${"#making-it-in-r"}">Making it in R</a></h2>
<p>The process of creating a small multiple tile grid map is relatively easy in R (like most things done in R). It is considerably more difficult in D3.js; if you\u2019re interested in that type of thing, you can take a look at <a href="${"https://bl.ocks.org/jinniluo/a95b27b1f4ea65ae94ab6ca3fcfb5934#index.html"}" rel="${"nofollow"}">this code</a> for inspiration.</p>
<h4 id="${"step-1-build-the-basic-line-chart"}"><a href="${"#step-1-build-the-basic-line-chart"}">Step 1: Build the basic line chart</a></h4>
<p>The first step (after obnoxious data <a href="${"https://raw.githubusercontent.com/connorrothschild/R/master/refugee-trends/merge.R"}" rel="${"nofollow"}">merging</a> and cleaning) is getting a feel for the basic line chart. To do so, we can visualize the macro-level trends of refugee acceptance across <em>all states</em> combined.</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">data <span class="token percent-operator operator">%>%</span>
  group_by<span class="token punctuation">(</span>region_name_3<span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  summarise<span class="token punctuation">(</span>textbox37 <span class="token operator">=</span> sum<span class="token punctuation">(</span>textbox37<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  ggplot<span class="token punctuation">(</span>aes<span class="token punctuation">(</span>x <span class="token operator">=</span> region_name_3<span class="token punctuation">,</span> y <span class="token operator">=</span> textbox37<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  geom_line<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  labs<span class="token punctuation">(</span>title <span class="token operator">=</span> <span class="token string">"Refugee Acceptance on the Decline"</span><span class="token punctuation">,</span>
       subtitle <span class="token operator">=</span> <span class="token string">"Number of refugees accepted annually, 2002 - 2019"</span><span class="token punctuation">,</span>
       x <span class="token operator">=</span> element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
       y <span class="token operator">=</span> element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  scale_y_continuous<span class="token punctuation">(</span>labels <span class="token operator">=</span> scales<span class="token operator">::</span>comma_format<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  scale_x_continuous<span class="token punctuation">(</span>breaks <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">2002</span><span class="token punctuation">,</span> <span class="token number">2019</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
${validate_component(Image, "Image").$$render($$result, {
          alt: "A small multiples map of refugee acceptance over time, across states",
          src: "../images/post/refugee-trends/macro.jpg"
        }, {}, {})}
<p>Now we have the answer to our first question: <strong>how has refugee acceptance changed over time?</strong> The answer: pretty drastically. The US accepted nearly 100,000 refugees in 2016; 2 years later, that number was barely over 20,000.</p>
<h4 id="${"step-2-make-small-multiples"}"><a href="${"#step-2-make-small-multiples"}">Step 2: Make small multiples</a></h4>
<p>Next, we make 50 of these lines: one for each US state. We do so using Ryan Hafen\u2019s <code>geofacet</code> <a href="${"https://hafen.github.io/geofacet/rd.html"}" rel="${"nofollow"}">package</a>.</p>
<p>It\u2019s as simple as adding one line of code to our previous plot:</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">facet_geo<span class="token punctuation">(</span><span class="token operator">~</span> state<span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
<p>This makes a plot that looks like this:</p>
${validate_component(Image, "Image").$$render($$result, {
          alt: "first try",
          src: "../images/post/refugee-trends/firsttry.jpg"
        }, {}, {})}
<p>It\u2019s alright, but not perfect! There are a few improvements we can definitely make.</p>
<p>For one, the axis labels overlap. We already know the range of years is between 2002 and 2019 (its in our subtitle!). So we can remove our x axis labels.</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">theme<span class="token punctuation">(</span>
  axis.text.x <span class="token operator">=</span> element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  axis.ticks.x <span class="token operator">=</span> element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Second, The axis lines (on both axes) seem unnecessary and (the x-axis specifically) can sometimes conceal trends for those states with lower values. Let\u2019s remove those too!</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">theme<span class="token punctuation">(</span>
  axis.line.x <span class="token operator">=</span> element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  axis.line.y <span class="token operator">=</span> element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Finally, I don\u2019t like huge gray boxes around my axis labels. Could we make those transparent?</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">theme(
    strip.background = element_rect(color = &quot;white&quot;)
)</code>`}<!-- HTML_TAG_END --></pre>
<p>Add it all together (and tweak the font size), and we get this:</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">data <span class="token percent-operator operator">%>%</span>
  group_by<span class="token punctuation">(</span>region_name_3<span class="token punctuation">,</span> state<span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  summarise<span class="token punctuation">(</span>textbox37 <span class="token operator">=</span> sum<span class="token punctuation">(</span>textbox37<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  ggplot<span class="token punctuation">(</span>aes<span class="token punctuation">(</span>x <span class="token operator">=</span> region_name_3<span class="token punctuation">,</span> y <span class="token operator">=</span> textbox37<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  geom_line<span class="token punctuation">(</span>color <span class="token operator">=</span> <span class="token string">"black"</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  scale_x_continuous<span class="token punctuation">(</span>breaks <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">2002</span><span class="token punctuation">,</span><span class="token number">2019</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  scale_y_continuous<span class="token punctuation">(</span>breaks <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">12000</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  facet_geo<span class="token punctuation">(</span><span class="token operator">~</span> state<span class="token punctuation">,</span> grid <span class="token operator">=</span> <span class="token string">"us_state_grid1"</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  labs<span class="token punctuation">(</span>title <span class="token operator">=</span> <span class="token string">"Refugee Acceptance on the Decline"</span><span class="token punctuation">,</span>
       subtitle <span class="token operator">=</span> <span class="token string">"Number of refugees accepted annually, 2002 - 2019"</span><span class="token punctuation">,</span>
       x <span class="token operator">=</span> element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
       y <span class="token operator">=</span> element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  theme<span class="token punctuation">(</span>
    axis.text.x <span class="token operator">=</span> element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    axis.ticks.x <span class="token operator">=</span> element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    axis.line.x <span class="token operator">=</span> element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    axis.line.y <span class="token operator">=</span> element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    plot.title <span class="token operator">=</span> element_text<span class="token punctuation">(</span>size <span class="token operator">=</span> <span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    plot.subtitle <span class="token operator">=</span> element_text<span class="token punctuation">(</span>size <span class="token operator">=</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    strip.background <span class="token operator">=</span> element_rect<span class="token punctuation">(</span>color <span class="token operator">=</span> <span class="token string">"white"</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
${validate_component(Image, "Image").$$render($$result, {
          alt: "secondtry",
          src: "../images/post/refugee-trends/secondtry.jpg"
        }, {}, {})}
<p>Pretty good! Much better. But we can add some elements to take our visualization to the next level.</p>
<p>Because our data spans nearly 20 years (2002 to 2019), we can overlay our small multiples with other variables of interest, such as who was President during a given period.</p>
<p>We do so using <code>geom_rect</code>:</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">geom_rect<span class="token punctuation">(</span>mapping<span class="token operator">=</span>aes<span class="token punctuation">(</span>xmin<span class="token operator">=</span><span class="token number">2009</span><span class="token punctuation">,</span> xmax<span class="token operator">=</span><span class="token number">2017</span><span class="token punctuation">,</span> ymin<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> ymax<span class="token operator">=</span><span class="token number">12000</span><span class="token punctuation">)</span><span class="token punctuation">,</span> fill <span class="token operator">=</span> <span class="token string">"#ADD8E6"</span><span class="token punctuation">,</span> alpha <span class="token operator">=</span> <span class="token number">.05</span><span class="token punctuation">)</span> <span class="token operator">+</span>
geom_rect<span class="token punctuation">(</span>mapping<span class="token operator">=</span>aes<span class="token punctuation">(</span>xmin<span class="token operator">=</span><span class="token number">2017</span><span class="token punctuation">,</span> xmax<span class="token operator">=</span><span class="token number">2019</span><span class="token punctuation">,</span> ymin<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> ymax<span class="token operator">=</span><span class="token number">12000</span><span class="token punctuation">)</span><span class="token punctuation">,</span> fill <span class="token operator">=</span> <span class="token string">"#FF9999"</span><span class="token punctuation">,</span> alpha <span class="token operator">=</span> <span class="token number">.05</span><span class="token punctuation">)</span> <span class="token operator">+</span></code>`}<!-- HTML_TAG_END --></pre>
<p>The first line of code creates a blue box which spans 2009 to 2017 (Obama\u2019s tenure). The second line creates a red box for Trump\u2019s presidency (so far).</p>
<p>Bringing it all together, the code and output look like this:</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">data <span class="token percent-operator operator">%>%</span>
  group_by<span class="token punctuation">(</span>region_name_3<span class="token punctuation">,</span> state<span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  summarise<span class="token punctuation">(</span>textbox37 <span class="token operator">=</span> sum<span class="token punctuation">(</span>textbox37<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  ggplot<span class="token punctuation">(</span>aes<span class="token punctuation">(</span>x <span class="token operator">=</span> region_name_3<span class="token punctuation">,</span> y <span class="token operator">=</span> textbox37<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  geom_line<span class="token punctuation">(</span>color <span class="token operator">=</span> <span class="token string">"black"</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  geom_rect<span class="token punctuation">(</span>mapping<span class="token operator">=</span>aes<span class="token punctuation">(</span>xmin<span class="token operator">=</span><span class="token number">2009</span><span class="token punctuation">,</span> xmax<span class="token operator">=</span><span class="token number">2017</span><span class="token punctuation">,</span> ymin<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> ymax<span class="token operator">=</span><span class="token number">12000</span><span class="token punctuation">)</span><span class="token punctuation">,</span> fill <span class="token operator">=</span> <span class="token string">"#ADD8E6"</span><span class="token punctuation">,</span> alpha <span class="token operator">=</span> <span class="token number">.05</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  geom_rect<span class="token punctuation">(</span>mapping<span class="token operator">=</span>aes<span class="token punctuation">(</span>xmin<span class="token operator">=</span><span class="token number">2017</span><span class="token punctuation">,</span> xmax<span class="token operator">=</span><span class="token number">2019</span><span class="token punctuation">,</span> ymin<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> ymax<span class="token operator">=</span><span class="token number">12000</span><span class="token punctuation">)</span><span class="token punctuation">,</span> fill <span class="token operator">=</span> <span class="token string">"#FF9999"</span><span class="token punctuation">,</span> alpha <span class="token operator">=</span> <span class="token number">.05</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  scale_x_continuous<span class="token punctuation">(</span>breaks <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">2002</span><span class="token punctuation">,</span><span class="token number">2019</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  scale_y_continuous<span class="token punctuation">(</span>breaks <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">12000</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  facet_geo<span class="token punctuation">(</span><span class="token operator">~</span> state<span class="token punctuation">,</span> grid <span class="token operator">=</span> <span class="token string">"us_state_grid1"</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  labs<span class="token punctuation">(</span>title <span class="token operator">=</span> <span class="token string">"Refugee Acceptance on the Decline"</span><span class="token punctuation">,</span>
       subtitle <span class="token operator">=</span> <span class="token string">"Number of refugees accepted annually, 2002 - 2019"</span><span class="token punctuation">,</span>
       x <span class="token operator">=</span> element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
       y <span class="token operator">=</span> element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  theme<span class="token punctuation">(</span>
    axis.text.x <span class="token operator">=</span> element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    axis.ticks.x <span class="token operator">=</span> element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    axis.line.x <span class="token operator">=</span> element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    axis.line.y <span class="token operator">=</span> element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    plot.title <span class="token operator">=</span> element_text<span class="token punctuation">(</span>size <span class="token operator">=</span> <span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    plot.subtitle <span class="token operator">=</span> element_text<span class="token punctuation">(</span>size <span class="token operator">=</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    strip.background <span class="token operator">=</span> element_rect<span class="token punctuation">(</span>color <span class="token operator">=</span> <span class="token string">"white"</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
${validate_component(Image, "Image").$$render($$result, {
          alt: "r version",
          src: "../images/post/refugee-trends/ref.png"
        }, {}, {})}
<p>I brought that plot to Illustrator and made it a lot prettier. Here\u2019s the final version:</p>
${validate_component(Image, "Image").$$render($$result, {
          alt: "A small multiples map of refugee acceptance over time, across states",
          src: "../images/post/refugee-trends/featured.png"
        }, {}, {})}
<p>What do we notice? A few key states (Texas, California, Florida, and Michigan) make up the vast majority of refugee acceptance, while other accept almost <em>no</em> <em>refugees</em>. Nearly every state has reduced their refugee acceptance since 2017, but the bulk of this decline has come from these larger states.</p>
<p>While you\u2019re here, take a look at my project <a href="${"https://connorrothschild.github.io/map-missing-migrants/"}" rel="${"nofollow"}"><em>Mapping Missing Migrants.</em></a></p>`
      })}`;
    });
  }
});

// .svelte-kit/output/server/chunks/svelte-and-d3-81974204.js
var svelte_and_d3_81974204_exports = {};
__export(svelte_and_d3_81974204_exports, {
  default: () => Svelte_and_d3,
  metadata: () => metadata49
});
var import_bowser55, import_prismjs8, import_prism_normalize_whitespace8, css10, metadata49, Svelte_and_d3;
var init_svelte_and_d3_81974204 = __esm({
  ".svelte-kit/output/server/chunks/svelte-and-d3-81974204.js"() {
    init_shims();
    init_app_9f378dda();
    init_layout_ef610ed1();
    init_Code_71f36c68();
    init_Info_43a233e8();
    init_BackTo_d882ed88();
    init_global_130d3fe3();
    import_bowser55 = __toModule(require_es5());
    init_CornerTitle_6f993505();
    init_store_8bf23024();
    init_utils_09998264();
    init_IntersectionObserver_4cd4a541();
    import_prismjs8 = __toModule(require_prism());
    init_prism_line_numbers();
    import_prism_normalize_whitespace8 = __toModule(require_prism_normalize_whitespace());
    init_prism_line_highlight();
    init_prism_file_highlight();
    init_prism_bash();
    init_prism_css();
    init_prism_r();
    init_prism_json();
    init_prism_yaml();
    css10 = {
      code: "svg.svelte-1qkbzqf{width:100%;margin:0.5rem 0 1.5rem 0;border-radius:6px}rect.svelte-1qkbzqf{width:100%;height:100%}circle.svelte-1qkbzqf{cursor:crosshair}",
      map: null
    };
    metadata49 = {
      "layout": "blog",
      "title": "Making visualizations literally using Svelte + D3",
      "description": "Why Svelte has replaced (and complemented) D3 as my go-to tool for powerful visualizations",
      "image": "svelte-and-d3/header.png",
      "date": "2021-07-02",
      "featured": true,
      "tags": ["svelte", "d3", "tutorial"]
    };
    Svelte_and_d3 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      $$result.css.add(css10);
      return `${validate_component(Layout4, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata49), {}, {
        default: () => `<p>When I started making data visualizations, I considered <a href="${"https://d3js.org/"}" rel="${"nofollow"}">D3</a>\u2014Data Driven Documents\u2014to be the gold standard programming language required to create beautiful graphics on the web.</p>
<p>As I progress in my career, I\u2019m realizing that D3 has a more particular (and smaller) role in the visualization lifecycle than I initially envisioned. As I design more visualizations, I\u2019m learning that my most efficient and intuitive development comes when I <strong>program literally</strong>. </p>
<p>What does that mean? (To be honest, I\u2019m making up the term.) It means that I\u2019m moving away from <em>pseudo-declarative</em> data visualization in D3, and starting to make my visualizations <em>literally</em>, by simply writing markup in <a href="${"https://svelte.dev/"}" rel="${"nofollow"}">Svelte</a>. </p>
<p>Although D3 <a href="${"https://d3js.org/#selections"}" rel="${"nofollow"}">claims</a> to be declarative, it still uses <a href="${"https://www.carlosrendon.me/unfinished_d3_book/d3_method_chaining.html"}" rel="${"nofollow"}">method chaining</a> to provide instructions to render visuals. In Svelte, we don\u2019t provide instructions but instead render our SVG elements directly, using <code>{#each}</code> blocks. By writing my markup literally and appending data inline, my code makes more sense and causes fewer headaches.</p>
<h3 id="${"what-youll-find-in-this-post"}"><a href="${"#what-youll-find-in-this-post"}">What you\u2019ll find in this post</a></h3>
<p>In this post, I\u2019ll <a href="${"#what-d3-does-3%EF%B8%8F%E2%83%A3"}">1)</a> provide an overview of D3, and how it made the process of creating visualizations so much easier; <a href="${"#literal-programming-with-svelte-"}">2)</a> explain why I\u2019m moving away from D3 for DOM manipulation, and instead using Svelte \u201Cliterally\u201D; and <a href="${"#bringing-it-home-with-burgers-"}">3)</a> provide a funky burger \u{1F354} example to explain my logic.</p>
 ${validate_component(Info, "Info").$$render($$result, {}, {}, {
          default: () => `<p>This is not a comprehensive tutorial about <strong>how to</strong> use D3 and Svelte together. I\u2019ll cover that in the <a href="${"https://twitter.com/CL_Rothschild"}" rel="${"nofollow"}">future</a>. In the meantime, check out tutorials from <a href="${"https://www.youtube.com/watch?v=bnd64ZrHC0U"}" rel="${"nofollow"}">Matthias Stahl</a>, examples of Svelte and D3 in action on The Pudding\u2019s <a href="${"https://github.com/the-pudding/"}" rel="${"nofollow"}">GitHub</a>, and an example of similar framework-driven logic on Amelia Wattenberger\u2019s <a href="${"https://wattenberger.com/post/react-and-d3"}" rel="${"nofollow"}">blog</a>. </p>
<p>Want an immediate example? Here\u2019s an (admittedly verbose) <a href="${"https://github.com/connorrothschild/bob-ross-art-gallery/blob/master/src/components/ColorViz.svelte"}" rel="${"nofollow"}">Svelte component</a> I used in a recent project about Bob Ross.</p>`
        })} 
<h2 id="${"what-d3-does-3\uFE0F\u20E3"}"><a href="${"#what-d3-does-3\uFE0F\u20E3"}">What D3 does 3\uFE0F\u20E3</a></h2>
<p>D3 allows for intuitive transformations of the DOM by leveraging easy-to-understand selection syntax. Sound confusing? Let\u2019s learn through an example (adapted from the <a href="${"https://d3js.org/#selections"}" rel="${"nofollow"}">D3 homepage</a>). Imagine we had 5 circles and wanted to change the fill of each. </p>
<svg class="${"svelte-1qkbzqf"}"><rect width="${"100%"}" height="${"100%"}" class="${"svelte-1qkbzqf"}"></rect><circle cx="${"10%"}" cy="${"50%"}" r="${"10"}" fill="${"steelblue"}" class="${"svelte-1qkbzqf"}"><title>Hello from the circle!</title></circle><circle cx="${"30%"}" cy="${"50%"}" r="${"10"}" fill="${"steelblue"}" class="${"svelte-1qkbzqf"}"><title>Hello from the circle!</title></circle><circle cx="${"50%"}" cy="${"50%"}" r="${"10"}" fill="${"steelblue"}" class="${"svelte-1qkbzqf"}"><title>Hello from the circle!</title></circle><circle cx="${"70%"}" cy="${"50%"}" r="${"10"}" fill="${"steelblue"}" class="${"svelte-1qkbzqf"}"><title>Hello from the circle!</title></circle><circle cx="${"90%"}" cy="${"50%"}" r="${"10"}" fill="${"steelblue"}" class="${"svelte-1qkbzqf"}"><title>Hello from the circle!</title></circle></svg>
<p>In the traditional <a href="${"https://www.w3schools.com/js/js_htmldom.asp"}" rel="${"nofollow"}">HTML DOM model</a>, we would 1) select all circles, 2) loop through each one, and 3) redefine its fill. In code, that would look like this:</p>
${validate_component(Code, "Code").$$render($$result, { language: "js" }, {}, {
          default: () => `<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">var circles = document.getElementsByTagName(&quot;circle&quot;);
for (var i = 0; i &lt; circles.length; i++) &#123;
  var circle = circles.item(i);
  circle.setAttribute(&quot;fill&quot;, &quot;white&quot;, null);
&#125;</code>`}<!-- HTML_TAG_END --></pre>`
        })}
<p>Doing this in D3 would reduce the length of our code by a factor of 5, and allows us to write in a way that <em>just makes sense</em>. Here, we select every circle and change its fill.</p>
${validate_component(Code, "Code").$$render($$result, { language: "js" }, {}, {
          default: () => `d3.selectAll(&quot;circle&quot;).style(&quot;fill&quot;, &quot;white&quot;)
`
        })}
<svg class="${"svelte-1qkbzqf"}"><rect width="${"100%"}" height="${"100%"}" class="${"svelte-1qkbzqf"}"></rect><circle cx="${"10%"}" cy="${"50%"}" r="${"10"}" fill="${"white"}" class="${"svelte-1qkbzqf"}"><title>Hello from the circle!</title></circle><circle cx="${"30%"}" cy="${"50%"}" r="${"10"}" fill="${"white"}" class="${"svelte-1qkbzqf"}"><title>Hello from the circle!</title></circle><circle cx="${"50%"}" cy="${"50%"}" r="${"10"}" fill="${"white"}" class="${"svelte-1qkbzqf"}"><title>Hello from the circle!</title></circle><circle cx="${"70%"}" cy="${"50%"}" r="${"10"}" fill="${"white"}" class="${"svelte-1qkbzqf"}"><title>Hello from the circle!</title></circle><circle cx="${"90%"}" cy="${"50%"}" r="${"10"}" fill="${"white"}" class="${"svelte-1qkbzqf"}"><title>Hello from the circle!</title></circle></svg>
<p>Imagine if you also wanted to bind data to those circles. That is, you wanted to fill the circle according to some attribute, or size its radius according to some datapoint. In traditional JavaScript, that might look something like this:</p>
${validate_component(Code, "Code").$$render($$result, { language: "js" }, {}, {
          default: () => `<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">let data = [5, 10, 15, 20, 25];

var circles = document.getElementsByTagName(&quot;circle&quot;);
for (var i = 0; i &lt; circles.length; i++) &#123;
  var circle = circles.item(i);
  circle.style.setProperty(&quot;r&quot;, data[i], null);
&#125;</code>`}<!-- HTML_TAG_END --></pre>`
        })}
<p>Not too hard\u2014but also, not too easy. D3 simplifies this logic by removing the need for a loop and iterating on your selection for you:</p>
${validate_component(Code, "Code").$$render($$result, { language: "js" }, {}, {
          default: () => `<pre class="${"language-js"}"><!-- HTML_TAG_START -->${`<code class="language-js"><span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

d3<span class="token punctuation">.</span><span class="token function">selectAll</span><span class="token punctuation">(</span><span class="token string">"circle"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"r"</span><span class="token punctuation">,</span> <span class="token parameter">d</span> <span class="token operator">=></span> d<span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>`
        })}
<svg class="${"svelte-1qkbzqf"}"><rect width="${"100%"}" height="${"100%"}" class="${"svelte-1qkbzqf"}"></rect><circle cx="${"10%"}" cy="${"50%"}" r="${"5"}" fill="${"white"}" class="${"svelte-1qkbzqf"}"><title>Hello from the circle!</title></circle><circle cx="${"30%"}" cy="${"50%"}" r="${"10"}" fill="${"white"}" class="${"svelte-1qkbzqf"}"><title>Hello from the circle!</title></circle><circle cx="${"50%"}" cy="${"50%"}" r="${"15"}" fill="${"white"}" class="${"svelte-1qkbzqf"}"><title>Hello from the circle!</title></circle><circle cx="${"70%"}" cy="${"50%"}" r="${"20"}" fill="${"white"}" class="${"svelte-1qkbzqf"}"><title>Hello from the circle!</title></circle><circle cx="${"90%"}" cy="${"50%"}" r="${"25"}" fill="${"white"}" class="${"svelte-1qkbzqf"}"><title>Hello from the circle!</title></circle></svg>
<p>Again, we reduce the length of our code nearly 5x, and the code just <strong>makes sense</strong>.</p>
<p>All that to say, D3 is great. It works, and it works wonderfully. By removing the need to write highly imperative code that is unintuitive in nature, D3 saves developers time and allows for more powerful visualizations.</p>
<p>But I\u2019m hardly using it at all recently. Increasingly, I\u2019ve been using the JavaScript <del>framework</del> compiler <a href="${"https://svelte.dev/"}" rel="${"nofollow"}">Svelte</a> to <em>write SVG directly</em> rather than <em>tell JavaScript to write SVG</em>. How? Let\u2019s see below.</p>
<h2 id="${"literal-programming-with-svelte-"}"><a href="${"#literal-programming-with-svelte-"}">\u201CLiteral\u201D programming with Svelte \u{1F5E3}</a></h2>
<p>Going back to the above circles, imagine if we could simply bind our data to our app\u2019s markup <strong>directly</strong>, without any intermediate code serving as instructions.</p>
<p><strong>We can!</strong> Svelte (and Vue, React and other frameworks) allow for seamless interactions between our app\u2019s logic, data, and markup, so that we can embed data directly into our SVG elements. In this new paradigm, we could replace the set of D3 instructions from earlier with the following Svelte code:</p>
${validate_component(Code, "Code").$$render($$result, { language: "svelte" }, {}, {
          default: () => `<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">&lt;script&gt;
  let data = [&#123;x: 10, r: 5 &#125;, 
              &#123;x: 30, r: 10&#125;, 
              &#123;x: 50, r: 15&#125;, 
              &#123;x: 70, r: 20&#125;, 
              &#123;x: 90, r: 25&#125;]
&lt;/script&gt;

&lt;p&gt;&#123;data.map(x =&gt; x)&#125;&lt;/p&gt;</code>`}<!-- HTML_TAG_END --></pre>`
        })}

<p>In my view, there are three benefits to writing our code this way:</p>
<ol><li><strong>More intuitive authoring.</strong> It feels much more natural to write our SVG elements <em>directly</em> rather than provide D3 instructions on how to do so.</li>
<li><strong>Less friction in translating D3 to the DOM.</strong> By writing SVG directly, we could copy an SVG element from the <a href="${"https://developer.mozilla.org/en-US/docs/Web/SVG/Element/circle"}" rel="${"nofollow"}">MDN docs</a>, paste in our values, and see immediate results. Fewer handoffs results in fewer errors.</li>
<li><strong>Reusability.</strong> Creating a robust and flexible <code>&lt;Circle /&gt;</code>, <code>&lt;Bar /&gt;</code>, or <code>&lt;Axis /&gt;</code> component permits consistent reuse within and across projects. D3 code is usually written as a series of blocks which lacks a natural structure and becomes difficult to reuse effectively.</li></ol>
<p>The only downside (which is actually just an adjustment) is that this new approach requires you to learn how to <a href="${"https://www.w3schools.com/graphics/svg_intro.asp"}" rel="${"nofollow"}">write SVG</a>. But isn\u2019t it a good exercise to learn the anatomy of what we\u2019re actually creating? Having knowledge of SVG elements and attributes will benefit any developer who creates visuals, no matter how they eventually do so.</p>
<p>Not convinced? Let me explain the logic one more time, with a tastier example:</p>
<h2 id="${"bringing-it-home-with-burgers-"}"><a href="${"#bringing-it-home-with-burgers-"}">Bringing it home with burgers \u{1F354}</a></h2>
<p>Imagine we want to prepare a burger. We have an array of objects, each with an ingredient and ingredient-specfic instructions. We want to 1) create each item (insert it into the DOM), and 2) carry out its instructions (execute some function).</p>
${validate_component(Code, "Code").$$render($$result, { language: "js" }, {}, {
          default: () => `<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">let ingredients = [
  &#123;item: &quot;Top Bun&quot;, instruction: &quot;Place at top of burger.&quot;&#125;,
  &#123;item: &quot;Pickles&quot;, instruction: &quot;Three pickles, please.&quot;&#125;,
  &#123;item: &quot;Cheese&quot;, instruction: &quot;Cheese is optional, but it makes the burger better.&quot;&#125;,
  &#123;item: &quot;Patty&quot;, instruction: &quot;Cook to your satisfaction. Optionally, add two patties.&quot;&#125;,
  &#123;item: &quot;Tomato&quot;, instruction: &quot;Should be the same width as bun, and thinly sliced.&quot;&#125;,
  &#123;item: &quot;Lettuce&quot;, instruction: &quot;Should be the same width as bun.&quot;&#125;,
  &#123;item: &quot;Bottom Bun&quot;, instruction: &quot;Place at bottom of burger.&quot;&#125;,
]</code>`}<!-- HTML_TAG_END --></pre>`
        })}
<p>There are three ways to make this burger (at least, in our fantasy world where we make burgers via code).</p>
${validate_component(Info, "Info").$$render($$result, {}, {}, {
          default: () => `<p>Although I use the Svelte REPL to showcase these three examples, only the last one requires Svelte. The REPL is just a nice place to host (editable!) code \u{1F642}</p>`
        })}
<p><strong>The first option</strong> (old school) is to tell your app to loop through each ingredient, add it to the others, and stack the ingredients accordingly. For each ingredient in the loop, execute the burger-making according to our ingredient-specific instruction. This is how burgers would have been made, painfully, before D3.</p>
<iframe loading="${"lazy"}" src="${"https://svelte.dev/repl/4b4eee03981b4450aa08e402aa0ceeb6?version=3.38.3"}" width="${"100%"}" height="${"600"}" title="${"Old school burger building"}"></iframe>
<p><strong>The second option</strong> (new school) is to tell your app to read in each ingredient and instruction through D3 method chaining. We remove the need for our verbose <code>for</code> loop, and use the chain to give D3 a set of sequential instructions.</p>
<iframe loading="${"lazy"}" src="${"https://svelte.dev/repl/8198de15de314aee860932629370ed09?version=3.38.3"}" width="${"100%"}" height="${"600"}" title="${"New school burger building"}"></iframe>
<p>In <strong>our final option</strong> (new new school), we can simply append our instructions directly to the ingredient, <em>literally</em>. Here, we skip <code>for</code> loops and we skip D3 method chaining; instead, we componentize our general \u201Cburger item\u201D and pass each ingredient/instruction directly to that component. Only Svelte enables such burgers:</p>
<iframe loading="${"lazy"}" src="${"https://svelte.dev/repl/f64bd9dcface42a1a2d544b35638631e?version=3"}" width="${"100%"}" height="${"600"}" title="${"Literal burger building"}"></iframe>
<p>Which do you prefer? It\u2019s much easier to make a burger by <em>just making it</em>, rather than giving instructions, no matter what form they come in. Frameworks allow for the construction of burgers\u2014and visualizations\u2014<strong>literally</strong>. We write our ingredients (or DOM elements) directly, and include our instructions (or data) in our markup. Now that\u2019s a tasty burger.</p>
<h2 id="${"the-big-picture-"}"><a href="${"#the-big-picture-"}">The big picture \u{1F5BC}</a></h2>
<ol><li>Svelte allows visualization developers to <strong>write SVG directly</strong> (and avoid telling D3 what to do), while using Svelte syntax (<code>{#each}</code>, etc.) to avoid annoying and inefficient <code>for</code> loops. </li>
<li>Including logic directly in your markup (<code>{#if}</code>, etc.) removes the need for complex JavaScript/DOM interactions (more on that below). </li>
<li>Svelte works to <em>complement</em> D3, not replace it, by continuing to leverage the most powerful parts of its API: <code>d3-scale</code>, <code>d3-array</code>, <code>d3-shape</code>, etc.</li></ol>
<hr>
<h2 id="${"bonus-perks-"}"><a href="${"#bonus-perks-"}">Bonus perks \u{1F3C6}</a></h2>
<p>Using Svelte to create visualizations has a few other perks:</p>
<h3 id="${"responsiveness"}"><a href="${"#responsiveness"}">Responsiveness</a></h3>
<p>By using Svelte\u2019s <a href="${"https://svelte.dev/tutorial/reactive-declarations"}" rel="${"nofollow"}">reactive declarations</a> (the dollar signs \u{1F4B0}), we can make certain variables  \u2018watch\u2019 for state changes and update automatically. One huge benefit of this is that we can bind our scales to updating values such as the window width, and write minimal code to make our charts update on resize.</p>
${validate_component(Code, "Code").$$render($$result, { language: "svelte" }, {}, {
          default: () => `<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">&lt;script&gt;
import  windowWidth from &quot;../stores/store.js&quot;;
import  scaleLinear from &#39;d3-scale&#39;;

$: xScale = scaleLinear
            .domain(data.map(d =&gt; d.value))
            .range([0, $windowWidth])
&lt;/script&gt;</code>`}<!-- HTML_TAG_END --></pre>`
        })}
<p>With some other component watching and responding to resize events (such as <a href="${"https://github.com/the-pudding/svelte-starter/blob/master/src/components/helpers/Window.svelte"}" rel="${"nofollow"}">Window.svelte</a>), any SVG property depending on <code>xScale</code> will automatically update when your window resizes. You can also set the chart width itself to equal <code>$windowWidth</code> for a fully resizable, responsive chart.</p>
${validate_component(Info, "Info").$$render($$result, {}, {}, {
          default: () => `<p>Another way to achieve easy responsiveness is to <a href="${"https://svelte.dev/tutorial/dimensions"}" target="${"_blank"}" rel="${"noopener noreferrer"}">bind the SVG\u2019s parent container\u2019s div width</a> to some variable (<code>width</code>) and set the SVG\u2019s width to match.</p>`
        })}
<h3 id="${"ifelse-blocks"}"><a href="${"#ifelse-blocks"}">If/else blocks</a></h3>
<p>In regular D3, we often use the <a href="${"https://en.wikipedia.org/wiki/%3F:"}" rel="${"nofollow"}">ternary operator</a> to define condition-specific attributes, like this:</p>
${validate_component(Code, "Code").$$render($$result, { language: "js" }, {}, {
          default: () => `<pre class="${"language-js"}"><!-- HTML_TAG_START -->${`<code class="language-js"><span class="token comment">// Circles are filled green if positive, red if negative</span>
d3<span class="token punctuation">.</span><span class="token function">selectAll</span><span class="token punctuation">(</span><span class="token string">'circle'</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">style</span><span class="token punctuation">(</span><span class="token string">'fill'</span><span class="token punctuation">,</span> <span class="token parameter">d</span> <span class="token operator">=></span> d<span class="token punctuation">.</span>value <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token string">'red'</span> <span class="token operator">:</span> <span class="token string">'green'</span><span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>`
        })}
<p>This is great, but what if we want to make more significant changes based on app-wide state? For example, imagine we want to show three different types of the same visualization on different screen sizes: </p>
<ol><li>Desktop (over 1024px)</li>
<li>Tablet (520px to 1024px)</li>
<li>Mobile (under 520px)</li></ol>
<p>In D3, we would achieve this by adding a resize event listener, providing custom breakpoints, and rendering different visuals if the updated window width were within a certain range. The complicated part would be having to render a different visual at each breakpoint.</p>
<p>One key difference between relying on D3 and leveraging the power of Svelte is that Svelte allows for <a href="${"https://svelte.dev/tutorial/if-blocks"}" rel="${"nofollow"}">conditional rendering</a> <em>directly in our markup</em>, not just in our JavaScript logic. In other words, while vanilla JavaScript would approach our problem with the following:</p>
${validate_component(Code, "Code").$$render($$result, { language: "js" }, {}, {
          default: () => `<pre class="${"language-js"}"><!-- HTML_TAG_START -->${`<code class="language-js">window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'resize'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">let</span> newWidth <span class="token operator">=</span> window<span class="token punctuation">.</span>innerWidth<span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>newWidth <span class="token operator">&lt;</span> <span class="token number">520</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> 
      <span class="token comment">// Hide tablet and desktop</span>
      document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"tablet"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">"none"</span><span class="token punctuation">;</span>
      document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"desktop"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">"none"</span><span class="token punctuation">;</span>

      <span class="token comment">// Show mobile</span>
      document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"mobile"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">"block"</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>newWidth <span class="token operator">&lt;</span> <span class="token number">1024</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
      <span class="token comment">// Hide mobile and desktop</span>
      document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"mobile"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">"none"</span><span class="token punctuation">;</span>
      document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"desktop"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">"none"</span><span class="token punctuation">;</span>

      <span class="token comment">// Show tablet</span>
      document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"tablet"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">"block"</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
      <span class="token comment">// Hide mobile and tablet</span>
      document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"mobile"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">"none"</span><span class="token punctuation">;</span>
      document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"tablet"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">"none"</span><span class="token punctuation">;</span>

      <span class="token comment">// Show desktop</span>
      document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"desktop"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">"block"</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>`
        })}
<p>Svelte simplifies our logic to:</p>
${validate_component(Code, "Code").$$render($$result, { language: "svelte" }, {}, {
          default: () => `<pre class="${"language-svelte"}"><!-- HTML_TAG_START -->${`<code class="language-svelte"><span class="token language-javascript"><span class="token punctuation">&#123;</span>#<span class="token keyword">if</span> $windowWidth <span class="token operator">&lt;</span> <span class="token number">520</span><span class="token punctuation">&#125;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Mobile</span> <span class="token punctuation">/></span></span>
<span class="token language-javascript"><span class="token punctuation">&#123;</span><span class="token operator">:</span><span class="token keyword">else</span> <span class="token keyword">if</span> $windowWidth <span class="token operator">&lt;</span> <span class="token number">1024</span><span class="token punctuation">&#125;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Tablet</span> <span class="token punctuation">/></span></span>
<span class="token language-javascript"><span class="token punctuation">&#123;</span><span class="token operator">:</span><span class="token keyword">else</span><span class="token punctuation">&#125;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Desktop</span> <span class="token punctuation">/></span></span>
<span class="token language-javascript"><span class="token punctuation">&#123;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token punctuation">&#125;</span></span></code>`}<!-- HTML_TAG_END --></pre>`
        })}
<p>Hey, thanks for reading. I appreciate you! In the event that you disagree with me or I got something wrong, please message me on <a href="${"https://twitter.com/CL_Rothschild"}" rel="${"nofollow"}">Twitter</a>.</p>`
      })}`;
    });
  }
});

// .svelte-kit/output/server/chunks/svelte-scatter-f5d4a79a.js
var svelte_scatter_f5d4a79a_exports = {};
__export(svelte_scatter_f5d4a79a_exports, {
  default: () => Svelte_scatter,
  metadata: () => metadata50
});
var import_bowser56, metadata50, Svelte_scatter;
var init_svelte_scatter_f5d4a79a = __esm({
  ".svelte-kit/output/server/chunks/svelte-scatter-f5d4a79a.js"() {
    init_shims();
    init_app_9f378dda();
    init_layout_ef610ed1();
    init_Info_43a233e8();
    init_BackTo_d882ed88();
    init_global_130d3fe3();
    import_bowser56 = __toModule(require_es5());
    init_CornerTitle_6f993505();
    init_store_8bf23024();
    init_utils_09998264();
    init_IntersectionObserver_4cd4a541();
    metadata50 = {
      "layout": "blog",
      "title": "Creating the ultimate scatterplot in Svelte",
      "description": "Svelte + D3, in action",
      "date": "2021-07-09",
      "image": "svelte-and-d3/header.png",
      "draft": true,
      "tags": ["svelte", "d3", "tutorial"]
    };
    Svelte_scatter = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return `${validate_component(Layout4, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata50), {}, {
        default: () => `

<p>Earlier this year, I wrote about how I use Svelte to compose beautiful, powerful data visualizations. In that post, I documented how Svelte has gradually replaced D3 as the key tool for creating graphics. </p>
<p>Here, I\u2019ll talk less <em>why</em> and more <em>how</em>. That is, I\u2019ll explain how to create <strong>the ultimate scatterplot</strong> using Svelte.</p>
<p>We\u2019ll be taking <a href="${"https://observablehq.com/@d3/scatterplot"}" rel="${"nofollow"}">this scatterplot</a>, from the team at Observable, and recreating it (sort of). Then, we\u2019ll make it (hopefully) better.</p>
<iframe loading="${"lazy"}" title="${"An Observable chart of cars data"}" width="${"100%"}" height="${"684"}" frameborder="${"0"}" style="${"background: white"}" src="${"https://observablehq.com/embed/@d3/scatterplot?cells=chart"}"></iframe>
<p>In specific, we\u2019ll be doing the following:</p>
<ol><li>Decide upon and record our chart dimensions</li>
<li>Create a <code>&lt;Scatterplot /&gt;</code> component</li>
<li>Create a <code>&lt;Circle /&gt;</code> component</li>
<li>Create an <code>&lt;XAxis /&gt;</code> and <code>&lt;YAxis /&gt;</code> component</li>
<li>Add interactivity via voronoi hovering</li></ol>
<h2 id="${"chart-dimensions"}"><a href="${"#chart-dimensions"}">Chart dimensions</a></h2>
<p>Our first step is to decide upon and record our chart dimensions. For the sake of our example, lets make our chart\u2019s width <code>100%</code> of its container\u2019s width, and its height <code>600px</code>. In Svelte, we can bind a variable (in our case, <code>containerWidth</code>) to the <code>offsetWidth</code> of a container.</p>
<pre class="${"language-svelte"}"><!-- HTML_TAG_START -->${`<code class="language-svelte"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">let</span> containerWidth<span class="token punctuation">;</span>
  <span class="token keyword">let</span> containerHeight <span class="token operator">=</span> <span class="token number">600</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>chart-container<span class="token punctuation">'</span></span> <span class="token attr-name"><span class="token namespace">bind:</span>offsetWidth=</span><span class="token language-javascript"><span class="token punctuation">&#123;</span>containerWidth<span class="token punctuation">&#125;</span></span><span class="token punctuation">></span></span>
  <span class="token comment">&lt;!-- Chart will go here --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code>`}<!-- HTML_TAG_END --></pre>
<p>Above, we\u2019re binding <code>containerWidth</code> to constantly equal the <a href="${"https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetWidth"}" rel="${"nofollow"}"><code>offsetWidth</code></a> of our <code>chart-container</code> div. This is generally a good decision because it binds the chart width to its <em>container</em>, rather than the <em>window</em>. This allows for the chart to be embedded in any sort of complex layout, and still remain properly sized.</p>
<p>More realistically, we want our <em>chart width</em> to be slightly smaller than our <em>container width</em>, so that we have room for things like axis ticks and labels. </p>
<p>We can record the exact number of pixels we want \u201Con the sides\u201D in an object called <code>margin</code>. Then, we can set a new variable, <code>chartWidth</code> to equal the container width, minus our horizontal margins.</p>
<pre class="${"language-svelte"}"><!-- HTML_TAG_START -->${`<code class="language-svelte"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">let</span> containerWidth<span class="token punctuation">;</span>
  <span class="token keyword">let</span> containerHeight <span class="token operator">=</span> <span class="token number">600</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> margin <span class="token operator">=</span> <span class="token punctuation">&#123;</span>top<span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">,</span> right<span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span> bottom<span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span> left<span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>

  $<span class="token operator">:</span> chartWidth <span class="token operator">=</span> containerWidth <span class="token operator">-</span> margin<span class="token punctuation">.</span>left <span class="token operator">-</span> margin<span class="token punctuation">.</span>right<span class="token punctuation">;</span>
  $<span class="token operator">:</span> chartHeight <span class="token operator">=</span> containerHeight <span class="token operator">-</span> margin<span class="token punctuation">.</span>top <span class="token operator">-</span> margin<span class="token punctuation">.</span>bottom<span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>chart-container<span class="token punctuation">'</span></span> <span class="token attr-name"><span class="token namespace">bind:</span>offsetWidth=</span><span class="token language-javascript"><span class="token punctuation">&#123;</span>containerWidth<span class="token punctuation">&#125;</span></span><span class="token punctuation">></span></span>
  <span class="token comment">&lt;!-- Chart will go here --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code>`}<!-- HTML_TAG_END --></pre>
${validate_component(Info, "Info").$$render($$result, {}, {}, {
          default: () => `<p>We\u2019re using the <code>$</code> notation here because <code>chartWidth</code> is <em>reactive</em>; that is, it updates according to another variable, <code>containerWidth</code>, which updates on resize.</p>`
        })}
<p>To see our reactive chart dimensions in action, play around with the width of the playground below:</p>
<iframe loading="${"lazy"}" src="${"https://svelte.dev/repl/060a2a7847bc479eb4e456c966f096e9?version=3.38.3"}" width="${"100%"}" height="${"600"}" title="${"Responsive chart container"}"></iframe>
<h2 id="${"create-a-ltscatterplot-gt-component"}"><a href="${"#create-a-ltscatterplot-gt-component"}">Create a <code>&lt;Scatterplot /&gt;</code> component</a></h2>
<p>Now that we have our chart dimensions, we can pass those dimensions into a component<more-info content="${"A component is a reusable file that includes integrated markup, styles and functionality."}" href="${"https://v2.svelte.dev/guide"}"></more-info> that will handle the visualization itself.</p>
<p>We\u2019ll want our scatterplot component to receive four properties.<more-info content="${"Props are values passed from one component to another."}" href="${"https://svelte.dev/tutorial/declaring-props"}"></more-info></p>
<ol><li>The data (<code>data</code>)</li>
<li>Our chart width (<code>chartWidth</code>)</li>
<li>Our chart height (<code>chartHeight</code>)</li>
<li>The margins surrounding our chart (<code>margin</code>)</li></ol>
<p>In code, that looks like this:</p>
<pre class="${"language-svelte"}"><!-- HTML_TAG_START -->${`<code class="language-svelte"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>chart-container<span class="token punctuation">'</span></span> <span class="token attr-name"><span class="token namespace">bind:</span>offsetWidth=</span><span class="token language-javascript"><span class="token punctuation">&#123;</span>containerWidth<span class="token punctuation">&#125;</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Scatterplot</span> <span class="token language-javascript"><span class="token punctuation">&#123;</span>data<span class="token punctuation">&#125;</span></span> <span class="token attr-name">width=</span><span class="token language-javascript"><span class="token punctuation">&#123;</span>chartWidth<span class="token punctuation">&#125;</span></span> <span class="token attr-name">height=</span><span class="token language-javascript"><span class="token punctuation">&#123;</span>chartHeight<span class="token punctuation">&#125;</span></span> <span class="token language-javascript"><span class="token punctuation">&#123;</span>margin<span class="token punctuation">&#125;</span></span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code>`}<!-- HTML_TAG_END --></pre>
<p>And in <code>Scatterplot.svelte</code>, we receive our props like this:</p>
<pre class="${"language-svelte"}"><!-- HTML_TAG_START -->${`<code class="language-svelte"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">export</span> <span class="token keyword">let</span> data<span class="token punctuation">;</span>
  <span class="token keyword">export</span> <span class="token keyword">let</span> width<span class="token punctuation">;</span>
  <span class="token keyword">export</span> <span class="token keyword">let</span> height<span class="token punctuation">;</span>
  <span class="token keyword">export</span> <span class="token keyword">let</span> margin<span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code>`}<!-- HTML_TAG_END --></pre>
<p>Now that we have our dimensions, we\u2019ll want to create <em>scales</em> with them.<more-info content="${"Scales map datapoints to positions on the canvas."}" href="${"https://www.d3indepth.com/scales/"}"></more-info></p>
<p>Here, we will leverage the power of D3\u2014in particular, <a href="${"https://github.com/d3/d3-scale"}" rel="${"nofollow"}"><code>d3-scale</code></a>\u2014to map our data\u2019s values to points on our canvas.</p>
<p>We\u2019ll want to make our scales reactive according to our dynamic size variables we referenced earlier. Here, notice how we use <code>$</code> to denote reactivity, and notice how we reference <code>width</code>.</p>
<pre class="${"language-svelte"}"><!-- HTML_TAG_START -->${`<code class="language-svelte"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
<span class="token comment">// Import props...</span>
<span class="token keyword">import</span> <span class="token punctuation">&#123;</span> scaleLinear <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"d3-scale"</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">&#123;</span> extent <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"d3-array"</span><span class="token punctuation">;</span>

$<span class="token operator">:</span> xScale <span class="token operator">=</span> <span class="token function">scaleLinear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">domain</span><span class="token punctuation">(</span><span class="token function">extent</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">d</span><span class="token punctuation">)</span> <span class="token operator">=></span> d<span class="token punctuation">.</span>mpg<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">range</span><span class="token punctuation">(</span><span class="token punctuation">[</span>margin<span class="token punctuation">.</span>left<span class="token punctuation">,</span> width <span class="token operator">-</span> margin<span class="token punctuation">.</span>right<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

$<span class="token operator">:</span> yScale <span class="token operator">=</span> <span class="token function">scaleLinear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">domain</span><span class="token punctuation">(</span><span class="token function">extent</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">d</span><span class="token punctuation">)</span> <span class="token operator">=></span> d<span class="token punctuation">.</span>hp<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">range</span><span class="token punctuation">(</span><span class="token punctuation">[</span>height <span class="token operator">-</span> margin<span class="token punctuation">.</span>top<span class="token punctuation">,</span> margin<span class="token punctuation">.</span>bottom<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code>`}<!-- HTML_TAG_END --></pre>
<p>In the above code, we\u2019re defining the domain <more-info content="${"A domain accepts the range of values to map data from."}" href="${"https://observablehq.com/@d3/introduction-to-d3s-scales#cell-104"}"></more-info> according to each cars\u2019 miles per gallon (<code>mpg</code>) and horsepower (<code>hp</code>). We set the parameters for our range <more-info content="${"A range converts the values from our domain into a specified 'range' of positions."}" href="${"https://observablehq.com/@d3/introduction-to-d3s-scales#cell-104"}"></more-info> to span the starting position (the left/bottom margin) to our chart width/height (minus our right/top margin value).</p>
<p>Now, when we pass a number into a scale, it will result in a point on the canvas. For example, the code <code>xScale(25)</code> would result in a value of <code>__</code>. </p>
<p>We\u2019ll use these scales to define the <code>cx</code> and <code>cy</code> values for each of our circles. To do so, we\u2019ll need to iterate on each datapoint and render something. </p>
<h2 id="${"iterate-with-an-123each125-block"}"><a href="${"#iterate-with-an-123each125-block"}">Iterate with an <code>{#each}</code> block</a></h2>
<p>In Svelte, an <code>{#each}</code> block<more-info content="${"These blocks of code function similarly to a for loop, but in our markup."}" href="${"https://svelte.dev/tutorial/each-blocks"}"></more-info> enables us to render listed content programatically, and include multiple attributes in the resulting markup.</p>
<p>For our data, we\u2019ll want to iterate over each <em>row</em> of our data, and pass each <em>row\u2019</em>s <code>mpg</code> and <code>hp</code> (or whatever value you want to pass to the scatterplot) into a component that will eventually render some SVG.</p>
<p>Lets learn by doing. If we simply iterated on each row and wrote out our MPG and HP values, it would look like this:</p>
<iframe loading="${"lazy"}" src="${"https://svelte.dev/repl/7e3ec27da41440e880a49f83068fd97a?version=3.42.1\n"}" width="${"100%"}" height="${"600"}" title="${"Simple each block"}"></iframe>
<p>But we don\u2019t want to write out our values, we want to:</p>
<ol><li>Transform those values into points on the canvas</li>
<li>Pass them to a component that will render SVG elements</li></ol>
<p>To transform \u2026</p>

<h2 id="${"create-a-ltcircle-gt-component"}"><a href="${"#create-a-ltcircle-gt-component"}">Create a <code>&lt;Circle /&gt;</code> component</a></h2>
<p>Next, we want to create a <code>&lt;Circle /&gt;</code> component that will take in our mapped data, and display an SVG with the appropriate attributes. We first import our props, like so:</p>
<pre class="${"language-svelte"}"><!-- HTML_TAG_START -->${`<code class="language-svelte"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">export</span> <span class="token keyword">let</span> cx<span class="token punctuation">;</span>
  <span class="token keyword">export</span> <span class="token keyword">let</span> cy<span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code>`}<!-- HTML_TAG_END --></pre>`
      })}`;
    });
  }
});

// .svelte-kit/output/server/chunks/tidy-tuesday-powerlifting-56cc77f6.js
var tidy_tuesday_powerlifting_56cc77f6_exports = {};
__export(tidy_tuesday_powerlifting_56cc77f6_exports, {
  default: () => Tidy_tuesday_powerlifting,
  metadata: () => metadata51
});
var import_bowser57, metadata51, Tidy_tuesday_powerlifting;
var init_tidy_tuesday_powerlifting_56cc77f6 = __esm({
  ".svelte-kit/output/server/chunks/tidy-tuesday-powerlifting-56cc77f6.js"() {
    init_shims();
    init_app_9f378dda();
    init_layout_ef610ed1();
    init_Image_8e30e86c();
    init_BackTo_d882ed88();
    init_global_130d3fe3();
    import_bowser57 = __toModule(require_es5());
    init_CornerTitle_6f993505();
    init_store_8bf23024();
    init_utils_09998264();
    init_IntersectionObserver_4cd4a541();
    metadata51 = {
      "layout": "blog",
      "title": "How to Combine Animated Plots in R",
      "description": "Leveraging the power of {gganimate} and {magick} to combine animated plots for your viewers.",
      "date": "2019-10-09",
      "image": "tidy-tuesday-powerlifting/header.png",
      "archived": true,
      "tags": ["r", "tutorial"]
    };
    Tidy_tuesday_powerlifting = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return `${validate_component(Layout4, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata51), {}, {
        default: () => `<p>In this tutorial, I\u2019m going to outline the steps necessary to create an animated, faceted plot in R. Although rare, combining animated plots can be a powerful way to showcase different elements of the same data (as you\u2019ll see below).</p>
<p>In this example, I\u2019m using weightlifting data from the International Powerlifting Federation. For the purposes of this tutorial, we\u2019ll look at <em>differences in top lifts by sex</em>. A faceted, animated plot is a great option because we\u2019d like to observe <strong>the magnitude of these differences</strong> and <strong>how these differences have evolved over time</strong>.</p>
<p>We\u2019ll be creating this GIF:</p>
${validate_component(Image, "Image").$$render($$result, {
          src: "../images/post/tidy-tuesday-powerlifting/unnamed-chunk-11-1.gif",
          alt: "A combination of the two aforementioned plots. The top plot is the animated dumbbell plot, and the bottom is a line chart. In combination, they allow the user to see the magnitude of differences between men and women, as well as how these differences have evolved over time."
        }, {}, {})}
<h2 id="${"environment-setup"}"><a href="${"#environment-setup"}">Environment setup</a></h2>
<p>These are the packages we\u2019ll need to get started. In my case, I use a <a href="${"https://github.com/connorrothschild/cr"}" rel="${"nofollow"}">custom theme</a> I\u2019ve developed for stylistic purposes. Feel free to instead run <code>theme_set(theme_minimal())</code> rather than use my theme!</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">library<span class="token punctuation">(</span>ggplot2<span class="token punctuation">)</span>
library<span class="token punctuation">(</span>tidyverse<span class="token punctuation">)</span>
library<span class="token punctuation">(</span>ggtext<span class="token punctuation">)</span>
library<span class="token punctuation">(</span>gifski<span class="token punctuation">)</span>
library<span class="token punctuation">(</span>gganimate<span class="token punctuation">)</span>

theme_set<span class="token punctuation">(</span>theme_minimal<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
<h2 id="${"load-and-clean-data"}"><a href="${"#load-and-clean-data"}">Load and clean data</a></h2>
<p>I\u2019ve already done a lot of the data cleaning for you. If you\u2019d like to follow along, here\u2019s the process (or, skip ahead!).</p>
<p>Here, we\u2019ll do some minor cleaning and then reshape the three lifts into one column:</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">ipf_lifts <span class="token operator">&lt;-</span> readr<span class="token operator">::</span>read_csv<span class="token punctuation">(</span><span class="token string">"data/ipf_lifts.csv"</span><span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  mutate<span class="token punctuation">(</span>year <span class="token operator">=</span> lubridate<span class="token operator">::</span>year<span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">)</span>

ipf_lifts_reshape <span class="token operator">&lt;-</span> ipf_lifts <span class="token percent-operator operator">%>%</span>
  tidyr<span class="token operator">::</span>pivot_longer<span class="token punctuation">(</span>cols <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token string">"best3squat_kg"</span><span class="token punctuation">,</span> <span class="token string">"best3bench_kg"</span><span class="token punctuation">,</span> <span class="token string">"best3deadlift_kg"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> names_to <span class="token operator">=</span> <span class="token string">"lift"</span><span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  select<span class="token punctuation">(</span>name<span class="token punctuation">,</span> sex<span class="token punctuation">,</span> year<span class="token punctuation">,</span> lift<span class="token punctuation">,</span> value<span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
<p>For my visualization, I\u2019m only concerned with the <em>heaviest</em> lifts from
each year:</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">ipf_lifts_maxes <span class="token operator">&lt;-</span> ipf_lifts_reshape <span class="token percent-operator operator">%>%</span>
  group_by<span class="token punctuation">(</span>year<span class="token punctuation">,</span> sex<span class="token punctuation">,</span> lift<span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  top_n<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  ungroup <span class="token percent-operator operator">%>%</span>
  distinct<span class="token punctuation">(</span>year<span class="token punctuation">,</span> lift<span class="token punctuation">,</span> value<span class="token punctuation">,</span> .keep_all <span class="token operator">=</span> <span class="token boolean">TRUE</span><span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
<p>The first visualization we\u2019ll create for the final output is a <strong>dumbbell plot</strong>. Curious what that is, or how to make it in R? <a href="${"https://www.connorrothschild.com/post/dumbbell-plots/"}" rel="${"nofollow"}">Check out my other post on the topic</a>.</p>
<p>In order to construct a dumbbell plot, we need both male and female
observations in the same row. For this, we use the <code>spread</code> function.</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">max_pivot <span class="token operator">&lt;-</span> ipf_lifts_maxes <span class="token percent-operator operator">%>%</span>
  spread<span class="token punctuation">(</span>sex<span class="token punctuation">,</span> value<span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Now, let\u2019s construct a dataframe for each sex:</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">male_lifts <span class="token operator">&lt;-</span> max_pivot <span class="token percent-operator operator">%>%</span>
  select<span class="token punctuation">(</span><span class="token operator">-</span>name<span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  filter<span class="token punctuation">(</span><span class="token operator">!</span>is.na<span class="token punctuation">(</span>M<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  group_by<span class="token punctuation">(</span>year<span class="token punctuation">,</span> lift<span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  summarise<span class="token punctuation">(</span>male <span class="token operator">=</span> mean<span class="token punctuation">(</span>M<span class="token punctuation">)</span><span class="token punctuation">)</span>

female_lifts <span class="token operator">&lt;-</span> max_pivot <span class="token percent-operator operator">%>%</span>
  select<span class="token punctuation">(</span><span class="token operator">-</span>name<span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  filter<span class="token punctuation">(</span><span class="token operator">!</span>is.na<span class="token punctuation">(</span>F<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  group_by<span class="token punctuation">(</span>year<span class="token punctuation">,</span> lift<span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  summarise<span class="token punctuation">(</span>female <span class="token operator">=</span> mean<span class="token punctuation">(</span>F<span class="token punctuation">)</span><span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
<p>And join them:</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">max_lifts <span class="token operator">&lt;-</span> merge<span class="token punctuation">(</span>male_lifts<span class="token punctuation">,</span> female_lifts<span class="token punctuation">)</span>

max_lifts_final <span class="token operator">&lt;-</span> max_lifts <span class="token percent-operator operator">%>%</span>
  group_by<span class="token punctuation">(</span>year<span class="token punctuation">,</span> lift<span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  mutate<span class="token punctuation">(</span>diff <span class="token operator">=</span> male <span class="token operator">-</span> female<span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Not following along, or want to check your progress? Here\u2019s what our data looks like in its final form:</p>
<div class="${"table-container"}"><table><thead><tr><th align="${"left"}">year</th>
<th align="${"left"}">lift</th>
<th align="${"left"}">male</th>
<th align="${"left"}">female</th>
<th align="${"left"}">diff</th></tr></thead>
<tbody><tr><td align="${"left"}">1980</td>
<td align="${"left"}">best3bench_kg</td>
<td align="${"left"}">262.5</td>
<td align="${"left"}">120</td>
<td align="${"left"}">142.5</td></tr>
<tr><td align="${"left"}">1980</td>
<td align="${"left"}">best3deadlift_kg</td>
<td align="${"left"}">395</td>
<td align="${"left"}">205</td>
<td align="${"left"}">190</td></tr>
<tr><td align="${"left"}">1980</td>
<td align="${"left"}">best3squat_kg</td>
<td align="${"left"}">417.5</td>
<td align="${"left"}">230</td>
<td align="${"left"}">187.5</td></tr>
<tr><td align="${"left"}">1981</td>
<td align="${"left"}">best3bench_kg</td>
<td align="${"left"}">245</td>
<td align="${"left"}">150</td>
<td align="${"left"}">95</td></tr>
<tr><td align="${"left"}">1981</td>
<td align="${"left"}">best3deadlift_kg</td>
<td align="${"left"}">367.5</td>
<td align="${"left"}">230</td>
<td align="${"left"}">137.5</td></tr>
<tr><td align="${"left"}">1981</td>
<td align="${"left"}">best3squat_kg</td>
<td align="${"left"}">427.5</td>
<td align="${"left"}">215</td>
<td align="${"left"}">212.5</td></tr></tbody></table></div>
<h2 id="${"visualize"}"><a href="${"#visualize"}">Visualize!</a></h2>
<p>Finally, we can construct the visualization.</p>
<p>First, we can create a static visualization using <code>ggalt</code> (again, my <a href="${"https://www.connorrothschild.com/post/dumbbell-plots/"}" rel="${"nofollow"}">blog post</a> covers the details of this step).</p>
<p>You can fast forward the creation of individual plots if you\u2019re only interested in the <strong>combination</strong> of the two. You\u2019ll find that at the end of this post!</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">max_lifts_final <span class="token percent-operator operator">%>%</span>
  filter<span class="token punctuation">(</span>year <span class="token operator">==</span> <span class="token number">2019</span><span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  ggplot<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  ggalt<span class="token operator">::</span>geom_dumbbell<span class="token punctuation">(</span>aes<span class="token punctuation">(</span>y <span class="token operator">=</span> lift<span class="token punctuation">,</span>
                    x <span class="token operator">=</span> female<span class="token punctuation">,</span> xend <span class="token operator">=</span> male<span class="token punctuation">)</span><span class="token punctuation">,</span>
                colour <span class="token operator">=</span> <span class="token string">"grey"</span><span class="token punctuation">,</span> size <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">,</span>
                colour_x <span class="token operator">=</span> <span class="token string">"#D6604C"</span><span class="token punctuation">,</span> colour_xend <span class="token operator">=</span> <span class="token string">"#395B74"</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  labs<span class="token punctuation">(</span>y <span class="token operator">=</span> element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
       x <span class="token operator">=</span> <span class="token string">"Top Lift Recorded (kg)"</span><span class="token punctuation">,</span>
       title <span class="token operator">=</span>  <span class="token string">"How &lt;span style='color:#D6604C'>Women&lt;/span> and &lt;span style='color:#395B74'>Men&lt;/span> Differ in Top Lifts"</span><span class="token punctuation">,</span>
                       subtitle <span class="token operator">=</span> <span class="token string">"In 2019"</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  theme<span class="token punctuation">(</span>plot.title <span class="token operator">=</span> element_markdown<span class="token punctuation">(</span>lineheight <span class="token operator">=</span> <span class="token number">1.1</span><span class="token punctuation">,</span> size <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        plot.subtitle <span class="token operator">=</span> element_text<span class="token punctuation">(</span>size <span class="token operator">=</span> <span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  scale_y_discrete<span class="token punctuation">(</span>labels <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token string">"Bench"</span><span class="token punctuation">,</span> <span class="token string">"Deadlift"</span><span class="token punctuation">,</span> <span class="token string">"Squat"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  geom_text<span class="token punctuation">(</span>aes<span class="token punctuation">(</span>x <span class="token operator">=</span> female<span class="token punctuation">,</span> y <span class="token operator">=</span> lift<span class="token punctuation">,</span> label <span class="token operator">=</span> paste<span class="token punctuation">(</span>female<span class="token punctuation">,</span> <span class="token string">"kg"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            color <span class="token operator">=</span> <span class="token string">"#D6604C"</span><span class="token punctuation">,</span> size <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">,</span> vjust <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  geom_text<span class="token punctuation">(</span>aes<span class="token punctuation">(</span>x <span class="token operator">=</span> male<span class="token punctuation">,</span> y <span class="token operator">=</span> lift<span class="token punctuation">,</span> label <span class="token operator">=</span> paste<span class="token punctuation">(</span>male<span class="token punctuation">,</span> <span class="token string">"kg"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            color <span class="token operator">=</span> <span class="token string">"#395B74"</span><span class="token punctuation">,</span> size <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">,</span> vjust <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  geom_rect<span class="token punctuation">(</span>aes<span class="token punctuation">(</span>xmin<span class="token operator">=</span><span class="token number">430</span><span class="token punctuation">,</span> xmax<span class="token operator">=</span><span class="token number">470</span><span class="token punctuation">,</span> ymin<span class="token operator">=</span><span class="token operator">-</span><span class="token number">Inf</span><span class="token punctuation">,</span> ymax<span class="token operator">=</span><span class="token number">Inf</span><span class="token punctuation">)</span><span class="token punctuation">,</span> fill<span class="token operator">=</span><span class="token string">"grey80"</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  geom_text<span class="token punctuation">(</span>aes<span class="token punctuation">(</span>label<span class="token operator">=</span>diff<span class="token punctuation">,</span> y<span class="token operator">=</span>lift<span class="token punctuation">,</span> x<span class="token operator">=</span><span class="token number">450</span><span class="token punctuation">)</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  geom_text<span class="token punctuation">(</span>aes<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token number">450</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">"Difference"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            color<span class="token operator">=</span><span class="token string">"grey20"</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">,</span> vjust<span class="token operator">=</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
${validate_component(Image, "Image").$$render($$result, {
          src: "../images/post/tidy-tuesday-powerlifting/unnamed-chunk-8-1.png",
          alt: "A static dumbbell plot which represents male and female \u2018top lifts' in 2019."
        }, {}, {})}
<p>Finally, we animate, using Thomas Pedersen\u2019s wonderful <a href="${"https://github.com/thomasp85/gganimate"}" rel="${"nofollow"}">gganimate
package</a>. This is a relatively easy step, because <code>gganimate</code> only requires two extra lines of code: <code>transition_states</code> and <code>ease_aes</code>. Then, we pass it into the <code>animate</code> function!</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">animation <span class="token operator">&lt;-</span> max_lifts_final <span class="token percent-operator operator">%>%</span>
  ggplot<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  ggalt<span class="token operator">::</span>geom_dumbbell<span class="token punctuation">(</span>aes<span class="token punctuation">(</span>y <span class="token operator">=</span> lift<span class="token punctuation">,</span>
                    x <span class="token operator">=</span> female<span class="token punctuation">,</span> xend <span class="token operator">=</span> male<span class="token punctuation">)</span><span class="token punctuation">,</span>
                colour <span class="token operator">=</span> <span class="token string">"grey"</span><span class="token punctuation">,</span> size <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">,</span>
                colour_x <span class="token operator">=</span> <span class="token string">"#D6604C"</span><span class="token punctuation">,</span> colour_xend <span class="token operator">=</span> <span class="token string">"#395B74"</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  labs<span class="token punctuation">(</span>y <span class="token operator">=</span> element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
       x <span class="token operator">=</span> <span class="token string">"Top Lift Recorded (kg)"</span><span class="token punctuation">,</span>
       title <span class="token operator">=</span>  <span class="token string">"How &lt;span style='color:#D6604C'>Women&lt;/span> and &lt;span style='color:#395B74'>Men&lt;/span> Differ in Top Lifts"</span><span class="token punctuation">,</span>
  subtitle<span class="token operator">=</span><span class="token string">'&#92;nThis plot depicts the difference between the heaviest lifts for each sex at International Powerlifting Federation&#92;nevents over time. &#92;n &#92;n&#123;closest_state&#125;'</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  theme<span class="token punctuation">(</span>plot.title <span class="token operator">=</span> element_markdown<span class="token punctuation">(</span>lineheight <span class="token operator">=</span> <span class="token number">1.1</span><span class="token punctuation">,</span> size <span class="token operator">=</span> <span class="token number">25</span><span class="token punctuation">,</span> margin<span class="token operator">=</span>margin<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        plot.subtitle <span class="token operator">=</span> element_text<span class="token punctuation">(</span>size <span class="token operator">=</span> <span class="token number">15</span><span class="token punctuation">,</span> margin<span class="token operator">=</span>margin<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  scale_y_discrete<span class="token punctuation">(</span>labels <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token string">"Bench"</span><span class="token punctuation">,</span> <span class="token string">"Deadlift"</span><span class="token punctuation">,</span> <span class="token string">"Squat"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  geom_text<span class="token punctuation">(</span>aes<span class="token punctuation">(</span>x <span class="token operator">=</span> female<span class="token punctuation">,</span> y <span class="token operator">=</span> lift<span class="token punctuation">,</span> label <span class="token operator">=</span> paste<span class="token punctuation">(</span>female<span class="token punctuation">,</span> <span class="token string">"kg"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            color <span class="token operator">=</span> <span class="token string">"#D6604C"</span><span class="token punctuation">,</span> size <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">,</span> vjust <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  geom_text<span class="token punctuation">(</span>aes<span class="token punctuation">(</span>x <span class="token operator">=</span> male<span class="token punctuation">,</span> y <span class="token operator">=</span> lift<span class="token punctuation">,</span> label <span class="token operator">=</span> paste<span class="token punctuation">(</span>male<span class="token punctuation">,</span> <span class="token string">"kg"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            color <span class="token operator">=</span> <span class="token string">"#395B74"</span><span class="token punctuation">,</span> size <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">,</span> vjust <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  transition_states<span class="token punctuation">(</span>year<span class="token punctuation">,</span> transition_length <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">,</span> state_length <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  ease_aes<span class="token punctuation">(</span><span class="token string">'cubic-in-out'</span><span class="token punctuation">)</span>

a_gif <span class="token operator">&lt;-</span> animate<span class="token punctuation">(</span>animation<span class="token punctuation">,</span>
                 fps <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">,</span>
                 duration <span class="token operator">=</span> <span class="token number">25</span><span class="token punctuation">,</span>
                 width <span class="token operator">=</span> <span class="token number">800</span><span class="token punctuation">,</span> height <span class="token operator">=</span> <span class="token number">400</span><span class="token punctuation">,</span>
                 renderer <span class="token operator">=</span> gifski_renderer<span class="token punctuation">(</span><span class="token string">"outputs/animation.gif"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

a_gif</code>`}<!-- HTML_TAG_END --></pre>
${validate_component(Image, "Image").$$render($$result, {
          src: "../images/post/tidy-tuesday-powerlifting/unnamed-chunk-9-1.gif",
          alt: "An animated dumbbell plot which represents male and female \u2018top lifts' over time. Each tick of the animation represents a new year."
        }, {}, {})}
<p>But in our case, we\u2019d like to include another GIF: a line chart of differences over time.</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">animation2 <span class="token operator">&lt;-</span> max_lifts_final <span class="token percent-operator operator">%>%</span>
  ungroup <span class="token percent-operator operator">%>%</span>
  mutate<span class="token punctuation">(</span>lift <span class="token operator">=</span> case_when<span class="token punctuation">(</span>lift <span class="token operator">==</span> <span class="token string">"best3bench_kg"</span> <span class="token operator">~</span> <span class="token string">"Bench"</span><span class="token punctuation">,</span>
                          lift <span class="token operator">==</span> <span class="token string">"best3squat_kg"</span> <span class="token operator">~</span> <span class="token string">"Squat"</span><span class="token punctuation">,</span>
                          lift <span class="token operator">==</span> <span class="token string">"best3deadlift_kg"</span> <span class="token operator">~</span> <span class="token string">"Deadlift"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  ggplot<span class="token punctuation">(</span>aes<span class="token punctuation">(</span>year<span class="token punctuation">,</span> diff<span class="token punctuation">,</span> group <span class="token operator">=</span> lift<span class="token punctuation">,</span> color <span class="token operator">=</span> lift<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  geom_line<span class="token punctuation">(</span>show.legend <span class="token operator">=</span> <span class="token boolean">FALSE</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  geom_segment<span class="token punctuation">(</span>aes<span class="token punctuation">(</span>xend <span class="token operator">=</span> <span class="token number">2019.1</span><span class="token punctuation">,</span> yend <span class="token operator">=</span> diff<span class="token punctuation">)</span><span class="token punctuation">,</span> linetype <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span> colour <span class="token operator">=</span> <span class="token string">'grey'</span><span class="token punctuation">,</span> show.legend <span class="token operator">=</span> <span class="token boolean">FALSE</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  geom_point<span class="token punctuation">(</span>size <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span> show.legend <span class="token operator">=</span> <span class="token boolean">FALSE</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  geom_text<span class="token punctuation">(</span>aes<span class="token punctuation">(</span>x <span class="token operator">=</span> <span class="token number">2019.1</span><span class="token punctuation">,</span> label <span class="token operator">=</span> lift<span class="token punctuation">,</span> color <span class="token operator">=</span> <span class="token string">"#000000"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> hjust <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> show.legend <span class="token operator">=</span> <span class="token boolean">FALSE</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  transition_reveal<span class="token punctuation">(</span>year<span class="token punctuation">)</span> <span class="token operator">+</span>
  coord_cartesian<span class="token punctuation">(</span>clip <span class="token operator">=</span> <span class="token string">'off'</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  theme<span class="token punctuation">(</span>plot.title <span class="token operator">=</span> element_text<span class="token punctuation">(</span>size <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  labs<span class="token punctuation">(</span>title <span class="token operator">=</span> <span class="token string">'Difference over time'</span><span class="token punctuation">,</span>
       y <span class="token operator">=</span> <span class="token string">'Difference (kg)'</span><span class="token punctuation">,</span>
       x <span class="token operator">=</span> element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  theme<span class="token punctuation">(</span>plot.margin <span class="token operator">=</span> margin<span class="token punctuation">(</span><span class="token number">5.5</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">5.5</span><span class="token punctuation">,</span> <span class="token number">5.5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

b_gif <span class="token operator">&lt;-</span> animate<span class="token punctuation">(</span>animation2<span class="token punctuation">,</span>
                 fps <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">,</span>
                 duration <span class="token operator">=</span> <span class="token number">25</span><span class="token punctuation">,</span>
        width <span class="token operator">=</span> <span class="token number">800</span><span class="token punctuation">,</span> height <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">,</span>
        renderer <span class="token operator">=</span> gifski_renderer<span class="token punctuation">(</span><span class="token string">"outputs/animation2.gif"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

b_gif</code>`}<!-- HTML_TAG_END --></pre>
${validate_component(Image, "Image").$$render($$result, {
          src: "../images/post/tidy-tuesday-powerlifting/unnamed-chunk-10-1.gif",
          alt: "An animated line chart that shows, year by year, the difference in male and female top lifts on the Y axis. Each tick of the chart shows a new year."
        }, {}, {})}
<p>Finally, we\u2019ll combine them using <code>magick</code> (thanks to <a href="${"https://github.com/thomasp85/gganimate/wiki/Animation-Composition"}" rel="${"nofollow"}">this
post</a>):</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">library<span class="token punctuation">(</span>magick<span class="token punctuation">)</span>
a_mgif <span class="token operator">&lt;-</span> image_read<span class="token punctuation">(</span>a_gif<span class="token punctuation">)</span>
b_mgif <span class="token operator">&lt;-</span> image_read<span class="token punctuation">(</span>b_gif<span class="token punctuation">)</span>

new_gif <span class="token operator">&lt;-</span> image_append<span class="token punctuation">(</span>c<span class="token punctuation">(</span>a_mgif<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> b_mgif<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> stack <span class="token operator">=</span> <span class="token boolean">TRUE</span><span class="token punctuation">)</span>
<span class="token keyword">for</span><span class="token punctuation">(</span>i <span class="token keyword">in</span> <span class="token number">2</span><span class="token operator">:</span><span class="token number">250</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
  combined <span class="token operator">&lt;-</span> image_append<span class="token punctuation">(</span>c<span class="token punctuation">(</span>a_mgif<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> b_mgif<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> stack <span class="token operator">=</span> <span class="token boolean">TRUE</span><span class="token punctuation">)</span>
  new_gif <span class="token operator">&lt;-</span> c<span class="token punctuation">(</span>new_gif<span class="token punctuation">,</span> combined<span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>What\u2019s happening here? Essentially, we\u2019re using the power of <code>magick</code> to:</p>
<ol><li>Read in all of the <em>individual images</em> (<code>image_read</code>) from each GIF (after all, a GIF is just a series of images!).</li>
<li>For the first frame, stack the two images on top of each other (<code>image_append</code>), so plot 1 is above plot 2.</li>
<li>For the rest of the frames (in my case, the next 249, because my GIF had 250 frames), replicate this and combine it with the first frame (this is the <code>for</code> loop).</li></ol>
<p>Here, we specify <code>stack = TRUE</code> so that one plot is <strong>above</strong> the other. If you\u2019d like to place them side-by-side, specify <code>stack = FALSE</code>.</p>
<p>In combination, the process results in our final output:</p>
${validate_component(Image, "Image").$$render($$result, {
          src: "../images/post/tidy-tuesday-powerlifting/unnamed-chunk-11-1.gif",
          alt: "A combination of the two aforementioned plots. The top plot is the animated dumbbell plot, and the bottom is a line chart. In combination, they allow the user to see the magnitude of differences between men and women, as well as how these differences have evolved over time."
        }, {}, {})}
<p>In this view, we can see the magnitude of the differences both relatively and absolutely (top chart), <em>and</em> we can see how these differences change over time (bottom chart). The power of an animated, combined chart!</p>`
      })}`;
    });
  }
});

// .svelte-kit/output/server/chunks/tidy-tuesday-replication-27e2426e.js
var tidy_tuesday_replication_27e2426e_exports = {};
__export(tidy_tuesday_replication_27e2426e_exports, {
  default: () => Tidy_tuesday_replication,
  metadata: () => metadata52
});
var import_bowser58, metadata52, Tidy_tuesday_replication;
var init_tidy_tuesday_replication_27e2426e = __esm({
  ".svelte-kit/output/server/chunks/tidy-tuesday-replication-27e2426e.js"() {
    init_shims();
    init_app_9f378dda();
    init_layout_ef610ed1();
    init_Image_8e30e86c();
    init_BackTo_d882ed88();
    init_global_130d3fe3();
    import_bowser58 = __toModule(require_es5());
    init_CornerTitle_6f993505();
    init_store_8bf23024();
    init_utils_09998264();
    init_IntersectionObserver_4cd4a541();
    metadata52 = {
      "layout": "blog",
      "title": "Using Shiny to Replicate a Bloomberg Graphic",
      "description": "Leveraging the power of {shiny} for static graphics",
      "date": "2019-12-10",
      "image": "tidy-tuesday-replication/header.png",
      "archived": true,
      "tags": ["r", "tutorial"]
    };
    Tidy_tuesday_replication = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return `${validate_component(Layout4, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata52), {}, {
        default: () => `<p>This weeks\u2019s installment of <a href="${"https://t.co/sElb4fcv3u?amp=1"}" rel="${"nofollow"}">Tidy
Tuesday</a> is all about replicating
professional plots in R. Inspired by Rafael Irizarry\u2019s post <a href="${"https://simplystatistics.org/2019/08/28/you-can-replicate-almost-any-plot-with-ggplot2/"}" rel="${"nofollow"}">\u201CYou can
replicate almost any plot with
R\u201D</a>,
the goal is to take otherwise professional publication-ready plots and
make them in R (usually ggplot2).</p>
<p>I was interested in this Tidy Tuesday because some of my <a href="${"https://connorrothschild.github.io/r/introducing-tpltheme/"}" rel="${"nofollow"}">past
work</a> has
been dedicated to creating publication-ready plots. Because <a href="${"https://connorrothschild.github.io/r/automation/"}" rel="${"nofollow"}">the first
visualization I ever
created</a> was inspired
by (a replication of?) <a href="${"https://www.bloomberg.com/graphics/2017-job-risk/"}" rel="${"nofollow"}">this
visualization</a> from
Bloomberg graphics, I decided to set out on a journey to make that plot
as close as possible to the real thing.</p>
${validate_component(Image, "Image").$$render($$result, {
          alt: "A scatterplot by Bloomberg Graphics, showing automation risk compared to median income.",
          src: "../images/post/tidy-tuesday-replication/bloomberg.png"
        }, {}, {})}
<p>The real goal of this week\u2019s Tidy Tuesday is using <strong>the data that
Rafael posted</strong> to create other cool visualizations; I took a slightly
different approach to try to recreate another visualization entirely.
What follows is an interactive recreation of the visualization above,
using <a href="${"https://shiny.rstudio.com/"}" rel="${"nofollow"}">Shiny</a> and
<a href="${"https://plot.ly/r/"}" rel="${"nofollow"}">plotly</a>.</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">library<span class="token punctuation">(</span>ggplot2<span class="token punctuation">)</span>
library<span class="token punctuation">(</span>ggthemes<span class="token punctuation">)</span>
library<span class="token punctuation">(</span>dplyr<span class="token punctuation">)</span>
library<span class="token punctuation">(</span>ggrepel<span class="token punctuation">)</span>
library<span class="token punctuation">(</span>tools<span class="token punctuation">)</span>
library<span class="token punctuation">(</span>readxl<span class="token punctuation">)</span>
library<span class="token punctuation">(</span>tidyverse<span class="token punctuation">)</span>
library<span class="token punctuation">(</span>knitr<span class="token punctuation">)</span>
library<span class="token punctuation">(</span>shiny<span class="token punctuation">)</span>
library<span class="token punctuation">(</span>plotly<span class="token punctuation">)</span>

theme_set<span class="token punctuation">(</span>theme_minimal<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
<h1 id="${"load-and-clean-data"}"><a href="${"#load-and-clean-data"}">Load and clean data</a></h1>
<p>First, we read in the data. This process was a bit complicated as I kind
of had to guess where Bloomberg pulled their data from.</p>
<p>I relied on three datasets:</p>
<ol><li>Educational attainment broke down by occupation, provided by BLS
<a href="${"https://www.bls.gov/emp/ep_education_training_system.htm"}" rel="${"nofollow"}">here</a></li>
<li>Salaries, median hourly/annual wages broke down by occupation,
provided by BLS
<a href="${"https://www.bls.gov/oes/current/oes_nat.htm#11-0000"}" rel="${"nofollow"}">here</a></li>
<li>Risk of automation broken down by occupation, provided by Carl
Benedikt Frey and Michael A. Osborne (but compiled
<a href="${"https://data.world/wnedds/occupations-by-state-and-likelihood-of-automation"}" rel="${"nofollow"}">here</a>)</li></ol>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">education <span class="token operator">&lt;-</span> read_excel<span class="token punctuation">(</span><span class="token string">"data/education.xlsx"</span><span class="token punctuation">,</span> skip<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
salary <span class="token operator">&lt;-</span> read_excel<span class="token punctuation">(</span><span class="token string">"data/national_M2017_dl.xlsx"</span><span class="token punctuation">)</span>
automation <span class="token operator">&lt;-</span> read_excel<span class="token punctuation">(</span><span class="token string">"data/raw_state_automation_data.xlsx"</span><span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
<p>In <a href="${"https://connorrothschild.github.io/r/automation/"}" rel="${"nofollow"}">another post</a>, I
detail the data cleaning process. I\u2019ll spare you the details here.</p>
<h1 id="${"create-the-ui"}"><a href="${"#create-the-ui"}">Create the UI</a></h1>
<p>Now we create the UI, as is the case for any Shiny app. This is pretty
simple: first, we add the title panel and beautify it with some CSS.</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">ui <span class="token operator">&lt;-</span> fluidPage<span class="token punctuation">(</span>

    titlePanel<span class="token punctuation">(</span>
      h1<span class="token punctuation">(</span><span class="token string">"A College Degree Lowers Job Automation Risk"</span><span class="token punctuation">,</span>
        style <span class="token operator">=</span> "font<span class="token operator">-</span>family<span class="token operator">:</span> <span class="token string">'Helvetica Neue'</span><span class="token punctuation">;</span>
        font<span class="token operator">-</span>size<span class="token operator">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span> font<span class="token operator">-</span>weight<span class="token operator">:</span> <span class="token number">400</span><span class="token punctuation">;</span> line<span class="token operator">-</span>height<span class="token operator">:</span> <span class="token number">1.1</span><span class="token punctuation">;</span>"<span class="token punctuation">)</span><span class="token punctuation">,</span>
      windowTitle <span class="token operator">=</span> <span class="token string">"Find Out If Your Job Will Be Automated"</span>
      <span class="token punctuation">)</span><span class="token punctuation">,</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Next, we add the main panel, which includes a) the plot object, b) the
footnote, and c) some CSS.</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">mainPanel<span class="token punctuation">(</span>
      fluidRow<span class="token punctuation">(</span>
        div<span class="token punctuation">(</span>
           plotlyOutput<span class="token punctuation">(</span><span class="token string">"plot"</span><span class="token punctuation">,</span> height <span class="token operator">=</span> <span class="token string">'600px'</span><span class="token punctuation">,</span> width <span class="token operator">=</span> <span class="token string">'850px'</span><span class="token punctuation">)</span>
           <span class="token punctuation">)</span><span class="token punctuation">,</span>align<span class="token operator">=</span><span class="token string">"left"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
           p<span class="token punctuation">(</span><span class="token string">"DATA: FREY &amp; OSBORNE, BUREAU OF LABOR STATISTICS"</span><span class="token punctuation">,</span>
           style <span class="token operator">=</span> "font<span class="token operator">-</span>family<span class="token operator">:</span> <span class="token string">'Helvetica Neue'</span><span class="token punctuation">;</span>
        font<span class="token operator">-</span>size<span class="token operator">:</span> <span class="token number">8</span>px<span class="token punctuation">;</span> font<span class="token operator">-</span>weight<span class="token operator">:</span> <span class="token number">500</span><span class="token punctuation">;</span> line<span class="token operator">-</span>height<span class="token operator">:</span> <span class="token number">1.1</span><span class="token punctuation">;</span>"<span class="token punctuation">)</span>
           <span class="token punctuation">)</span>

<span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
<p>That\u2019s it!</p>
<h1 id="${"server"}"><a href="${"#server"}">Server</a></h1>
<p>Now we can define the <code>server()</code> function, where the real magic of this
visualization happens.</p>
<p>All of the following takes place in the
<code>server &lt;- function(input, output, session) {}</code> function.</p>
<h2 id="${"create-a-ggplot-object"}"><a href="${"#create-a-ggplot-object"}">Create a <code>ggplot</code> object</a></h2>
<p>We know we\u2019re going to need a ggplot object. In my case, we\u2019ll need a
plot object which relies on <em>probability, median income,</em> and <em>risk of
automation</em>.</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">ggplot<span class="token punctuation">(</span>aes<span class="token punctuation">(</span>x<span class="token operator">=</span>probability<span class="token punctuation">,</span> y<span class="token operator">=</span>A_MEDIAN<span class="token punctuation">,</span> size<span class="token operator">=</span>TOT_EMP<span class="token punctuation">,</span> fill<span class="token operator">=</span>typicaled<span class="token punctuation">,</span> text <span class="token operator">=</span> text<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
    geom_point<span class="token punctuation">(</span>color <span class="token operator">=</span> <span class="token string">"black"</span><span class="token punctuation">,</span> alpha <span class="token operator">=</span> <span class="token number">.97</span><span class="token punctuation">,</span> stroke <span class="token operator">=</span> <span class="token number">.1</span><span class="token punctuation">)</span> <span class="token operator">+</span>
    scale_size<span class="token punctuation">(</span>range <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span> guide <span class="token operator">=</span> <span class="token string">'legend'</span><span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
<p>This creates the base of the object.</p>
<h3 id="${"add-a-tooltip"}"><a href="${"#add-a-tooltip"}">Add a tooltip</a></h3>
<p>We also know that, like the Bloomberg visualization we\u2019re replicating,
we\u2019re going to want a tooltip.</p>
<p>That\u2019s why we included <code>text</code> in the above code, which we define here:</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">data <span class="token percent-operator operator">%>%</span>
    mutate<span class="token punctuation">(</span>text <span class="token operator">=</span> glue<span class="token operator">::</span>glue<span class="token punctuation">(</span><span class="token string">'&lt;span style="font-size:16px;font-weight:bold">&#123;data$occupation&#125;&lt;/span>'</span><span class="token punctuation">,</span>
                             <span class="token string">'&#92;n&lt;b>Number employed:&lt;/b> &#123;scales::comma(data$TOT_EMP)&#125;'</span><span class="token punctuation">,</span>
                             <span class="token string">'&#92;n&lt;b>Computerization prob:&lt;/b> &#123;data$probability&#125;%'</span><span class="token punctuation">,</span>
                             <span class="token string">'&#92;n&lt;b>Education:&lt;/b> &#123;data$typicaled&#125;'</span><span class="token punctuation">,</span>
                             sep <span class="token operator">=</span> <span class="token string">"&#92;n"</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
<p>This tooltip takes in some CSS, some HTML, and creates a pretty tooltip!
The <code>glue</code> function is lovely.</p>
<h3 id="${"axes-and-labels"}"><a href="${"#axes-and-labels"}">Axes and labels</a></h3>
<p>The Bloomberg visualization is unique in that it has no axis lines. We
can replicate that in <code>ggplot2</code> via the following code:</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">theme<span class="token punctuation">(</span>axis.line.x <span class="token operator">=</span> ggplot2<span class="token operator">::</span>element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      axis.line.y <span class="token operator">=</span> ggplot2<span class="token operator">::</span>element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      axis.text <span class="token operator">=</span> element_text<span class="token punctuation">(</span>colour <span class="token operator">=</span> <span class="token string">"black"</span><span class="token punctuation">,</span> size <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
<p>But that\u2019s not all!</p>
<p>The Bloomberg visualization is also unique in that it doesn\u2019t have axis
titles. Moreover, the axis labels are a bit unique; the x axis increases
sequentially by 10 until 90 where it transitions into \u201890%\u2019 (the % is
not present in the earlier numbers).</p>
<p>We can mimic that kind of styling with this code:</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">xlab<span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span> <span class="token operator">+</span>
ylab<span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span> <span class="token operator">+</span>
labs<span class="token punctuation">(</span>size<span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">,</span> alpha <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">,</span> fill <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">)</span> <span class="token operator">+</span>
scale_y_continuous<span class="token punctuation">(</span>limits <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token number">240000</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                   breaks <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">20000</span><span class="token punctuation">,</span> <span class="token number">40000</span><span class="token punctuation">,</span> <span class="token number">60000</span><span class="token punctuation">,</span> <span class="token number">80000</span><span class="token punctuation">,</span> <span class="token number">100000</span><span class="token punctuation">,</span> <span class="token number">120000</span><span class="token punctuation">,</span> <span class="token number">140000</span><span class="token punctuation">,</span> <span class="token number">160000</span><span class="token punctuation">,</span> <span class="token number">180000</span><span class="token punctuation">,</span> <span class="token number">200000</span><span class="token punctuation">,</span> <span class="token number">220000</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                   labels <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token string">"20K"</span><span class="token punctuation">,</span> <span class="token string">"40K"</span><span class="token punctuation">,</span> <span class="token string">"60K"</span><span class="token punctuation">,</span> <span class="token string">"80K"</span><span class="token punctuation">,</span> <span class="token string">"100K"</span><span class="token punctuation">,</span> <span class="token string">"120K"</span><span class="token punctuation">,</span> <span class="token string">"140K"</span><span class="token punctuation">,</span> <span class="token string">"160K"</span><span class="token punctuation">,</span> <span class="token string">"180K"</span><span class="token punctuation">,</span> <span class="token string">"200K"</span><span class="token punctuation">,</span> <span class="token string">"220K"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
scale_x_continuous<span class="token punctuation">(</span>limits <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                   breaks <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token number">70</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                   labels <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token number">70</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token string">"90%"</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
<p>We create a bit of a buffer on the <code>limits</code> argument so that we can add
annotations. We\u2019ll get to that later!</p>
<h3 id="${"colors"}"><a href="${"#colors"}">Colors</a></h3>
<p>To get as close as possible to Bloomberg\u2019s plot, I\u2019d also like to mimic
their color scheme. I pulled the colors from their dotplot with this
awesome <a href="${"https://chrome.google.com/webstore/detail/color-picker/ohcpnigalekghcmgcdcenkpelffpdolg"}" rel="${"nofollow"}">Chrome
plugin</a>;
then, I added them to R with the following:</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">colors <span class="token operator">&lt;-</span> c<span class="token punctuation">(</span><span class="token string">'No formal educational credential'</span> <span class="token operator">=</span> <span class="token string">'#FA1A48'</span><span class="token punctuation">,</span>
            <span class="token string">'High school diploma or equivalent'</span> <span class="token operator">=</span> <span class="token string">'#F79734'</span><span class="token punctuation">,</span>
            <span class="token string">'Postsecondary nondegree award'</span> <span class="token operator">=</span> <span class="token string">'#FDFF1C'</span><span class="token punctuation">,</span> 
            <span class="token string">"Associate's degree"</span> <span class="token operator">=</span> <span class="token string">'#1DDF50'</span><span class="token punctuation">,</span>
            <span class="token string">"Bachelor's degree"</span> <span class="token operator">=</span> <span class="token string">'#34D19D'</span><span class="token punctuation">,</span> 
            <span class="token string">"Master's degree"</span> <span class="token operator">=</span> <span class="token string">'#1BC0E9'</span><span class="token punctuation">,</span>
            <span class="token string">"Doctoral or professional degree"</span> <span class="token operator">=</span> <span class="token string">'#1B91FF'</span><span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
<p>In the plot object, we reference this with the following:</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">scale_fill_manual<span class="token punctuation">(</span>values <span class="token operator">=</span> colors<span class="token punctuation">,</span> labels <span class="token operator">=</span> 
  c<span class="token punctuation">(</span><span class="token string">'No formal educational credential'</span><span class="token punctuation">,</span> 
    <span class="token string">'High school diploma or equivalent'</span><span class="token punctuation">,</span> 
    <span class="token string">"Some college, no degree"</span><span class="token punctuation">,</span>
    <span class="token string">"Associate's degree"</span><span class="token punctuation">,</span> 
    <span class="token string">"Postsecondary nondegree award"</span><span class="token punctuation">,</span>
    <span class="token string">"Bachelor's degree"</span><span class="token punctuation">,</span>
    <span class="token string">"Master's degree"</span><span class="token punctuation">,</span>
    <span class="token string">"Doctoral or professional degree"</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
<p>This essentially creates a fill scale (manually) with specified hex
codes for colors. I also tried to manipulate the order of the legend but
that didn\u2019t translate to plotly (a documented problem, I believe).</p>
<h3 id="${"final-touches-for-the-ggplot"}"><a href="${"#final-touches-for-the-ggplot"}">Final touches for the <code>ggplot</code></a></h3>
<p>Finally, we do something really hacky: add a regression line with
<code>geom_segment</code>. (I\u2019m so sorry)</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">geom_segment<span class="token punctuation">(</span>aes<span class="token punctuation">(</span>x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> y <span class="token operator">=</span> <span class="token number">54000</span><span class="token punctuation">,</span> xend <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">,</span> yend <span class="token operator">=</span> <span class="token number">58000</span><span class="token punctuation">)</span><span class="token punctuation">,</span> size <span class="token operator">=</span> <span class="token number">.1</span><span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
<p>We now have the ggplot object created; let\u2019s convert it to a plotly
object.</p>
<h2 id="${"create-a-plotly-object"}"><a href="${"#create-a-plotly-object"}">Create a <code>plotly</code> object</a></h2>
<p>This process relies on the <code>ggplotly</code> function, which reads in a
previously defined <code>ggplot</code> object and converts into an interactive
plotly one.</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">introPlot <span class="token operator">&lt;-</span> ggplotly<span class="token punctuation">(</span>introggPlot<span class="token punctuation">,</span> tooltip <span class="token operator">=</span> <span class="token string">'text'</span><span class="token punctuation">,</span> sort <span class="token operator">=</span> <span class="token boolean">FALSE</span><span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
<p>After creating the base plotly object, we move to some more complicated
steps:</p>
<h3 id="${"legend-orientation"}"><a href="${"#legend-orientation"}">Legend orientation</a></h3>
<p>We\u2019d like the legend to orient horizontally, right above the plot. We do
that with the following (inside the <code>layout</code> function):</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">introPlot <span class="token operator">&lt;-</span> ggplotly<span class="token punctuation">(</span>introggPlot<span class="token punctuation">,</span> tooltip <span class="token operator">=</span> <span class="token string">'text'</span><span class="token punctuation">,</span> sort <span class="token operator">=</span> <span class="token boolean">FALSE</span><span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
layout<span class="token punctuation">(</span>
  legend <span class="token operator">=</span> list<span class="token punctuation">(</span>orientation <span class="token operator">=</span> <span class="token string">"h"</span><span class="token punctuation">,</span>
              xanchor <span class="token operator">=</span> <span class="token string">"left"</span><span class="token punctuation">,</span>
              x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> y <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">,</span>
              traceorder <span class="token operator">=</span> <span class="token string">"normal"</span><span class="token punctuation">,</span>
              itemsizing <span class="token operator">=</span> <span class="token string">"constant"</span><span class="token punctuation">,</span>
              tracegroupgap <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
              font <span class="token operator">=</span> list<span class="token punctuation">(</span>size <span class="token operator">=</span> <span class="token number">13</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
              <span class="token comment"># ...</span></code>`}<!-- HTML_TAG_END --></pre>
<p>This does a few things. First, it orients the legend horizontally.
Second, it anchors the legend to the left. Third, it defines the
location (using x-y pairs) of the legend. <code>traceorder</code> is meant to
maintain the previous order from <code>ggplot</code>, but that didn\u2019t work in my
version. <code>itemsizing</code> is meant to keep the legend items with a constant
size, as opposed to dynamic relative to the plot objects themselves.
This also didn\u2019t work. The last two arguments define the spacing between
points and the font size of the legend text!</p>
<h3 id="${"axes-revisited"}"><a href="${"#axes-revisited"}">Axes Revisited</a></h3>
<p>We also see the Bloomberg viz has a right-aligned Y-axis. We can add
that to plotly via the following code:</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r"> <span class="token comment"># ... Layout continued</span>
yaxis <span class="token operator">=</span> list<span class="token punctuation">(</span>
          tickfont <span class="token operator">=</span> element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
          overlaying <span class="token operator">=</span> <span class="token string">"y"</span><span class="token punctuation">,</span>
          side <span class="token operator">=</span> <span class="token string">"right"</span><span class="token punctuation">,</span>
          title <span class="token operator">=</span> <span class="token string">""</span>
        <span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
<h3 id="${"some-aesthetic-changes"}"><a href="${"#some-aesthetic-changes"}">Some aesthetic changes</a></h3>
<p>Finally, we add three commands to the <code>layout</code> function.</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r"> <span class="token comment"># ... Layout continued</span>
  font <span class="token operator">=</span> list<span class="token punctuation">(</span>family <span class="token operator">=</span> <span class="token string">'Helvetica Neue'</span><span class="token punctuation">,</span> color <span class="token operator">=</span> <span class="token string">"black"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  margin <span class="token operator">=</span> list<span class="token punctuation">(</span>r<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> l<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>t<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>b<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>pad <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  hoverlabel <span class="token operator">=</span> list<span class="token punctuation">(</span>bgcolor <span class="token operator">=</span> <span class="token string">'white'</span><span class="token punctuation">,</span> color <span class="token operator">=</span> <span class="token string">'black'</span><span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
<p>This a) changes the font of the plot, b) adds a small margin, and c)
stylizes the tooltip on hover.</p>
<h3 id="${"annotations"}"><a href="${"#annotations"}">Annotations</a></h3>
<p>The last step is to mimic Bloomberg\u2019s annotations. This is a little
tough, specifically because it requires pretty specific x- and y-values.</p>
<p>First, we\u2019ll add their guiding annotations (that replace axis labels)
that you can find in each corner:</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r"><span class="token percent-operator operator">%>%</span> <span class="token comment"># After layout() closes</span>
add_annotations<span class="token punctuation">(</span>
      x <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> y <span class="token operator">=</span> <span class="token number">7500</span><span class="token punctuation">,</span>
      xref <span class="token operator">=</span> <span class="token string">"x"</span><span class="token punctuation">,</span>
      yref <span class="token operator">=</span> <span class="token string">"y"</span><span class="token punctuation">,</span>
      text <span class="token operator">=</span> <span class="token string">"&lt;b>Low paid,&#92;nleast vulnerable&lt;/b>"</span><span class="token punctuation">,</span>
      xanchor <span class="token operator">=</span> <span class="token string">'center'</span><span class="token punctuation">,</span>
      align <span class="token operator">=</span> <span class="token string">'left'</span><span class="token punctuation">,</span>
      font <span class="token operator">=</span> list<span class="token punctuation">(</span>size <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      showarrow <span class="token operator">=</span> F
    <span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
    add_annotations<span class="token punctuation">(</span>
      x <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">,</span> y <span class="token operator">=</span> <span class="token number">7500</span><span class="token punctuation">,</span>
      xref <span class="token operator">=</span> <span class="token string">"x"</span><span class="token punctuation">,</span>
      yref <span class="token operator">=</span> <span class="token string">"y"</span><span class="token punctuation">,</span>
      text <span class="token operator">=</span> <span class="token string">"&lt;b>Low paid,&#92;nmost vulnerable&lt;/b>"</span><span class="token punctuation">,</span>
      xanchor <span class="token operator">=</span> <span class="token string">'center'</span><span class="token punctuation">,</span>
      align <span class="token operator">=</span> <span class="token string">'right'</span><span class="token punctuation">,</span>
      font <span class="token operator">=</span> list<span class="token punctuation">(</span>size <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      showarrow <span class="token operator">=</span> F
    <span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
    add_annotations<span class="token punctuation">(</span>
      x <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> y <span class="token operator">=</span> <span class="token number">230000</span><span class="token punctuation">,</span>
      xref <span class="token operator">=</span> <span class="token string">"x"</span><span class="token punctuation">,</span>
      yref <span class="token operator">=</span> <span class="token string">"y"</span><span class="token punctuation">,</span>
      text <span class="token operator">=</span> <span class="token string">"&lt;b>Best paid,&#92;nleast vulnerable&lt;/b>"</span><span class="token punctuation">,</span>
      xanchor <span class="token operator">=</span> <span class="token string">'center'</span><span class="token punctuation">,</span>
      align <span class="token operator">=</span> <span class="token string">'left'</span><span class="token punctuation">,</span>
      font <span class="token operator">=</span> list<span class="token punctuation">(</span>size <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      showarrow <span class="token operator">=</span> F
    <span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
    add_annotations<span class="token punctuation">(</span>
      x <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">,</span> y <span class="token operator">=</span> <span class="token number">230000</span><span class="token punctuation">,</span>
      xref <span class="token operator">=</span> <span class="token string">"x"</span><span class="token punctuation">,</span>
      yref <span class="token operator">=</span> <span class="token string">"y"</span><span class="token punctuation">,</span>
      text <span class="token operator">=</span> <span class="token string">"&lt;b>Best paid,&#92;nmost vulnerable&lt;/b>"</span><span class="token punctuation">,</span>
      xanchor <span class="token operator">=</span> <span class="token string">'center'</span><span class="token punctuation">,</span>
      align <span class="token operator">=</span> <span class="token string">'right'</span><span class="token punctuation">,</span>
      font <span class="token operator">=</span> list<span class="token punctuation">(</span>size <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      showarrow <span class="token operator">=</span> F
    <span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Next, we add annotations for \u2018most and least likely to be automated\u2019, as
well as the y axis label.</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">add_annotations<span class="token punctuation">(</span>
      x <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">,</span> y <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">5000</span><span class="token punctuation">,</span>
      xref <span class="token operator">=</span> <span class="token string">"x"</span><span class="token punctuation">,</span>
      yref <span class="token operator">=</span> <span class="token string">"y"</span><span class="token punctuation">,</span>
      text <span class="token operator">=</span> glue<span class="token operator">::</span>glue<span class="token punctuation">(</span>sprintf<span class="token punctuation">(</span><span class="token string">'\u2190'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"Least likely to be automated"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      xanchor <span class="token operator">=</span> <span class="token string">'left'</span><span class="token punctuation">,</span>
      align <span class="token operator">=</span> <span class="token string">'left'</span><span class="token punctuation">,</span>
      font <span class="token operator">=</span> list<span class="token punctuation">(</span>size <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      showarrow <span class="token operator">=</span> F
    <span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
    add_annotations<span class="token punctuation">(</span>
      x <span class="token operator">=</span> <span class="token number">105</span><span class="token punctuation">,</span> y <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">5000</span><span class="token punctuation">,</span>
      xref <span class="token operator">=</span> <span class="token string">"x"</span><span class="token punctuation">,</span>
      yref <span class="token operator">=</span> <span class="token string">"y"</span><span class="token punctuation">,</span>
      text <span class="token operator">=</span> glue<span class="token operator">::</span>glue<span class="token punctuation">(</span><span class="token string">"Most likely to be automated"</span><span class="token punctuation">,</span> sprintf<span class="token punctuation">(</span><span class="token string">'\u2192'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      xanchor <span class="token operator">=</span> <span class="token string">'right'</span><span class="token punctuation">,</span>
      align <span class="token operator">=</span> <span class="token string">'right'</span><span class="token punctuation">,</span>
      font <span class="token operator">=</span> list<span class="token punctuation">(</span>size <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      showarrow <span class="token operator">=</span> F
    <span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
    add_annotations<span class="token punctuation">(</span>
      x <span class="token operator">=</span> <span class="token number">99</span><span class="token punctuation">,</span> y <span class="token operator">=</span> <span class="token number">243000</span><span class="token punctuation">,</span>
      xref <span class="token operator">=</span> <span class="token string">"x"</span><span class="token punctuation">,</span>
      yref <span class="token operator">=</span> <span class="token string">"y"</span><span class="token punctuation">,</span>
      text <span class="token operator">=</span> <span class="token string">"Average annual wage"</span><span class="token punctuation">,</span>
      xanchor <span class="token operator">=</span> <span class="token string">'center'</span><span class="token punctuation">,</span>
      align <span class="token operator">=</span> <span class="token string">'right'</span><span class="token punctuation">,</span>
      font <span class="token operator">=</span> list<span class="token punctuation">(</span>size <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      showarrow <span class="token operator">=</span> F
    <span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
<p>And finally, add a couple of plot annotations which label specific
points. (We are not labelling a hundred occupations like Bloomberg did.)</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">add_annotations<span class="token punctuation">(</span>
      x <span class="token operator">=</span> subset<span class="token punctuation">(</span>data<span class="token operator">$</span>probability<span class="token punctuation">,</span> data<span class="token operator">$</span>occupation <span class="token operator">==</span> <span class="token string">"Chief Executives"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      y <span class="token operator">=</span> subset<span class="token punctuation">(</span>data<span class="token operator">$</span>A_MEDIAN<span class="token punctuation">,</span> data<span class="token operator">$</span>occupation <span class="token operator">==</span> <span class="token string">"Chief Executives"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      text <span class="token operator">=</span> <span class="token string">"Chief Executives"</span><span class="token punctuation">,</span>
      xref <span class="token operator">=</span> <span class="token string">"x"</span><span class="token punctuation">,</span>
      yref <span class="token operator">=</span> <span class="token string">"y"</span><span class="token punctuation">,</span>
      xanchor <span class="token operator">=</span> <span class="token string">'center'</span><span class="token punctuation">,</span>
      align <span class="token operator">=</span> <span class="token string">'right'</span><span class="token punctuation">,</span>
      font <span class="token operator">=</span> list<span class="token punctuation">(</span>size <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      showarrow <span class="token operator">=</span> <span class="token boolean">TRUE</span><span class="token punctuation">,</span>
      arrowhead <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
      ax <span class="token operator">=</span> <span class="token number">50</span><span class="token punctuation">,</span>
      ay <span class="token operator">=</span> <span class="token number">25</span>
    <span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
    add_annotations<span class="token punctuation">(</span>
      x <span class="token operator">=</span> subset<span class="token punctuation">(</span>data<span class="token operator">$</span>probability<span class="token punctuation">,</span> data<span class="token operator">$</span>occupation <span class="token operator">==</span> <span class="token string">"Cashiers"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      y <span class="token operator">=</span> subset<span class="token punctuation">(</span>data<span class="token operator">$</span>A_MEDIAN<span class="token punctuation">,</span> data<span class="token operator">$</span>occupation <span class="token operator">==</span> <span class="token string">"Cashiers"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      text <span class="token operator">=</span> <span class="token string">"Cashiers"</span><span class="token punctuation">,</span>
      xref <span class="token operator">=</span> <span class="token string">"x"</span><span class="token punctuation">,</span>
      yref <span class="token operator">=</span> <span class="token string">"y"</span><span class="token punctuation">,</span>
      xanchor <span class="token operator">=</span> <span class="token string">'center'</span><span class="token punctuation">,</span>
      align <span class="token operator">=</span> <span class="token string">'right'</span><span class="token punctuation">,</span>
      font <span class="token operator">=</span> list<span class="token punctuation">(</span>size <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      showarrow <span class="token operator">=</span> <span class="token boolean">TRUE</span><span class="token punctuation">,</span>
      arrowhead <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
      ax <span class="token operator">=</span> <span class="token number">40</span><span class="token punctuation">,</span>
      ay <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">50</span>
    <span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Finalize the plotly object with</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">config<span class="token punctuation">(</span>displaylogo <span class="token operator">=</span> F<span class="token punctuation">,</span> showSendToCloud <span class="token operator">=</span> F<span class="token punctuation">,</span> displayModeBar <span class="token operator">=</span> F<span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
<p>We\u2019re done! Run the application with the following code:</p>
<pre class="${"language-r"}"><!-- HTML_TAG_START -->${`<code class="language-r">shinyApp<span class="token punctuation">(</span>ui <span class="token operator">=</span> ui<span class="token punctuation">,</span> server <span class="token operator">=</span> server<span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
<p>And we\u2019re done! Find my interactive visualization
<a href="${"https://connorrothschild.shinyapps.io/2019-12-10/"}" rel="${"nofollow"}">here</a>. Find the
code, uninterrupted and (hopefully) reproducible,
<em><a href="${"https://github.com/connorrothschild/tidytuesday/blob/master/2019-12-10/app.R"}" rel="${"nofollow"}">here</a></em>.</p>
<p>Here\u2019s the Bloomberg visualization:</p>
${validate_component(Image, "Image").$$render($$result, {
          alt: "A scatterplot by Bloomberg Graphics, showing automation risk compared to median income.",
          src: "../images/post/tidy-tuesday-replication/bloomberg.png"
        }, {}, {})}
<p>And here\u2019s mine:</p>
${validate_component(Image, "Image").$$render($$result, {
          alt: "A scatterplot recreation, showing automation risk compared to median income.",
          src: "../images/post/tidy-tuesday-replication/replication.png"
        }, {}, {})}
`
      })}`;
    });
  }
});

// .svelte-kit/output/server/chunks/posts.json-c9cb5aa2.js
var posts_json_c9cb5aa2_exports = {};
__export(posts_json_c9cb5aa2_exports, {
  get: () => get4
});
async function get4() {
  const imports = { "./post/adding-a-chart-to-your-d3-tooltip.md": () => Promise.resolve().then(() => (init_adding_a_chart_to_your_d3_tooltip_67831f20(), adding_a_chart_to_your_d3_tooltip_67831f20_exports)), "./post/animate-hugo-academic.md": () => Promise.resolve().then(() => (init_animate_hugo_academic_123d84a8(), animate_hugo_academic_123d84a8_exports)), "./post/automation-scrollytell.md": () => Promise.resolve().then(() => (init_automation_scrollytell_6d42332b(), automation_scrollytell_6d42332b_exports)), "./post/color-in-data-vis.md": () => Promise.resolve().then(() => (init_color_in_data_vis_3bd4b890(), color_in_data_vis_3bd4b890_exports)), "./post/covid-gun-spikes.md": () => Promise.resolve().then(() => (init_covid_gun_spikes_595c3f78(), covid_gun_spikes_595c3f78_exports)), "./post/covid-on-campus.md": () => Promise.resolve().then(() => (init_covid_on_campus_09e3e28f(), covid_on_campus_09e3e28f_exports)), "./post/covid-posts.md": () => Promise.resolve().then(() => (init_covid_posts_32b068ed(), covid_posts_32b068ed_exports)), "./post/do-something-else.md": () => Promise.resolve().then(() => (init_do_something_else_1f16f77a(), do_something_else_1f16f77a_exports)), "./post/dumbbell-plots.md": () => Promise.resolve().then(() => (init_dumbbell_plots_da9731c3(), dumbbell_plots_da9731c3_exports)), "./post/economist-table-replication-using-reactable.md": () => Promise.resolve().then(() => (init_economist_table_replication_using_reactable_d59c42a0(), economist_table_replication_using_reactable_d59c42a0_exports)), "./post/flat-data-r.md": () => Promise.resolve().then(() => (init_flat_data_r_0a30bdaf(), flat_data_r_0a30bdaf_exports)), "./post/introducing-tpltheme.md": () => Promise.resolve().then(() => (init_introducing_tpltheme_70118bb6(), introducing_tpltheme_70118bb6_exports)), "./post/map-springfield.md": () => Promise.resolve().then(() => (init_map_springfield_65bdac35(), map_springfield_65bdac35_exports)), "./post/nuxt-blog-starter.md": () => Promise.resolve().then(() => (init_nuxt_blog_starter_99b71689(), nuxt_blog_starter_99b71689_exports)), "./post/refugee-trends.md": () => Promise.resolve().then(() => (init_refugee_trends_97b67ae7(), refugee_trends_97b67ae7_exports)), "./post/svelte-and-d3.md": () => Promise.resolve().then(() => (init_svelte_and_d3_81974204(), svelte_and_d3_81974204_exports)), "./post/svelte-scatter.md": () => Promise.resolve().then(() => (init_svelte_scatter_f5d4a79a(), svelte_scatter_f5d4a79a_exports)), "./post/tidy-tuesday-powerlifting.md": () => Promise.resolve().then(() => (init_tidy_tuesday_powerlifting_56cc77f6(), tidy_tuesday_powerlifting_56cc77f6_exports)), "./post/tidy-tuesday-replication.md": () => Promise.resolve().then(() => (init_tidy_tuesday_replication_27e2426e(), tidy_tuesday_replication_27e2426e_exports)) };
  let body = [];
  for (const path in imports) {
    body.push(imports[path]().then(({ metadata: metadata53, slug }) => {
      return {
        metadata: metadata53,
        slug,
        path
      };
    }));
  }
  const posts = await Promise.all(body);
  return {
    body: JSON.stringify(posts)
  };
}
var init_posts_json_c9cb5aa2 = __esm({
  ".svelte-kit/output/server/chunks/posts.json-c9cb5aa2.js"() {
    init_shims();
  }
});

// node_modules/lodash.debounce/index.js
var require_lodash = __commonJS({
  "node_modules/lodash.debounce/index.js"(exports, module2) {
    init_shims();
    var FUNC_ERROR_TEXT = "Expected a function";
    var NAN = 0 / 0;
    var symbolTag = "[object Symbol]";
    var reTrim = /^\s+|\s+$/g;
    var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
    var reIsBinary = /^0b[01]+$/i;
    var reIsOctal = /^0o[0-7]+$/i;
    var freeParseInt = parseInt;
    var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
    var freeSelf = typeof self == "object" && self && self.Object === Object && self;
    var root = freeGlobal || freeSelf || Function("return this")();
    var objectProto = Object.prototype;
    var objectToString = objectProto.toString;
    var nativeMax = Math.max;
    var nativeMin = Math.min;
    var now2 = function() {
      return root.Date.now();
    };
    function debounce(func, wait, options2) {
      var lastArgs, lastThis, maxWait, result, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
      if (typeof func != "function") {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      wait = toNumber(wait) || 0;
      if (isObject(options2)) {
        leading = !!options2.leading;
        maxing = "maxWait" in options2;
        maxWait = maxing ? nativeMax(toNumber(options2.maxWait) || 0, wait) : maxWait;
        trailing = "trailing" in options2 ? !!options2.trailing : trailing;
      }
      function invokeFunc(time) {
        var args = lastArgs, thisArg = lastThis;
        lastArgs = lastThis = void 0;
        lastInvokeTime = time;
        result = func.apply(thisArg, args);
        return result;
      }
      function leadingEdge(time) {
        lastInvokeTime = time;
        timerId = setTimeout(timerExpired, wait);
        return leading ? invokeFunc(time) : result;
      }
      function remainingWait(time) {
        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, result2 = wait - timeSinceLastCall;
        return maxing ? nativeMin(result2, maxWait - timeSinceLastInvoke) : result2;
      }
      function shouldInvoke(time) {
        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
        return lastCallTime === void 0 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
      }
      function timerExpired() {
        var time = now2();
        if (shouldInvoke(time)) {
          return trailingEdge(time);
        }
        timerId = setTimeout(timerExpired, remainingWait(time));
      }
      function trailingEdge(time) {
        timerId = void 0;
        if (trailing && lastArgs) {
          return invokeFunc(time);
        }
        lastArgs = lastThis = void 0;
        return result;
      }
      function cancel() {
        if (timerId !== void 0) {
          clearTimeout(timerId);
        }
        lastInvokeTime = 0;
        lastArgs = lastCallTime = lastThis = timerId = void 0;
      }
      function flush() {
        return timerId === void 0 ? result : trailingEdge(now2());
      }
      function debounced() {
        var time = now2(), isInvoking = shouldInvoke(time);
        lastArgs = arguments;
        lastThis = this;
        lastCallTime = time;
        if (isInvoking) {
          if (timerId === void 0) {
            return leadingEdge(lastCallTime);
          }
          if (maxing) {
            timerId = setTimeout(timerExpired, wait);
            return invokeFunc(lastCallTime);
          }
        }
        if (timerId === void 0) {
          timerId = setTimeout(timerExpired, wait);
        }
        return result;
      }
      debounced.cancel = cancel;
      debounced.flush = flush;
      return debounced;
    }
    function isObject(value) {
      var type = typeof value;
      return !!value && (type == "object" || type == "function");
    }
    function isObjectLike(value) {
      return !!value && typeof value == "object";
    }
    function isSymbol(value) {
      return typeof value == "symbol" || isObjectLike(value) && objectToString.call(value) == symbolTag;
    }
    function toNumber(value) {
      if (typeof value == "number") {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject(value)) {
        var other = typeof value.valueOf == "function" ? value.valueOf() : value;
        value = isObject(other) ? other + "" : other;
      }
      if (typeof value != "string") {
        return value === 0 ? value : +value;
      }
      value = value.replace(reTrim, "");
      var isBinary = reIsBinary.test(value);
      return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
    }
    module2.exports = debounce;
  }
});

// node_modules/gsap/dist/MorphSVGPlugin.js
var require_MorphSVGPlugin = __commonJS({
  "node_modules/gsap/dist/MorphSVGPlugin.js"(exports, module2) {
    init_shims();
    (function(global2, factory) {
      typeof exports === "object" && typeof module2 !== "undefined" ? factory(exports) : typeof define === "function" && define.amd ? define(["exports"], factory) : (global2 = global2 || self, factory(global2.window = global2.window || {}));
    })(exports, function(exports2) {
      "use strict";
      var _svgPathExp = /[achlmqstvz]|(-?\d*\.?\d*(?:e[\-+]?\d+)?)[0-9]/ig, _numbersExp = /(?:(-)?\d*\.?\d*(?:e[\-+]?\d+)?)[0-9]/ig, _scientific = /[\+\-]?\d*\.?\d+e[\+\-]?\d+/ig, _selectorExp = /(^[#\.][a-z]|[a-y][a-z])/i, _DEG2RAD = Math.PI / 180, _sin = Math.sin, _cos = Math.cos, _abs = Math.abs, _sqrt = Math.sqrt, _isString = function _isString2(value) {
        return typeof value === "string";
      }, _isNumber = function _isNumber2(value) {
        return typeof value === "number";
      }, _roundingNum = 1e5, _round = function _round2(value) {
        return Math.round(value * _roundingNum) / _roundingNum || 0;
      };
      function getRawPath(value) {
        value = _isString(value) && _selectorExp.test(value) ? document.querySelector(value) || value : value;
        var e = value.getAttribute ? value : 0, rawPath;
        if (e && (value = value.getAttribute("d"))) {
          if (!e._gsPath) {
            e._gsPath = {};
          }
          rawPath = e._gsPath[value];
          return rawPath && !rawPath._dirty ? rawPath : e._gsPath[value] = stringToRawPath(value);
        }
        return !value ? console.warn("Expecting a <path> element or an SVG path data string") : _isString(value) ? stringToRawPath(value) : _isNumber(value[0]) ? [value] : value;
      }
      function reverseSegment(segment) {
        var i = 0, y;
        segment.reverse();
        for (; i < segment.length; i += 2) {
          y = segment[i];
          segment[i] = segment[i + 1];
          segment[i + 1] = y;
        }
        segment.reversed = !segment.reversed;
      }
      var _createPath = function _createPath2(e, ignore) {
        var path = document.createElementNS("http://www.w3.org/2000/svg", "path"), attr = [].slice.call(e.attributes), i = attr.length, name;
        ignore = "," + ignore + ",";
        while (--i > -1) {
          name = attr[i].nodeName.toLowerCase();
          if (ignore.indexOf("," + name + ",") < 0) {
            path.setAttributeNS(null, name, attr[i].nodeValue);
          }
        }
        return path;
      }, _typeAttrs = {
        rect: "rx,ry,x,y,width,height",
        circle: "r,cx,cy",
        ellipse: "rx,ry,cx,cy",
        line: "x1,x2,y1,y2"
      }, _attrToObj = function _attrToObj2(e, attrs) {
        var props = attrs ? attrs.split(",") : [], obj = {}, i = props.length;
        while (--i > -1) {
          obj[props[i]] = +e.getAttribute(props[i]) || 0;
        }
        return obj;
      };
      function convertToPath(element, swap) {
        var type = element.tagName.toLowerCase(), circ = 0.552284749831, data, x, y, r, ry, path, rcirc, rycirc, points, w, h, x2, x3, x4, x5, x6, y2, y3, y4, y5, y6, attr;
        if (type === "path" || !element.getBBox) {
          return element;
        }
        path = _createPath(element, "x,y,width,height,cx,cy,rx,ry,r,x1,x2,y1,y2,points");
        attr = _attrToObj(element, _typeAttrs[type]);
        if (type === "rect") {
          r = attr.rx;
          ry = attr.ry || r;
          x = attr.x;
          y = attr.y;
          w = attr.width - r * 2;
          h = attr.height - ry * 2;
          if (r || ry) {
            x2 = x + r * (1 - circ);
            x3 = x + r;
            x4 = x3 + w;
            x5 = x4 + r * circ;
            x6 = x4 + r;
            y2 = y + ry * (1 - circ);
            y3 = y + ry;
            y4 = y3 + h;
            y5 = y4 + ry * circ;
            y6 = y4 + ry;
            data = "M" + x6 + "," + y3 + " V" + y4 + " C" + [x6, y5, x5, y6, x4, y6, x4 - (x4 - x3) / 3, y6, x3 + (x4 - x3) / 3, y6, x3, y6, x2, y6, x, y5, x, y4, x, y4 - (y4 - y3) / 3, x, y3 + (y4 - y3) / 3, x, y3, x, y2, x2, y, x3, y, x3 + (x4 - x3) / 3, y, x4 - (x4 - x3) / 3, y, x4, y, x5, y, x6, y2, x6, y3].join(",") + "z";
          } else {
            data = "M" + (x + w) + "," + y + " v" + h + " h" + -w + " v" + -h + " h" + w + "z";
          }
        } else if (type === "circle" || type === "ellipse") {
          if (type === "circle") {
            r = ry = attr.r;
            rycirc = r * circ;
          } else {
            r = attr.rx;
            ry = attr.ry;
            rycirc = ry * circ;
          }
          x = attr.cx;
          y = attr.cy;
          rcirc = r * circ;
          data = "M" + (x + r) + "," + y + " C" + [x + r, y + rycirc, x + rcirc, y + ry, x, y + ry, x - rcirc, y + ry, x - r, y + rycirc, x - r, y, x - r, y - rycirc, x - rcirc, y - ry, x, y - ry, x + rcirc, y - ry, x + r, y - rycirc, x + r, y].join(",") + "z";
        } else if (type === "line") {
          data = "M" + attr.x1 + "," + attr.y1 + " L" + attr.x2 + "," + attr.y2;
        } else if (type === "polyline" || type === "polygon") {
          points = (element.getAttribute("points") + "").match(_numbersExp) || [];
          x = points.shift();
          y = points.shift();
          data = "M" + x + "," + y + " L" + points.join(",");
          if (type === "polygon") {
            data += "," + x + "," + y + "z";
          }
        }
        path.setAttribute("d", rawPathToString(path._gsRawPath = stringToRawPath(data)));
        if (swap && element.parentNode) {
          element.parentNode.insertBefore(path, element);
          element.parentNode.removeChild(element);
        }
        return path;
      }
      function arcToSegment(lastX, lastY, rx, ry, angle, largeArcFlag, sweepFlag, x, y) {
        if (lastX === x && lastY === y) {
          return;
        }
        rx = _abs(rx);
        ry = _abs(ry);
        var angleRad = angle % 360 * _DEG2RAD, cosAngle = _cos(angleRad), sinAngle = _sin(angleRad), PI = Math.PI, TWOPI = PI * 2, dx2 = (lastX - x) / 2, dy2 = (lastY - y) / 2, x1 = cosAngle * dx2 + sinAngle * dy2, y1 = -sinAngle * dx2 + cosAngle * dy2, x1_sq = x1 * x1, y1_sq = y1 * y1, radiiCheck = x1_sq / (rx * rx) + y1_sq / (ry * ry);
        if (radiiCheck > 1) {
          rx = _sqrt(radiiCheck) * rx;
          ry = _sqrt(radiiCheck) * ry;
        }
        var rx_sq = rx * rx, ry_sq = ry * ry, sq = (rx_sq * ry_sq - rx_sq * y1_sq - ry_sq * x1_sq) / (rx_sq * y1_sq + ry_sq * x1_sq);
        if (sq < 0) {
          sq = 0;
        }
        var coef = (largeArcFlag === sweepFlag ? -1 : 1) * _sqrt(sq), cx1 = coef * (rx * y1 / ry), cy1 = coef * -(ry * x1 / rx), sx2 = (lastX + x) / 2, sy2 = (lastY + y) / 2, cx = sx2 + (cosAngle * cx1 - sinAngle * cy1), cy = sy2 + (sinAngle * cx1 + cosAngle * cy1), ux = (x1 - cx1) / rx, uy = (y1 - cy1) / ry, vx = (-x1 - cx1) / rx, vy = (-y1 - cy1) / ry, temp = ux * ux + uy * uy, angleStart = (uy < 0 ? -1 : 1) * Math.acos(ux / _sqrt(temp)), angleExtent = (ux * vy - uy * vx < 0 ? -1 : 1) * Math.acos((ux * vx + uy * vy) / _sqrt(temp * (vx * vx + vy * vy)));
        isNaN(angleExtent) && (angleExtent = PI);
        if (!sweepFlag && angleExtent > 0) {
          angleExtent -= TWOPI;
        } else if (sweepFlag && angleExtent < 0) {
          angleExtent += TWOPI;
        }
        angleStart %= TWOPI;
        angleExtent %= TWOPI;
        var segments = Math.ceil(_abs(angleExtent) / (TWOPI / 4)), rawPath = [], angleIncrement = angleExtent / segments, controlLength = 4 / 3 * _sin(angleIncrement / 2) / (1 + _cos(angleIncrement / 2)), ma = cosAngle * rx, mb = sinAngle * rx, mc = sinAngle * -ry, md = cosAngle * ry, i;
        for (i = 0; i < segments; i++) {
          angle = angleStart + i * angleIncrement;
          x1 = _cos(angle);
          y1 = _sin(angle);
          ux = _cos(angle += angleIncrement);
          uy = _sin(angle);
          rawPath.push(x1 - controlLength * y1, y1 + controlLength * x1, ux + controlLength * uy, uy - controlLength * ux, ux, uy);
        }
        for (i = 0; i < rawPath.length; i += 2) {
          x1 = rawPath[i];
          y1 = rawPath[i + 1];
          rawPath[i] = x1 * ma + y1 * mc + cx;
          rawPath[i + 1] = x1 * mb + y1 * md + cy;
        }
        rawPath[i - 2] = x;
        rawPath[i - 1] = y;
        return rawPath;
      }
      function stringToRawPath(d) {
        var a = (d + "").replace(_scientific, function(m) {
          var n = +m;
          return n < 1e-4 && n > -1e-4 ? 0 : n;
        }).match(_svgPathExp) || [], path = [], relativeX = 0, relativeY = 0, twoThirds = 2 / 3, elements = a.length, points = 0, errorMessage = "ERROR: malformed path: " + d, i, j, x, y, command, isRelative, segment, startX, startY, difX, difY, beziers, prevCommand, flag1, flag2, line = function line2(sx, sy, ex, ey) {
          difX = (ex - sx) / 3;
          difY = (ey - sy) / 3;
          segment.push(sx + difX, sy + difY, ex - difX, ey - difY, ex, ey);
        };
        if (!d || !isNaN(a[0]) || isNaN(a[1])) {
          console.log(errorMessage);
          return path;
        }
        for (i = 0; i < elements; i++) {
          prevCommand = command;
          if (isNaN(a[i])) {
            command = a[i].toUpperCase();
            isRelative = command !== a[i];
          } else {
            i--;
          }
          x = +a[i + 1];
          y = +a[i + 2];
          if (isRelative) {
            x += relativeX;
            y += relativeY;
          }
          if (!i) {
            startX = x;
            startY = y;
          }
          if (command === "M") {
            if (segment) {
              if (segment.length < 8) {
                path.length -= 1;
              } else {
                points += segment.length;
              }
            }
            relativeX = startX = x;
            relativeY = startY = y;
            segment = [x, y];
            path.push(segment);
            i += 2;
            command = "L";
          } else if (command === "C") {
            if (!segment) {
              segment = [0, 0];
            }
            if (!isRelative) {
              relativeX = relativeY = 0;
            }
            segment.push(x, y, relativeX + a[i + 3] * 1, relativeY + a[i + 4] * 1, relativeX += a[i + 5] * 1, relativeY += a[i + 6] * 1);
            i += 6;
          } else if (command === "S") {
            difX = relativeX;
            difY = relativeY;
            if (prevCommand === "C" || prevCommand === "S") {
              difX += relativeX - segment[segment.length - 4];
              difY += relativeY - segment[segment.length - 3];
            }
            if (!isRelative) {
              relativeX = relativeY = 0;
            }
            segment.push(difX, difY, x, y, relativeX += a[i + 3] * 1, relativeY += a[i + 4] * 1);
            i += 4;
          } else if (command === "Q") {
            difX = relativeX + (x - relativeX) * twoThirds;
            difY = relativeY + (y - relativeY) * twoThirds;
            if (!isRelative) {
              relativeX = relativeY = 0;
            }
            relativeX += a[i + 3] * 1;
            relativeY += a[i + 4] * 1;
            segment.push(difX, difY, relativeX + (x - relativeX) * twoThirds, relativeY + (y - relativeY) * twoThirds, relativeX, relativeY);
            i += 4;
          } else if (command === "T") {
            difX = relativeX - segment[segment.length - 4];
            difY = relativeY - segment[segment.length - 3];
            segment.push(relativeX + difX, relativeY + difY, x + (relativeX + difX * 1.5 - x) * twoThirds, y + (relativeY + difY * 1.5 - y) * twoThirds, relativeX = x, relativeY = y);
            i += 2;
          } else if (command === "H") {
            line(relativeX, relativeY, relativeX = x, relativeY);
            i += 1;
          } else if (command === "V") {
            line(relativeX, relativeY, relativeX, relativeY = x + (isRelative ? relativeY - relativeX : 0));
            i += 1;
          } else if (command === "L" || command === "Z") {
            if (command === "Z") {
              x = startX;
              y = startY;
              segment.closed = true;
            }
            if (command === "L" || _abs(relativeX - x) > 0.5 || _abs(relativeY - y) > 0.5) {
              line(relativeX, relativeY, x, y);
              if (command === "L") {
                i += 2;
              }
            }
            relativeX = x;
            relativeY = y;
          } else if (command === "A") {
            flag1 = a[i + 4];
            flag2 = a[i + 5];
            difX = a[i + 6];
            difY = a[i + 7];
            j = 7;
            if (flag1.length > 1) {
              if (flag1.length < 3) {
                difY = difX;
                difX = flag2;
                j--;
              } else {
                difY = flag2;
                difX = flag1.substr(2);
                j -= 2;
              }
              flag2 = flag1.charAt(1);
              flag1 = flag1.charAt(0);
            }
            beziers = arcToSegment(relativeX, relativeY, +a[i + 1], +a[i + 2], +a[i + 3], +flag1, +flag2, (isRelative ? relativeX : 0) + difX * 1, (isRelative ? relativeY : 0) + difY * 1);
            i += j;
            if (beziers) {
              for (j = 0; j < beziers.length; j++) {
                segment.push(beziers[j]);
              }
            }
            relativeX = segment[segment.length - 2];
            relativeY = segment[segment.length - 1];
          } else {
            console.log(errorMessage);
          }
        }
        i = segment.length;
        if (i < 6) {
          path.pop();
          i = 0;
        } else if (segment[0] === segment[i - 2] && segment[1] === segment[i - 1]) {
          segment.closed = true;
        }
        path.totalPoints = points + i;
        return path;
      }
      function rawPathToString(rawPath) {
        if (_isNumber(rawPath[0])) {
          rawPath = [rawPath];
        }
        var result = "", l = rawPath.length, sl, s2, i, segment;
        for (s2 = 0; s2 < l; s2++) {
          segment = rawPath[s2];
          result += "M" + _round(segment[0]) + "," + _round(segment[1]) + " C";
          sl = segment.length;
          for (i = 2; i < sl; i++) {
            result += _round(segment[i++]) + "," + _round(segment[i++]) + " " + _round(segment[i++]) + "," + _round(segment[i++]) + " " + _round(segment[i++]) + "," + _round(segment[i]) + " ";
          }
          if (segment.closed) {
            result += "z";
          }
        }
        return result;
      }
      var gsap5, _toArray, _lastLinkedAnchor, _coreInitted, PluginClass, _getGSAP = function _getGSAP2() {
        return gsap5 || typeof window !== "undefined" && (gsap5 = window.gsap) && gsap5.registerPlugin && gsap5;
      }, _isFunction = function _isFunction2(value) {
        return typeof value === "function";
      }, _atan2 = Math.atan2, _cos$1 = Math.cos, _sin$1 = Math.sin, _sqrt$1 = Math.sqrt, _PI = Math.PI, _2PI = _PI * 2, _angleMin = _PI * 0.3, _angleMax = _PI * 0.7, _bigNum = 1e20, _numExp = /[-+=\.]*\d+[\.e\-\+]*\d*[e\-\+]*\d*/gi, _selectorExp$1 = /(^[#\.][a-z]|[a-y][a-z])/i, _commands = /[achlmqstvz]/i, _log = function _log2(message) {
        return console && console.warn(message);
      }, _bonusValidated = 1, _getAverageXY = function _getAverageXY2(segment) {
        var l = segment.length, x = 0, y = 0, i;
        for (i = 0; i < l; i++) {
          x += segment[i++];
          y += segment[i];
        }
        return [x / (l / 2), y / (l / 2)];
      }, _getSize = function _getSize2(segment) {
        var l = segment.length, xMax = segment[0], xMin = xMax, yMax = segment[1], yMin = yMax, x, y, i;
        for (i = 6; i < l; i += 6) {
          x = segment[i];
          y = segment[i + 1];
          if (x > xMax) {
            xMax = x;
          } else if (x < xMin) {
            xMin = x;
          }
          if (y > yMax) {
            yMax = y;
          } else if (y < yMin) {
            yMin = y;
          }
        }
        segment.centerX = (xMax + xMin) / 2;
        segment.centerY = (yMax + yMin) / 2;
        return segment.size = (xMax - xMin) * (yMax - yMin);
      }, _getTotalSize = function _getTotalSize2(rawPath, samplesPerBezier) {
        if (samplesPerBezier === void 0) {
          samplesPerBezier = 3;
        }
        var j = rawPath.length, xMax = rawPath[0][0], xMin = xMax, yMax = rawPath[0][1], yMin = yMax, inc = 1 / samplesPerBezier, l, x, y, i, segment, k, t, inv, x1, y1, x2, x3, x4, y2, y3, y4;
        while (--j > -1) {
          segment = rawPath[j];
          l = segment.length;
          for (i = 6; i < l; i += 6) {
            x1 = segment[i];
            y1 = segment[i + 1];
            x2 = segment[i + 2] - x1;
            y2 = segment[i + 3] - y1;
            x3 = segment[i + 4] - x1;
            y3 = segment[i + 5] - y1;
            x4 = segment[i + 6] - x1;
            y4 = segment[i + 7] - y1;
            k = samplesPerBezier;
            while (--k > -1) {
              t = inc * k;
              inv = 1 - t;
              x = (t * t * x4 + 3 * inv * (t * x3 + inv * x2)) * t + x1;
              y = (t * t * y4 + 3 * inv * (t * y3 + inv * y2)) * t + y1;
              if (x > xMax) {
                xMax = x;
              } else if (x < xMin) {
                xMin = x;
              }
              if (y > yMax) {
                yMax = y;
              } else if (y < yMin) {
                yMin = y;
              }
            }
          }
        }
        rawPath.centerX = (xMax + xMin) / 2;
        rawPath.centerY = (yMax + yMin) / 2;
        rawPath.left = xMin;
        rawPath.width = xMax - xMin;
        rawPath.top = yMin;
        rawPath.height = yMax - yMin;
        return rawPath.size = (xMax - xMin) * (yMax - yMin);
      }, _sortByComplexity = function _sortByComplexity2(a, b) {
        return b.length - a.length;
      }, _sortBySize = function _sortBySize2(a, b) {
        var sizeA = a.size || _getSize(a), sizeB = b.size || _getSize(b);
        return Math.abs(sizeB - sizeA) < (sizeA + sizeB) / 20 ? b.centerX - a.centerX || b.centerY - a.centerY : sizeB - sizeA;
      }, _offsetSegment = function _offsetSegment2(segment, shapeIndex) {
        var a = segment.slice(0), l = segment.length, wrap = l - 2, i, index;
        shapeIndex = shapeIndex | 0;
        for (i = 0; i < l; i++) {
          index = (i + shapeIndex) % wrap;
          segment[i++] = a[index];
          segment[i] = a[index + 1];
        }
      }, _getTotalMovement = function _getTotalMovement2(sb, eb, shapeIndex, offsetX, offsetY) {
        var l = sb.length, d = 0, wrap = l - 2, index, i, x, y;
        shapeIndex *= 6;
        for (i = 0; i < l; i += 6) {
          index = (i + shapeIndex) % wrap;
          y = sb[index] - (eb[i] - offsetX);
          x = sb[index + 1] - (eb[i + 1] - offsetY);
          d += _sqrt$1(x * x + y * y);
        }
        return d;
      }, _getClosestShapeIndex = function _getClosestShapeIndex2(sb, eb, checkReverse) {
        var l = sb.length, sCenter = _getAverageXY(sb), eCenter = _getAverageXY(eb), offsetX = eCenter[0] - sCenter[0], offsetY = eCenter[1] - sCenter[1], min = _getTotalMovement(sb, eb, 0, offsetX, offsetY), minIndex = 0, copy2, d, i;
        for (i = 6; i < l; i += 6) {
          d = _getTotalMovement(sb, eb, i / 6, offsetX, offsetY);
          if (d < min) {
            min = d;
            minIndex = i;
          }
        }
        if (checkReverse) {
          copy2 = sb.slice(0);
          reverseSegment(copy2);
          for (i = 6; i < l; i += 6) {
            d = _getTotalMovement(copy2, eb, i / 6, offsetX, offsetY);
            if (d < min) {
              min = d;
              minIndex = -i;
            }
          }
        }
        return minIndex / 6;
      }, _getClosestAnchor = function _getClosestAnchor2(rawPath, x, y) {
        var j = rawPath.length, closestDistance = _bigNum, closestX = 0, closestY = 0, segment, dx, dy, d, i, l;
        while (--j > -1) {
          segment = rawPath[j];
          l = segment.length;
          for (i = 0; i < l; i += 6) {
            dx = segment[i] - x;
            dy = segment[i + 1] - y;
            d = _sqrt$1(dx * dx + dy * dy);
            if (d < closestDistance) {
              closestDistance = d;
              closestX = segment[i];
              closestY = segment[i + 1];
            }
          }
        }
        return [closestX, closestY];
      }, _getClosestSegment = function _getClosestSegment2(bezier, pool, startIndex, sortRatio, offsetX, offsetY) {
        var l = pool.length, index = 0, minSize = Math.min(bezier.size || _getSize(bezier), pool[startIndex].size || _getSize(pool[startIndex])) * sortRatio, min = _bigNum, cx = bezier.centerX + offsetX, cy = bezier.centerY + offsetY, size, i, dx, dy, d;
        for (i = startIndex; i < l; i++) {
          size = pool[i].size || _getSize(pool[i]);
          if (size < minSize) {
            break;
          }
          dx = pool[i].centerX - cx;
          dy = pool[i].centerY - cy;
          d = _sqrt$1(dx * dx + dy * dy);
          if (d < min) {
            index = i;
            min = d;
          }
        }
        d = pool[index];
        pool.splice(index, 1);
        return d;
      }, _subdivideSegmentQty = function _subdivideSegmentQty2(segment, quantity) {
        var tally = 0, max = 0.999999, l = segment.length, newPointsPerSegment = quantity / ((l - 2) / 6), ax, ay, cp1x, cp1y, cp2x, cp2y, bx, by, x1, y1, x2, y2, i, t;
        for (i = 2; i < l; i += 6) {
          tally += newPointsPerSegment;
          while (tally > max) {
            ax = segment[i - 2];
            ay = segment[i - 1];
            cp1x = segment[i];
            cp1y = segment[i + 1];
            cp2x = segment[i + 2];
            cp2y = segment[i + 3];
            bx = segment[i + 4];
            by = segment[i + 5];
            t = 1 / ((Math.floor(tally) || 1) + 1);
            x1 = ax + (cp1x - ax) * t;
            x2 = cp1x + (cp2x - cp1x) * t;
            x1 += (x2 - x1) * t;
            x2 += (cp2x + (bx - cp2x) * t - x2) * t;
            y1 = ay + (cp1y - ay) * t;
            y2 = cp1y + (cp2y - cp1y) * t;
            y1 += (y2 - y1) * t;
            y2 += (cp2y + (by - cp2y) * t - y2) * t;
            segment.splice(i, 4, ax + (cp1x - ax) * t, ay + (cp1y - ay) * t, x1, y1, x1 + (x2 - x1) * t, y1 + (y2 - y1) * t, x2, y2, cp2x + (bx - cp2x) * t, cp2y + (by - cp2y) * t);
            i += 6;
            l += 6;
            tally--;
          }
        }
        return segment;
      }, _equalizeSegmentQuantity = function _equalizeSegmentQuantity2(start, end, shapeIndex, map2, fillSafe) {
        var dif = end.length - start.length, longer = dif > 0 ? end : start, shorter = dif > 0 ? start : end, added = 0, sortMethod = map2 === "complexity" ? _sortByComplexity : _sortBySize, sortRatio = map2 === "position" ? 0 : typeof map2 === "number" ? map2 : 0.8, i = shorter.length, shapeIndices = typeof shapeIndex === "object" && shapeIndex.push ? shapeIndex.slice(0) : [shapeIndex], reverse = shapeIndices[0] === "reverse" || shapeIndices[0] < 0, log = shapeIndex === "log", eb, sb, b, x, y, offsetX, offsetY;
        if (!shorter[0]) {
          return;
        }
        if (longer.length > 1) {
          start.sort(sortMethod);
          end.sort(sortMethod);
          offsetX = longer.size || _getTotalSize(longer);
          offsetX = shorter.size || _getTotalSize(shorter);
          offsetX = longer.centerX - shorter.centerX;
          offsetY = longer.centerY - shorter.centerY;
          if (sortMethod === _sortBySize) {
            for (i = 0; i < shorter.length; i++) {
              longer.splice(i, 0, _getClosestSegment(shorter[i], longer, i, sortRatio, offsetX, offsetY));
            }
          }
        }
        if (dif) {
          if (dif < 0) {
            dif = -dif;
          }
          if (longer[0].length > shorter[0].length) {
            _subdivideSegmentQty(shorter[0], (longer[0].length - shorter[0].length) / 6 | 0);
          }
          i = shorter.length;
          while (added < dif) {
            x = longer[i].size || _getSize(longer[i]);
            b = _getClosestAnchor(shorter, longer[i].centerX, longer[i].centerY);
            x = b[0];
            y = b[1];
            shorter[i++] = [x, y, x, y, x, y, x, y];
            shorter.totalPoints += 8;
            added++;
          }
        }
        for (i = 0; i < start.length; i++) {
          eb = end[i];
          sb = start[i];
          dif = eb.length - sb.length;
          if (dif < 0) {
            _subdivideSegmentQty(eb, -dif / 6 | 0);
          } else if (dif > 0) {
            _subdivideSegmentQty(sb, dif / 6 | 0);
          }
          if (reverse && fillSafe !== false && !sb.reversed) {
            reverseSegment(sb);
          }
          shapeIndex = shapeIndices[i] || shapeIndices[i] === 0 ? shapeIndices[i] : "auto";
          if (shapeIndex) {
            if (sb.closed || Math.abs(sb[0] - sb[sb.length - 2]) < 0.5 && Math.abs(sb[1] - sb[sb.length - 1]) < 0.5) {
              if (shapeIndex === "auto" || shapeIndex === "log") {
                shapeIndices[i] = shapeIndex = _getClosestShapeIndex(sb, eb, !i || fillSafe === false);
                if (shapeIndex < 0) {
                  reverse = true;
                  reverseSegment(sb);
                  shapeIndex = -shapeIndex;
                }
                _offsetSegment(sb, shapeIndex * 6);
              } else if (shapeIndex !== "reverse") {
                if (i && shapeIndex < 0) {
                  reverseSegment(sb);
                }
                _offsetSegment(sb, (shapeIndex < 0 ? -shapeIndex : shapeIndex) * 6);
              }
            } else if (!reverse && (shapeIndex === "auto" && Math.abs(eb[0] - sb[0]) + Math.abs(eb[1] - sb[1]) + Math.abs(eb[eb.length - 2] - sb[sb.length - 2]) + Math.abs(eb[eb.length - 1] - sb[sb.length - 1]) > Math.abs(eb[0] - sb[sb.length - 2]) + Math.abs(eb[1] - sb[sb.length - 1]) + Math.abs(eb[eb.length - 2] - sb[0]) + Math.abs(eb[eb.length - 1] - sb[1]) || shapeIndex % 2)) {
              reverseSegment(sb);
              shapeIndices[i] = -1;
              reverse = true;
            } else if (shapeIndex === "auto") {
              shapeIndices[i] = 0;
            } else if (shapeIndex === "reverse") {
              shapeIndices[i] = -1;
            }
            if (sb.closed !== eb.closed) {
              sb.closed = eb.closed = false;
            }
          }
        }
        log && _log("shapeIndex:[" + shapeIndices.join(",") + "]");
        start.shapeIndex = shapeIndices;
        return shapeIndices;
      }, _pathFilter = function _pathFilter2(a, shapeIndex, map2, precompile, fillSafe) {
        var start = stringToRawPath(a[0]), end = stringToRawPath(a[1]);
        if (!_equalizeSegmentQuantity(start, end, shapeIndex || shapeIndex === 0 ? shapeIndex : "auto", map2, fillSafe)) {
          return;
        }
        a[0] = rawPathToString(start);
        a[1] = rawPathToString(end);
        if (precompile === "log" || precompile === true) {
          _log('precompile:["' + a[0] + '","' + a[1] + '"]');
        }
      }, _offsetPoints = function _offsetPoints2(text, offset) {
        if (!offset) {
          return text;
        }
        var a = text.match(_numExp) || [], l = a.length, s2 = "", inc, i, j;
        if (offset === "reverse") {
          i = l - 1;
          inc = -2;
        } else {
          i = ((parseInt(offset, 10) || 0) * 2 + 1 + l * 100) % l;
          inc = 2;
        }
        for (j = 0; j < l; j += 2) {
          s2 += a[i - 1] + "," + a[i] + " ";
          i = (i + inc) % l;
        }
        return s2;
      }, _equalizePointQuantity = function _equalizePointQuantity2(a, quantity) {
        var tally = 0, x = parseFloat(a[0]), y = parseFloat(a[1]), s2 = x + "," + y + " ", max = 0.999999, newPointsPerSegment, i, l, j, factor, nextX, nextY;
        l = a.length;
        newPointsPerSegment = quantity * 0.5 / (l * 0.5 - 1);
        for (i = 0; i < l - 2; i += 2) {
          tally += newPointsPerSegment;
          nextX = parseFloat(a[i + 2]);
          nextY = parseFloat(a[i + 3]);
          if (tally > max) {
            factor = 1 / (Math.floor(tally) + 1);
            j = 1;
            while (tally > max) {
              s2 += (x + (nextX - x) * factor * j).toFixed(2) + "," + (y + (nextY - y) * factor * j).toFixed(2) + " ";
              tally--;
              j++;
            }
          }
          s2 += nextX + "," + nextY + " ";
          x = nextX;
          y = nextY;
        }
        return s2;
      }, _pointsFilter = function _pointsFilter2(a) {
        var startNums = a[0].match(_numExp) || [], endNums = a[1].match(_numExp) || [], dif = endNums.length - startNums.length;
        if (dif > 0) {
          a[0] = _equalizePointQuantity(startNums, dif);
        } else {
          a[1] = _equalizePointQuantity(endNums, -dif);
        }
      }, _buildPointsFilter = function _buildPointsFilter2(shapeIndex) {
        return !isNaN(shapeIndex) ? function(a) {
          _pointsFilter(a);
          a[1] = _offsetPoints(a[1], parseInt(shapeIndex, 10));
        } : _pointsFilter;
      }, _parseShape = function _parseShape2(shape, forcePath, target) {
        var isString = typeof shape === "string", e, type;
        if (!isString || _selectorExp$1.test(shape) || (shape.match(_numExp) || []).length < 3) {
          e = _toArray(shape)[0];
          if (e) {
            type = (e.nodeName + "").toUpperCase();
            if (forcePath && type !== "PATH") {
              e = convertToPath(e, false);
              type = "PATH";
            }
            shape = e.getAttribute(type === "PATH" ? "d" : "points") || "";
            if (e === target) {
              shape = e.getAttributeNS(null, "data-original") || shape;
            }
          } else {
            _log("WARNING: invalid morph to: " + shape);
            shape = false;
          }
        }
        return shape;
      }, _populateSmoothData = function _populateSmoothData2(rawPath, tolerance) {
        var j = rawPath.length, limit = 0.2 * (tolerance || 1), smooth, segment, x, y, x2, y2, i, l, a, a2, isSmooth, smoothData;
        while (--j > -1) {
          segment = rawPath[j];
          isSmooth = segment.isSmooth = segment.isSmooth || [0, 0, 0, 0];
          smoothData = segment.smoothData = segment.smoothData || [0, 0, 0, 0];
          isSmooth.length = 4;
          l = segment.length - 2;
          for (i = 6; i < l; i += 6) {
            x = segment[i] - segment[i - 2];
            y = segment[i + 1] - segment[i - 1];
            x2 = segment[i + 2] - segment[i];
            y2 = segment[i + 3] - segment[i + 1];
            a = _atan2(y, x);
            a2 = _atan2(y2, x2);
            smooth = Math.abs(a - a2) < limit;
            if (smooth) {
              smoothData[i - 2] = a;
              smoothData[i + 2] = a2;
              smoothData[i - 1] = _sqrt$1(x * x + y * y);
              smoothData[i + 3] = _sqrt$1(x2 * x2 + y2 * y2);
            }
            isSmooth.push(smooth, smooth, 0, 0, smooth, smooth);
          }
          if (segment[l] === segment[0] && segment[l + 1] === segment[1]) {
            x = segment[0] - segment[l - 2];
            y = segment[1] - segment[l - 1];
            x2 = segment[2] - segment[0];
            y2 = segment[3] - segment[1];
            a = _atan2(y, x);
            a2 = _atan2(y2, x2);
            if (Math.abs(a - a2) < limit) {
              smoothData[l - 2] = a;
              smoothData[2] = a2;
              smoothData[l - 1] = _sqrt$1(x * x + y * y);
              smoothData[3] = _sqrt$1(x2 * x2 + y2 * y2);
              isSmooth[l - 2] = isSmooth[l - 1] = true;
            }
          }
        }
        return rawPath;
      }, _parseOriginFactors = function _parseOriginFactors2(v) {
        var a = v.trim().split(" "), x = ~v.indexOf("left") ? 0 : ~v.indexOf("right") ? 100 : isNaN(parseFloat(a[0])) ? 50 : parseFloat(a[0]), y = ~v.indexOf("top") ? 0 : ~v.indexOf("bottom") ? 100 : isNaN(parseFloat(a[1])) ? 50 : parseFloat(a[1]);
        return {
          x: x / 100,
          y: y / 100
        };
      }, _shortAngle = function _shortAngle2(dif) {
        return dif !== dif % _PI ? dif + (dif < 0 ? _2PI : -_2PI) : dif;
      }, _morphMessage = "Use MorphSVGPlugin.convertToPath() to convert to a path before morphing.", _tweenRotation = function _tweenRotation2(start, end, i, linkedPT) {
        var so = this._origin, eo = this._eOrigin, dx = start[i] - so.x, dy = start[i + 1] - so.y, d = _sqrt$1(dx * dx + dy * dy), sa = _atan2(dy, dx), angleDif, _short;
        dx = end[i] - eo.x;
        dy = end[i + 1] - eo.y;
        angleDif = _atan2(dy, dx) - sa;
        _short = _shortAngle(angleDif);
        if (!linkedPT && _lastLinkedAnchor && Math.abs(_short + _lastLinkedAnchor.ca) < _angleMin) {
          linkedPT = _lastLinkedAnchor;
        }
        return this._anchorPT = _lastLinkedAnchor = {
          _next: this._anchorPT,
          t: start,
          sa,
          ca: linkedPT && _short * linkedPT.ca < 0 && Math.abs(_short) > _angleMax ? angleDif : _short,
          sl: d,
          cl: _sqrt$1(dx * dx + dy * dy) - d,
          i
        };
      }, _initCore = function _initCore2(required) {
        gsap5 = _getGSAP();
        PluginClass = PluginClass || gsap5 && gsap5.plugins.morphSVG;
        if (gsap5 && PluginClass) {
          _toArray = gsap5.utils.toArray;
          PluginClass.prototype._tweenRotation = _tweenRotation;
          _coreInitted = 1;
        } else if (required) {
          _log("Please gsap.registerPlugin(MorphSVGPlugin)");
        }
      };
      var MorphSVGPlugin3 = {
        version: "3.8.0",
        name: "morphSVG",
        rawVars: 1,
        register: function register(core, Plugin) {
          gsap5 = core;
          PluginClass = Plugin;
          _initCore();
        },
        init: function init2(target, value, tween, index, targets) {
          _coreInitted || _initCore(1);
          if (!value) {
            _log("invalid shape");
            return false;
          }
          _isFunction(value) && (value = value.call(tween, index, target, targets));
          var type, p, pt, shape, isPoly, shapeIndex, map2, startSmooth, endSmooth, start, end, i, j, l, startSeg, endSeg, precompiled, sData, eData, originFactors, useRotation, offset;
          if (typeof value === "string" || value.getBBox || value[0]) {
            value = {
              shape: value
            };
          } else if (typeof value === "object") {
            type = {};
            for (p in value) {
              type[p] = _isFunction(value[p]) && p !== "render" ? value[p].call(tween, index, target, targets) : value[p];
            }
            value = type;
          }
          var cs = target.nodeType ? window.getComputedStyle(target) : {}, fill = cs.fill + "", fillSafe = !(fill === "none" || (fill.match(_numExp) || [])[3] === "0" || cs.fillRule === "evenodd"), origins = (value.origin || "50 50").split(",");
          type = (target.nodeName + "").toUpperCase();
          isPoly = type === "POLYLINE" || type === "POLYGON";
          if (type !== "PATH" && !isPoly && !value.prop) {
            _log("Cannot morph a <" + type + "> element. " + _morphMessage);
            return false;
          }
          p = type === "PATH" ? "d" : "points";
          if (!value.prop && !_isFunction(target.setAttribute)) {
            return false;
          }
          shape = _parseShape(value.shape || value.d || value.points || "", p === "d", target);
          if (isPoly && _commands.test(shape)) {
            _log("A <" + type + "> cannot accept path data. " + _morphMessage);
            return false;
          }
          shapeIndex = value.shapeIndex || value.shapeIndex === 0 ? value.shapeIndex : "auto";
          map2 = value.map || MorphSVGPlugin3.defaultMap;
          this._prop = value.prop;
          this._render = value.render || MorphSVGPlugin3.defaultRender;
          this._apply = "updateTarget" in value ? value.updateTarget : MorphSVGPlugin3.defaultUpdateTarget;
          this._rnd = Math.pow(10, isNaN(value.precision) ? 2 : +value.precision);
          this._tween = tween;
          if (shape) {
            this._target = target;
            precompiled = typeof value.precompile === "object";
            start = this._prop ? target[this._prop] : target.getAttribute(p);
            if (!this._prop && !target.getAttributeNS(null, "data-original")) {
              target.setAttributeNS(null, "data-original", start);
            }
            if (p === "d" || this._prop) {
              start = stringToRawPath(precompiled ? value.precompile[0] : start);
              end = stringToRawPath(precompiled ? value.precompile[1] : shape);
              if (!precompiled && !_equalizeSegmentQuantity(start, end, shapeIndex, map2, fillSafe)) {
                return false;
              }
              if (value.precompile === "log" || value.precompile === true) {
                _log('precompile:["' + rawPathToString(start) + '","' + rawPathToString(end) + '"]');
              }
              useRotation = (value.type || MorphSVGPlugin3.defaultType) !== "linear";
              if (useRotation) {
                start = _populateSmoothData(start, value.smoothTolerance);
                end = _populateSmoothData(end, value.smoothTolerance);
                if (!start.size) {
                  _getTotalSize(start);
                }
                if (!end.size) {
                  _getTotalSize(end);
                }
                originFactors = _parseOriginFactors(origins[0]);
                this._origin = start.origin = {
                  x: start.left + originFactors.x * start.width,
                  y: start.top + originFactors.y * start.height
                };
                if (origins[1]) {
                  originFactors = _parseOriginFactors(origins[1]);
                }
                this._eOrigin = {
                  x: end.left + originFactors.x * end.width,
                  y: end.top + originFactors.y * end.height
                };
              }
              this._rawPath = target._gsRawPath = start;
              j = start.length;
              while (--j > -1) {
                startSeg = start[j];
                endSeg = end[j];
                startSmooth = startSeg.isSmooth || [];
                endSmooth = endSeg.isSmooth || [];
                l = startSeg.length;
                _lastLinkedAnchor = 0;
                for (i = 0; i < l; i += 2) {
                  if (endSeg[i] !== startSeg[i] || endSeg[i + 1] !== startSeg[i + 1]) {
                    if (useRotation) {
                      if (startSmooth[i] && endSmooth[i]) {
                        sData = startSeg.smoothData;
                        eData = endSeg.smoothData;
                        offset = i + (i === l - 4 ? 7 - l : 5);
                        this._controlPT = {
                          _next: this._controlPT,
                          i,
                          j,
                          l1s: sData[i + 1],
                          l1c: eData[i + 1] - sData[i + 1],
                          l2s: sData[offset],
                          l2c: eData[offset] - sData[offset]
                        };
                        pt = this._tweenRotation(startSeg, endSeg, i + 2);
                        this._tweenRotation(startSeg, endSeg, i, pt);
                        this._tweenRotation(startSeg, endSeg, offset - 1, pt);
                        i += 4;
                      } else {
                        this._tweenRotation(startSeg, endSeg, i);
                      }
                    } else {
                      pt = this.add(startSeg, i, startSeg[i], endSeg[i]);
                      pt = this.add(startSeg, i + 1, startSeg[i + 1], endSeg[i + 1]) || pt;
                    }
                  }
                }
              }
            } else {
              pt = this.add(target, "setAttribute", target.getAttribute(p) + "", shape + "", index, targets, 0, _buildPointsFilter(shapeIndex), p);
            }
            if (useRotation) {
              this.add(this._origin, "x", this._origin.x, this._eOrigin.x);
              pt = this.add(this._origin, "y", this._origin.y, this._eOrigin.y);
            }
            if (pt) {
              this._props.push("morphSVG");
              pt.end = shape;
              pt.endProp = p;
            }
          }
          return _bonusValidated;
        },
        render: function render2(ratio, data) {
          var rawPath = data._rawPath, controlPT = data._controlPT, anchorPT = data._anchorPT, rnd = data._rnd, target = data._target, pt = data._pt, s2, space, easeInOut, segment, l, angle, i, j, x, y, sin, cos, offset;
          while (pt) {
            pt.r(ratio, pt.d);
            pt = pt._next;
          }
          if (ratio === 1 && data._apply) {
            pt = data._pt;
            while (pt) {
              if (pt.end) {
                if (data._prop) {
                  target[data._prop] = pt.end;
                } else {
                  target.setAttribute(pt.endProp, pt.end);
                }
              }
              pt = pt._next;
            }
          } else if (rawPath) {
            while (anchorPT) {
              angle = anchorPT.sa + ratio * anchorPT.ca;
              l = anchorPT.sl + ratio * anchorPT.cl;
              anchorPT.t[anchorPT.i] = data._origin.x + _cos$1(angle) * l;
              anchorPT.t[anchorPT.i + 1] = data._origin.y + _sin$1(angle) * l;
              anchorPT = anchorPT._next;
            }
            easeInOut = ratio < 0.5 ? 2 * ratio * ratio : (4 - 2 * ratio) * ratio - 1;
            while (controlPT) {
              i = controlPT.i;
              segment = rawPath[controlPT.j];
              offset = i + (i === segment.length - 4 ? 7 - segment.length : 5);
              angle = _atan2(segment[offset] - segment[i + 1], segment[offset - 1] - segment[i]);
              sin = _sin$1(angle);
              cos = _cos$1(angle);
              x = segment[i + 2];
              y = segment[i + 3];
              l = controlPT.l1s + easeInOut * controlPT.l1c;
              segment[i] = x - cos * l;
              segment[i + 1] = y - sin * l;
              l = controlPT.l2s + easeInOut * controlPT.l2c;
              segment[offset - 1] = x + cos * l;
              segment[offset] = y + sin * l;
              controlPT = controlPT._next;
            }
            target._gsRawPath = rawPath;
            if (data._apply) {
              s2 = "";
              space = " ";
              for (j = 0; j < rawPath.length; j++) {
                segment = rawPath[j];
                l = segment.length;
                s2 += "M" + (segment[0] * rnd | 0) / rnd + space + (segment[1] * rnd | 0) / rnd + " C";
                for (i = 2; i < l; i++) {
                  s2 += (segment[i] * rnd | 0) / rnd + space;
                }
              }
              if (data._prop) {
                target[data._prop] = s2;
              } else {
                target.setAttribute("d", s2);
              }
            }
          }
          data._render && rawPath && data._render.call(data._tween, rawPath, target);
        },
        kill: function kill(property) {
          this._pt = this._rawPath = 0;
        },
        getRawPath,
        stringToRawPath,
        rawPathToString,
        normalizeStrings: function normalizeStrings(shape1, shape2, _ref) {
          var shapeIndex = _ref.shapeIndex, map2 = _ref.map;
          var result = [shape1, shape2];
          _pathFilter(result, shapeIndex, map2);
          return result;
        },
        pathFilter: _pathFilter,
        pointsFilter: _pointsFilter,
        getTotalSize: _getTotalSize,
        equalizeSegmentQuantity: _equalizeSegmentQuantity,
        convertToPath: function convertToPath$1(targets, swap) {
          return _toArray(targets).map(function(target) {
            return convertToPath(target, swap !== false);
          });
        },
        defaultType: "linear",
        defaultUpdateTarget: true,
        defaultMap: "size"
      };
      _getGSAP() && gsap5.registerPlugin(MorphSVGPlugin3);
      exports2.MorphSVGPlugin = MorphSVGPlugin3;
      exports2.default = MorphSVGPlugin3;
      Object.defineProperty(exports2, "__esModule", { value: true });
    });
  }
});

// .svelte-kit/output/server/chunks/__layout-f4d524c8.js
var layout_f4d524c8_exports = {};
__export(layout_f4d524c8_exports, {
  default: () => _layout
});
function cubicOut(t) {
  const f = t - 1;
  return f * f * f + 1;
}
function is_date(obj) {
  return Object.prototype.toString.call(obj) === "[object Date]";
}
function get_interpolator(a, b) {
  if (a === b || a !== a)
    return () => a;
  const type = typeof a;
  if (type !== typeof b || Array.isArray(a) !== Array.isArray(b)) {
    throw new Error("Cannot interpolate values of different type");
  }
  if (Array.isArray(a)) {
    const arr = b.map((bi, i) => {
      return get_interpolator(a[i], bi);
    });
    return (t) => arr.map((fn) => fn(t));
  }
  if (type === "object") {
    if (!a || !b)
      throw new Error("Object cannot be null");
    if (is_date(a) && is_date(b)) {
      a = a.getTime();
      b = b.getTime();
      const delta = b - a;
      return (t) => new Date(a + t * delta);
    }
    const keys = Object.keys(b);
    const interpolators = {};
    keys.forEach((key) => {
      interpolators[key] = get_interpolator(a[key], b[key]);
    });
    return (t) => {
      const result = {};
      keys.forEach((key) => {
        result[key] = interpolators[key](t);
      });
      return result;
    };
  }
  if (type === "number") {
    const delta = b - a;
    return (t) => a + t * delta;
  }
  throw new Error(`Cannot interpolate ${type} values`);
}
function tweened(value, defaults = {}) {
  const store = writable(value);
  let task;
  let target_value = value;
  function set(new_value, opts) {
    if (value == null) {
      store.set(value = new_value);
      return Promise.resolve();
    }
    target_value = new_value;
    let previous_task = task;
    let started = false;
    let { delay = 0, duration = 400, easing = identity, interpolate: interpolate2 = get_interpolator } = assign(assign({}, defaults), opts);
    if (duration === 0) {
      if (previous_task) {
        previous_task.abort();
        previous_task = null;
      }
      store.set(value = target_value);
      return Promise.resolve();
    }
    const start = now() + delay;
    let fn;
    task = loop((now2) => {
      if (now2 < start)
        return true;
      if (!started) {
        fn = interpolate2(value, new_value);
        if (typeof duration === "function")
          duration = duration(value, new_value);
        started = true;
      }
      if (previous_task) {
        previous_task.abort();
        previous_task = null;
      }
      const elapsed = now2 - start;
      if (elapsed > duration) {
        store.set(value = new_value);
        return false;
      }
      store.set(value = fn(easing(elapsed / duration)));
      return true;
    });
    return task.promise;
  }
  return {
    set,
    update: (fn, opts) => set(fn(target_value, value), opts),
    subscribe: store.subscribe
  };
}
var import_lodash, import_gsap2, import_MorphSVGPlugin, Window, Seo, getStores, page, css$5, openPath, closedPath, OpenToClose, css$4, Nav, css$3, ColorSwitcher, css$2, Footer, css$1, FooterSmall, css11, Loading, _layout;
var init_layout_f4d524c8 = __esm({
  ".svelte-kit/output/server/chunks/__layout-f4d524c8.js"() {
    init_shims();
    init_app_9f378dda();
    init_global_130d3fe3();
    import_lodash = __toModule(require_lodash());
    init_store_8bf23024();
    import_gsap2 = __toModule(require_gsap());
    import_MorphSVGPlugin = __toModule(require_MorphSVGPlugin());
    Window = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $$unsubscribe_windowHeight;
      let $$unsubscribe_windowWidth;
      $$unsubscribe_windowHeight = subscribe(windowHeight, (value) => value);
      $$unsubscribe_windowWidth = subscribe(windowWidth, (value) => value);
      let { debounceDur = 300 } = $$props;
      if ($$props.debounceDur === void 0 && $$bindings.debounceDur && debounceDur !== void 0)
        $$bindings.debounceDur(debounceDur);
      $$unsubscribe_windowHeight();
      $$unsubscribe_windowWidth();
      return ``;
    });
    Seo = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $seo, $$unsubscribe_seo;
      $$unsubscribe_seo = subscribe(seo, (value) => $seo = value);
      $$unsubscribe_seo();
      return `${$$result.head += `${$$result.title = `<title>${escape($seo.title)}</title>`, ""}<meta name="${"twitter:card"}" content="${"summary_large_image"}" data-svelte="svelte-1agpsf7"><meta name="${"twitter:site"}" content="${"@CL_Rothschild"}" data-svelte="svelte-1agpsf7"><meta name="${"twitter:creator"}" content="${"@CL_Rothschild"}" data-svelte="svelte-1agpsf7"><meta name="${"twitter:image"}"${add_attribute("content", $seo.image, 0)} data-svelte="svelte-1agpsf7"><meta name="${"twitter:title"}"${add_attribute("content", $seo.title, 0)} data-svelte="svelte-1agpsf7"><meta name="${"og:title"}"${add_attribute("content", $seo.title, 0)} data-svelte="svelte-1agpsf7"><meta name="${"description"}"${add_attribute("content", $seo.description, 0)} data-svelte="svelte-1agpsf7"><meta name="${"twitter:description"}"${add_attribute("content", $seo.description, 0)} data-svelte="svelte-1agpsf7"><meta name="${"og:image"}"${add_attribute("content", $seo.image, 0)} data-svelte="svelte-1agpsf7"><meta name="${"keywords"}"${add_attribute("content", $seo.keywords, 0)} data-svelte="svelte-1agpsf7"><meta name="${"topic"}"${add_attribute("content", $seo.keywords, 0)} data-svelte="svelte-1agpsf7"><meta name="${"language"}" content="${"EN"}" data-svelte="svelte-1agpsf7"><meta name="${"robots"}" content="${"index, follow"}" data-svelte="svelte-1agpsf7"><meta name="${"abstract"}"${add_attribute("content", $seo.description, 0)} data-svelte="svelte-1agpsf7"><meta name="${"summary"}"${add_attribute("content", $seo.description, 0)} data-svelte="svelte-1agpsf7"><meta name="${"author"}" content="${"Connor Rothschild"}" data-svelte="svelte-1agpsf7"><meta name="${"url"}" content="${"http://www.connorrothschild.com"}" data-svelte="svelte-1agpsf7">`, ""}`;
    });
    getStores = () => {
      const stores = getContext("__svelte__");
      return {
        page: {
          subscribe: stores.page.subscribe
        },
        navigating: {
          subscribe: stores.navigating.subscribe
        },
        get preloading() {
          console.error("stores.preloading is deprecated; use stores.navigating instead");
          return {
            subscribe: stores.navigating.subscribe
          };
        },
        session: stores.session
      };
    };
    page = {
      subscribe(fn) {
        const store = getStores().page;
        return store.subscribe(fn);
      }
    };
    css$5 = {
      code: "svg.svelte-32a0su{width:1.9rem;height:1.9rem;fill:var(--accent-color)}",
      map: null
    };
    openPath = "M 3.121094 5.519531 L 3.121094 6.960938 L 20.878906 6.960938 L 20.878906 5.519531 Z M 3.121094 11.28125 L 3.121094 12.71875 L 20.878906 12.71875 L 20.878906 11.28125 Z M 3.121094 17.039062 L 3.121094 18.480469 L 20.878906 18.480469 L 20.878906 17.039062 Z M 3.121094 17.039062 ";
    closedPath = "M6.70711 5.29289C6.31658 4.90237 5.68342 4.90237 5.29289 5.29289C4.90237 5.68342 4.90237 6.31658 5.29289 6.70711L10.5858 12L5.29289 17.2929C4.90237 17.6834 4.90237 18.3166 5.29289 18.7071C5.68342 19.0976 6.31658 19.0976 6.70711 18.7071L12 13.4142L17.2929 18.7071C17.6834 19.0976 18.3166 19.0976 18.7071 18.7071C19.0976 18.3166 19.0976 17.6834 18.7071 17.2929L13.4142 12L18.7071 6.70711C19.0976 6.31658 19.0976 5.68342 18.7071 5.29289C18.3166 4.90237 17.6834 4.90237 17.2929 5.29289L12 10.5858L6.70711 5.29289Z";
    OpenToClose = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { expanded } = $$props;
      import_gsap2.gsap.registerPlugin(import_MorphSVGPlugin.MorphSVGPlugin);
      let icon;
      const switchIcon = function() {
        import_gsap2.gsap.to(icon, {
          duration: 0.6,
          morphSVG: expanded ? closedPath : openPath,
          ease: "power3.inOut"
        });
      };
      if ($$props.expanded === void 0 && $$bindings.expanded && expanded !== void 0)
        $$bindings.expanded(expanded);
      $$result.css.add(css$5);
      {
        switchIcon();
      }
      return `<svg xmlns="${"http://www.w3.org/2000/svg"}" viewBox="${"0 0 24 24"}" class="${"svelte-32a0su"}"><g><path id="${"icon"}"${add_attribute("d", openPath, 0)}></path></g></svg>`;
    });
    css$4 = {
      code: "#nav.svelte-k0f0l9{display:flex;place-items:center;background:var(--primary-color);margin:0 auto;width:100%;height:var(--nav-height);z-index:102;justify-content:space-between}.toggle-button.svelte-k0f0l9{display:flex;margin-right:1rem;cursor:pointer;user-select:none}.massive-word.svelte-k0f0l9{position:absolute;font-size:20vw;right:2.5vw;bottom:0;opacity:0.15;user-select:none;pointer-events:none}.home-button.svelte-k0f0l9{display:flex;place-items:center;padding-left:1rem;margin-left:0;font-weight:300;letter-spacing:1px;font-size:2rem;font-family:var(--font-serif);cursor:pointer}@media screen and (max-width: 560px){.home-button.svelte-k0f0l9{font-size:1.5rem}}@media screen and (max-width: 460px){.home-button.svelte-k0f0l9{padding-left:0.85rem;font-size:1.35rem}}.fullpage-nav.svelte-k0f0l9{display:flex;flex-direction:column;place-items:flex-start;justify-content:center;padding-left:7.5vw;background:var(--primary-color);margin:0 auto;width:100vw;height:100vh;z-index:101;position:fixed}.nav-items.svelte-k0f0l9{display:flex;flex-direction:column;width:100%}html.disable-scroll{overflow-y:hidden}@media screen and (max-width: 868px){.fullpage-nav.svelte-k0f0l9{padding-left:0}ul.svelte-k0f0l9{text-align:center}.massive-word.svelte-k0f0l9{font-size:30vw;right:4vw}}",
      map: null
    };
    Nav = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { styles = "" } = $$props;
      let expanded = false;
      if ($$props.styles === void 0 && $$bindings.styles && styles !== void 0)
        $$bindings.styles(styles);
      $$result.css.add(css$4);
      let $$settled;
      let $$rendered;
      do {
        $$settled = true;
        $$rendered = `<div id="${"nav"}"${add_attribute("style", styles, 0)} class="${"svelte-k0f0l9"}"><a class="${"home-button no-underline svelte-k0f0l9"}" href="${"/"}">CR</a>
  <h2 class="${"toggle-button svelte-k0f0l9"}">${validate_component(OpenToClose, "OpenToClose").$$render($$result, { expanded }, {}, {})}</h2></div>
${``}`;
      } while (!$$settled);
      return $$rendered;
    });
    css$3 = {
      code: "p.svelte-1b6zq0b{cursor:pointer;position:fixed;bottom:3.5%;left:2%;font-family:var(--font-sans);font-weight:300;font-size:1.5rem;z-index:300;user-select:none}@media screen and (max-width: 768px){p.svelte-1b6zq0b{left:20px;bottom:20px}}",
      map: null
    };
    ColorSwitcher = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let currentMode = "dark";
      $$result.css.add(css$3);
      {
        currentColorMode.set(currentMode);
      }
      return `<p class="${"color-switcher svelte-1b6zq0b"}">${escape("\u{1F315}")}
</p>`;
    });
    css$2 = {
      code: "footer.svelte-1jz5at3.svelte-1jz5at3{display:flex;place-items:center;padding:0;width:100%;background:var(--footer-bg);color:var(--pure-text-color);z-index:99}footer.svelte-1jz5at3.svelte-1jz5at3{height:600px;position:relative}.flex-container.svelte-1jz5at3.svelte-1jz5at3{max-width:1268px;width:100%;height:100%;margin:auto;display:flex;justify-content:space-between;place-items:center}footer.svelte-1jz5at3 h1.svelte-1jz5at3,footer.svelte-1jz5at3 h2.svelte-1jz5at3{color:var(--pure-text-color)}footer.svelte-1jz5at3 h1.svelte-1jz5at3::selection,footer.svelte-1jz5at3 h2.svelte-1jz5at3::selection,footer.svelte-1jz5at3 a.svelte-1jz5at3::selection,footer.svelte-1jz5at3 .svelte-1jz5at3::selection{background:var(--pure-text-color);color:var(--primary-color)}.me.svelte-1jz5at3.svelte-1jz5at3,.you.svelte-1jz5at3.svelte-1jz5at3{flex:1;padding:1rem;display:flex;flex-direction:column}.thanks.svelte-1jz5at3.svelte-1jz5at3{font-family:var(--font-sans);margin-bottom:1rem;font-weight:200;font-size:1.8rem}.name.svelte-1jz5at3.svelte-1jz5at3{font-size:4rem;font-weight:100;line-height:1}.stay-in-touch.svelte-1jz5at3.svelte-1jz5at3{line-height:1;margin-bottom:2rem;font-size:3.5rem;font-weight:200;display:flex;align-items:flex-end}.links.svelte-1jz5at3.svelte-1jz5at3{display:flex;justify-content:space-between;width:450px}.link.svelte-1jz5at3.svelte-1jz5at3{font-family:var(--font-sans);letter-spacing:0.05rem;padding-bottom:0.5rem;font-weight:500;transition:color 500ms ease;text-transform:uppercase;color:rgba(var(--text-color-rgb), 0.7)}.link.svelte-1jz5at3.svelte-1jz5at3:hover{color:var(--pure-text-color)}.emoji.svelte-1jz5at3.svelte-1jz5at3{position:absolute;font-size:4rem;padding:1rem;cursor:pointer}.top.svelte-1jz5at3.svelte-1jz5at3{top:0}.bottom.svelte-1jz5at3.svelte-1jz5at3{bottom:0}.left.svelte-1jz5at3.svelte-1jz5at3{left:0}.right.svelte-1jz5at3.svelte-1jz5at3{right:0}.inline-emoji.svelte-1jz5at3.svelte-1jz5at3{margin-left:0.5rem}@media screen and (max-width: 1068px){.thanks.svelte-1jz5at3.svelte-1jz5at3{font-size:1.55rem}.name.svelte-1jz5at3.svelte-1jz5at3,.stay-in-touch.svelte-1jz5at3.svelte-1jz5at3{font-size:3.25rem}}@media screen and (max-width: 900px){.thanks.svelte-1jz5at3.svelte-1jz5at3{font-size:1.25rem}.name.svelte-1jz5at3.svelte-1jz5at3,.stay-in-touch.svelte-1jz5at3.svelte-1jz5at3{font-size:2.825rem}.links.svelte-1jz5at3.svelte-1jz5at3{width:350px}}@media screen and (max-width: 800px){.flex-container.svelte-1jz5at3.svelte-1jz5at3{flex-direction:column}.me.svelte-1jz5at3.svelte-1jz5at3,.you.svelte-1jz5at3.svelte-1jz5at3{justify-content:center;flex:1}.me.svelte-1jz5at3.svelte-1jz5at3{align-self:flex-start}.you.svelte-1jz5at3.svelte-1jz5at3{align-self:flex-end}.inline-emoji.svelte-1jz5at3.svelte-1jz5at3{margin-left:0;margin-right:0.75rem}.stay-in-touch.svelte-1jz5at3.svelte-1jz5at3{flex-direction:row-reverse}}@media screen and (max-width: 600px){.name.svelte-1jz5at3.svelte-1jz5at3,.stay-in-touch.svelte-1jz5at3.svelte-1jz5at3{font-size:3rem}.you.svelte-1jz5at3.svelte-1jz5at3{align-self:flex-start}.inline-emoji.svelte-1jz5at3.svelte-1jz5at3{margin-right:0;margin-left:0.5rem}.stay-in-touch.svelte-1jz5at3.svelte-1jz5at3{flex-direction:row}}@media screen and (max-width: 500px){.thanks.svelte-1jz5at3.svelte-1jz5at3{font-size:1.1rem}.name.svelte-1jz5at3.svelte-1jz5at3,.stay-in-touch.svelte-1jz5at3.svelte-1jz5at3{font-size:11vw}.link.svelte-1jz5at3.svelte-1jz5at3{font-size:0.85rem}.emoji.svelte-1jz5at3.svelte-1jz5at3{font-size:3rem}.links.svelte-1jz5at3.svelte-1jz5at3{width:100%}}",
      map: null
    };
    Footer = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      $$result.css.add(css$2);
      return `<footer class="${"svelte-1jz5at3"}"><span aria-hidden="${"true"}" class="${"emoji bottom right svelte-1jz5at3"}">${escape("\u{1F440}")}</span>
  <span aria-hidden="${"true"}" class="${"emoji top right svelte-1jz5at3"}">${escape("\u{1F525}")}</span>
  <span aria-hidden="${"true"}" class="${"emoji top left svelte-1jz5at3"}">${escape("\u{1F920}")}</span>
  <div class="${"flex-container svelte-1jz5at3"}"><div class="${"me svelte-1jz5at3"}"><h2 class="${"thanks svelte-1jz5at3"}">Thanks for visiting the personal site of</h2>
      <h1 class="${"name svelte-1jz5at3"}">Connor Rothschild</h1></div>
    <div class="${"you svelte-1jz5at3"}"><h1 class="${"stay-in-touch svelte-1jz5at3"}">Let&#39;s stay in touch <span class="${"inline-emoji svelte-1jz5at3"}">${escape("\u{1F447}")}</span></h1>
      <div class="${"links svelte-1jz5at3"}"><a class="${"link no-underline svelte-1jz5at3"}" target="${"_blank"}" rel="${"noopener noreferrer"}" href="${"mailto:connor@connorrothschild.com"}">Email</a>
        <a class="${"link no-underline svelte-1jz5at3"}" target="${"_blank"}" rel="${"noopener noreferrer"}" href="${"https://www.linkedin.com/in/connor-rothschild/"}">LinkedIn</a>
        <a class="${"link no-underline svelte-1jz5at3"}" target="${"_blank"}" rel="${"noopener noreferrer"}" href="${"https://github.com/connorrothschild/"}">GitHub</a>
        <a class="${"link no-underline svelte-1jz5at3"}" target="${"_blank"}" rel="${"noopener noreferrer"}" href="${"https://twitter.com/intent/follow?screen_name=CL_Rothschild"}">Twitter</a></div></div></div>
</footer>`;
    });
    css$1 = {
      code: "footer.svelte-v11fez.svelte-v11fez{display:flex;place-items:center;height:300px;padding:3rem 1rem;background:var(--footer-bg);color:var(--pure-text-color);position:relative}.btt.svelte-v11fez.svelte-v11fez{position:absolute;bottom:0;right:0;left:unset;font-size:1rem;padding:1rem;cursor:pointer}.flex-container.svelte-v11fez.svelte-v11fez{max-width:1268px;height:100%;width:100%;margin:auto;display:flex;justify-content:space-between;place-items:center}footer.svelte-v11fez h1.svelte-v11fez,footer.svelte-v11fez h2.svelte-v11fez{color:var(--pure-text-color)}footer.svelte-v11fez h1.svelte-v11fez::selection,footer.svelte-v11fez h2.svelte-v11fez::selection,footer.svelte-v11fez a.svelte-v11fez::selection{background:var(--pure-background-color);color:var(--pure-text-color)}.right.svelte-v11fez.svelte-v11fez{display:flex;justify-content:space-evenly}.left.svelte-v11fez.svelte-v11fez,.right.svelte-v11fez.svelte-v11fez{flex:1}.left.svelte-v11fez.svelte-v11fez{text-align:left}.name.svelte-v11fez.svelte-v11fez{font-size:2.5rem;font-weight:500;line-height:1;margin-bottom:1rem;letter-spacing:0.025rem}.copyright.svelte-v11fez.svelte-v11fez{font-size:0.85rem;font-weight:400;text-transform:uppercase;color:var(--pure-text-color);font-family:var(--font-sans)}.column-header.svelte-v11fez.svelte-v11fez{text-align:center;margin-bottom:0.5rem;text-transform:uppercase;font-family:var(--font-sans);font-weight:700;font-size:1rem;color:var(--accent-color)}.column-content.svelte-v11fez.svelte-v11fez{display:flex;flex-direction:column}.link.svelte-v11fez.svelte-v11fez{color:var(--pure-text-color);font-family:var(--font-sans);margin-bottom:0.15rem;padding-bottom:0.15rem;font-weight:200;font-size:1rem;letter-spacing:0.01rem;width:min-content}@media screen and (max-width: 768px){.flex-container.svelte-v11fez.svelte-v11fez{flex-direction:column}.left.svelte-v11fez.svelte-v11fez{width:100%}.right.svelte-v11fez.svelte-v11fez{width:50%;margin-left:auto}.name.svelte-v11fez.svelte-v11fez{font-size:2.5rem}.link.svelte-v11fez.svelte-v11fez{font-size:1rem}}@media screen and (max-width: 400px){footer.svelte-v11fez.svelte-v11fez{height:330px}.right.svelte-v11fez.svelte-v11fez{width:100%;justify-content:space-between}.right.svelte-v11fez .column:last-child .column-content.svelte-v11fez{align-items:flex-end}.name.svelte-v11fez.svelte-v11fez{font-size:2rem}.copyright.svelte-v11fez.svelte-v11fez{font-size:0.65rem}}",
      map: null
    };
    FooterSmall = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      $$result.css.add(css$1);
      return `<footer class="${"svelte-v11fez"}"><p aria-hidden="${"true"}" class="${"btt svelte-v11fez"}">\u2191 Back to top
  </p>
  <div class="${"flex-container svelte-v11fez"}"><div class="${"left svelte-v11fez"}">
      <h1 class="${"name svelte-v11fez"}">Thanks for visiting \u{1F44B}</h1>
      <h2 class="${"copyright svelte-v11fez"}">\xA9 Connor Rothschild / 2021 / All rights reserved
      </h2></div>
    <div class="${"right svelte-v11fez"}"><div class="${"column"}"><h5 class="${"column-header svelte-v11fez"}">Connect</h5>
        <div class="${"column-content svelte-v11fez"}"><a class="${"link svelte-v11fez"}" target="${"_blank"}" rel="${"noopener noreferrer"}" href="${"https://www.linkedin.com/in/connor-rothschild/"}">LinkedIn</a>
          <a class="${"link svelte-v11fez"}" target="${"_blank"}" rel="${"noopener noreferrer"}" href="${"https://github.com/connorrothschild/"}">GitHub</a>
          <a class="${"link svelte-v11fez"}" target="${"_blank"}" rel="${"noopener noreferrer"}" href="${"https://twitter.com/intent/follow?screen_name=CL_Rothschild"}">Twitter</a></div></div>
      <div class="${"column"}"><h5 class="${"column-header svelte-v11fez"}">Contact</h5>
        <div class="${"column-content svelte-v11fez"}"><a class="${"link svelte-v11fez"}" target="${"_blank"}" rel="${"noopener noreferrer"}" href="${"mailto:connor@connorrothschild.com"}">Personal</a>
          <a class="${"link svelte-v11fez"}" target="${"_blank"}" rel="${"noopener noreferrer"}" href="${"mailto:connor@mokshadata.com"}">Work</a>
          <a class="${"link svelte-v11fez"}" target="${"_blank"}" rel="${"noopener noreferrer"}" href="${"https://calendly.com/connorrothschild/meeting"}">Meet</a></div></div></div></div>
</footer>`;
    });
    css11 = {
      code: ".fullscreen-loading.svelte-165l7u4{width:100vw;height:100vh;position:fixed;left:0;top:0;background:var(--primary-color);z-index:1000}",
      map: null
    };
    Loading = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $pageTransitionDelay, $$unsubscribe_pageTransitionDelay;
      let $navigationState, $$unsubscribe_navigationState;
      $$unsubscribe_pageTransitionDelay = subscribe(pageTransitionDelay, (value) => $pageTransitionDelay = value);
      $$unsubscribe_navigationState = subscribe(navigationState, (value) => $navigationState = value);
      const progress = tweened(0, { duration: 2e3, easing: cubicOut });
      let transitioning = false;
      let initTransition = function() {
        transitioning = true;
        setTimeout(() => {
          transitioning = false;
        }, $pageTransitionDelay);
      };
      $$result.css.add(css11);
      {
        progress.set(0, { duration: 0 });
      }
      {
        progress.set(1, { duration: 1e3, easing: cubicOut });
      }
      {
        initTransition();
      }
      $$unsubscribe_pageTransitionDelay();
      $$unsubscribe_navigationState();
      return `
${transitioning && $navigationState != "loading" ? `<div class="${"fullscreen-loading svelte-165l7u4"}"></div>` : ``}`;
    });
    _layout = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let path;
      let $page, $$unsubscribe_page;
      $$unsubscribe_page = subscribe(page, (value) => $page = value);
      path = $page.path;
      $$unsubscribe_page();
      return `

${validate_component(Window, "Window").$$render($$result, {}, {}, {})}
${validate_component(Seo, "Seo").$$render($$result, {}, {}, {})}
${validate_component(Nav, "Nav").$$render($$result, {
        styles: path === "/" ? "" : "position: fixed;"
      }, {}, {})}
${slots.default ? slots.default({}) : ``}
${validate_component(Loading, "Loading").$$render($$result, {}, {}, {})}
${validate_component(ColorSwitcher, "ColorSwitcher").$$render($$result, {}, {}, {})}
${path === "/" ? `${validate_component(Footer, "Footer").$$render($$result, {}, {}, {})}` : `${validate_component(FooterSmall, "SmallFooter").$$render($$result, {}, {}, {})}`}`;
    });
  }
});

// .svelte-kit/output/server/chunks/__error-e9146f31.js
var error_e9146f31_exports = {};
__export(error_e9146f31_exports, {
  default: () => _error,
  load: () => load
});
function load({ error: error2, status }) {
  console.log(error2);
  return {
    props: {
      title: `${status}: ${error2.message}`,
      errorCode: `${error2.stack}`
    }
  };
}
var css12, _error;
var init_error_e9146f31 = __esm({
  ".svelte-kit/output/server/chunks/__error-e9146f31.js"() {
    init_shims();
    init_app_9f378dda();
    css12 = {
      code: ".error.svelte-3590vb{margin-top:var(--nav-height)}",
      map: null
    };
    _error = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { title: title5 } = $$props;
      let { errorCode } = $$props;
      if ($$props.title === void 0 && $$bindings.title && title5 !== void 0)
        $$bindings.title(title5);
      if ($$props.errorCode === void 0 && $$bindings.errorCode && errorCode !== void 0)
        $$bindings.errorCode(errorCode);
      $$result.css.add(css12);
      return `<div class="${"error svelte-3590vb"}"><h1>${escape(title5)}</h1>

  <p>${escape("Show")} the technical details
  </p>
  ${``}
</div>`;
    });
  }
});

// node_modules/gsap/dist/ScrollTrigger.js
var require_ScrollTrigger = __commonJS({
  "node_modules/gsap/dist/ScrollTrigger.js"(exports, module2) {
    init_shims();
    (function(global2, factory) {
      typeof exports === "object" && typeof module2 !== "undefined" ? factory(exports) : typeof define === "function" && define.amd ? define(["exports"], factory) : (global2 = global2 || self, factory(global2.window = global2.window || {}));
    })(exports, function(exports2) {
      "use strict";
      var gsap5, _coreInitted, _win, _doc, _docEl, _body, _root, _resizeDelay, _raf, _request, _toArray, _clamp, _time2, _syncInterval, _refreshing, _pointerIsDown, _transformProp, _i, _prevWidth, _prevHeight, _autoRefresh, _sort, _suppressOverwrites, _ignoreResize, _limitCallbacks, _startup = 1, _proxies = [], _scrollers = [], _getTime = Date.now, _time1 = _getTime(), _lastScrollTime = 0, _enabled = 1, _passThrough = function _passThrough2(v) {
        return v;
      }, _getTarget = function _getTarget2(t) {
        return _toArray(t)[0] || (_isString(t) ? console.warn("Element not found:", t) : null);
      }, _round = function _round2(value) {
        return Math.round(value * 1e5) / 1e5 || 0;
      }, _windowExists = function _windowExists2() {
        return typeof window !== "undefined";
      }, _getGSAP = function _getGSAP2() {
        return gsap5 || _windowExists() && (gsap5 = window.gsap) && gsap5.registerPlugin && gsap5;
      }, _isViewport = function _isViewport2(e) {
        return !!~_root.indexOf(e);
      }, _getProxyProp = function _getProxyProp2(element, property) {
        return ~_proxies.indexOf(element) && _proxies[_proxies.indexOf(element) + 1][property];
      }, _getScrollFunc = function _getScrollFunc2(element, _ref) {
        var s2 = _ref.s, sc = _ref.sc;
        var i = _scrollers.indexOf(element), offset = sc === _vertical.sc ? 1 : 2;
        !~i && (i = _scrollers.push(element) - 1);
        return _scrollers[i + offset] || (_scrollers[i + offset] = _getProxyProp(element, s2) || (_isViewport(element) ? sc : function(value) {
          return arguments.length ? element[s2] = value : element[s2];
        }));
      }, _getBoundsFunc = function _getBoundsFunc2(element) {
        return _getProxyProp(element, "getBoundingClientRect") || (_isViewport(element) ? function() {
          _winOffsets.width = _win.innerWidth;
          _winOffsets.height = _win.innerHeight;
          return _winOffsets;
        } : function() {
          return _getBounds(element);
        });
      }, _getSizeFunc = function _getSizeFunc2(scroller, isViewport, _ref2) {
        var d = _ref2.d, d2 = _ref2.d2, a = _ref2.a;
        return (a = _getProxyProp(scroller, "getBoundingClientRect")) ? function() {
          return a()[d];
        } : function() {
          return (isViewport ? _win["inner" + d2] : scroller["client" + d2]) || 0;
        };
      }, _getOffsetsFunc = function _getOffsetsFunc2(element, isViewport) {
        return !isViewport || ~_proxies.indexOf(element) ? _getBoundsFunc(element) : function() {
          return _winOffsets;
        };
      }, _maxScroll = function _maxScroll2(element, _ref3) {
        var s2 = _ref3.s, d2 = _ref3.d2, d = _ref3.d, a = _ref3.a;
        return (s2 = "scroll" + d2) && (a = _getProxyProp(element, s2)) ? a() - _getBoundsFunc(element)()[d] : _isViewport(element) ? (_body[s2] || _docEl[s2]) - (_win["inner" + d2] || _docEl["client" + d2] || _body["client" + d2]) : element[s2] - element["offset" + d2];
      }, _iterateAutoRefresh = function _iterateAutoRefresh2(func, events) {
        for (var i = 0; i < _autoRefresh.length; i += 3) {
          (!events || ~events.indexOf(_autoRefresh[i + 1])) && func(_autoRefresh[i], _autoRefresh[i + 1], _autoRefresh[i + 2]);
        }
      }, _isString = function _isString2(value) {
        return typeof value === "string";
      }, _isFunction = function _isFunction2(value) {
        return typeof value === "function";
      }, _isNumber = function _isNumber2(value) {
        return typeof value === "number";
      }, _isObject = function _isObject2(value) {
        return typeof value === "object";
      }, _callIfFunc = function _callIfFunc2(value) {
        return _isFunction(value) && value();
      }, _combineFunc = function _combineFunc2(f1, f2) {
        return function() {
          var result1 = _callIfFunc(f1), result2 = _callIfFunc(f2);
          return function() {
            _callIfFunc(result1);
            _callIfFunc(result2);
          };
        };
      }, _endAnimation = function _endAnimation2(animation, reversed, pause) {
        return animation && animation.progress(reversed ? 0 : 1) && pause && animation.pause();
      }, _callback = function _callback2(self2, func) {
        var result = func(self2);
        result && result.totalTime && (self2.callbackAnimation = result);
      }, _abs = Math.abs, _scrollLeft = "scrollLeft", _scrollTop = "scrollTop", _left = "left", _top = "top", _right = "right", _bottom = "bottom", _width = "width", _height = "height", _Right = "Right", _Left = "Left", _Top = "Top", _Bottom = "Bottom", _padding = "padding", _margin = "margin", _Width = "Width", _Height = "Height", _px = "px", _horizontal = {
        s: _scrollLeft,
        p: _left,
        p2: _Left,
        os: _right,
        os2: _Right,
        d: _width,
        d2: _Width,
        a: "x",
        sc: function sc(value) {
          return arguments.length ? _win.scrollTo(value, _vertical.sc()) : _win.pageXOffset || _doc[_scrollLeft] || _docEl[_scrollLeft] || _body[_scrollLeft] || 0;
        }
      }, _vertical = {
        s: _scrollTop,
        p: _top,
        p2: _Top,
        os: _bottom,
        os2: _Bottom,
        d: _height,
        d2: _Height,
        a: "y",
        op: _horizontal,
        sc: function sc(value) {
          return arguments.length ? _win.scrollTo(_horizontal.sc(), value) : _win.pageYOffset || _doc[_scrollTop] || _docEl[_scrollTop] || _body[_scrollTop] || 0;
        }
      }, _getComputedStyle = function _getComputedStyle2(element) {
        return _win.getComputedStyle(element);
      }, _makePositionable = function _makePositionable2(element) {
        var position = _getComputedStyle(element).position;
        element.style.position = position === "absolute" || position === "fixed" ? position : "relative";
      }, _setDefaults = function _setDefaults2(obj, defaults) {
        for (var p in defaults) {
          p in obj || (obj[p] = defaults[p]);
        }
        return obj;
      }, _getBounds = function _getBounds2(element, withoutTransforms) {
        var tween = withoutTransforms && _getComputedStyle(element)[_transformProp] !== "matrix(1, 0, 0, 1, 0, 0)" && gsap5.to(element, {
          x: 0,
          y: 0,
          xPercent: 0,
          yPercent: 0,
          rotation: 0,
          rotationX: 0,
          rotationY: 0,
          scale: 1,
          skewX: 0,
          skewY: 0
        }).progress(1), bounds = element.getBoundingClientRect();
        tween && tween.progress(0).kill();
        return bounds;
      }, _getSize = function _getSize2(element, _ref4) {
        var d2 = _ref4.d2;
        return element["offset" + d2] || element["client" + d2] || 0;
      }, _getLabelRatioArray = function _getLabelRatioArray2(timeline) {
        var a = [], labels = timeline.labels, duration = timeline.duration(), p;
        for (p in labels) {
          a.push(labels[p] / duration);
        }
        return a;
      }, _getClosestLabel = function _getClosestLabel2(animation) {
        return function(value) {
          return gsap5.utils.snap(_getLabelRatioArray(animation), value);
        };
      }, _snapDirectional = function _snapDirectional2(snapIncrementOrArray) {
        var snap = gsap5.utils.snap(snapIncrementOrArray), a = Array.isArray(snapIncrementOrArray) && snapIncrementOrArray.slice(0).sort(function(a2, b) {
          return a2 - b;
        });
        return a ? function(value, direction) {
          var i;
          if (!direction) {
            return snap(value);
          }
          if (direction > 0) {
            value -= 1e-4;
            for (i = 0; i < a.length; i++) {
              if (a[i] >= value) {
                return a[i];
              }
            }
            return a[i - 1];
          } else {
            i = a.length;
            value += 1e-4;
            while (i--) {
              if (a[i] <= value) {
                return a[i];
              }
            }
          }
          return a[0];
        } : function(value, direction) {
          var snapped = snap(value);
          return !direction || Math.abs(snapped - value) < 1e-3 || snapped - value < 0 === direction < 0 ? snapped : snap(direction < 0 ? value - snapIncrementOrArray : value + snapIncrementOrArray);
        };
      }, _getLabelAtDirection = function _getLabelAtDirection2(timeline) {
        return function(value, st) {
          return _snapDirectional(_getLabelRatioArray(timeline))(value, st.direction);
        };
      }, _multiListener = function _multiListener2(func, element, types2, callback) {
        return types2.split(",").forEach(function(type) {
          return func(element, type, callback);
        });
      }, _addListener = function _addListener2(element, type, func) {
        return element.addEventListener(type, func, {
          passive: true
        });
      }, _removeListener = function _removeListener2(element, type, func) {
        return element.removeEventListener(type, func);
      }, _markerDefaults = {
        startColor: "green",
        endColor: "red",
        indent: 0,
        fontSize: "16px",
        fontWeight: "normal"
      }, _defaults = {
        toggleActions: "play",
        anticipatePin: 0
      }, _keywords = {
        top: 0,
        left: 0,
        center: 0.5,
        bottom: 1,
        right: 1
      }, _offsetToPx = function _offsetToPx2(value, size) {
        if (_isString(value)) {
          var eqIndex = value.indexOf("="), relative = ~eqIndex ? +(value.charAt(eqIndex - 1) + 1) * parseFloat(value.substr(eqIndex + 1)) : 0;
          if (~eqIndex) {
            value.indexOf("%") > eqIndex && (relative *= size / 100);
            value = value.substr(0, eqIndex - 1);
          }
          value = relative + (value in _keywords ? _keywords[value] * size : ~value.indexOf("%") ? parseFloat(value) * size / 100 : parseFloat(value) || 0);
        }
        return value;
      }, _createMarker = function _createMarker2(type, name, container, direction, _ref5, offset, matchWidthEl, containerAnimation) {
        var startColor = _ref5.startColor, endColor = _ref5.endColor, fontSize = _ref5.fontSize, indent = _ref5.indent, fontWeight = _ref5.fontWeight;
        var e = _doc.createElement("div"), useFixedPosition = _isViewport(container) || _getProxyProp(container, "pinType") === "fixed", isScroller = type.indexOf("scroller") !== -1, parent = useFixedPosition ? _body : container, isStart = type.indexOf("start") !== -1, color2 = isStart ? startColor : endColor, css23 = "border-color:" + color2 + ";font-size:" + fontSize + ";color:" + color2 + ";font-weight:" + fontWeight + ";pointer-events:none;white-space:nowrap;font-family:sans-serif,Arial;z-index:1000;padding:4px 8px;border-width:0;border-style:solid;";
        css23 += "position:" + ((isScroller || containerAnimation) && useFixedPosition ? "fixed;" : "absolute;");
        (isScroller || containerAnimation || !useFixedPosition) && (css23 += (direction === _vertical ? _right : _bottom) + ":" + (offset + parseFloat(indent)) + "px;");
        matchWidthEl && (css23 += "box-sizing:border-box;text-align:left;width:" + matchWidthEl.offsetWidth + "px;");
        e._isStart = isStart;
        e.setAttribute("class", "gsap-marker-" + type + (name ? " marker-" + name : ""));
        e.style.cssText = css23;
        e.innerText = name || name === 0 ? type + "-" + name : type;
        parent.children[0] ? parent.insertBefore(e, parent.children[0]) : parent.appendChild(e);
        e._offset = e["offset" + direction.op.d2];
        _positionMarker(e, 0, direction, isStart);
        return e;
      }, _positionMarker = function _positionMarker2(marker, start, direction, flipped) {
        var vars = {
          display: "block"
        }, side = direction[flipped ? "os2" : "p2"], oppositeSide = direction[flipped ? "p2" : "os2"];
        marker._isFlipped = flipped;
        vars[direction.a + "Percent"] = flipped ? -100 : 0;
        vars[direction.a] = flipped ? "1px" : 0;
        vars["border" + side + _Width] = 1;
        vars["border" + oppositeSide + _Width] = 0;
        vars[direction.p] = start + "px";
        gsap5.set(marker, vars);
      }, _triggers = [], _ids = {}, _sync = function _sync2() {
        return _getTime() - _lastScrollTime > 20 && _updateAll();
      }, _onScroll = function _onScroll2() {
        var time = _getTime();
        if (_lastScrollTime !== time) {
          _updateAll();
          _lastScrollTime || _dispatch("scrollStart");
          _lastScrollTime = time;
        } else if (!_request) {
          _request = _raf(_updateAll);
        }
      }, _onResize = function _onResize2() {
        return !_refreshing && !_ignoreResize && !_doc.fullscreenElement && _resizeDelay.restart(true);
      }, _listeners = {}, _emptyArray = [], _media = [], _creatingMedia, _lastMediaTick, _onMediaChange = function _onMediaChange2(e) {
        var tick = gsap5.ticker.frame, matches = [], i = 0, index;
        if (_lastMediaTick !== tick || _startup) {
          _revertAll();
          for (; i < _media.length; i += 4) {
            index = _win.matchMedia(_media[i]).matches;
            if (index !== _media[i + 3]) {
              _media[i + 3] = index;
              index ? matches.push(i) : _revertAll(1, _media[i]) || _isFunction(_media[i + 2]) && _media[i + 2]();
            }
          }
          _revertRecorded();
          for (i = 0; i < matches.length; i++) {
            index = matches[i];
            _creatingMedia = _media[index];
            _media[index + 2] = _media[index + 1](e);
          }
          _creatingMedia = 0;
          _coreInitted && _refreshAll(0, 1);
          _lastMediaTick = tick;
          _dispatch("matchMedia");
        }
      }, _softRefresh = function _softRefresh2() {
        return _removeListener(ScrollTrigger2, "scrollEnd", _softRefresh2) || _refreshAll(true);
      }, _dispatch = function _dispatch2(type) {
        return _listeners[type] && _listeners[type].map(function(f) {
          return f();
        }) || _emptyArray;
      }, _savedStyles = [], _revertRecorded = function _revertRecorded2(media) {
        for (var i = 0; i < _savedStyles.length; i += 5) {
          if (!media || _savedStyles[i + 4] === media) {
            _savedStyles[i].style.cssText = _savedStyles[i + 1];
            _savedStyles[i].getBBox && _savedStyles[i].setAttribute("transform", _savedStyles[i + 2] || "");
            _savedStyles[i + 3].uncache = 1;
          }
        }
      }, _revertAll = function _revertAll2(kill, media) {
        var trigger;
        for (_i = 0; _i < _triggers.length; _i++) {
          trigger = _triggers[_i];
          if (!media || trigger.media === media) {
            if (kill) {
              trigger.kill(1);
            } else {
              trigger.revert();
            }
          }
        }
        media && _revertRecorded(media);
        media || _dispatch("revert");
      }, _clearScrollMemory = function _clearScrollMemory2() {
        return _scrollers.forEach(function(obj) {
          return typeof obj === "function" && (obj.rec = 0);
        });
      }, _refreshingAll, _refreshAll = function _refreshAll2(force, skipRevert) {
        if (_lastScrollTime && !force) {
          _addListener(ScrollTrigger2, "scrollEnd", _softRefresh);
          return;
        }
        _refreshingAll = true;
        var refreshInits = _dispatch("refreshInit");
        _sort && ScrollTrigger2.sort();
        skipRevert || _revertAll();
        _triggers.forEach(function(t) {
          return t.refresh();
        });
        refreshInits.forEach(function(result) {
          return result && result.render && result.render(-1);
        });
        _clearScrollMemory();
        _resizeDelay.pause();
        _refreshingAll = false;
        _dispatch("refresh");
      }, _lastScroll = 0, _direction = 1, _updateAll = function _updateAll2() {
        if (!_refreshingAll) {
          var l = _triggers.length, time = _getTime(), recordVelocity = time - _time1 >= 50, scroll = l && _triggers[0].scroll();
          _direction = _lastScroll > scroll ? -1 : 1;
          _lastScroll = scroll;
          if (recordVelocity) {
            if (_lastScrollTime && !_pointerIsDown && time - _lastScrollTime > 200) {
              _lastScrollTime = 0;
              _dispatch("scrollEnd");
            }
            _time2 = _time1;
            _time1 = time;
          }
          if (_direction < 0) {
            _i = l;
            while (_i-- > 0) {
              _triggers[_i] && _triggers[_i].update(0, recordVelocity);
            }
            _direction = 1;
          } else {
            for (_i = 0; _i < l; _i++) {
              _triggers[_i] && _triggers[_i].update(0, recordVelocity);
            }
          }
          _request = 0;
        }
      }, _propNamesToCopy = [_left, _top, _bottom, _right, _margin + _Bottom, _margin + _Right, _margin + _Top, _margin + _Left, "display", "flexShrink", "float", "zIndex", "grid-column-start", "grid-column-end", "grid-row-start", "grid-row-end", "grid-area", "justify-self", "align-self", "place-self"], _stateProps = _propNamesToCopy.concat([_width, _height, "boxSizing", "max" + _Width, "max" + _Height, "position", _margin, _padding, _padding + _Top, _padding + _Right, _padding + _Bottom, _padding + _Left]), _swapPinOut = function _swapPinOut2(pin, spacer, state) {
        _setState(state);
        var cache = pin._gsap;
        if (cache.spacerIsNative) {
          _setState(cache.spacerState);
        } else if (pin.parentNode === spacer) {
          var parent = spacer.parentNode;
          if (parent) {
            parent.insertBefore(pin, spacer);
            parent.removeChild(spacer);
          }
        }
      }, _swapPinIn = function _swapPinIn2(pin, spacer, cs, spacerState) {
        if (pin.parentNode !== spacer) {
          var i = _propNamesToCopy.length, spacerStyle = spacer.style, pinStyle = pin.style, p;
          while (i--) {
            p = _propNamesToCopy[i];
            spacerStyle[p] = cs[p];
          }
          spacerStyle.position = cs.position === "absolute" ? "absolute" : "relative";
          cs.display === "inline" && (spacerStyle.display = "inline-block");
          pinStyle[_bottom] = pinStyle[_right] = "auto";
          spacerStyle.overflow = "visible";
          spacerStyle.boxSizing = "border-box";
          spacerStyle[_width] = _getSize(pin, _horizontal) + _px;
          spacerStyle[_height] = _getSize(pin, _vertical) + _px;
          spacerStyle[_padding] = pinStyle[_margin] = pinStyle[_top] = pinStyle[_left] = "0";
          _setState(spacerState);
          pinStyle[_width] = pinStyle["max" + _Width] = cs[_width];
          pinStyle[_height] = pinStyle["max" + _Height] = cs[_height];
          pinStyle[_padding] = cs[_padding];
          pin.parentNode.insertBefore(spacer, pin);
          spacer.appendChild(pin);
        }
      }, _capsExp = /([A-Z])/g, _setState = function _setState2(state) {
        if (state) {
          var style = state.t.style, l = state.length, i = 0, p, value;
          (state.t._gsap || gsap5.core.getCache(state.t)).uncache = 1;
          for (; i < l; i += 2) {
            value = state[i + 1];
            p = state[i];
            if (value) {
              style[p] = value;
            } else if (style[p]) {
              style.removeProperty(p.replace(_capsExp, "-$1").toLowerCase());
            }
          }
        }
      }, _getState = function _getState2(element) {
        var l = _stateProps.length, style = element.style, state = [], i = 0;
        for (; i < l; i++) {
          state.push(_stateProps[i], style[_stateProps[i]]);
        }
        state.t = element;
        return state;
      }, _copyState = function _copyState2(state, override, omitOffsets) {
        var result = [], l = state.length, i = omitOffsets ? 8 : 0, p;
        for (; i < l; i += 2) {
          p = state[i];
          result.push(p, p in override ? override[p] : state[i + 1]);
        }
        result.t = state.t;
        return result;
      }, _winOffsets = {
        left: 0,
        top: 0
      }, _parsePosition = function _parsePosition2(value, trigger, scrollerSize, direction, scroll, marker, markerScroller, self2, scrollerBounds, borderWidth, useFixedPosition, scrollerMax, containerAnimation) {
        _isFunction(value) && (value = value(self2));
        if (_isString(value) && value.substr(0, 3) === "max") {
          value = scrollerMax + (value.charAt(4) === "=" ? _offsetToPx("0" + value.substr(3), scrollerSize) : 0);
        }
        var time = containerAnimation ? containerAnimation.time() : 0, p1, p2, element;
        containerAnimation && containerAnimation.seek(0);
        if (!_isNumber(value)) {
          _isFunction(trigger) && (trigger = trigger(self2));
          var offsets = value.split(" "), bounds, localOffset, globalOffset, display;
          element = _getTarget(trigger) || _body;
          bounds = _getBounds(element) || {};
          if ((!bounds || !bounds.left && !bounds.top) && _getComputedStyle(element).display === "none") {
            display = element.style.display;
            element.style.display = "block";
            bounds = _getBounds(element);
            display ? element.style.display = display : element.style.removeProperty("display");
          }
          localOffset = _offsetToPx(offsets[0], bounds[direction.d]);
          globalOffset = _offsetToPx(offsets[1] || "0", scrollerSize);
          value = bounds[direction.p] - scrollerBounds[direction.p] - borderWidth + localOffset + scroll - globalOffset;
          markerScroller && _positionMarker(markerScroller, globalOffset, direction, scrollerSize - globalOffset < 20 || markerScroller._isStart && globalOffset > 20);
          scrollerSize -= scrollerSize - globalOffset;
        } else if (markerScroller) {
          _positionMarker(markerScroller, scrollerSize, direction, true);
        }
        if (marker) {
          var position = value + scrollerSize, isStart = marker._isStart;
          p1 = "scroll" + direction.d2;
          _positionMarker(marker, position, direction, isStart && position > 20 || !isStart && (useFixedPosition ? Math.max(_body[p1], _docEl[p1]) : marker.parentNode[p1]) <= position + 1);
          if (useFixedPosition) {
            scrollerBounds = _getBounds(markerScroller);
            useFixedPosition && (marker.style[direction.op.p] = scrollerBounds[direction.op.p] - direction.op.m - marker._offset + _px);
          }
        }
        if (containerAnimation && element) {
          p1 = _getBounds(element);
          containerAnimation.seek(scrollerMax);
          p2 = _getBounds(element);
          containerAnimation._caScrollDist = p1[direction.p] - p2[direction.p];
          value = value / containerAnimation._caScrollDist * scrollerMax;
        }
        containerAnimation && containerAnimation.seek(time);
        return containerAnimation ? value : Math.round(value);
      }, _prefixExp = /(?:webkit|moz|length|cssText|inset)/i, _reparent = function _reparent2(element, parent, top, left) {
        if (element.parentNode !== parent) {
          var style = element.style, p, cs;
          if (parent === _body) {
            element._stOrig = style.cssText;
            cs = _getComputedStyle(element);
            for (p in cs) {
              if (!+p && !_prefixExp.test(p) && cs[p] && typeof style[p] === "string" && p !== "0") {
                style[p] = cs[p];
              }
            }
            style.top = top;
            style.left = left;
          } else {
            style.cssText = element._stOrig;
          }
          gsap5.core.getCache(element).uncache = 1;
          parent.appendChild(element);
        }
      }, _getTweenCreator = function _getTweenCreator2(scroller, direction) {
        var getScroll = _getScrollFunc(scroller, direction), prop = "_scroll" + direction.p2, lastScroll1, lastScroll2, getTween = function getTween2(scrollTo, vars, initialValue, change1, change2) {
          var tween = getTween2.tween, onComplete = vars.onComplete, modifiers = {};
          tween && tween.kill();
          lastScroll1 = Math.round(initialValue);
          vars[prop] = scrollTo;
          vars.modifiers = modifiers;
          modifiers[prop] = function(value) {
            value = _round(getScroll());
            if (value !== lastScroll1 && value !== lastScroll2 && Math.abs(value - lastScroll1) > 2) {
              tween.kill();
              getTween2.tween = 0;
            } else {
              value = initialValue + change1 * tween.ratio + change2 * tween.ratio * tween.ratio;
            }
            lastScroll2 = lastScroll1;
            return lastScroll1 = _round(value);
          };
          vars.onComplete = function() {
            getTween2.tween = 0;
            onComplete && onComplete.call(tween);
          };
          tween = getTween2.tween = gsap5.to(scroller, vars);
          return tween;
        };
        scroller[prop] = getScroll;
        scroller.addEventListener("wheel", function() {
          return getTween.tween && getTween.tween.kill() && (getTween.tween = 0);
        }, {
          passive: true
        });
        return getTween;
      };
      _horizontal.op = _vertical;
      var ScrollTrigger2 = function() {
        function ScrollTrigger3(vars, animation) {
          _coreInitted || ScrollTrigger3.register(gsap5) || console.warn("Please gsap.registerPlugin(ScrollTrigger)");
          this.init(vars, animation);
        }
        var _proto = ScrollTrigger3.prototype;
        _proto.init = function init2(vars, animation) {
          this.progress = this.start = 0;
          this.vars && this.kill(1);
          if (!_enabled) {
            this.update = this.refresh = this.kill = _passThrough;
            return;
          }
          vars = _setDefaults(_isString(vars) || _isNumber(vars) || vars.nodeType ? {
            trigger: vars
          } : vars, _defaults);
          var _vars = vars, onUpdate = _vars.onUpdate, toggleClass = _vars.toggleClass, id = _vars.id, onToggle = _vars.onToggle, onRefresh = _vars.onRefresh, scrub = _vars.scrub, trigger = _vars.trigger, pin = _vars.pin, pinSpacing = _vars.pinSpacing, invalidateOnRefresh = _vars.invalidateOnRefresh, anticipatePin = _vars.anticipatePin, onScrubComplete = _vars.onScrubComplete, onSnapComplete = _vars.onSnapComplete, once = _vars.once, snap = _vars.snap, pinReparent = _vars.pinReparent, pinSpacer = _vars.pinSpacer, containerAnimation = _vars.containerAnimation, fastScrollEnd = _vars.fastScrollEnd, preventOverlaps = _vars.preventOverlaps, direction = vars.horizontal || vars.containerAnimation && vars.horizontal !== false ? _horizontal : _vertical, isToggle = !scrub && scrub !== 0, scroller = _getTarget(vars.scroller || _win), scrollerCache = gsap5.core.getCache(scroller), isViewport = _isViewport(scroller), useFixedPosition = ("pinType" in vars ? vars.pinType : _getProxyProp(scroller, "pinType") || isViewport && "fixed") === "fixed", callbacks = [vars.onEnter, vars.onLeave, vars.onEnterBack, vars.onLeaveBack], toggleActions = isToggle && vars.toggleActions.split(" "), markers = "markers" in vars ? vars.markers : _defaults.markers, borderWidth = isViewport ? 0 : parseFloat(_getComputedStyle(scroller)["border" + direction.p2 + _Width]) || 0, self2 = this, onRefreshInit = vars.onRefreshInit && function() {
            return vars.onRefreshInit(self2);
          }, getScrollerSize = _getSizeFunc(scroller, isViewport, direction), getScrollerOffsets = _getOffsetsFunc(scroller, isViewport), lastSnap = 0, scrollFunc = _getScrollFunc(scroller, direction), tweenTo, pinCache, snapFunc, scroll1, scroll2, start, end, markerStart, markerEnd, markerStartTrigger, markerEndTrigger, markerVars, change, pinOriginalState, pinActiveState, pinState, spacer, offset, pinGetter, pinSetter, pinStart, pinChange, spacingStart, spacerState, markerStartSetter, markerEndSetter, cs, snap1, snap2, scrubTween, scrubSmooth, snapDurClamp, snapDelayedCall, prevProgress, prevScroll, prevAnimProgress, caMarkerSetter;
          self2.media = _creatingMedia;
          anticipatePin *= 45;
          self2.scroller = scroller;
          self2.scroll = containerAnimation ? containerAnimation.time.bind(containerAnimation) : scrollFunc;
          scroll1 = scrollFunc();
          self2.vars = vars;
          animation = animation || vars.animation;
          "refreshPriority" in vars && (_sort = 1);
          scrollerCache.tweenScroll = scrollerCache.tweenScroll || {
            top: _getTweenCreator(scroller, _vertical),
            left: _getTweenCreator(scroller, _horizontal)
          };
          self2.tweenTo = tweenTo = scrollerCache.tweenScroll[direction.p];
          if (animation) {
            animation.vars.lazy = false;
            animation._initted || animation.vars.immediateRender !== false && vars.immediateRender !== false && animation.render(0, true, true);
            self2.animation = animation.pause();
            animation.scrollTrigger = self2;
            scrubSmooth = _isNumber(scrub) && scrub;
            scrubSmooth && (scrubTween = gsap5.to(animation, {
              ease: "power3",
              duration: scrubSmooth,
              onComplete: function onComplete() {
                return onScrubComplete && onScrubComplete(self2);
              }
            }));
            snap1 = 0;
            id || (id = animation.vars.id);
          }
          _triggers.push(self2);
          if (snap) {
            if (!_isObject(snap) || snap.push) {
              snap = {
                snapTo: snap
              };
            }
            "scrollBehavior" in _body.style && gsap5.set(isViewport ? [_body, _docEl] : scroller, {
              scrollBehavior: "auto"
            });
            snapFunc = _isFunction(snap.snapTo) ? snap.snapTo : snap.snapTo === "labels" ? _getClosestLabel(animation) : snap.snapTo === "labelsDirectional" ? _getLabelAtDirection(animation) : snap.directional !== false ? function(value, st) {
              return _snapDirectional(snap.snapTo)(value, st.direction);
            } : gsap5.utils.snap(snap.snapTo);
            snapDurClamp = snap.duration || {
              min: 0.1,
              max: 2
            };
            snapDurClamp = _isObject(snapDurClamp) ? _clamp(snapDurClamp.min, snapDurClamp.max) : _clamp(snapDurClamp, snapDurClamp);
            snapDelayedCall = gsap5.delayedCall(snap.delay || scrubSmooth / 2 || 0.1, function() {
              if (Math.abs(self2.getVelocity()) < 10 && !_pointerIsDown && lastSnap !== scrollFunc()) {
                var totalProgress = animation && !isToggle ? animation.totalProgress() : self2.progress, velocity = (totalProgress - snap2) / (_getTime() - _time2) * 1e3 || 0, change1 = gsap5.utils.clamp(-self2.progress, 1 - self2.progress, _abs(velocity / 2) * velocity / 0.185), naturalEnd = self2.progress + (snap.inertia === false ? 0 : change1), endValue = _clamp(0, 1, snapFunc(naturalEnd, self2)), scroll = scrollFunc(), endScroll = Math.round(start + endValue * change), _snap = snap, onStart = _snap.onStart, _onInterrupt = _snap.onInterrupt, _onComplete = _snap.onComplete, tween = tweenTo.tween;
                if (scroll <= end && scroll >= start && endScroll !== scroll) {
                  if (tween && !tween._initted && tween.data <= _abs(endScroll - scroll)) {
                    return;
                  }
                  if (snap.inertia === false) {
                    change1 = endValue - self2.progress;
                  }
                  tweenTo(endScroll, {
                    duration: snapDurClamp(_abs(Math.max(_abs(naturalEnd - totalProgress), _abs(endValue - totalProgress)) * 0.185 / velocity / 0.05 || 0)),
                    ease: snap.ease || "power3",
                    data: _abs(endScroll - scroll),
                    onInterrupt: function onInterrupt() {
                      return snapDelayedCall.restart(true) && _onInterrupt && _onInterrupt(self2);
                    },
                    onComplete: function onComplete() {
                      lastSnap = scrollFunc();
                      snap1 = snap2 = animation && !isToggle ? animation.totalProgress() : self2.progress;
                      onSnapComplete && onSnapComplete(self2);
                      _onComplete && _onComplete(self2);
                    }
                  }, scroll, change1 * change, endScroll - scroll - change1 * change);
                  onStart && onStart(self2, tweenTo.tween);
                }
              } else if (self2.isActive) {
                snapDelayedCall.restart(true);
              }
            }).pause();
          }
          id && (_ids[id] = self2);
          trigger = self2.trigger = _getTarget(trigger || pin);
          pin = pin === true ? trigger : _getTarget(pin);
          _isString(toggleClass) && (toggleClass = {
            targets: trigger,
            className: toggleClass
          });
          if (pin) {
            pinSpacing === false || pinSpacing === _margin || (pinSpacing = !pinSpacing && _getComputedStyle(pin.parentNode).display === "flex" ? false : _padding);
            self2.pin = pin;
            vars.force3D !== false && gsap5.set(pin, {
              force3D: true
            });
            pinCache = gsap5.core.getCache(pin);
            if (!pinCache.spacer) {
              if (pinSpacer) {
                pinSpacer = _getTarget(pinSpacer);
                pinSpacer && !pinSpacer.nodeType && (pinSpacer = pinSpacer.current || pinSpacer.nativeElement);
                pinCache.spacerIsNative = !!pinSpacer;
                pinSpacer && (pinCache.spacerState = _getState(pinSpacer));
              }
              pinCache.spacer = spacer = pinSpacer || _doc.createElement("div");
              spacer.classList.add("pin-spacer");
              id && spacer.classList.add("pin-spacer-" + id);
              pinCache.pinState = pinOriginalState = _getState(pin);
            } else {
              pinOriginalState = pinCache.pinState;
            }
            self2.spacer = spacer = pinCache.spacer;
            cs = _getComputedStyle(pin);
            spacingStart = cs[pinSpacing + direction.os2];
            pinGetter = gsap5.getProperty(pin);
            pinSetter = gsap5.quickSetter(pin, direction.a, _px);
            _swapPinIn(pin, spacer, cs);
            pinState = _getState(pin);
          }
          if (markers) {
            markerVars = _isObject(markers) ? _setDefaults(markers, _markerDefaults) : _markerDefaults;
            markerStartTrigger = _createMarker("scroller-start", id, scroller, direction, markerVars, 0);
            markerEndTrigger = _createMarker("scroller-end", id, scroller, direction, markerVars, 0, markerStartTrigger);
            offset = markerStartTrigger["offset" + direction.op.d2];
            markerStart = _createMarker("start", id, scroller, direction, markerVars, offset, 0, containerAnimation);
            markerEnd = _createMarker("end", id, scroller, direction, markerVars, offset, 0, containerAnimation);
            containerAnimation && (caMarkerSetter = gsap5.quickSetter([markerStart, markerEnd], direction.a, _px));
            if (!useFixedPosition && !(_proxies.length && _getProxyProp(scroller, "fixedMarkers") === true)) {
              _makePositionable(isViewport ? _body : scroller);
              gsap5.set([markerStartTrigger, markerEndTrigger], {
                force3D: true
              });
              markerStartSetter = gsap5.quickSetter(markerStartTrigger, direction.a, _px);
              markerEndSetter = gsap5.quickSetter(markerEndTrigger, direction.a, _px);
            }
          }
          if (containerAnimation) {
            var oldOnUpdate = containerAnimation.vars.onUpdate, oldParams = containerAnimation.vars.onUpdateParams;
            containerAnimation.eventCallback("onUpdate", function() {
              self2.update(0, 0, 1);
              oldOnUpdate && oldOnUpdate.apply(oldParams || []);
            });
          }
          self2.previous = function() {
            return _triggers[_triggers.indexOf(self2) - 1];
          };
          self2.next = function() {
            return _triggers[_triggers.indexOf(self2) + 1];
          };
          self2.revert = function(revert) {
            var r = revert !== false || !self2.enabled, prevRefreshing = _refreshing;
            if (r !== self2.isReverted) {
              if (r) {
                self2.scroll.rec || (self2.scroll.rec = scrollFunc());
                prevScroll = Math.max(scrollFunc(), self2.scroll.rec || 0);
                prevProgress = self2.progress;
                prevAnimProgress = animation && animation.progress();
              }
              markerStart && [markerStart, markerEnd, markerStartTrigger, markerEndTrigger].forEach(function(m) {
                return m.style.display = r ? "none" : "block";
              });
              r && (_refreshing = 1);
              self2.update(r);
              _refreshing = prevRefreshing;
              pin && (r ? _swapPinOut(pin, spacer, pinOriginalState) : (!pinReparent || !self2.isActive) && _swapPinIn(pin, spacer, _getComputedStyle(pin), spacerState));
              self2.isReverted = r;
            }
          };
          self2.refresh = function(soft, force) {
            if ((_refreshing || !self2.enabled) && !force) {
              return;
            }
            if (pin && soft && _lastScrollTime) {
              _addListener(ScrollTrigger3, "scrollEnd", _softRefresh);
              return;
            }
            _refreshing = 1;
            scrubTween && scrubTween.pause();
            invalidateOnRefresh && animation && animation.progress(0).invalidate();
            self2.isReverted || self2.revert();
            var size = getScrollerSize(), scrollerBounds = getScrollerOffsets(), max = containerAnimation ? containerAnimation.duration() : _maxScroll(scroller, direction), offset2 = 0, otherPinOffset = 0, parsedEnd = vars.end, parsedEndTrigger = vars.endTrigger || trigger, parsedStart = vars.start || (vars.start === 0 || !trigger ? 0 : pin ? "0 0" : "0 100%"), pinnedContainer = vars.pinnedContainer && _getTarget(vars.pinnedContainer), triggerIndex = trigger && Math.max(0, _triggers.indexOf(self2)) || 0, i = triggerIndex, cs2, bounds, scroll, isVertical, override, curTrigger, curPin, oppositeScroll, initted, revertedPins;
            while (i--) {
              curTrigger = _triggers[i];
              curTrigger.end || curTrigger.refresh(0, 1) || (_refreshing = 1);
              curPin = curTrigger.pin;
              if (curPin && (curPin === trigger || curPin === pin) && !curTrigger.isReverted) {
                revertedPins || (revertedPins = []);
                revertedPins.unshift(curTrigger);
                curTrigger.revert();
              }
            }
            _isFunction(parsedStart) && (parsedStart = parsedStart(self2));
            start = _parsePosition(parsedStart, trigger, size, direction, scrollFunc(), markerStart, markerStartTrigger, self2, scrollerBounds, borderWidth, useFixedPosition, max, containerAnimation) || (pin ? -1e-3 : 0);
            _isFunction(parsedEnd) && (parsedEnd = parsedEnd(self2));
            if (_isString(parsedEnd) && !parsedEnd.indexOf("+=")) {
              if (~parsedEnd.indexOf(" ")) {
                parsedEnd = (_isString(parsedStart) ? parsedStart.split(" ")[0] : "") + parsedEnd;
              } else {
                offset2 = _offsetToPx(parsedEnd.substr(2), size);
                parsedEnd = _isString(parsedStart) ? parsedStart : start + offset2;
                parsedEndTrigger = trigger;
              }
            }
            end = Math.max(start, _parsePosition(parsedEnd || (parsedEndTrigger ? "100% 0" : max), parsedEndTrigger, size, direction, scrollFunc() + offset2, markerEnd, markerEndTrigger, self2, scrollerBounds, borderWidth, useFixedPosition, max, containerAnimation)) || -1e-3;
            change = end - start || (start -= 0.01) && 1e-3;
            offset2 = 0;
            i = triggerIndex;
            while (i--) {
              curTrigger = _triggers[i];
              curPin = curTrigger.pin;
              if (curPin && curTrigger.start - curTrigger._pinPush < start && !containerAnimation) {
                cs2 = curTrigger.end - curTrigger.start;
                (curPin === trigger || curPin === pinnedContainer) && !_isNumber(parsedStart) && (offset2 += cs2);
                curPin === pin && (otherPinOffset += cs2);
              }
            }
            start += offset2;
            end += offset2;
            self2._pinPush = otherPinOffset;
            if (markerStart && offset2) {
              cs2 = {};
              cs2[direction.a] = "+=" + offset2;
              pinnedContainer && (cs2[direction.p] = "-=" + scrollFunc());
              gsap5.set([markerStart, markerEnd], cs2);
            }
            if (pin) {
              cs2 = _getComputedStyle(pin);
              isVertical = direction === _vertical;
              scroll = scrollFunc();
              pinStart = parseFloat(pinGetter(direction.a)) + otherPinOffset;
              !max && end > 1 && ((isViewport ? _body : scroller).style["overflow-" + direction.a] = "scroll");
              _swapPinIn(pin, spacer, cs2);
              pinState = _getState(pin);
              bounds = _getBounds(pin, true);
              oppositeScroll = useFixedPosition && _getScrollFunc(scroller, isVertical ? _horizontal : _vertical)();
              if (pinSpacing) {
                spacerState = [pinSpacing + direction.os2, change + otherPinOffset + _px];
                spacerState.t = spacer;
                i = pinSpacing === _padding ? _getSize(pin, direction) + change + otherPinOffset : 0;
                i && spacerState.push(direction.d, i + _px);
                _setState(spacerState);
                useFixedPosition && scrollFunc(prevScroll);
              }
              if (useFixedPosition) {
                override = {
                  top: bounds.top + (isVertical ? scroll - start : oppositeScroll) + _px,
                  left: bounds.left + (isVertical ? oppositeScroll : scroll - start) + _px,
                  boxSizing: "border-box",
                  position: "fixed"
                };
                override[_width] = override["max" + _Width] = Math.ceil(bounds.width) + _px;
                override[_height] = override["max" + _Height] = Math.ceil(bounds.height) + _px;
                override[_margin] = override[_margin + _Top] = override[_margin + _Right] = override[_margin + _Bottom] = override[_margin + _Left] = "0";
                override[_padding] = cs2[_padding];
                override[_padding + _Top] = cs2[_padding + _Top];
                override[_padding + _Right] = cs2[_padding + _Right];
                override[_padding + _Bottom] = cs2[_padding + _Bottom];
                override[_padding + _Left] = cs2[_padding + _Left];
                pinActiveState = _copyState(pinOriginalState, override, pinReparent);
              }
              if (animation) {
                initted = animation._initted;
                _suppressOverwrites(1);
                animation.render(animation.duration(), true, true);
                pinChange = pinGetter(direction.a) - pinStart + change + otherPinOffset;
                change !== pinChange && pinActiveState.splice(pinActiveState.length - 2, 2);
                animation.render(0, true, true);
                initted || animation.invalidate();
                _suppressOverwrites(0);
              } else {
                pinChange = change;
              }
            } else if (trigger && scrollFunc() && !containerAnimation) {
              bounds = trigger.parentNode;
              while (bounds && bounds !== _body) {
                if (bounds._pinOffset) {
                  start -= bounds._pinOffset;
                  end -= bounds._pinOffset;
                }
                bounds = bounds.parentNode;
              }
            }
            revertedPins && revertedPins.forEach(function(t) {
              return t.revert(false);
            });
            self2.start = start;
            self2.end = end;
            scroll1 = scroll2 = scrollFunc();
            if (!containerAnimation) {
              scroll1 < prevScroll && scrollFunc(prevScroll);
              self2.scroll.rec = 0;
            }
            self2.revert(false);
            _refreshing = 0;
            animation && isToggle && animation._initted && animation.progress() !== prevAnimProgress && animation.progress(prevAnimProgress, true).render(animation.time(), true, true);
            if (prevProgress !== self2.progress) {
              animation && !isToggle && animation.totalProgress(prevProgress, true);
              self2.progress = prevProgress;
              self2.update(0, 0, 1);
            }
            pin && pinSpacing && (spacer._pinOffset = Math.round(self2.progress * pinChange));
            onRefresh && onRefresh(self2);
          };
          self2.getVelocity = function() {
            return (scrollFunc() - scroll2) / (_getTime() - _time2) * 1e3 || 0;
          };
          self2.endAnimation = function() {
            _endAnimation(self2.callbackAnimation);
            if (animation) {
              scrubTween ? scrubTween.progress(1) : !animation.paused() ? _endAnimation(animation, animation.reversed()) : isToggle || _endAnimation(animation, self2.direction < 0, 1);
            }
          };
          self2.getTrailing = function(name) {
            var i = _triggers.indexOf(self2), a = self2.direction > 0 ? _triggers.slice(0, i).reverse() : _triggers.slice(i + 1);
            return _isString(name) ? a.filter(function(t) {
              return t.vars.preventOverlaps === name;
            }) : a;
          };
          self2.update = function(reset, recordVelocity, forceFake) {
            if (containerAnimation && !forceFake && !reset) {
              return;
            }
            var scroll = self2.scroll(), p = reset ? 0 : (scroll - start) / change, clipped = p < 0 ? 0 : p > 1 ? 1 : p || 0, prevProgress2 = self2.progress, isActive, wasActive, toggleState, action, stateChanged, toggled, isAtMax, isTakingAction;
            if (recordVelocity) {
              scroll2 = scroll1;
              scroll1 = containerAnimation ? scrollFunc() : scroll;
              if (snap) {
                snap2 = snap1;
                snap1 = animation && !isToggle ? animation.totalProgress() : clipped;
              }
            }
            anticipatePin && !clipped && pin && !_refreshing && !_startup && _lastScrollTime && start < scroll + (scroll - scroll2) / (_getTime() - _time2) * anticipatePin && (clipped = 1e-4);
            if (clipped !== prevProgress2 && self2.enabled) {
              isActive = self2.isActive = !!clipped && clipped < 1;
              wasActive = !!prevProgress2 && prevProgress2 < 1;
              toggled = isActive !== wasActive;
              stateChanged = toggled || !!clipped !== !!prevProgress2;
              self2.direction = clipped > prevProgress2 ? 1 : -1;
              self2.progress = clipped;
              if (stateChanged && !_refreshing) {
                toggleState = clipped && !prevProgress2 ? 0 : clipped === 1 ? 1 : prevProgress2 === 1 ? 2 : 3;
                if (isToggle) {
                  action = !toggled && toggleActions[toggleState + 1] !== "none" && toggleActions[toggleState + 1] || toggleActions[toggleState];
                  isTakingAction = animation && (action === "complete" || action === "reset" || action in animation);
                }
              }
              preventOverlaps && toggled && (isTakingAction || scrub || !animation) && (_isFunction(preventOverlaps) ? preventOverlaps(self2) : self2.getTrailing(preventOverlaps).forEach(function(t) {
                return t.endAnimation();
              }));
              if (!isToggle) {
                if (scrubTween && !_refreshing && !_startup) {
                  scrubTween.vars.totalProgress = clipped;
                  scrubTween.invalidate().restart();
                } else if (animation) {
                  animation.totalProgress(clipped, !!_refreshing);
                }
              }
              if (pin) {
                reset && pinSpacing && (spacer.style[pinSpacing + direction.os2] = spacingStart);
                if (!useFixedPosition) {
                  pinSetter(pinStart + pinChange * clipped);
                } else if (stateChanged) {
                  isAtMax = !reset && clipped > prevProgress2 && end + 1 > scroll && scroll + 1 >= _maxScroll(scroller, direction);
                  if (pinReparent) {
                    if (!reset && (isActive || isAtMax)) {
                      var bounds = _getBounds(pin, true), _offset = scroll - start;
                      _reparent(pin, _body, bounds.top + (direction === _vertical ? _offset : 0) + _px, bounds.left + (direction === _vertical ? 0 : _offset) + _px);
                    } else {
                      _reparent(pin, spacer);
                    }
                  }
                  _setState(isActive || isAtMax ? pinActiveState : pinState);
                  pinChange !== change && clipped < 1 && isActive || pinSetter(pinStart + (clipped === 1 && !isAtMax ? pinChange : 0));
                }
              }
              snap && !tweenTo.tween && !_refreshing && !_startup && snapDelayedCall.restart(true);
              toggleClass && (toggled || once && clipped && (clipped < 1 || !_limitCallbacks)) && _toArray(toggleClass.targets).forEach(function(el) {
                return el.classList[isActive || once ? "add" : "remove"](toggleClass.className);
              });
              onUpdate && !isToggle && !reset && onUpdate(self2);
              if (stateChanged && !_refreshing) {
                if (isToggle) {
                  if (isTakingAction) {
                    if (action === "complete") {
                      animation.pause().totalProgress(1);
                    } else if (action === "reset") {
                      animation.restart(true).pause();
                    } else if (action === "restart") {
                      animation.restart(true);
                    } else {
                      animation[action]();
                    }
                  }
                  onUpdate && onUpdate(self2);
                }
                if (toggled || !_limitCallbacks) {
                  onToggle && toggled && _callback(self2, onToggle);
                  callbacks[toggleState] && _callback(self2, callbacks[toggleState]);
                  once && (clipped === 1 ? self2.kill(false, 1) : callbacks[toggleState] = 0);
                  if (!toggled) {
                    toggleState = clipped === 1 ? 1 : 3;
                    callbacks[toggleState] && _callback(self2, callbacks[toggleState]);
                  }
                }
                if (fastScrollEnd && !isActive && Math.abs(self2.getVelocity()) > (_isNumber(fastScrollEnd) ? fastScrollEnd : 2500)) {
                  _endAnimation(self2.callbackAnimation);
                  scrubTween ? scrubTween.progress(1) : _endAnimation(animation, !clipped, 1);
                }
              } else if (isToggle && onUpdate && !_refreshing) {
                onUpdate(self2);
              }
            }
            if (markerEndSetter) {
              var n = containerAnimation ? scroll / containerAnimation.duration() * (containerAnimation._caScrollDist || 0) : scroll;
              markerStartSetter(n + (markerStartTrigger._isFlipped ? 1 : 0));
              markerEndSetter(n);
            }
            caMarkerSetter && caMarkerSetter(-scroll / containerAnimation.duration() * (containerAnimation._caScrollDist || 0));
          };
          self2.enable = function(reset, refresh) {
            if (!self2.enabled) {
              self2.enabled = true;
              _addListener(scroller, "resize", _onResize);
              _addListener(scroller, "scroll", _onScroll);
              onRefreshInit && _addListener(ScrollTrigger3, "refreshInit", onRefreshInit);
              if (reset !== false) {
                self2.progress = prevProgress = 0;
                scroll1 = scroll2 = lastSnap = scrollFunc();
              }
              refresh !== false && self2.refresh();
            }
          };
          self2.getTween = function(snap3) {
            return snap3 && tweenTo ? tweenTo.tween : scrubTween;
          };
          self2.disable = function(reset, allowAnimation) {
            if (self2.enabled) {
              reset !== false && self2.revert();
              self2.enabled = self2.isActive = false;
              allowAnimation || scrubTween && scrubTween.pause();
              prevScroll = 0;
              pinCache && (pinCache.uncache = 1);
              onRefreshInit && _removeListener(ScrollTrigger3, "refreshInit", onRefreshInit);
              if (snapDelayedCall) {
                snapDelayedCall.pause();
                tweenTo.tween && tweenTo.tween.kill() && (tweenTo.tween = 0);
              }
              if (!isViewport) {
                var i = _triggers.length;
                while (i--) {
                  if (_triggers[i].scroller === scroller && _triggers[i] !== self2) {
                    return;
                  }
                }
                _removeListener(scroller, "resize", _onResize);
                _removeListener(scroller, "scroll", _onScroll);
              }
            }
          };
          self2.kill = function(revert, allowAnimation) {
            self2.disable(revert, allowAnimation);
            scrubTween && scrubTween.kill();
            id && delete _ids[id];
            var i = _triggers.indexOf(self2);
            _triggers.splice(i, 1);
            i === _i && _direction > 0 && _i--;
            i = 0;
            _triggers.forEach(function(t) {
              return t.scroller === self2.scroller && (i = 1);
            });
            i || (self2.scroll.rec = 0);
            if (animation) {
              animation.scrollTrigger = null;
              revert && animation.render(-1);
              allowAnimation || animation.kill();
            }
            markerStart && [markerStart, markerEnd, markerStartTrigger, markerEndTrigger].forEach(function(m) {
              return m.parentNode && m.parentNode.removeChild(m);
            });
            if (pin) {
              pinCache && (pinCache.uncache = 1);
              i = 0;
              _triggers.forEach(function(t) {
                return t.pin === pin && i++;
              });
              i || (pinCache.spacer = 0);
            }
          };
          self2.enable(false, false);
          !animation || !animation.add || change ? self2.refresh() : gsap5.delayedCall(0.01, function() {
            return start || end || self2.refresh();
          }) && (change = 0.01) && (start = end = 0);
        };
        ScrollTrigger3.register = function register(core) {
          if (!_coreInitted) {
            gsap5 = core || _getGSAP();
            if (_windowExists() && window.document) {
              _win = window;
              _doc = document;
              _docEl = _doc.documentElement;
              _body = _doc.body;
            }
            if (gsap5) {
              _toArray = gsap5.utils.toArray;
              _clamp = gsap5.utils.clamp;
              _suppressOverwrites = gsap5.core.suppressOverwrites || _passThrough;
              gsap5.core.globals("ScrollTrigger", ScrollTrigger3);
              if (_body) {
                _raf = _win.requestAnimationFrame || function(f) {
                  return setTimeout(f, 16);
                };
                _addListener(_win, "wheel", _onScroll);
                _root = [_win, _doc, _docEl, _body];
                _addListener(_doc, "scroll", _onScroll);
                var bodyStyle = _body.style, border = bodyStyle.borderTopStyle, bounds;
                bodyStyle.borderTopStyle = "solid";
                bounds = _getBounds(_body);
                _vertical.m = Math.round(bounds.top + _vertical.sc()) || 0;
                _horizontal.m = Math.round(bounds.left + _horizontal.sc()) || 0;
                border ? bodyStyle.borderTopStyle = border : bodyStyle.removeProperty("border-top-style");
                _syncInterval = setInterval(_sync, 200);
                gsap5.delayedCall(0.5, function() {
                  return _startup = 0;
                });
                _addListener(_doc, "touchcancel", _passThrough);
                _addListener(_body, "touchstart", _passThrough);
                _multiListener(_addListener, _doc, "pointerdown,touchstart,mousedown", function() {
                  return _pointerIsDown = 1;
                });
                _multiListener(_addListener, _doc, "pointerup,touchend,mouseup", function() {
                  return _pointerIsDown = 0;
                });
                _transformProp = gsap5.utils.checkPrefix("transform");
                _stateProps.push(_transformProp);
                _coreInitted = _getTime();
                _resizeDelay = gsap5.delayedCall(0.2, _refreshAll).pause();
                _autoRefresh = [_doc, "visibilitychange", function() {
                  var w = _win.innerWidth, h = _win.innerHeight;
                  if (_doc.hidden) {
                    _prevWidth = w;
                    _prevHeight = h;
                  } else if (_prevWidth !== w || _prevHeight !== h) {
                    _onResize();
                  }
                }, _doc, "DOMContentLoaded", _refreshAll, _win, "load", function() {
                  return _lastScrollTime || _refreshAll();
                }, _win, "resize", _onResize];
                _iterateAutoRefresh(_addListener);
              }
            }
          }
          return _coreInitted;
        };
        ScrollTrigger3.defaults = function defaults(config) {
          for (var p in config) {
            _defaults[p] = config[p];
          }
        };
        ScrollTrigger3.kill = function kill() {
          _enabled = 0;
          _triggers.slice(0).forEach(function(trigger) {
            return trigger.kill(1);
          });
        };
        ScrollTrigger3.config = function config(vars) {
          "limitCallbacks" in vars && (_limitCallbacks = !!vars.limitCallbacks);
          var ms = vars.syncInterval;
          ms && clearInterval(_syncInterval) || (_syncInterval = ms) && setInterval(_sync, ms);
          if ("autoRefreshEvents" in vars) {
            _iterateAutoRefresh(_removeListener) || _iterateAutoRefresh(_addListener, vars.autoRefreshEvents || "none");
            _ignoreResize = (vars.autoRefreshEvents + "").indexOf("resize") === -1;
          }
        };
        ScrollTrigger3.scrollerProxy = function scrollerProxy(target, vars) {
          var t = _getTarget(target), i = _scrollers.indexOf(t), isViewport = _isViewport(t);
          if (~i) {
            _scrollers.splice(i, isViewport ? 6 : 2);
          }
          isViewport ? _proxies.unshift(_win, vars, _body, vars, _docEl, vars) : _proxies.unshift(t, vars);
        };
        ScrollTrigger3.matchMedia = function matchMedia(vars) {
          var mq, p, i, func, result;
          for (p in vars) {
            i = _media.indexOf(p);
            func = vars[p];
            _creatingMedia = p;
            if (p === "all") {
              func();
            } else {
              mq = _win.matchMedia(p);
              if (mq) {
                mq.matches && (result = func());
                if (~i) {
                  _media[i + 1] = _combineFunc(_media[i + 1], func);
                  _media[i + 2] = _combineFunc(_media[i + 2], result);
                } else {
                  i = _media.length;
                  _media.push(p, func, result);
                  mq.addListener ? mq.addListener(_onMediaChange) : mq.addEventListener("change", _onMediaChange);
                }
                _media[i + 3] = mq.matches;
              }
            }
            _creatingMedia = 0;
          }
          return _media;
        };
        ScrollTrigger3.clearMatchMedia = function clearMatchMedia(query) {
          query || (_media.length = 0);
          query = _media.indexOf(query);
          query >= 0 && _media.splice(query, 4);
        };
        ScrollTrigger3.isInViewport = function isInViewport(element, ratio, horizontal) {
          var bounds = (_isString(element) ? _getTarget(element) : element).getBoundingClientRect(), offset = bounds[horizontal ? _width : _height] * ratio || 0;
          return horizontal ? bounds.right - offset > 0 && bounds.left + offset < _win.innerWidth : bounds.bottom - offset > 0 && bounds.top + offset < _win.innerHeight;
        };
        ScrollTrigger3.positionInViewport = function positionInViewport(element, referencePoint, horizontal) {
          _isString(element) && (element = _getTarget(element));
          var bounds = element.getBoundingClientRect(), size = bounds[horizontal ? _width : _height], offset = referencePoint == null ? size / 2 : referencePoint in _keywords ? _keywords[referencePoint] * size : ~referencePoint.indexOf("%") ? parseFloat(referencePoint) * size / 100 : parseFloat(referencePoint) || 0;
          return horizontal ? (bounds.left + offset) / _win.innerWidth : (bounds.top + offset) / _win.innerHeight;
        };
        return ScrollTrigger3;
      }();
      ScrollTrigger2.version = "3.8.0";
      ScrollTrigger2.saveStyles = function(targets) {
        return targets ? _toArray(targets).forEach(function(target) {
          if (target && target.style) {
            var i = _savedStyles.indexOf(target);
            i >= 0 && _savedStyles.splice(i, 5);
            _savedStyles.push(target, target.style.cssText, target.getBBox && target.getAttribute("transform"), gsap5.core.getCache(target), _creatingMedia);
          }
        }) : _savedStyles;
      };
      ScrollTrigger2.revert = function(soft, media) {
        return _revertAll(!soft, media);
      };
      ScrollTrigger2.create = function(vars, animation) {
        return new ScrollTrigger2(vars, animation);
      };
      ScrollTrigger2.refresh = function(safe) {
        return safe ? _onResize() : (_coreInitted || ScrollTrigger2.register()) && _refreshAll(true);
      };
      ScrollTrigger2.update = _updateAll;
      ScrollTrigger2.clearScrollMemory = _clearScrollMemory;
      ScrollTrigger2.maxScroll = function(element, horizontal) {
        return _maxScroll(element, horizontal ? _horizontal : _vertical);
      };
      ScrollTrigger2.getScrollFunc = function(element, horizontal) {
        return _getScrollFunc(_getTarget(element), horizontal ? _horizontal : _vertical);
      };
      ScrollTrigger2.getById = function(id) {
        return _ids[id];
      };
      ScrollTrigger2.getAll = function() {
        return _triggers.slice(0);
      };
      ScrollTrigger2.isScrolling = function() {
        return !!_lastScrollTime;
      };
      ScrollTrigger2.snapDirectional = _snapDirectional;
      ScrollTrigger2.addEventListener = function(type, callback) {
        var a = _listeners[type] || (_listeners[type] = []);
        ~a.indexOf(callback) || a.push(callback);
      };
      ScrollTrigger2.removeEventListener = function(type, callback) {
        var a = _listeners[type], i = a && a.indexOf(callback);
        i >= 0 && a.splice(i, 1);
      };
      ScrollTrigger2.batch = function(targets, vars) {
        var result = [], varsCopy = {}, interval = vars.interval || 0.016, batchMax = vars.batchMax || 1e9, proxyCallback = function proxyCallback2(type, callback) {
          var elements = [], triggers = [], delay = gsap5.delayedCall(interval, function() {
            callback(elements, triggers);
            elements = [];
            triggers = [];
          }).pause();
          return function(self2) {
            elements.length || delay.restart(true);
            elements.push(self2.trigger);
            triggers.push(self2);
            batchMax <= elements.length && delay.progress(1);
          };
        }, p;
        for (p in vars) {
          varsCopy[p] = p.substr(0, 2) === "on" && _isFunction(vars[p]) && p !== "onRefreshInit" ? proxyCallback(p, vars[p]) : vars[p];
        }
        if (_isFunction(batchMax)) {
          batchMax = batchMax();
          _addListener(ScrollTrigger2, "refresh", function() {
            return batchMax = vars.batchMax();
          });
        }
        _toArray(targets).forEach(function(target) {
          var config = {};
          for (p in varsCopy) {
            config[p] = varsCopy[p];
          }
          config.trigger = target;
          result.push(ScrollTrigger2.create(config));
        });
        return result;
      };
      ScrollTrigger2.sort = function(func) {
        return _triggers.sort(func || function(a, b) {
          return (a.vars.refreshPriority || 0) * -1e6 + a.start - (b.start + (b.vars.refreshPriority || 0) * -1e6);
        });
      };
      _getGSAP() && gsap5.registerPlugin(ScrollTrigger2);
      exports2.ScrollTrigger = ScrollTrigger2;
      exports2.default = ScrollTrigger2;
      Object.defineProperty(exports2, "__esModule", { value: true });
    });
  }
});

// .svelte-kit/output/server/chunks/TransitionInView-c90c9121.js
var css13, TransitionInView;
var init_TransitionInView_c90c9121 = __esm({
  ".svelte-kit/output/server/chunks/TransitionInView-c90c9121.js"() {
    init_shims();
    init_app_9f378dda();
    init_IntersectionObserver_4cd4a541();
    css13 = {
      code: ".opacity-container.svelte-vb2yke{transition:opacity 1000ms ease 200ms;opacity:0}.intersecting.svelte-vb2yke{opacity:1}div.svelte-vb2yke{height:100%;width:100%}",
      map: null
    };
    TransitionInView = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let element;
      let intersecting;
      $$result.css.add(css13);
      let $$settled;
      let $$rendered;
      do {
        $$settled = true;
        $$rendered = `${validate_component(IntersectionObserver_1, "IntersectionObserver").$$render($$result, { element, once: true, intersecting }, {
          intersecting: ($$value) => {
            intersecting = $$value;
            $$settled = false;
          }
        }, {
          default: () => `<div class="${"svelte-vb2yke"}"${add_attribute("this", element, 0)}><div class="${["opacity-container svelte-vb2yke", intersecting ? "intersecting" : ""].join(" ").trim()}">${slots.default ? slots.default({}) : ``}</div></div>`
        })}`;
      } while (!$$settled);
      return $$rendered;
    });
  }
});

// .svelte-kit/output/server/chunks/Star-65df41c2.js
var import_gsap3, import_MorphSVGPlugin2, css14, arrowPath, starPath, Star;
var init_Star_65df41c2 = __esm({
  ".svelte-kit/output/server/chunks/Star-65df41c2.js"() {
    init_shims();
    init_app_9f378dda();
    import_gsap3 = __toModule(require_gsap());
    import_MorphSVGPlugin2 = __toModule(require_MorphSVGPlugin());
    css14 = {
      code: "svg.svelte-1exk3bt{pointer-events:none}",
      map: null
    };
    arrowPath = "M 2.398438 1.414062 L 2.398438 4.320312 C 2.398438 4.441406 2.496094 4.535156 2.617188 4.535156 L 17.015625 4.535156 L 1.152344 20.425781 C 1.054688 20.519531 1.054688 20.664062 1.152344 20.734375 L 3.191406 22.777344 C 3.289062 22.871094 3.433594 22.871094 3.503906 22.777344 L 19.488281 6.792969 L 19.488281 21.433594 C 19.488281 21.550781 19.585938 21.648438 19.703125 21.648438 L 22.609375 21.648438 C 22.726562 21.648438 22.824219 21.550781 22.824219 21.433594 L 22.824219 1.414062 C 22.824219 1.296875 22.726562 1.199219 22.609375 1.199219 L 2.617188 1.199219 C 2.496094 1.199219 2.398438 1.296875 2.398438 1.414062 Z M 2.398438 1.414062";
    starPath = "M 18.523438 12.539062 C 18.523438 12.539062 18.347656 14.273438 17.601562 13.503906 C 16.855469 12.738281 18.613281 9.703125 17.796875 7.945312 C 16.984375 6.1875 14.085938 4.914062 14.085938 4.914062 C 14.085938 4.914062 15.929688 6.671875 15.402344 7.175781 C 14.875 7.683594 12.875 7 11.910156 5.375 C 10.941406 3.75 12.105469 1.199219 12.105469 1.199219 C 12.105469 1.199219 10.171875 2.210938 9.933594 4.058594 C 9.691406 5.902344 10.128906 7.175781 10.347656 9.066406 C 10.570312 10.957031 9.933594 13.503906 8.238281 13.265625 C 6.546875 13.023438 7.535156 10.210938 7.535156 10.210938 C 7.535156 10.210938 2.371094 15.285156 5.558594 19.417969 C 8.746094 23.546875 12.546875 22.734375 12.546875 22.734375 C 13.878906 22.761719 15.265625 22.34375 16.332031 21.535156 C 16.347656 21.523438 16.363281 21.511719 16.378906 21.5 C 21.738281 17.679688 18.523438 12.539062 18.523438 12.539062 Z M 18.523438 12.539062 ";
    Star = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { width = 24 } = $$props;
      let { height = 24 } = $$props;
      let { fill = "black" } = $$props;
      let { stroke = "transparent" } = $$props;
      let { hovered } = $$props;
      let { index } = $$props;
      import_gsap3.gsap.registerPlugin(import_MorphSVGPlugin2.MorphSVGPlugin);
      let star;
      const changePath = function() {
        if (hovered == true) {
          import_gsap3.gsap.to(star, { duration: 0.3, morphSVG: arrowPath });
        } else {
          import_gsap3.gsap.to(star, { duration: 0.3, morphSVG: starPath });
        }
      };
      if ($$props.width === void 0 && $$bindings.width && width !== void 0)
        $$bindings.width(width);
      if ($$props.height === void 0 && $$bindings.height && height !== void 0)
        $$bindings.height(height);
      if ($$props.fill === void 0 && $$bindings.fill && fill !== void 0)
        $$bindings.fill(fill);
      if ($$props.stroke === void 0 && $$bindings.stroke && stroke !== void 0)
        $$bindings.stroke(stroke);
      if ($$props.hovered === void 0 && $$bindings.hovered && hovered !== void 0)
        $$bindings.hovered(hovered);
      if ($$props.index === void 0 && $$bindings.index && index !== void 0)
        $$bindings.index(index);
      $$result.css.add(css14);
      {
        changePath();
      }
      return `<svg xmlns="${"http://www.w3.org/2000/svg"}"${add_attribute("width", width, 0)}${add_attribute("height", height, 0)} viewBox="${"0 0 24 24"}"${add_attribute("fill", fill, 0)}${add_attribute("stroke", stroke, 0)} class="${"svelte-1exk3bt"}"><path id="${"star-" + escape(index)}"${add_attribute("d", starPath, 0)}></path></svg>`;
    });
  }
});

// .svelte-kit/output/server/chunks/Award-42d31980.js
var css15, Award;
var init_Award_42d31980 = __esm({
  ".svelte-kit/output/server/chunks/Award-42d31980.js"() {
    init_shims();
    init_app_9f378dda();
    init_TransitionInView_c90c9121();
    css15 = {
      code: '.flex-mobile.svelte-10v4fkf.svelte-10v4fkf{display:none;visibility:hidden}.container.svelte-10v4fkf.svelte-10v4fkf{display:flex;padding:1.25rem 0;filter:none;justify-content:space-between;position:relative;border-bottom-color:rgba(var(--text-color-rgb), 0.05);border-bottom-style:solid;border-bottom-width:2px}.container.svelte-10v4fkf.svelte-10v4fkf::after{content:"";position:absolute;width:100%;transform:scaleX(0);height:1px;bottom:-1px;left:0;background-color:var(--accent-color);transform-origin:bottom left;transition:transform 500ms ease}.container.svelte-10v4fkf.svelte-10v4fkf:hover::after{transform:scaleX(1)}.container.svelte-10v4fkf>.svelte-10v4fkf{transition:opacity 600ms cubic-bezier(0.37, 0.35, 0.01, 0.99),\n      color 600ms cubic-bezier(0.37, 0.35, 0.01, 0.99),\n      text-shadow 600ms cubic-bezier(0.37, 0.35, 0.01, 0.99)}.title.svelte-10v4fkf.svelte-10v4fkf{flex:1;font-size:1.25rem;font-weight:400;line-height:1.15;font-family:var(--font-sans);letter-spacing:-0.4px;color:var(--text-color)}.organization.svelte-10v4fkf.svelte-10v4fkf{font-size:1.25rem;padding:0 1rem;line-height:1.15;font-family:var(--font-serif);display:flex;place-items:center;justify-content:center;text-align:center;color:var(--accent-color);font-weight:200;letter-spacing:0.025rem}time.svelte-10v4fkf.svelte-10v4fkf{color:var(--text-color);padding:0 1rem;font-family:var(--font-serif);font-weight:200;text-align:right;display:flex;place-items:center;font-size:1.25rem;letter-spacing:1px}.inactive.svelte-10v4fkf>.svelte-10v4fkf{color:transparent;opacity:0.5;text-shadow:0 0 2px rgba(var(--text-color-rgb), 0.8)}.inactive.svelte-10v4fkf.svelte-10v4fkf{border-bottom-color:rgba(var(--text-color-rgb), 0.05)}@media screen and (max-width: 700px){.container.svelte-10v4fkf.svelte-10v4fkf{flex-direction:column;padding:1rem 0;align-items:flex-start}.title.svelte-10v4fkf.svelte-10v4fkf{margin-bottom:0.35rem}.organization.svelte-10v4fkf.svelte-10v4fkf{padding:0;font-size:1.1rem;font-weight:200}time.svelte-10v4fkf.svelte-10v4fkf{padding:0}.hidden-mobile.svelte-10v4fkf.svelte-10v4fkf{display:none;visibility:hidden}.flex-mobile.svelte-10v4fkf.svelte-10v4fkf{width:100%;display:flex;justify-content:space-between;visibility:visible}}',
      map: null
    };
    Award = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { award } = $$props;
      let { slug } = $$props;
      let { anyHovered = false } = $$props;
      let active = false;
      if ($$props.award === void 0 && $$bindings.award && award !== void 0)
        $$bindings.award(award);
      if ($$props.slug === void 0 && $$bindings.slug && slug !== void 0)
        $$bindings.slug(slug);
      if ($$props.anyHovered === void 0 && $$bindings.anyHovered && anyHovered !== void 0)
        $$bindings.anyHovered(anyHovered);
      $$result.css.add(css15);
      return `${validate_component(TransitionInView, "TransitionInView").$$render($$result, {}, {}, {
        default: () => `<a class="${"container no-underline " + escape(anyHovered && !active ? "inactive" : "") + " svelte-10v4fkf"}" sveltekit:prefetch${add_attribute("href", slug, 0)}><h2 class="${"title svelte-10v4fkf"}">${escape(award.title)}</h2>
    <p class="${"organization hidden-mobile svelte-10v4fkf"}">${escape(award.organization)}</p>
    <time${add_attribute("datetime", award.date, 0)} class="${"hidden-mobile svelte-10v4fkf"}">${escape(award.date.slice(0, 4))}</time>
    <div class="${"flex-mobile svelte-10v4fkf"}"><p class="${"organization svelte-10v4fkf"}">${escape(award.organization)}</p>
      <time${add_attribute("datetime", award.date, 0)} class="${"svelte-10v4fkf"}">${escape(award.date.slice(0, 4))}</time></div></a>`
      })}`;
    });
  }
});

// .svelte-kit/output/server/chunks/index-ec7d7444.js
var index_ec7d7444_exports = {};
__export(index_ec7d7444_exports, {
  default: () => Routes,
  load: () => load2
});
async function load2({ fetch: fetch2 }) {
  const projectsJson = await fetch2(`/projects.json`);
  const projects = await projectsJson.json();
  const postsJson = await fetch2(`/posts.json`);
  const posts = await postsJson.json();
  const awardsJson = await fetch2(`/awards.json`);
  const awards = await awardsJson.json();
  return {
    props: {
      projects,
      posts,
      awards
    }
  };
}
var import_bowser59, import_gsap4, import_ScrollTrigger, import_SplitText2, css$7, Hero, SectionTitle, css$6, HoverVideo, css$52, Projects, css$42, BlogText, css$32, Blog, css$22, Awards, css$12, CircleText, css16, Routes;
var init_index_ec7d7444 = __esm({
  ".svelte-kit/output/server/chunks/index-ec7d7444.js"() {
    init_shims();
    init_app_9f378dda();
    init_global_130d3fe3();
    import_bowser59 = __toModule(require_es5());
    import_gsap4 = __toModule(require_gsap());
    import_ScrollTrigger = __toModule(require_ScrollTrigger());
    import_SplitText2 = __toModule(require_SplitText());
    init_TransitionInView_c90c9121();
    init_IntersectionObserver_4cd4a541();
    init_utils_09998264();
    init_Star_65df41c2();
    init_Award_42d31980();
    import_gsap4.gsap.registerPlugin(import_ScrollTrigger.ScrollTrigger, import_SplitText2.SplitText);
    css$7 = {
      code: "@keyframes svelte-1m2420z-arrow-line{0%{transform:translate3d(0, -101%, 0)}25%{transform:translate3d(0, 101%, 0)}50%{transform:translate3d(0, 101%, 0)}75%{transform:translate3d(0, 101%, 0)}100%{transform:translate3d(0, -101%, 0)}}@keyframes svelte-1m2420z-arrow{0%{-webkit-transform:translateZ(0) rotate(45deg);transform:translateZ(0) rotate(45deg)}100%{-webkit-transform:translate3d(0, 10px, 0) rotate(45deg);transform:translate3d(0, 10px, 0) rotate(45deg)}}section.svelte-1m2420z{width:95%;margin:auto;display:flex;flex-direction:column;justify-content:center;place-items:center;overflow:hidden;position:relative;transition:height 100ms ease}.year.svelte-1m2420z{position:absolute;bottom:5.35%;left:0.75%;margin-left:1rem;color:rgba(var(--text-color-rgb), 0.35);font-family:var(--font-sans);font-weight:300;font-size:1.5rem;letter-spacing:-0.05rem;user-select:none}.begin-invisible.svelte-1m2420z:not(.transitioned){opacity:0}.hero-container.svelte-1m2420z{line-height:0.85;user-select:none;margin-top:calc(0px - var(--nav-height))}.overline.svelte-1m2420z{font-weight:200;text-align:left;margin-bottom:0.5rem}.title.svelte-1m2420z{margin-bottom:1.25rem}.connor.svelte-1m2420z,.rothschild.svelte-1m2420z{display:block;font-weight:500;letter-spacing:-0.1rem;text-transform:uppercase;overflow-y:hidden}.connor.svelte-1m2420z{font-size:17.55vw}.rothschild.svelte-1m2420z{font-size:12.15vw}.subtitle.svelte-1m2420z{font-size:3vw;max-width:1068px;font-weight:300;margin-bottom:1rem;text-align:right;margin-left:auto;color:rgba(var(--text-color-rgb), 0.9)}.switch.svelte-1m2420z{cursor:pointer;border-bottom:1px solid rgba(var(--text-color-rgb), 0.2);transition:border-bottom-color 200ms ease;display:inline-block;padding-bottom:0.5rem}.switch.unclicked.svelte-1m2420z{animation:svelte-1m2420z-wiggle 3000ms infinite}@keyframes svelte-1m2420z-wiggle{0%{transform:rotate(0deg)}25%{transform:rotate(2deg)}50%{transform:rotate(-2deg)}75%{transform:rotate(0deg)}100%{transform:rotate(0deg)}}.switch.svelte-1m2420z:hover{border-bottom-color:rgba(var(--accent-color-rgb), 0.6)}@media screen and (max-width: 768px){.subtitle.svelte-1m2420z{font-size:4vw}}@media screen and (max-width: 468px){section.svelte-1m2420z{place-items:center}.overline.svelte-1m2420z,.subtitle.svelte-1m2420z,.hero-container.svelte-1m2420z{text-align:left}.overline.svelte-1m2420z{font-size:2.25rem;margin-bottom:0.75rem}.subtitle.svelte-1m2420z{font-size:1.4rem}.year.svelte-1m2420z{font-size:1.5rem;left:2.5%}}",
      map: null
    };
    Hero = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let subtitleString;
      let $$unsubscribe_pageTransitionDelay;
      let $windowHeight, $$unsubscribe_windowHeight;
      $$unsubscribe_pageTransitionDelay = subscribe(pageTransitionDelay, (value) => value);
      $$unsubscribe_windowHeight = subscribe(windowHeight, (value) => $windowHeight = value);
      let subtitleIndex = 0;
      let subtitleOptions = [
        "on the web.",
        "with data.",
        "like these <span style='vertical-align: top; font-size: .8em;'>&darr;</span>"
      ];
      $$result.css.add(css$7);
      subtitleString = subtitleOptions[subtitleIndex];
      $$unsubscribe_pageTransitionDelay();
      $$unsubscribe_windowHeight();
      return `<section id="${"hero"}" style="${"min-height: " + escape($windowHeight ? `calc(${$windowHeight * 1.01}px - var(--nav-height))` : "101vh") + ";"}" class="${"svelte-1m2420z"}">
  <div class="${"hero-container svelte-1m2420z"}"><h1 class="${["overline begin-invisible svelte-1m2420z", ""].join(" ").trim()}">Hi, I&#39;m</h1>
    <div class="${"title svelte-1m2420z"}"><h1 class="${[
        "connor begin-invisible gradient-accented svelte-1m2420z",
        ""
      ].join(" ").trim()}">Connor
      </h1>
      <h1 class="${[
        "rothschild begin-invisible gradient-accented svelte-1m2420z",
        ""
      ].join(" ").trim()}">Rothschild
      </h1></div>
    <h2 class="${["subtitle begin-invisible  svelte-1m2420z", ""].join(" ").trim()}">And I tell visual stories <span class="${["switch svelte-1m2420z", "unclicked"].join(" ").trim()}"><!-- HTML_TAG_START -->${subtitleString}<!-- HTML_TAG_END --></span></h2></div>
  <h1 class="${"year svelte-1m2420z"}">Portfolio 2021</h1>
</section>`;
    });
    SectionTitle = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      import_gsap4.gsap.registerPlugin(import_SplitText2.SplitText);
      let { intersecting } = $$props;
      let { element } = $$props;
      if ($$props.intersecting === void 0 && $$bindings.intersecting && intersecting !== void 0)
        $$bindings.intersecting(intersecting);
      if ($$props.element === void 0 && $$bindings.element && element !== void 0)
        $$bindings.element(element);
      {
        if (intersecting) {
          let titleSplit = new import_SplitText2.SplitText(document.querySelector(element), { type: "words,chars" });
          let titleChars = titleSplit.chars;
          import_gsap4.gsap.fromTo(titleChars, { y: 100, opacity: 0, rotation: 0 }, {
            y: 0,
            opacity: 1,
            rotation: 0,
            stagger: 0.025,
            duration: 0.5,
            delay: 0.25,
            ease: "backwards"
          });
        }
      }
      return `${slots.default ? slots.default({}) : ``}`;
    });
    css$6 = {
      code: ".absolute-container.svelte-1f921ml.svelte-1f921ml{position:absolute;top:0;left:0;width:100%;height:100%;overflow:visible}.projects.svelte-1f921ml.svelte-1f921ml{display:flex;flex-direction:column;justify-content:flex-start;width:95%;height:100%;text-align:left;position:relative;max-width:1168px;margin:auto}.project-card.svelte-1f921ml.svelte-1f921ml{height:100%;border-bottom:1px solid rgba(var(--text-color-rgb), 0.2);display:inline-flex;width:fit-content;align-items:center;justify-content:space-between;cursor:pointer;transition:all 600ms ease}.section-container.svelte-1f921ml.svelte-1f921ml{position:relative;overflow:hidden}h1.svelte-1f921ml.svelte-1f921ml{font-size:3rem;text-transform:uppercase;font-weight:200;transition:opacity 600ms cubic-bezier(0.37, 0.35, 0.01, 0.99),\n      color 600ms cubic-bezier(0.37, 0.35, 0.01, 0.99),\n      text-shadow 600ms cubic-bezier(0.37, 0.35, 0.01, 0.99)}.inactive.svelte-1f921ml.svelte-1f921ml{opacity:1;z-index:1}.inactive.svelte-1f921ml h1.svelte-1f921ml{color:transparent;opacity:0.5;text-shadow:0 0 2px rgba(var(--text-color-rgb), 0.8)}.blurred.svelte-1f921ml h1.svelte-1f921ml{text-shadow:0 0 5px rgba(var(--text-color-rgb), 0.5)}.active.svelte-1f921ml.svelte-1f921ml{z-index:5;border-bottom:1px solid rgba(var(--accent-color-rgb), 0.8)}.active.svelte-1f921ml h1.svelte-1f921ml{color:var(--accent-color)}.absolute-container.svelte-1f921ml.svelte-1f921ml{z-index:2;pointer-events:none;transition:transform 500ms ease}video.svelte-1f921ml.svelte-1f921ml{height:100%;display:block;-o-object-fit:cover;object-fit:cover;margin:auto;position:absolute;top:0;left:0;opacity:1;cursor:pointer;transition:opacity 200ms linear}.videoTransitioning.svelte-1f921ml.svelte-1f921ml{opacity:0}.title-0.svelte-1f921ml.svelte-1f921ml{margin-top:1rem}.title-3.svelte-1f921ml.svelte-1f921ml{transform:scaleY(0.95)}@media screen and (max-height: 600px){.section-container.svelte-1f921ml.svelte-1f921ml{height:auto}}@media screen and (min-width: 1269px){.absolute-container.svelte-1f921ml.svelte-1f921ml{transform:translateX(55%);position:absolute;right:0;left:unset}.title-0.svelte-1f921ml.svelte-1f921ml{font-size:3.75rem}.title-1.svelte-1f921ml.svelte-1f921ml{font-size:4.05rem}.title-2.svelte-1f921ml.svelte-1f921ml{font-size:4.8rem}.title-3.svelte-1f921ml.svelte-1f921ml{font-size:9.1rem}}@media screen and (max-width: 1268px){.absolute-container.svelte-1f921ml.svelte-1f921ml{transform:none}video.svelte-1f921ml.svelte-1f921ml{left:50%;transform:translateX(-50%)}.projects.svelte-1f921ml.svelte-1f921ml{text-align:center;width:100%}.project-card.svelte-1f921ml.svelte-1f921ml{padding:1rem;margin:auto;width:100%}.section-container.svelte-1f921ml.svelte-1f921ml{height:auto;overflow-y:hidden}.inactive.svelte-1f921ml.svelte-1f921ml{border-bottom:1px solid transparent;border-top:1px solid transparent}.active.svelte-1f921ml.svelte-1f921ml{background:rgba(var(--primary-color-rgb), 0.8);border-bottom:1px solid var(--accent-color);border-top:1px solid var(--accent-color)}.project-card.svelte-1f921ml.svelte-1f921ml{display:flex;place-items:center;justify-content:center}.title-0.svelte-1f921ml.svelte-1f921ml{font-size:5.69vw}.title-1.svelte-1f921ml.svelte-1f921ml{font-size:6.2vw}.title-2.svelte-1f921ml.svelte-1f921ml{font-size:7.3vw}.title-3.svelte-1f921ml.svelte-1f921ml{font-size:13.9vw}}",
      map: null
    };
    HoverVideo = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $windowHeight, $$unsubscribe_windowHeight;
      $$unsubscribe_windowHeight = subscribe(windowHeight, (value2) => $windowHeight = value2);
      let { projects } = $$props;
      let { videos } = $$props;
      let { videosLoaded } = $$props;
      let video, value = 0;
      if ($$props.projects === void 0 && $$bindings.projects && projects !== void 0)
        $$bindings.projects(projects);
      if ($$props.videos === void 0 && $$bindings.videos && videos !== void 0)
        $$bindings.videos(videos);
      if ($$props.videosLoaded === void 0 && $$bindings.videosLoaded && videosLoaded !== void 0)
        $$bindings.videosLoaded(videosLoaded);
      $$result.css.add(css$6);
      $$unsubscribe_windowHeight();
      return `${validate_component(TransitionInView, "TransitionInView").$$render($$result, {}, {}, {
        default: () => `<div class="${"section-container svelte-1f921ml"}" style="${"height: " + escape(Math.max($windowHeight * 0.6, 500)) + "px"}"><div class="${"projects svelte-1f921ml"}">${each(projects, (project, i) => `<a${add_attribute("href", project.path.replace(/\.[^/.]+$/, ""), 0)} sveltekit:prefetch class="${"project-card no-underline " + escape(value === i ? "active" : "inactive") + " " + escape("") + " svelte-1f921ml"}"><h1 class="${"title-" + escape(i) + " svelte-1f921ml"}">${escape(project.metadata.title)}</h1>
        </a>`)}</div>
    <div class="${"absolute-container svelte-1f921ml"}"><video preload="${"metadata"}" autoplay muted playsinline id="${"video"}" class="${["svelte-1f921ml", ""].join(" ").trim()}"${add_attribute("this", video, 0)}></video></div></div>`
      })}`;
    });
    css$52 = {
      code: "section.svelte-18iem3v{margin:auto;margin-bottom:var(--section-margin-bottom);width:100%;overflow:hidden}.see-all-flex.svelte-18iem3v,#projects-title.svelte-18iem3v{width:95%;max-width:1168px;margin-left:auto;margin-right:auto}#projects-title.svelte-18iem3v{margin-bottom:0}section.svelte-18iem3v{overflow:visible}",
      map: null
    };
    Projects = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { projects } = $$props;
      let element;
      let intersecting;
      let filteredProjects = projects.filter((d) => d.metadata.featured == true);
      let videos = [];
      function preload(i) {
        let videoUrl = `./videos/${i}.webm`;
        let req = fetch(videoUrl).then((response) => response.blob());
        req.then((blob) => {
          videos[i] = blob;
        });
      }
      let videosLoaded = false;
      if ($$props.projects === void 0 && $$bindings.projects && projects !== void 0)
        $$bindings.projects(projects);
      $$result.css.add(css$52);
      let $$settled;
      let $$rendered;
      do {
        $$settled = true;
        {
          if (intersecting) {
            for (let i = 0; i < filteredProjects.length; i++) {
              preload(i);
              if (i == filteredProjects.length - 1)
                videosLoaded = true;
            }
          }
        }
        $$rendered = `${validate_component(IntersectionObserver_1, "IntersectionObserver").$$render($$result, { element, once: true, intersecting }, {
          intersecting: ($$value) => {
            intersecting = $$value;
            $$settled = false;
          }
        }, {
          default: () => `<section id="${"projects"}" class="${"svelte-18iem3v"}"${add_attribute("this", element, 0)}><div class="${"sticky-top"}"><div class="${"see-all-flex svelte-18iem3v"}"><h1 class="${"page-overline"}">
          01. Selected projects
        </h1>
        <a class="${"page-overline padding-bottom see-all"}" sveltekit:prefetch href="${"/project"}">See all projects \u2197
        </a></div>
      ${validate_component(SectionTitle, "SectionTitle").$$render($$result, { intersecting, element: "#projects-title" }, {}, {
            default: () => `<h1 id="${"projects-title"}" class="${"section-title overflow-hidden svelte-18iem3v"}">Projects I\u2019ve
          <span class="${"gradient-accented bolded"}">built</span></h1>`
          })}</div>
    ${`${validate_component(HoverVideo, "HoverVideo").$$render($$result, {
            projects: filteredProjects,
            videos,
            videosLoaded
          }, {}, {})}`}</section>`
        })}`;
      } while (!$$settled);
      return $$rendered;
    });
    css$42 = {
      code: '.post-container.svelte-137y06u.svelte-137y06u{display:block;width:100%;height:100%;padding:1rem 1rem 2rem 1rem;overflow:hidden;transition:all 100ms linear, border 300ms ease;cursor:pointer;border-bottom:1px solid rgba(var(--text-color-rgb), 0.2);position:relative}.post-card.svelte-137y06u.svelte-137y06u{display:flex;flex-direction:column;justify-content:space-between;height:100%;pointer-events:none}.post-date.svelte-137y06u.svelte-137y06u{text-transform:uppercase;letter-spacing:0.34px;font-size:1rem;font-family:var(--font-serif);color:var(--off-text-color);font-weight:200;margin-bottom:0.75rem}.post-title.svelte-137y06u.svelte-137y06u{font-size:1.5rem;margin-bottom:0.75rem;font-family:var(--font-sans);font-weight:500;line-height:1.2}.post-description.svelte-137y06u.svelte-137y06u{font-size:1.2rem;font-family:var(--font-sans);font-weight:200;line-height:1.15}.post-misc.svelte-137y06u.svelte-137y06u{margin-top:1rem;display:flex;justify-content:space-between;place-items:flex-end}.read-more.svelte-137y06u.svelte-137y06u{text-align:left;color:var(--accent-color)}.post-tags.svelte-137y06u.svelte-137y06u{text-align:right}.post-tag.svelte-137y06u.svelte-137y06u{font-family:var(--font-sans);padding:3px 8px;background:rgba(var(--accent-color-rgb), 0.05);margin:2px;margin-right:2px;border-radius:3px;color:rgba(var(--accent-color-rgb), 1);font-size:0.85rem;font-weight:200;text-transform:uppercase;margin-right:0.25rem;letter-spacing:1px}.featured-star.svelte-137y06u.svelte-137y06u{position:absolute;top:0;right:0;padding:6px}.unhovered.svelte-137y06u.svelte-137y06u{filter:grayscale(0.7);border-bottom:1px solid rgba(var(--text-color-rgb), 0.05)}.post-container.svelte-137y06u.svelte-137y06u::after{content:"";position:absolute;width:100%;transform:scaleX(0);height:1px;bottom:0;left:0;background-color:var(--accent-color);transform-origin:bottom left;transition:transform 500ms ease}.post-container.svelte-137y06u.svelte-137y06u:hover::after{transform:scaleX(1)}.unhovered.svelte-137y06u .post-date.svelte-137y06u,.unhovered.svelte-137y06u .post-title.svelte-137y06u,.unhovered.svelte-137y06u .post-description.svelte-137y06u,.unhovered.svelte-137y06u .post-tag.svelte-137y06u,.unhovered.svelte-137y06u .featured-star.svelte-137y06u{color:transparent;opacity:0.5;text-shadow:0 0 2px var(--text-color)}.post-date.svelte-137y06u.svelte-137y06u,.post-title.svelte-137y06u.svelte-137y06u,.post-description.svelte-137y06u.svelte-137y06u,.post-tag.svelte-137y06u.svelte-137y06u,.featured-star.svelte-137y06u.svelte-137y06u{transition:opacity 600ms cubic-bezier(0.37, 0.35, 0.01, 0.99),\n      color 600ms cubic-bezier(0.37, 0.35, 0.01, 0.99),\n      text-shadow 600ms cubic-bezier(0.37, 0.35, 0.01, 0.99)}@media screen and (max-width: 400px){.post-date.svelte-137y06u.svelte-137y06u{font-size:0.85rem}.post-title.svelte-137y06u.svelte-137y06u{font-size:1.2rem;margin-bottom:1rem}.post-description.svelte-137y06u.svelte-137y06u{font-size:1rem}.post-tag.svelte-137y06u.svelte-137y06u{font-size:0.75rem}}',
      map: null
    };
    BlogText = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { post } = $$props;
      let { slug } = $$props;
      let { anyHovered } = $$props;
      let { index } = $$props;
      let hovered = false;
      if ($$props.post === void 0 && $$bindings.post && post !== void 0)
        $$bindings.post(post);
      if ($$props.slug === void 0 && $$bindings.slug && slug !== void 0)
        $$bindings.slug(slug);
      if ($$props.anyHovered === void 0 && $$bindings.anyHovered && anyHovered !== void 0)
        $$bindings.anyHovered(anyHovered);
      if ($$props.index === void 0 && $$bindings.index && index !== void 0)
        $$bindings.index(index);
      $$result.css.add(css$42);
      return `${validate_component(TransitionInView, "TransitionInView").$$render($$result, {}, {}, {
        default: () => `<a class="${"post-container no-underline " + escape(post.featured ? "featured" : "") + " " + escape(anyHovered ? "unhovered" : "") + " svelte-137y06u"}" sveltekit:prefetch${add_attribute("href", slug, 0)}>${post.featured ? `<div class="${"featured-star svelte-137y06u"}">${validate_component(Star, "Star").$$render($$result, {
          width: "20",
          height: "20",
          fill: "var(--accent-color)",
          stroke: "none",
          hovered,
          index
        }, {}, {})}</div>` : ``}
    <div class="${"post-card svelte-137y06u"}"><div class="${"post-info"}"><h2 class="${"post-date svelte-137y06u"}">${escape(dateFormat(post.date))}</h2>
        <h1 class="${"post-title svelte-137y06u"}">${escape(post.title)}</h1>
        <h2 class="${"post-description svelte-137y06u"}">${escape(post.description)}</h2></div>
      <div class="${"post-misc svelte-137y06u"}">${`<p class="${"placeholder"}">\u200B\u200B</p>`}
        <div class="${"post-tags svelte-137y06u"}">${each(post.tags, (tag) => `<span class="${"post-tag svelte-137y06u"}">${escape(tag)}</span>`)}</div></div></div></a>`
      })}`;
    });
    css$32 = {
      code: "section.svelte-1jgk20q{width:100%;margin-bottom:var(--section-margin-bottom)}.width-container.svelte-1jgk20q{width:95%;max-width:1168px;margin-left:auto;margin-right:auto}.posts-grid.svelte-1jgk20q{display:grid;grid-template-columns:repeat(2, 1fr);grid-column-gap:3rem;justify-items:center;grid-row-gap:1rem}@media screen and (max-width: 1000px){.posts-grid.svelte-1jgk20q{grid-template-columns:repeat(2, 1fr)}}@media screen and (max-width: 700px){.posts-grid.svelte-1jgk20q{grid-template-columns:auto;grid-template-rows:repeat(1, 1fr);grid-auto-rows:auto;width:95%}}",
      map: null
    };
    Blog = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let finalPosts;
      let { isMobile } = $$props;
      let { posts } = $$props;
      let anyHovered = false;
      let filteredPosts = posts.filter((d) => !d.metadata.draft && !d.metadata.archived).sort((a, b) => {
        if (b.metadata.featured && !a.metadata.featured)
          return 1;
        if (!b.metadata.featured && a.metadata.featured)
          return -1;
        if (Date.parse(b.metadata.date) > Date.parse(a.metadata.date))
          return 1;
        if (Date.parse(b.metadata.date) < Date.parse(a.metadata.date))
          return -1;
      });
      let element;
      let intersecting;
      if ($$props.isMobile === void 0 && $$bindings.isMobile && isMobile !== void 0)
        $$bindings.isMobile(isMobile);
      if ($$props.posts === void 0 && $$bindings.posts && posts !== void 0)
        $$bindings.posts(posts);
      $$result.css.add(css$32);
      let $$settled;
      let $$rendered;
      do {
        $$settled = true;
        finalPosts = isMobile ? filteredPosts.filter((d) => d.metadata.featured) : filteredPosts;
        $$rendered = `${validate_component(IntersectionObserver_1, "IntersectionObserver").$$render($$result, { element, intersecting }, {
          intersecting: ($$value) => {
            intersecting = $$value;
            $$settled = false;
          }
        }, {
          default: () => `<section id="${"blog"}" class="${"svelte-1jgk20q"}"${add_attribute("this", element, 0)}><div class="${"sticky-top"}"><div class="${"width-container svelte-1jgk20q"}"><div class="${"see-all-flex"}"><h1 class="${"page-overline"}">
            03. Selected blog posts
          </h1>
          <a class="${"page-overline padding-bottom see-all"}" sveltekit:prefetch href="${"/post"}">See all posts \u2197</a></div>
        ${validate_component(SectionTitle, "SectionTitle").$$render($$result, { intersecting, element: "#posts-title" }, {}, {
            default: () => `<h1 id="${"posts-title"}" class="${"section-title overflow-hidden"}">Posts I\u2019ve
            <span class="${"gradient-accented bolded"}">written</span>\u200B
          </h1>`
          })}</div></div>
    <div class="${"posts-grid width-container svelte-1jgk20q"}">${each(finalPosts, (post, index) => `${validate_component(BlogText, "BlogSection").$$render($$result, {
            post: post.metadata,
            slug: post.path.replace(/\.[^/.]+$/, ""),
            index,
            anyHovered
          }, {
            anyHovered: ($$value) => {
              anyHovered = $$value;
              $$settled = false;
            }
          }, {})}`)}</div></section>`
        })}`;
      } while (!$$settled);
      return $$rendered;
    });
    css$22 = {
      code: "section.svelte-9nxrt5{width:95%;max-width:1168px;margin:auto;margin-bottom:var(--section-margin-bottom)}",
      map: null
    };
    Awards = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let filteredAwards;
      let { isMobile } = $$props;
      let { awards } = $$props;
      let element;
      let intersecting;
      awards.sort((a, b) => {
        if (Date.parse(b.metadata.date) > Date.parse(a.metadata.date))
          return 1;
        if (Date.parse(b.metadata.date) < Date.parse(a.metadata.date))
          return -1;
      });
      let anyHovered;
      if ($$props.isMobile === void 0 && $$bindings.isMobile && isMobile !== void 0)
        $$bindings.isMobile(isMobile);
      if ($$props.awards === void 0 && $$bindings.awards && awards !== void 0)
        $$bindings.awards(awards);
      $$result.css.add(css$22);
      let $$settled;
      let $$rendered;
      do {
        $$settled = true;
        filteredAwards = isMobile ? awards.filter((d) => d.metadata.featured) : awards;
        $$rendered = `${validate_component(IntersectionObserver_1, "IntersectionObserver").$$render($$result, { element, intersecting }, {
          intersecting: ($$value) => {
            intersecting = $$value;
            $$settled = false;
          }
        }, {
          default: () => `<section id="${"awards"}" class="${"svelte-9nxrt5"}"${add_attribute("this", element, 0)}><div class="${"sticky-top"}"><div class="${"see-all-flex"}"><h1 class="${"page-overline"}">
          02. Selected awards
        </h1>
        <a class="${"page-overline padding-bottom see-all"}" sveltekit:prefetch href="${"/award"}">See all awards \u2197</a></div>
      ${validate_component(SectionTitle, "SectionTitle").$$render($$result, { intersecting, element: "#awards-title" }, {}, {
            default: () => `<h1 id="${"awards-title"}" class="${"section-title overflow-hidden"}">Awards I\u2019ve
          <span class="${"gradient-accented bolded "}">won</span></h1>`
          })}</div>

    <div class="${"awards-grid"}">${each(filteredAwards, (award, index) => `${validate_component(Award, "AwardSection").$$render($$result, {
            award: award.metadata,
            slug: award.path.replace(/\.[^/.]+$/, ""),
            anyHovered
          }, {
            anyHovered: ($$value) => {
              anyHovered = $$value;
              $$settled = false;
            }
          }, {})}`)}</div></section>`
        })}`;
      } while (!$$settled);
      return $$rendered;
    });
    css$12 = {
      code: ".circle.svelte-hfj58p{position:sticky;right:6px;bottom:6px;padding:1rem;z-index:99;overflow:hidden;width:min-content;margin-left:auto;margin-right:6px;transform:translateZ(0);transition:all 600ms ease;cursor:pointer}.circle.svelte-hfj58p:hover{transform:scale3d(1.05, 1.05, 1.05)}img.svelte-hfj58p{position:absolute;border-radius:50%;width:100px;height:100px;object-fit:contain;transform:scale(0.795);z-index:100}text.svelte-hfj58p{fill:var(--text-color);font-family:var(--font-serif);font-weight:200;font-size:63px;letter-spacing:-1px;text-shadow:1px 0px 0px var(--pure-background-color);user-select:none}path.svelte-hfj58p{fill:rgba(var(--accent-color-rgb), 0.2)}.circleText.svelte-hfj58p{width:100px;height:100px;overflow:visible;transform-origin:center center;stroke-opacity:0.75;animation:svelte-hfj58p-rotate 25s linear infinite}@keyframes svelte-hfj58p-rotate{from{transform:rotate(0deg)}to{transform:rotate(360deg)}}@media screen and (max-width: 560px){.circle.svelte-hfj58p{display:none}}",
      map: null
    };
    CircleText = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let text;
      $$result.css.add(css$12);
      text = "\u{1F44B} Connor \u{1F440} Rothschild \u{1F920} Connor \u{1F525} Rothschild";
      return `<div class="${"circle svelte-hfj58p"}" sveltekit:prefetch>${``}
  <svg class="${"circleText svelte-hfj58p"}" viewBox="${"0 0 500 500"}" data-duration="${"5"}"><path id="${"circle"}" fill="${"none"}" data-duration="${"5"}" d="${"M50,250c0-110.5,89.5-200,200-200s200,89.5,200,200s-89.5,200-200,200S50,360.5,50,250"}" class="${"svelte-hfj58p"}"></path><text dy="${"-25"}" class="${"svelte-hfj58p"}"><textPath xlink:href="${"#circle"}">${escape(text)}</textPath></text></svg>
</div>`;
    });
    css16 = {
      code: "main.svelte-anfs99{width:100%;margin:0 auto;display:flex;flex-direction:column;justify-content:center;background-color:var(--primary-color);z-index:100}",
      map: null
    };
    Routes = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let isMobile;
      let { projects } = $$props;
      let { posts } = $$props;
      let { awards } = $$props;
      let pageWidth;
      if ($$props.projects === void 0 && $$bindings.projects && projects !== void 0)
        $$bindings.projects(projects);
      if ($$props.posts === void 0 && $$bindings.posts && posts !== void 0)
        $$bindings.posts(posts);
      if ($$props.awards === void 0 && $$bindings.awards && awards !== void 0)
        $$bindings.awards(awards);
      $$result.css.add(css16);
      isMobile = pageWidth < 768;
      return `
<main id="${"home"}" class="${"svelte-anfs99"}">${validate_component(Hero, "Hero").$$render($$result, {}, {}, {})}
  
  ${validate_component(Projects, "Projects").$$render($$result, { projects }, {}, {})}
  ${validate_component(Awards, "Awards").$$render($$result, { awards, isMobile }, {}, {})}
  ${validate_component(Blog, "Blog").$$render($$result, { posts, isMobile }, {}, {})}
  ${validate_component(CircleText, "Circle").$$render($$result, {}, {}, {})}
</main>`;
    });
  }
});

// .svelte-kit/output/server/chunks/index-1d23e8c8.js
var index_1d23e8c8_exports = {};
__export(index_1d23e8c8_exports, {
  default: () => Experience,
  load: () => load3
});
async function load3({ fetch: fetch2 }) {
  const res = await fetch2(`/experience.json`);
  const jobs = await res.json();
  return { props: { jobs } };
}
var import_bowser60, css$13, Job, css17, title, description, Experience;
var init_index_1d23e8c8 = __esm({
  ".svelte-kit/output/server/chunks/index-1d23e8c8.js"() {
    init_shims();
    init_app_9f378dda();
    init_BackTo_d882ed88();
    init_TransitionInView_c90c9121();
    init_store_8bf23024();
    init_global_130d3fe3();
    import_bowser60 = __toModule(require_es5());
    init_IntersectionObserver_4cd4a541();
    css$13 = {
      code: ".job-container.svelte-1unm16i.svelte-1unm16i{padding:2rem 0;border-bottom:1px dashed var(--accent-color);display:flex;align-items:center;justify-content:space-between;cursor:pointer}h2.svelte-1unm16i.svelte-1unm16i{font-size:44px;font-weight:200;text-transform:uppercase;letter-spacing:0.64px;transition:all 300ms linear}@media screen and (max-width: 1168px){.preview.svelte-1unm16i h2.svelte-1unm16i{font-size:2.85vw}}h3.svelte-1unm16i.svelte-1unm16i{color:var(--text-color);font-size:34px;margin-bottom:6px;transition:all 300ms ease}.job-image.svelte-1unm16i.svelte-1unm16i{margin-left:16px;width:40px;transition:width 300ms ease}.job-container.hovered.svelte-1unm16i.svelte-1unm16i{cursor:pointer;border-bottom:1px solid var(--accent-color)}.job-container.hovered.svelte-1unm16i h2.svelte-1unm16i{color:var(--accent-color);text-decoration:none !important;letter-spacing:1px}.job-container.hovered.svelte-1unm16i h3.svelte-1unm16i{color:var(--accent-color);text-decoration:none;transform:translateX(5px)}.flex-container.svelte-1unm16i.svelte-1unm16i{display:flex;width:100%;justify-content:space-between}@keyframes svelte-1unm16i-right{0%{transform:translateX(0px)}50%{transform:translateX(5px)}100%{transform:translateX(0px)}}@media(max-width: 768px){h2.svelte-1unm16i.svelte-1unm16i{font-size:1.75rem !important}.job-container.svelte-1unm16i.svelte-1unm16i{padding:1.5rem 0}.job-image.svelte-1unm16i.svelte-1unm16i{width:28px;margin-left:10px}}@media(max-width: 400px){h2.svelte-1unm16i.svelte-1unm16i{font-size:1.5rem !important}.job-image.svelte-1unm16i.svelte-1unm16i{width:22px}}",
      map: null
    };
    Job = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { job } = $$props;
      let { slug } = $$props;
      let { preview = false } = $$props;
      let { hoveredFromChild = "Moksha Data" } = $$props;
      if ($$props.job === void 0 && $$bindings.job && job !== void 0)
        $$bindings.job(job);
      if ($$props.slug === void 0 && $$bindings.slug && slug !== void 0)
        $$bindings.slug(slug);
      if ($$props.preview === void 0 && $$bindings.preview && preview !== void 0)
        $$bindings.preview(preview);
      if ($$props.hoveredFromChild === void 0 && $$bindings.hoveredFromChild && hoveredFromChild !== void 0)
        $$bindings.hoveredFromChild(hoveredFromChild);
      $$result.css.add(css$13);
      return `${validate_component(TransitionInView, "TransitionInView").$$render($$result, {}, {}, {
        default: () => `<a class="${[
          "job-container " + escape(hoveredFromChild == job.name ? "hovered" : "") + " svelte-1unm16i",
          preview ? "preview" : ""
        ].join(" ").trim()}" sveltekit:prefetch${add_attribute("href", slug, 0)}><div style="${"display: flex; place-items: center;"}" class="${escape(null_to_empty(preview ? "flex-container" : "")) + " svelte-1unm16i"}"><h2 class="${"svelte-1unm16i"}">${escape(job.name)}</h2>
      <img loading="${"lazy"}" src="${"/images/jobs/" + escape(job.imageUrl) + ".svg"}" class="${"job-image " + escape("") + " svelte-1unm16i"}" alt="${"logo"}"></div>
    ${!preview ? `<h3 class="${"svelte-1unm16i"}">\u2192</h3>` : ``}</a>`
      })}`;
    });
    css17 = {
      code: "main.svelte-1p4srcu{max-width:860px;margin:0 auto;padding:1rem;width:95%;margin-top:var(--nav-height);margin-bottom:4rem}",
      map: null
    };
    title = "Experience | Connor Rothschild";
    description = "Some of my work experience.";
    Experience = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $seo, $$unsubscribe_seo;
      $$unsubscribe_seo = subscribe(seo, (value) => $seo = value);
      let { jobs } = $$props;
      const sortedJobs = jobs.sort((a, b) => a.metadata.order - b.metadata.order);
      set_store_value(seo, $seo = {
        title,
        description,
        image: `https://og-image-eight-eta.vercel.app/${title}.png?subtitle=${description}&theme=light&md=true&hasImage=true`
      }, $seo);
      if ($$props.jobs === void 0 && $$bindings.jobs && jobs !== void 0)
        $$bindings.jobs(jobs);
      $$result.css.add(css17);
      $$unsubscribe_seo();
      return `${validate_component(Transition, "Transition").$$render($$result, {}, {}, {})}
<main class="${"svelte-1p4srcu"}">
  ${validate_component(BackTo, "BackTo").$$render($$result, {
        href: "/",
        text: "Home",
        classes: "page-overline transition-subtitle centered"
      }, {}, {})}
  <h1 class="${"page-title transition-title overflow-hidden"}">Work
    </h1>

  <div class="${"transition-content"}">${each(sortedJobs, (job) => `${validate_component(Job, "JobSection").$$render($$result, {
        job: job.metadata,
        slug: job.path.replace(/\.[^/.]+$/, ""),
        preview: false,
        hoveredFromChild: null
      }, {}, {})}`)}</div>
</main>`;
    });
  }
});

// .svelte-kit/output/server/chunks/index-d2625cbc.js
var index_d2625cbc_exports = {};
__export(index_d2625cbc_exports, {
  default: () => Project,
  load: () => load4
});
async function load4({ fetch: fetch2 }) {
  const res = await fetch2(`/projects.json`);
  const projects = await res.json();
  return { props: { projects } };
}
var import_bowser61, css$14, Project$1, css18, title2, description2, Project;
var init_index_d2625cbc = __esm({
  ".svelte-kit/output/server/chunks/index-d2625cbc.js"() {
    init_shims();
    init_app_9f378dda();
    init_BackTo_d882ed88();
    import_bowser61 = __toModule(require_es5());
    init_TransitionInView_c90c9121();
    init_store_8bf23024();
    init_global_130d3fe3();
    init_IntersectionObserver_4cd4a541();
    css$14 = {
      code: ".project-card.svelte-16vzxrt{position:relative;border-radius:5px;box-shadow:1px 1px 4px var(--box-shadow-color);height:100%;height:100%;cursor:pointer;display:block}.project-image.svelte-16vzxrt{width:100%;height:100%;min-height:200px;object-fit:cover;border-radius:5px;filter:blur(0);z-index:0}.hovered-gradient.svelte-16vzxrt{position:absolute;background-image:linear-gradient(\n      to bottom,\n      rgba(0, 0, 0, 0),\n      rgba(0, 0, 0, 1)\n    );width:100%;height:100%;background-size:cover;pointer-events:none;border-radius:5px;z-index:1}.project-text.svelte-16vzxrt{position:absolute;bottom:0;left:0;pointer-events:none;padding:1.5rem;z-index:3}.title.svelte-16vzxrt,.description.svelte-16vzxrt{color:white}.title.svelte-16vzxrt{font-size:1.5rem;line-height:1.15;text-shadow:1px 1px 6px black}.description.svelte-16vzxrt{font-family:var(--font-sans);font-size:1rem;line-height:1.2;font-weight:300;margin-top:12px;letter-spacing:0.64px;text-shadow:1px 1px 6px black}@media screen and (max-width: 600px){.hovered-gradient.svelte-16vzxrt{background:linear-gradient(to bottom, rgba(0, 0, 0, 0), rgb(0, 0, 0))}.project-text.svelte-16vzxrt{padding:1rem}.title.svelte-16vzxrt{font-size:1.2rem}.description.svelte-16vzxrt{font-size:0.8rem;letter-spacing:0.3px;margin-top:6px}}",
      map: null
    };
    Project$1 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { project } = $$props;
      let { slug } = $$props;
      if ($$props.project === void 0 && $$bindings.project && project !== void 0)
        $$bindings.project(project);
      if ($$props.slug === void 0 && $$bindings.slug && slug !== void 0)
        $$bindings.slug(slug);
      $$result.css.add(css$14);
      return `${validate_component(TransitionInView, "TransitionInView").$$render($$result, {}, {}, {
        default: () => `<a class="${"project-card no-underline svelte-16vzxrt"}"${add_attribute("href", slug, 0)} sveltekit:prefetch>${``}
    <img loading="${"lazy"}" src="${"/images/project/" + escape(project.image)}" alt="${"Project image for " + escape(project.title)}" class="${["project-image svelte-16vzxrt", ""].join(" ").trim()}">
    ${``}</a>`
      })}`;
    });
    css18 = {
      code: "main.svelte-6zfycw{max-width:860px;margin:0 auto;padding:1rem;width:95%;margin-bottom:4rem;margin-top:var(--nav-height)}.projects-container.svelte-6zfycw{display:grid;grid-template-columns:repeat(2, 1fr);grid-gap:10px}@media screen and (max-width: 700px){.projects-container.svelte-6zfycw{grid-template-columns:auto;grid-template-rows:repeat(1, 1fr)}}",
      map: null
    };
    title2 = "Projects | Connor Rothschild";
    description2 = "Some of my projects.";
    Project = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $seo, $$unsubscribe_seo;
      $$unsubscribe_seo = subscribe(seo, (value) => $seo = value);
      let { projects } = $$props;
      let filteredProjects = projects.filter((d) => d.metadata.archived != true).sort((a, b) => {
        if (b.metadata.featured && !a.metadata.featured)
          return 1;
        if (!b.metadata.featured && a.metadata.featured)
          return -1;
        if (Date.parse(b.metadata.date) > Date.parse(a.metadata.date))
          return 1;
        if (Date.parse(b.metadata.date) < Date.parse(a.metadata.date))
          return -1;
      });
      set_store_value(seo, $seo = {
        title: title2,
        description: description2,
        image: `https://og-image-eight-eta.vercel.app/${title2}.png?subtitle=${description2}&theme=light&md=true&hasImage=true`
      }, $seo);
      if ($$props.projects === void 0 && $$bindings.projects && projects !== void 0)
        $$bindings.projects(projects);
      $$result.css.add(css18);
      $$unsubscribe_seo();
      return `${validate_component(Transition, "Transition").$$render($$result, {}, {}, {})}
<main class="${"svelte-6zfycw"}">
  ${validate_component(BackTo, "BackTo").$$render($$result, {
        href: "/",
        text: "Home",
        classes: "page-overline transition-subtitle centered"
      }, {}, {})}
  <h1 class="${"page-title transition-title overflow-hidden"}">Projects
    </h1>

  <div class="${"projects-container transition-content svelte-6zfycw"}">${each(filteredProjects, (project) => `${validate_component(Project$1, "ProjectSection").$$render($$result, {
        project: project.metadata,
        slug: project.path.replace(/\.[^/.]+$/, "")
      }, {}, {})}`)}</div>
</main>`;
    });
  }
});

// .svelte-kit/output/server/chunks/index-ad8386c5.js
var index_ad8386c5_exports = {};
__export(index_ad8386c5_exports, {
  default: () => About
});
var import_bowser62, css19, About;
var init_index_ad8386c5 = __esm({
  ".svelte-kit/output/server/chunks/index-ad8386c5.js"() {
    init_shims();
    init_app_9f378dda();
    init_BackTo_d882ed88();
    init_global_130d3fe3();
    import_bowser62 = __toModule(require_es5());
    css19 = {
      code: "main.svelte-1lfi9v6.svelte-1lfi9v6{max-width:868px;width:95%;margin:0 auto;margin-bottom:4rem;margin-top:var(--nav-height)}p.svelte-1lfi9v6.svelte-1lfi9v6{margin-bottom:1.15rem;line-height:1.5}.conversation-container.svelte-1lfi9v6.svelte-1lfi9v6{display:flex;flex-wrap:wrap;width:100%;justify-content:space-between}.topic.svelte-1lfi9v6.svelte-1lfi9v6{flex:1 1 calc(50% - 1rem);padding:1rem 0;text-align:left}.topic-title.svelte-1lfi9v6.svelte-1lfi9v6{margin-bottom:1rem;font-size:1.75rem;font-weight:300;letter-spacing:0.025rem}li.svelte-1lfi9v6.svelte-1lfi9v6{list-style-type:none;padding-left:0;margin-left:0}.more.svelte-1lfi9v6.svelte-1lfi9v6{border-left:5px solid var(--accent-color);padding-left:1rem}.more.svelte-1lfi9v6 p.svelte-1lfi9v6{line-height:1.35}.else.svelte-1lfi9v6.svelte-1lfi9v6{transition:opacity 300ms ease}.else.showMore.svelte-1lfi9v6.svelte-1lfi9v6{opacity:0.2}.interested.svelte-1lfi9v6.svelte-1lfi9v6{cursor:pointer;border-bottom:1px solid var(--accent-color);padding-bottom:2px;user-select:none}.topic.svelte-1lfi9v6.svelte-1lfi9v6:nth-of-type(even){text-align:right}.abbr.svelte-1lfi9v6.svelte-1lfi9v6{position:relative;border-bottom:1px solid rgba(var(--text-color-rgb), 0.5);cursor:help}.abbr.svelte-1lfi9v6.svelte-1lfi9v6::after{position:absolute;bottom:100%;left:0;display:block;padding:0.75rem 1rem;margin-bottom:0.5rem;border-radius:5px;background:var(--pure-text-color);color:var(--pure-background-color);content:attr(desc);width:320px;line-height:1.25;font-size:1.1rem;font-weight:200;letter-spacing:-0.025rem;opacity:0;pointer-events:none;transition:opacity 0.3s ease-in-out;box-shadow:1px 1px 5px var(--box-shadow-color)}.abbr.svelte-1lfi9v6.svelte-1lfi9v6:hover::after{opacity:1}@media screen and (max-width: 375px){.abbr.svelte-1lfi9v6.svelte-1lfi9v6::after{width:260px}}@media screen and (max-width: 768px){.conversation-container.svelte-1lfi9v6.svelte-1lfi9v6{flex-direction:column}.topic-title.svelte-1lfi9v6.svelte-1lfi9v6{font-weight:400}}",
      map: null
    };
    About = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      $$result.css.add(css19);
      return `${validate_component(Transition, "Transition").$$render($$result, {}, {}, {})}
<main class="${"svelte-1lfi9v6"}">${validate_component(BackTo, "BackTo").$$render($$result, {
        href: "/",
        text: "Home",
        classes: "page-overline transition-subtitle centered"
      }, {}, {})}
  <h1 class="${"page-title transition-title overflow-hidden"}">About</h1>
  <div class="${"transition-content"}"><p class="${"svelte-1lfi9v6"}">Hi! I&#39;m Connor. <span class="${["else svelte-1lfi9v6", ""].join(" ").trim()}">I&#39;ll spare you the personal details about my life, unless</span>
      <span class="${"interested svelte-1lfi9v6"}">${escape("you're")} really interested${escape(".")}</span></p>

    ${``}
    <div class="${["else svelte-1lfi9v6", ""].join(" ").trim()}"><p class="${"svelte-1lfi9v6"}">
        Let me use your brief time on my website to say: I love learning from and
        teaching passionate people, and hope that this site can be an outlet for
        that.
      </p>

      <p class="${"svelte-1lfi9v6"}"><span class="${"abbr svelte-1lfi9v6"}" desc="${"I know everyone says \u201Cplease reach out\u201D on their website, but I actually want you to \u{1F642}"}">Please reach out</span> if you&#39;re interested in talking about design, business strategy, data visualization,
        or anything else you think I would be interested in. Need a conversation
        starter? \u{1F447}
      </p>

      <div class="${"conversation-container svelte-1lfi9v6"}"><div class="${"topic svelte-1lfi9v6"}"><h1 class="${"topic-title svelte-1lfi9v6"}">Things I&#39;m good at</h1>
          <ul><li class="${"svelte-1lfi9v6"}">R</li>
            <li class="${"svelte-1lfi9v6"}">Vue</li>
            <li class="${"svelte-1lfi9v6"}">D3.js</li>
            <li class="${"svelte-1lfi9v6"}">Svelte</li></ul></div>
        <div class="${"topic svelte-1lfi9v6"}"><h1 class="${"topic-title svelte-1lfi9v6"}">Things I&#39;m learning</h1>
          <ul><li class="${"svelte-1lfi9v6"}">Three.js</li>
            <li class="${"svelte-1lfi9v6"}">Canvas</li>
            <li class="${"svelte-1lfi9v6"}">Figma</li>
            <li class="${"svelte-1lfi9v6"}">Web3</li></ul></div>
        <div class="${"topic svelte-1lfi9v6"}"><h1 class="${"topic-title svelte-1lfi9v6"}">Ways I can help</h1>
          <ul><li class="${"svelte-1lfi9v6"}">Early career advice (journalism, government)</li>
            <li class="${"svelte-1lfi9v6"}">Starting your first personal website</li>
            <li class="${"svelte-1lfi9v6"}">Technical book recommendations</li>
            <li class="${"svelte-1lfi9v6"}">Feedback on dataviz</li></ul></div>
        <div class="${"topic svelte-1lfi9v6"}"><h1 class="${"topic-title svelte-1lfi9v6"}">Miscellaneous</h1>
          <ul><li class="${"svelte-1lfi9v6"}"><a target="${"_blank"}" rel="${"noopener noreferrer"}" href="${"https://open.spotify.com/user/12127359561?si=d02b4e64af7f420d"}">Music</a></li>
            <li class="${"svelte-1lfi9v6"}"><a target="${"_blank"}" rel="${"noopener noreferrer"}" href="${"https://www.are.na/connor-rothschild"}">Anything here</a></li>
            <li class="${"svelte-1lfi9v6"}">Married at First Sight</li></ul></div></div></div></div>
</main>`;
    });
  }
});

// .svelte-kit/output/server/chunks/index-11158698.js
var index_11158698_exports = {};
__export(index_11158698_exports, {
  default: () => Award2,
  load: () => load5
});
async function load5({ fetch: fetch2 }) {
  const res = await fetch2(`/awards.json`);
  const awards = await res.json();
  return { props: { awards } };
}
var import_bowser63, css20, title3, description3, Award2;
var init_index_11158698 = __esm({
  ".svelte-kit/output/server/chunks/index-11158698.js"() {
    init_shims();
    init_app_9f378dda();
    init_Award_42d31980();
    init_BackTo_d882ed88();
    init_store_8bf23024();
    init_TransitionInView_c90c9121();
    init_IntersectionObserver_4cd4a541();
    init_global_130d3fe3();
    import_bowser63 = __toModule(require_es5());
    css20 = {
      code: "main.svelte-10mid94{max-width:860px;margin:0 auto;padding:1rem;width:95%;margin-bottom:4rem;margin-top:var(--nav-height)}",
      map: null
    };
    title3 = "Awards | Connor Rothschild";
    description3 = "Some of my awards.";
    Award2 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $seo, $$unsubscribe_seo;
      $$unsubscribe_seo = subscribe(seo, (value) => $seo = value);
      let { awards } = $$props;
      awards.sort((a, b) => {
        if (Date.parse(b.metadata.date) > Date.parse(a.metadata.date))
          return 1;
        if (Date.parse(b.metadata.date) < Date.parse(a.metadata.date))
          return -1;
      });
      let anyHovered;
      set_store_value(seo, $seo = {
        title: title3,
        description: description3,
        image: `https://og-image-eight-eta.vercel.app/${title3}.png?subtitle=${description3}&theme=light&md=true&hasImage=true`
      }, $seo);
      if ($$props.awards === void 0 && $$bindings.awards && awards !== void 0)
        $$bindings.awards(awards);
      $$result.css.add(css20);
      let $$settled;
      let $$rendered;
      do {
        $$settled = true;
        $$rendered = `${validate_component(Transition, "Transition").$$render($$result, {}, {}, {})}
<main class="${"svelte-10mid94"}">
  ${validate_component(BackTo, "BackTo").$$render($$result, {
          href: "/",
          text: "Home",
          classes: "page-overline transition-subtitle centered"
        }, {}, {})}
  <h1 class="${"page-title transition-title overflow-hidden"}">Awards
    </h1>

  <div class="${"awards-grid transition-content"}">${each(awards, (award) => `${validate_component(Award, "AwardSection").$$render($$result, {
          award: award.metadata,
          slug: award.path.replace(/\.[^/.]+$/, ""),
          anyHovered
        }, {
          anyHovered: ($$value) => {
            anyHovered = $$value;
            $$settled = false;
          }
        }, {})}`)}</div>
</main>`;
      } while (!$$settled);
      $$unsubscribe_seo();
      return $$rendered;
    });
  }
});

// .svelte-kit/output/server/chunks/index-1de0c6e9.js
var index_1de0c6e9_exports = {};
__export(index_1de0c6e9_exports, {
  default: () => Post,
  load: () => load6
});
function ascending(a, b) {
  return a == null || b == null ? NaN : a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
}
function bisector(f) {
  let delta = f;
  let compare1 = f;
  let compare2 = f;
  if (f.length === 1) {
    delta = (d, x) => f(d) - x;
    compare1 = ascending;
    compare2 = (d, x) => ascending(f(d), x);
  }
  function left(a, x, lo = 0, hi = a.length) {
    if (lo < hi) {
      if (compare1(x, x) !== 0)
        return hi;
      do {
        const mid = lo + hi >>> 1;
        if (compare2(a[mid], x) < 0)
          lo = mid + 1;
        else
          hi = mid;
      } while (lo < hi);
    }
    return lo;
  }
  function right(a, x, lo = 0, hi = a.length) {
    if (lo < hi) {
      if (compare1(x, x) !== 0)
        return hi;
      do {
        const mid = lo + hi >>> 1;
        if (compare2(a[mid], x) <= 0)
          lo = mid + 1;
        else
          hi = mid;
      } while (lo < hi);
    }
    return lo;
  }
  function center(a, x, lo = 0, hi = a.length) {
    const i = left(a, x, lo, hi - 1);
    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;
  }
  return { left, center, right };
}
function number$1(x) {
  return x === null ? NaN : +x;
}
function ticks(start, stop, count) {
  var reverse, i = -1, n, ticks2, step;
  stop = +stop, start = +start, count = +count;
  if (start === stop && count > 0)
    return [start];
  if (reverse = stop < start)
    n = start, start = stop, stop = n;
  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step))
    return [];
  if (step > 0) {
    let r0 = Math.round(start / step), r1 = Math.round(stop / step);
    if (r0 * step < start)
      ++r0;
    if (r1 * step > stop)
      --r1;
    ticks2 = new Array(n = r1 - r0 + 1);
    while (++i < n)
      ticks2[i] = (r0 + i) * step;
  } else {
    step = -step;
    let r0 = Math.round(start * step), r1 = Math.round(stop * step);
    if (r0 / step < start)
      ++r0;
    if (r1 / step > stop)
      --r1;
    ticks2 = new Array(n = r1 - r0 + 1);
    while (++i < n)
      ticks2[i] = (r0 + i) / step;
  }
  if (reverse)
    ticks2.reverse();
  return ticks2;
}
function tickIncrement(start, stop, count) {
  var step = (stop - start) / Math.max(0, count), power = Math.floor(Math.log(step) / Math.LN10), error2 = step / Math.pow(10, power);
  return power >= 0 ? (error2 >= e10 ? 10 : error2 >= e5 ? 5 : error2 >= e2 ? 2 : 1) * Math.pow(10, power) : -Math.pow(10, -power) / (error2 >= e10 ? 10 : error2 >= e5 ? 5 : error2 >= e2 ? 2 : 1);
}
function tickStep(start, stop, count) {
  var step0 = Math.abs(stop - start) / Math.max(0, count), step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)), error2 = step0 / step1;
  if (error2 >= e10)
    step1 *= 10;
  else if (error2 >= e5)
    step1 *= 5;
  else if (error2 >= e2)
    step1 *= 2;
  return stop < start ? -step1 : step1;
}
function initRange(domain, range) {
  switch (arguments.length) {
    case 0:
      break;
    case 1:
      this.range(domain);
      break;
    default:
      this.range(range).domain(domain);
      break;
  }
  return this;
}
function define2(constructor, factory, prototype) {
  constructor.prototype = factory.prototype = prototype;
  prototype.constructor = constructor;
}
function extend(parent, definition) {
  var prototype = Object.create(parent.prototype);
  for (var key in definition)
    prototype[key] = definition[key];
  return prototype;
}
function Color() {
}
function color_formatHex() {
  return this.rgb().formatHex();
}
function color_formatHsl() {
  return hslConvert(this).formatHsl();
}
function color_formatRgb() {
  return this.rgb().formatRgb();
}
function color(format22) {
  var m, l;
  format22 = (format22 + "").trim().toLowerCase();
  return (m = reHex.exec(format22)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) : l === 3 ? new Rgb(m >> 8 & 15 | m >> 4 & 240, m >> 4 & 15 | m & 240, (m & 15) << 4 | m & 15, 1) : l === 8 ? rgba(m >> 24 & 255, m >> 16 & 255, m >> 8 & 255, (m & 255) / 255) : l === 4 ? rgba(m >> 12 & 15 | m >> 8 & 240, m >> 8 & 15 | m >> 4 & 240, m >> 4 & 15 | m & 240, ((m & 15) << 4 | m & 15) / 255) : null) : (m = reRgbInteger.exec(format22)) ? new Rgb(m[1], m[2], m[3], 1) : (m = reRgbPercent.exec(format22)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) : (m = reRgbaInteger.exec(format22)) ? rgba(m[1], m[2], m[3], m[4]) : (m = reRgbaPercent.exec(format22)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) : (m = reHslPercent.exec(format22)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) : (m = reHslaPercent.exec(format22)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) : named.hasOwnProperty(format22) ? rgbn(named[format22]) : format22 === "transparent" ? new Rgb(NaN, NaN, NaN, 0) : null;
}
function rgbn(n) {
  return new Rgb(n >> 16 & 255, n >> 8 & 255, n & 255, 1);
}
function rgba(r, g, b, a) {
  if (a <= 0)
    r = g = b = NaN;
  return new Rgb(r, g, b, a);
}
function rgbConvert(o) {
  if (!(o instanceof Color))
    o = color(o);
  if (!o)
    return new Rgb();
  o = o.rgb();
  return new Rgb(o.r, o.g, o.b, o.opacity);
}
function rgb$1(r, g, b, opacity) {
  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);
}
function Rgb(r, g, b, opacity) {
  this.r = +r;
  this.g = +g;
  this.b = +b;
  this.opacity = +opacity;
}
function rgb_formatHex() {
  return "#" + hex(this.r) + hex(this.g) + hex(this.b);
}
function rgb_formatRgb() {
  var a = this.opacity;
  a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));
  return (a === 1 ? "rgb(" : "rgba(") + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + ", " + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + ", " + Math.max(0, Math.min(255, Math.round(this.b) || 0)) + (a === 1 ? ")" : ", " + a + ")");
}
function hex(value) {
  value = Math.max(0, Math.min(255, Math.round(value) || 0));
  return (value < 16 ? "0" : "") + value.toString(16);
}
function hsla(h, s2, l, a) {
  if (a <= 0)
    h = s2 = l = NaN;
  else if (l <= 0 || l >= 1)
    h = s2 = NaN;
  else if (s2 <= 0)
    h = NaN;
  return new Hsl(h, s2, l, a);
}
function hslConvert(o) {
  if (o instanceof Hsl)
    return new Hsl(o.h, o.s, o.l, o.opacity);
  if (!(o instanceof Color))
    o = color(o);
  if (!o)
    return new Hsl();
  if (o instanceof Hsl)
    return o;
  o = o.rgb();
  var r = o.r / 255, g = o.g / 255, b = o.b / 255, min = Math.min(r, g, b), max = Math.max(r, g, b), h = NaN, s2 = max - min, l = (max + min) / 2;
  if (s2) {
    if (r === max)
      h = (g - b) / s2 + (g < b) * 6;
    else if (g === max)
      h = (b - r) / s2 + 2;
    else
      h = (r - g) / s2 + 4;
    s2 /= l < 0.5 ? max + min : 2 - max - min;
    h *= 60;
  } else {
    s2 = l > 0 && l < 1 ? 0 : h;
  }
  return new Hsl(h, s2, l, o.opacity);
}
function hsl(h, s2, l, opacity) {
  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s2, l, opacity == null ? 1 : opacity);
}
function Hsl(h, s2, l, opacity) {
  this.h = +h;
  this.s = +s2;
  this.l = +l;
  this.opacity = +opacity;
}
function hsl2rgb(h, m1, m2) {
  return (h < 60 ? m1 + (m2 - m1) * h / 60 : h < 180 ? m2 : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60 : m1) * 255;
}
function linear$1(a, d) {
  return function(t) {
    return a + t * d;
  };
}
function exponential(a, b, y) {
  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {
    return Math.pow(a + t * b, y);
  };
}
function gamma(y) {
  return (y = +y) === 1 ? nogamma : function(a, b) {
    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);
  };
}
function nogamma(a, b) {
  var d = b - a;
  return d ? linear$1(a, d) : constant(isNaN(a) ? b : a);
}
function numberArray(a, b) {
  if (!b)
    b = [];
  var n = a ? Math.min(b.length, a.length) : 0, c = b.slice(), i;
  return function(t) {
    for (i = 0; i < n; ++i)
      c[i] = a[i] * (1 - t) + b[i] * t;
    return c;
  };
}
function isNumberArray(x) {
  return ArrayBuffer.isView(x) && !(x instanceof DataView);
}
function genericArray(a, b) {
  var nb = b ? b.length : 0, na = a ? Math.min(nb, a.length) : 0, x = new Array(na), c = new Array(nb), i;
  for (i = 0; i < na; ++i)
    x[i] = interpolate(a[i], b[i]);
  for (; i < nb; ++i)
    c[i] = b[i];
  return function(t) {
    for (i = 0; i < na; ++i)
      c[i] = x[i](t);
    return c;
  };
}
function date(a, b) {
  var d = new Date();
  return a = +a, b = +b, function(t) {
    return d.setTime(a * (1 - t) + b * t), d;
  };
}
function interpolateNumber(a, b) {
  return a = +a, b = +b, function(t) {
    return a * (1 - t) + b * t;
  };
}
function object(a, b) {
  var i = {}, c = {}, k;
  if (a === null || typeof a !== "object")
    a = {};
  if (b === null || typeof b !== "object")
    b = {};
  for (k in b) {
    if (k in a) {
      i[k] = interpolate(a[k], b[k]);
    } else {
      c[k] = b[k];
    }
  }
  return function(t) {
    for (k in i)
      c[k] = i[k](t);
    return c;
  };
}
function zero(b) {
  return function() {
    return b;
  };
}
function one(b) {
  return function(t) {
    return b(t) + "";
  };
}
function string(a, b) {
  var bi = reA.lastIndex = reB.lastIndex = 0, am, bm, bs, i = -1, s2 = [], q = [];
  a = a + "", b = b + "";
  while ((am = reA.exec(a)) && (bm = reB.exec(b))) {
    if ((bs = bm.index) > bi) {
      bs = b.slice(bi, bs);
      if (s2[i])
        s2[i] += bs;
      else
        s2[++i] = bs;
    }
    if ((am = am[0]) === (bm = bm[0])) {
      if (s2[i])
        s2[i] += bm;
      else
        s2[++i] = bm;
    } else {
      s2[++i] = null;
      q.push({ i, x: interpolateNumber(am, bm) });
    }
    bi = reB.lastIndex;
  }
  if (bi < b.length) {
    bs = b.slice(bi);
    if (s2[i])
      s2[i] += bs;
    else
      s2[++i] = bs;
  }
  return s2.length < 2 ? q[0] ? one(q[0].x) : zero(b) : (b = q.length, function(t) {
    for (var i2 = 0, o; i2 < b; ++i2)
      s2[(o = q[i2]).i] = o.x(t);
    return s2.join("");
  });
}
function interpolate(a, b) {
  var t = typeof b, c;
  return b == null || t === "boolean" ? constant(b) : (t === "number" ? interpolateNumber : t === "string" ? (c = color(b)) ? (b = c, rgb) : string : b instanceof color ? rgb : b instanceof Date ? date : isNumberArray(b) ? numberArray : Array.isArray(b) ? genericArray : typeof b.valueOf !== "function" && typeof b.toString !== "function" || isNaN(b) ? object : interpolateNumber)(a, b);
}
function interpolateRound(a, b) {
  return a = +a, b = +b, function(t) {
    return Math.round(a * (1 - t) + b * t);
  };
}
function constants(x) {
  return function() {
    return x;
  };
}
function number(x) {
  return +x;
}
function identity$1(x) {
  return x;
}
function normalize(a, b) {
  return (b -= a = +a) ? function(x) {
    return (x - a) / b;
  } : constants(isNaN(b) ? NaN : 0.5);
}
function clamper(a, b) {
  var t;
  if (a > b)
    t = a, a = b, b = t;
  return function(x) {
    return Math.max(a, Math.min(b, x));
  };
}
function bimap(domain, range, interpolate2) {
  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];
  if (d1 < d0)
    d0 = normalize(d1, d0), r0 = interpolate2(r1, r0);
  else
    d0 = normalize(d0, d1), r0 = interpolate2(r0, r1);
  return function(x) {
    return r0(d0(x));
  };
}
function polymap(domain, range, interpolate2) {
  var j = Math.min(domain.length, range.length) - 1, d = new Array(j), r = new Array(j), i = -1;
  if (domain[j] < domain[0]) {
    domain = domain.slice().reverse();
    range = range.slice().reverse();
  }
  while (++i < j) {
    d[i] = normalize(domain[i], domain[i + 1]);
    r[i] = interpolate2(range[i], range[i + 1]);
  }
  return function(x) {
    var i2 = bisect(domain, x, 1, j) - 1;
    return r[i2](d[i2](x));
  };
}
function copy(source, target) {
  return target.domain(source.domain()).range(source.range()).interpolate(source.interpolate()).clamp(source.clamp()).unknown(source.unknown());
}
function transformer() {
  var domain = unit, range = unit, interpolate$1 = interpolate, transform, untransform, unknown, clamp = identity$1, piecewise, output, input;
  function rescale() {
    var n = Math.min(domain.length, range.length);
    if (clamp !== identity$1)
      clamp = clamper(domain[0], domain[n - 1]);
    piecewise = n > 2 ? polymap : bimap;
    output = input = null;
    return scale;
  }
  function scale(x) {
    return x == null || isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate$1)))(transform(clamp(x)));
  }
  scale.invert = function(y) {
    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), interpolateNumber)))(y)));
  };
  scale.domain = function(_) {
    return arguments.length ? (domain = Array.from(_, number), rescale()) : domain.slice();
  };
  scale.range = function(_) {
    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();
  };
  scale.rangeRound = function(_) {
    return range = Array.from(_), interpolate$1 = interpolateRound, rescale();
  };
  scale.clamp = function(_) {
    return arguments.length ? (clamp = _ ? true : identity$1, rescale()) : clamp !== identity$1;
  };
  scale.interpolate = function(_) {
    return arguments.length ? (interpolate$1 = _, rescale()) : interpolate$1;
  };
  scale.unknown = function(_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };
  return function(t, u) {
    transform = t, untransform = u;
    return rescale();
  };
}
function continuous() {
  return transformer()(identity$1, identity$1);
}
function formatDecimal(x) {
  return Math.abs(x = Math.round(x)) >= 1e21 ? x.toLocaleString("en").replace(/,/g, "") : x.toString(10);
}
function formatDecimalParts(x, p) {
  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf("e")) < 0)
    return null;
  var i, coefficient = x.slice(0, i);
  return [
    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,
    +x.slice(i + 1)
  ];
}
function exponent(x) {
  return x = formatDecimalParts(Math.abs(x)), x ? x[1] : NaN;
}
function formatGroup(grouping, thousands) {
  return function(value, width) {
    var i = value.length, t = [], j = 0, g = grouping[0], length = 0;
    while (i > 0 && g > 0) {
      if (length + g + 1 > width)
        g = Math.max(1, width - length);
      t.push(value.substring(i -= g, i + g));
      if ((length += g + 1) > width)
        break;
      g = grouping[j = (j + 1) % grouping.length];
    }
    return t.reverse().join(thousands);
  };
}
function formatNumerals(numerals) {
  return function(value) {
    return value.replace(/[0-9]/g, function(i) {
      return numerals[+i];
    });
  };
}
function formatSpecifier(specifier) {
  if (!(match = re.exec(specifier)))
    throw new Error("invalid format: " + specifier);
  var match;
  return new FormatSpecifier({
    fill: match[1],
    align: match[2],
    sign: match[3],
    symbol: match[4],
    zero: match[5],
    width: match[6],
    comma: match[7],
    precision: match[8] && match[8].slice(1),
    trim: match[9],
    type: match[10]
  });
}
function FormatSpecifier(specifier) {
  this.fill = specifier.fill === void 0 ? " " : specifier.fill + "";
  this.align = specifier.align === void 0 ? ">" : specifier.align + "";
  this.sign = specifier.sign === void 0 ? "-" : specifier.sign + "";
  this.symbol = specifier.symbol === void 0 ? "" : specifier.symbol + "";
  this.zero = !!specifier.zero;
  this.width = specifier.width === void 0 ? void 0 : +specifier.width;
  this.comma = !!specifier.comma;
  this.precision = specifier.precision === void 0 ? void 0 : +specifier.precision;
  this.trim = !!specifier.trim;
  this.type = specifier.type === void 0 ? "" : specifier.type + "";
}
function formatTrim(s2) {
  out:
    for (var n = s2.length, i = 1, i0 = -1, i1; i < n; ++i) {
      switch (s2[i]) {
        case ".":
          i0 = i1 = i;
          break;
        case "0":
          if (i0 === 0)
            i0 = i;
          i1 = i;
          break;
        default:
          if (!+s2[i])
            break out;
          if (i0 > 0)
            i0 = 0;
          break;
      }
    }
  return i0 > 0 ? s2.slice(0, i0) + s2.slice(i1 + 1) : s2;
}
function formatPrefixAuto(x, p) {
  var d = formatDecimalParts(x, p);
  if (!d)
    return x + "";
  var coefficient = d[0], exponent2 = d[1], i = exponent2 - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent2 / 3))) * 3) + 1, n = coefficient.length;
  return i === n ? coefficient : i > n ? coefficient + new Array(i - n + 1).join("0") : i > 0 ? coefficient.slice(0, i) + "." + coefficient.slice(i) : "0." + new Array(1 - i).join("0") + formatDecimalParts(x, Math.max(0, p + i - 1))[0];
}
function formatRounded(x, p) {
  var d = formatDecimalParts(x, p);
  if (!d)
    return x + "";
  var coefficient = d[0], exponent2 = d[1];
  return exponent2 < 0 ? "0." + new Array(-exponent2).join("0") + coefficient : coefficient.length > exponent2 + 1 ? coefficient.slice(0, exponent2 + 1) + "." + coefficient.slice(exponent2 + 1) : coefficient + new Array(exponent2 - coefficient.length + 2).join("0");
}
function identity2(x) {
  return x;
}
function formatLocale(locale2) {
  var group = locale2.grouping === void 0 || locale2.thousands === void 0 ? identity2 : formatGroup(map.call(locale2.grouping, Number), locale2.thousands + ""), currencyPrefix = locale2.currency === void 0 ? "" : locale2.currency[0] + "", currencySuffix = locale2.currency === void 0 ? "" : locale2.currency[1] + "", decimal = locale2.decimal === void 0 ? "." : locale2.decimal + "", numerals = locale2.numerals === void 0 ? identity2 : formatNumerals(map.call(locale2.numerals, String)), percent = locale2.percent === void 0 ? "%" : locale2.percent + "", minus = locale2.minus === void 0 ? "\u2212" : locale2.minus + "", nan = locale2.nan === void 0 ? "NaN" : locale2.nan + "";
  function newFormat(specifier) {
    specifier = formatSpecifier(specifier);
    var fill = specifier.fill, align = specifier.align, sign = specifier.sign, symbol = specifier.symbol, zero2 = specifier.zero, width = specifier.width, comma = specifier.comma, precision = specifier.precision, trim = specifier.trim, type = specifier.type;
    if (type === "n")
      comma = true, type = "g";
    else if (!formatTypes[type])
      precision === void 0 && (precision = 12), trim = true, type = "g";
    if (zero2 || fill === "0" && align === "=")
      zero2 = true, fill = "0", align = "=";
    var prefix = symbol === "$" ? currencyPrefix : symbol === "#" && /[boxX]/.test(type) ? "0" + type.toLowerCase() : "", suffix = symbol === "$" ? currencySuffix : /[%p]/.test(type) ? percent : "";
    var formatType = formatTypes[type], maybeSuffix = /[defgprs%]/.test(type);
    precision = precision === void 0 ? 6 : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision)) : Math.max(0, Math.min(20, precision));
    function format22(value) {
      var valuePrefix = prefix, valueSuffix = suffix, i, n, c;
      if (type === "c") {
        valueSuffix = formatType(value) + valueSuffix;
        value = "";
      } else {
        value = +value;
        var valueNegative = value < 0 || 1 / value < 0;
        value = isNaN(value) ? nan : formatType(Math.abs(value), precision);
        if (trim)
          value = formatTrim(value);
        if (valueNegative && +value === 0 && sign !== "+")
          valueNegative = false;
        valuePrefix = (valueNegative ? sign === "(" ? sign : minus : sign === "-" || sign === "(" ? "" : sign) + valuePrefix;
        valueSuffix = (type === "s" ? prefixes[8 + prefixExponent / 3] : "") + valueSuffix + (valueNegative && sign === "(" ? ")" : "");
        if (maybeSuffix) {
          i = -1, n = value.length;
          while (++i < n) {
            if (c = value.charCodeAt(i), 48 > c || c > 57) {
              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;
              value = value.slice(0, i);
              break;
            }
          }
        }
      }
      if (comma && !zero2)
        value = group(value, Infinity);
      var length = valuePrefix.length + value.length + valueSuffix.length, padding = length < width ? new Array(width - length + 1).join(fill) : "";
      if (comma && zero2)
        value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = "";
      switch (align) {
        case "<":
          value = valuePrefix + value + valueSuffix + padding;
          break;
        case "=":
          value = valuePrefix + padding + value + valueSuffix;
          break;
        case "^":
          value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);
          break;
        default:
          value = padding + valuePrefix + value + valueSuffix;
          break;
      }
      return numerals(value);
    }
    format22.toString = function() {
      return specifier + "";
    };
    return format22;
  }
  function formatPrefix2(specifier, value) {
    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = "f", specifier)), e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3, k = Math.pow(10, -e), prefix = prefixes[8 + e / 3];
    return function(value2) {
      return f(k * value2) + prefix;
    };
  }
  return {
    format: newFormat,
    formatPrefix: formatPrefix2
  };
}
function defaultLocale(definition) {
  locale = formatLocale(definition);
  format2 = locale.format;
  formatPrefix = locale.formatPrefix;
  return locale;
}
function precisionFixed(step) {
  return Math.max(0, -exponent(Math.abs(step)));
}
function precisionPrefix(step, value) {
  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));
}
function precisionRound(step, max) {
  step = Math.abs(step), max = Math.abs(max) - step;
  return Math.max(0, exponent(max) - exponent(step)) + 1;
}
function tickFormat(start, stop, count, specifier) {
  var step = tickStep(start, stop, count), precision;
  specifier = formatSpecifier(specifier == null ? ",f" : specifier);
  switch (specifier.type) {
    case "s": {
      var value = Math.max(Math.abs(start), Math.abs(stop));
      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value)))
        specifier.precision = precision;
      return formatPrefix(specifier, value);
    }
    case "":
    case "e":
    case "g":
    case "p":
    case "r": {
      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop)))))
        specifier.precision = precision - (specifier.type === "e");
      break;
    }
    case "f":
    case "%": {
      if (specifier.precision == null && !isNaN(precision = precisionFixed(step)))
        specifier.precision = precision - (specifier.type === "%") * 2;
      break;
    }
  }
  return format2(specifier);
}
function linearish(scale) {
  var domain = scale.domain;
  scale.ticks = function(count) {
    var d = domain();
    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);
  };
  scale.tickFormat = function(count, specifier) {
    var d = domain();
    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);
  };
  scale.nice = function(count) {
    if (count == null)
      count = 10;
    var d = domain();
    var i0 = 0;
    var i1 = d.length - 1;
    var start = d[i0];
    var stop = d[i1];
    var prestep;
    var step;
    var maxIter = 10;
    if (stop < start) {
      step = start, start = stop, stop = step;
      step = i0, i0 = i1, i1 = step;
    }
    while (maxIter-- > 0) {
      step = tickIncrement(start, stop, count);
      if (step === prestep) {
        d[i0] = start;
        d[i1] = stop;
        return domain(d);
      } else if (step > 0) {
        start = Math.floor(start / step) * step;
        stop = Math.ceil(stop / step) * step;
      } else if (step < 0) {
        start = Math.ceil(start * step) / step;
        stop = Math.floor(stop * step) / step;
      } else {
        break;
      }
      prestep = step;
    }
    return scale;
  };
  return scale;
}
function linear() {
  var scale = continuous();
  scale.copy = function() {
    return copy(scale, linear());
  };
  initRange.apply(scale, arguments);
  return linearish(scale);
}
async function load6({ fetch: fetch2 }) {
  const res = await fetch2(`/posts.json`);
  const posts = await res.json();
  return { props: { posts } };
}
var import_bowser64, ascendingBisect, bisectRight, bisect, e10, e5, e2, darker, brighter, reI, reN, reP, reHex, reRgbInteger, reRgbPercent, reRgbaInteger, reRgbaPercent, reHslPercent, reHslaPercent, named, constant, rgb, reA, reB, unit, re, prefixExponent, formatTypes, map, prefixes, locale, format2, formatPrefix, css$15, Blog2, css21, title4, description4, Post;
var init_index_1de0c6e9 = __esm({
  ".svelte-kit/output/server/chunks/index-1de0c6e9.js"() {
    init_shims();
    init_app_9f378dda();
    init_utils_09998264();
    init_Star_65df41c2();
    init_global_130d3fe3();
    init_TransitionInView_c90c9121();
    init_BackTo_d882ed88();
    init_store_8bf23024();
    import_bowser64 = __toModule(require_es5());
    init_IntersectionObserver_4cd4a541();
    ascendingBisect = bisector(ascending);
    bisectRight = ascendingBisect.right;
    bisector(number$1).center;
    bisect = bisectRight;
    e10 = Math.sqrt(50);
    e5 = Math.sqrt(10);
    e2 = Math.sqrt(2);
    darker = 0.7;
    brighter = 1 / darker;
    reI = "\\s*([+-]?\\d+)\\s*";
    reN = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*";
    reP = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*";
    reHex = /^#([0-9a-f]{3,8})$/;
    reRgbInteger = new RegExp("^rgb\\(" + [reI, reI, reI] + "\\)$");
    reRgbPercent = new RegExp("^rgb\\(" + [reP, reP, reP] + "\\)$");
    reRgbaInteger = new RegExp("^rgba\\(" + [reI, reI, reI, reN] + "\\)$");
    reRgbaPercent = new RegExp("^rgba\\(" + [reP, reP, reP, reN] + "\\)$");
    reHslPercent = new RegExp("^hsl\\(" + [reN, reP, reP] + "\\)$");
    reHslaPercent = new RegExp("^hsla\\(" + [reN, reP, reP, reN] + "\\)$");
    named = {
      aliceblue: 15792383,
      antiquewhite: 16444375,
      aqua: 65535,
      aquamarine: 8388564,
      azure: 15794175,
      beige: 16119260,
      bisque: 16770244,
      black: 0,
      blanchedalmond: 16772045,
      blue: 255,
      blueviolet: 9055202,
      brown: 10824234,
      burlywood: 14596231,
      cadetblue: 6266528,
      chartreuse: 8388352,
      chocolate: 13789470,
      coral: 16744272,
      cornflowerblue: 6591981,
      cornsilk: 16775388,
      crimson: 14423100,
      cyan: 65535,
      darkblue: 139,
      darkcyan: 35723,
      darkgoldenrod: 12092939,
      darkgray: 11119017,
      darkgreen: 25600,
      darkgrey: 11119017,
      darkkhaki: 12433259,
      darkmagenta: 9109643,
      darkolivegreen: 5597999,
      darkorange: 16747520,
      darkorchid: 10040012,
      darkred: 9109504,
      darksalmon: 15308410,
      darkseagreen: 9419919,
      darkslateblue: 4734347,
      darkslategray: 3100495,
      darkslategrey: 3100495,
      darkturquoise: 52945,
      darkviolet: 9699539,
      deeppink: 16716947,
      deepskyblue: 49151,
      dimgray: 6908265,
      dimgrey: 6908265,
      dodgerblue: 2003199,
      firebrick: 11674146,
      floralwhite: 16775920,
      forestgreen: 2263842,
      fuchsia: 16711935,
      gainsboro: 14474460,
      ghostwhite: 16316671,
      gold: 16766720,
      goldenrod: 14329120,
      gray: 8421504,
      green: 32768,
      greenyellow: 11403055,
      grey: 8421504,
      honeydew: 15794160,
      hotpink: 16738740,
      indianred: 13458524,
      indigo: 4915330,
      ivory: 16777200,
      khaki: 15787660,
      lavender: 15132410,
      lavenderblush: 16773365,
      lawngreen: 8190976,
      lemonchiffon: 16775885,
      lightblue: 11393254,
      lightcoral: 15761536,
      lightcyan: 14745599,
      lightgoldenrodyellow: 16448210,
      lightgray: 13882323,
      lightgreen: 9498256,
      lightgrey: 13882323,
      lightpink: 16758465,
      lightsalmon: 16752762,
      lightseagreen: 2142890,
      lightskyblue: 8900346,
      lightslategray: 7833753,
      lightslategrey: 7833753,
      lightsteelblue: 11584734,
      lightyellow: 16777184,
      lime: 65280,
      limegreen: 3329330,
      linen: 16445670,
      magenta: 16711935,
      maroon: 8388608,
      mediumaquamarine: 6737322,
      mediumblue: 205,
      mediumorchid: 12211667,
      mediumpurple: 9662683,
      mediumseagreen: 3978097,
      mediumslateblue: 8087790,
      mediumspringgreen: 64154,
      mediumturquoise: 4772300,
      mediumvioletred: 13047173,
      midnightblue: 1644912,
      mintcream: 16121850,
      mistyrose: 16770273,
      moccasin: 16770229,
      navajowhite: 16768685,
      navy: 128,
      oldlace: 16643558,
      olive: 8421376,
      olivedrab: 7048739,
      orange: 16753920,
      orangered: 16729344,
      orchid: 14315734,
      palegoldenrod: 15657130,
      palegreen: 10025880,
      paleturquoise: 11529966,
      palevioletred: 14381203,
      papayawhip: 16773077,
      peachpuff: 16767673,
      peru: 13468991,
      pink: 16761035,
      plum: 14524637,
      powderblue: 11591910,
      purple: 8388736,
      rebeccapurple: 6697881,
      red: 16711680,
      rosybrown: 12357519,
      royalblue: 4286945,
      saddlebrown: 9127187,
      salmon: 16416882,
      sandybrown: 16032864,
      seagreen: 3050327,
      seashell: 16774638,
      sienna: 10506797,
      silver: 12632256,
      skyblue: 8900331,
      slateblue: 6970061,
      slategray: 7372944,
      slategrey: 7372944,
      snow: 16775930,
      springgreen: 65407,
      steelblue: 4620980,
      tan: 13808780,
      teal: 32896,
      thistle: 14204888,
      tomato: 16737095,
      turquoise: 4251856,
      violet: 15631086,
      wheat: 16113331,
      white: 16777215,
      whitesmoke: 16119285,
      yellow: 16776960,
      yellowgreen: 10145074
    };
    define2(Color, color, {
      copy: function(channels) {
        return Object.assign(new this.constructor(), this, channels);
      },
      displayable: function() {
        return this.rgb().displayable();
      },
      hex: color_formatHex,
      formatHex: color_formatHex,
      formatHsl: color_formatHsl,
      formatRgb: color_formatRgb,
      toString: color_formatRgb
    });
    define2(Rgb, rgb$1, extend(Color, {
      brighter: function(k) {
        k = k == null ? brighter : Math.pow(brighter, k);
        return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
      },
      darker: function(k) {
        k = k == null ? darker : Math.pow(darker, k);
        return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
      },
      rgb: function() {
        return this;
      },
      displayable: function() {
        return -0.5 <= this.r && this.r < 255.5 && (-0.5 <= this.g && this.g < 255.5) && (-0.5 <= this.b && this.b < 255.5) && (0 <= this.opacity && this.opacity <= 1);
      },
      hex: rgb_formatHex,
      formatHex: rgb_formatHex,
      formatRgb: rgb_formatRgb,
      toString: rgb_formatRgb
    }));
    define2(Hsl, hsl, extend(Color, {
      brighter: function(k) {
        k = k == null ? brighter : Math.pow(brighter, k);
        return new Hsl(this.h, this.s, this.l * k, this.opacity);
      },
      darker: function(k) {
        k = k == null ? darker : Math.pow(darker, k);
        return new Hsl(this.h, this.s, this.l * k, this.opacity);
      },
      rgb: function() {
        var h = this.h % 360 + (this.h < 0) * 360, s2 = isNaN(h) || isNaN(this.s) ? 0 : this.s, l = this.l, m2 = l + (l < 0.5 ? l : 1 - l) * s2, m1 = 2 * l - m2;
        return new Rgb(hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2), hsl2rgb(h, m1, m2), hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2), this.opacity);
      },
      displayable: function() {
        return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && (0 <= this.l && this.l <= 1) && (0 <= this.opacity && this.opacity <= 1);
      },
      formatHsl: function() {
        var a = this.opacity;
        a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));
        return (a === 1 ? "hsl(" : "hsla(") + (this.h || 0) + ", " + (this.s || 0) * 100 + "%, " + (this.l || 0) * 100 + "%" + (a === 1 ? ")" : ", " + a + ")");
      }
    }));
    constant = (x) => () => x;
    rgb = function rgbGamma(y) {
      var color2 = gamma(y);
      function rgb2(start, end) {
        var r = color2((start = rgb$1(start)).r, (end = rgb$1(end)).r), g = color2(start.g, end.g), b = color2(start.b, end.b), opacity = nogamma(start.opacity, end.opacity);
        return function(t) {
          start.r = r(t);
          start.g = g(t);
          start.b = b(t);
          start.opacity = opacity(t);
          return start + "";
        };
      }
      rgb2.gamma = rgbGamma;
      return rgb2;
    }(1);
    reA = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g;
    reB = new RegExp(reA.source, "g");
    unit = [0, 1];
    re = /^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;
    formatSpecifier.prototype = FormatSpecifier.prototype;
    FormatSpecifier.prototype.toString = function() {
      return this.fill + this.align + this.sign + this.symbol + (this.zero ? "0" : "") + (this.width === void 0 ? "" : Math.max(1, this.width | 0)) + (this.comma ? "," : "") + (this.precision === void 0 ? "" : "." + Math.max(0, this.precision | 0)) + (this.trim ? "~" : "") + this.type;
    };
    formatTypes = {
      "%": (x, p) => (x * 100).toFixed(p),
      "b": (x) => Math.round(x).toString(2),
      "c": (x) => x + "",
      "d": formatDecimal,
      "e": (x, p) => x.toExponential(p),
      "f": (x, p) => x.toFixed(p),
      "g": (x, p) => x.toPrecision(p),
      "o": (x) => Math.round(x).toString(8),
      "p": (x, p) => formatRounded(x * 100, p),
      "r": formatRounded,
      "s": formatPrefixAuto,
      "X": (x) => Math.round(x).toString(16).toUpperCase(),
      "x": (x) => Math.round(x).toString(16)
    };
    map = Array.prototype.map;
    prefixes = ["y", "z", "a", "f", "p", "n", "\xB5", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y"];
    defaultLocale({
      thousands: ",",
      grouping: [3],
      currency: ["$", ""]
    });
    css$15 = {
      code: ".post-container.svelte-1pm8o92.svelte-1pm8o92{display:block;width:100%;height:100%;border-radius:10px;background:var(--semitransparent-bg);padding:20px;margin:6px;overflow:hidden;border:1px solid var(--primary-color);transition:all 100ms linear, border 300ms ease;cursor:pointer}.perspective-container.svelte-1pm8o92.svelte-1pm8o92{display:block;height:100%;display:flex;position:relative;margin:-4px}.card-highlight.svelte-1pm8o92.svelte-1pm8o92{position:absolute;width:100%;height:100%;border-radius:50%;background:rgba(0, 0, 0, 0.01);filter:blur(20px);z-index:1;pointer-events:none}.post-card.svelte-1pm8o92.svelte-1pm8o92{display:flex;flex-direction:column;justify-content:space-between;height:100%;pointer-events:none}.post-date.svelte-1pm8o92.svelte-1pm8o92{text-transform:uppercase;letter-spacing:0.34px;font-size:1rem;font-family:var(--font-serif);color:var(--off-text-color);font-weight:200;margin-bottom:0.75rem}.post-title.svelte-1pm8o92.svelte-1pm8o92{font-size:1.5rem;margin-bottom:0.75rem;font-family:var(--font-sans);font-weight:500;line-height:1.2}.post-description.svelte-1pm8o92.svelte-1pm8o92{font-size:1.2rem;font-family:var(--font-sans);font-weight:200;line-height:1.15}.post-tags.svelte-1pm8o92.svelte-1pm8o92{margin-top:1rem;text-align:right}.post-tag.svelte-1pm8o92.svelte-1pm8o92{font-family:var(--font-sans);padding:3px 8px;background:rgba(var(--accent-color-rgb), 0.1);margin:2px;margin-right:2px;border-radius:3px;color:rgba(var(--accent-color-rgb), 1);font-size:0.85rem;font-weight:200;text-transform:uppercase;margin-right:0.25rem;letter-spacing:1px}.featured-star.svelte-1pm8o92.svelte-1pm8o92{position:absolute;top:0;right:0;padding:6px}.hovered.svelte-1pm8o92.svelte-1pm8o92{border:1px solid var(--accent-color)}.unhovered.svelte-1pm8o92.svelte-1pm8o92{filter:grayscale(1)}.unhovered.svelte-1pm8o92 .post-date.svelte-1pm8o92,.unhovered.svelte-1pm8o92 .post-title.svelte-1pm8o92,.unhovered.svelte-1pm8o92 .post-description.svelte-1pm8o92,.unhovered.svelte-1pm8o92 .post-tag.svelte-1pm8o92,.unhovered.svelte-1pm8o92 .featured-star.svelte-1pm8o92{color:transparent;opacity:0.5;text-shadow:0 0 2px var(--text-color)}.post-date.svelte-1pm8o92.svelte-1pm8o92,.post-title.svelte-1pm8o92.svelte-1pm8o92,.post-description.svelte-1pm8o92.svelte-1pm8o92,.post-tag.svelte-1pm8o92.svelte-1pm8o92,.featured-star.svelte-1pm8o92.svelte-1pm8o92{transition:opacity 600ms cubic-bezier(0.37, 0.35, 0.01, 0.99),\n      color 600ms cubic-bezier(0.37, 0.35, 0.01, 0.99),\n      text-shadow 600ms cubic-bezier(0.37, 0.35, 0.01, 0.99)}@media screen and (max-width: 400px){.post-date.svelte-1pm8o92.svelte-1pm8o92{font-size:0.85rem}.post-title.svelte-1pm8o92.svelte-1pm8o92{font-size:1.2rem;margin-bottom:1rem}.post-description.svelte-1pm8o92.svelte-1pm8o92{font-size:1rem}.post-tag.svelte-1pm8o92.svelte-1pm8o92{font-size:0.75rem}}",
      map: null
    };
    Blog2 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let getCardDimensions;
      let rotationX;
      let rotationY;
      let circleXPosition;
      let circleYPosition;
      let shadowX;
      let shadowY;
      let scale3dVal;
      let $$unsubscribe_windowWidth;
      $$unsubscribe_windowWidth = subscribe(windowWidth, (value) => value);
      let { post } = $$props;
      let { slug } = $$props;
      let { anyHovered } = $$props;
      let { index } = $$props;
      let card, cardWidth, cardHeight, scrollYPosition = 0;
      let hovered = false;
      if ($$props.post === void 0 && $$bindings.post && post !== void 0)
        $$bindings.post(post);
      if ($$props.slug === void 0 && $$bindings.slug && slug !== void 0)
        $$bindings.slug(slug);
      if ($$props.anyHovered === void 0 && $$bindings.anyHovered && anyHovered !== void 0)
        $$bindings.anyHovered(anyHovered);
      if ($$props.index === void 0 && $$bindings.index && index !== void 0)
        $$bindings.index(index);
      $$result.css.add(css$15);
      getCardDimensions = function(card2) {
        card2 ? card2.getBoundingClientRect().left : 0;
        card2 ? card2.getBoundingClientRect().top + scrollYPosition : 0;
      };
      {
        getCardDimensions(card);
      }
      {
        getCardDimensions(card);
      }
      linear().domain([0, cardWidth]).range([-4, 4]);
      linear().domain([cardHeight, 0]).range([-4, 4]);
      rotationX = 0;
      rotationY = 0;
      linear().domain([0, cardWidth]).range([-50, 50]);
      linear().domain([0, cardHeight]).range([-50, 50]);
      circleXPosition = 0;
      circleYPosition = 0;
      shadowX = 0;
      shadowY = 0;
      scale3dVal = 1;
      $$unsubscribe_windowWidth();
      return `

${validate_component(TransitionInView, "TransitionInView").$$render($$result, {}, {}, {
        default: () => `<a class="${"perspective-container no-underline svelte-1pm8o92"}" style="${"perspective: " + escape(cardWidth) + "px"}"${add_attribute("href", slug, 0)} sveltekit:prefetch${add_attribute("this", card, 0)}><div style="${"transform: rotateY(" + escape(rotationX) + "deg) rotateX(" + escape(rotationY) + "deg) scale3d(" + escape(scale3dVal) + ", " + escape(scale3dVal) + ", " + escape(scale3dVal) + "); box-shadow: " + escape(shadowX) + "px " + escape(shadowY) + "px 15px rgba(0, 0, 0, 0.1);"}" class="${"post-container no-underline " + escape(post.featured ? "featured" : "") + " " + escape(anyHovered ? "unhovered" : "") + " svelte-1pm8o92"}">${post.featured ? `<div class="${"featured-star svelte-1pm8o92"}">${validate_component(Star, "Star").$$render($$result, {
          width: "20",
          height: "20",
          fill: "var(--accent-color)",
          stroke: "none",
          hovered,
          index
        }, {}, {})}</div>` : ``}
      <div class="${"card-highlight svelte-1pm8o92"}" style="${"left: " + escape(circleXPosition) + "%; top: " + escape(circleYPosition) + "%"}"></div>
      <div class="${"post-card svelte-1pm8o92"}"><div class="${"post-info"}"><h2 class="${"post-date svelte-1pm8o92"}">${escape(dateFormat(post.date))}</h2>
          <h1 class="${"post-title svelte-1pm8o92"}">${escape(post.title)}</h1>
          <h2 class="${"post-description svelte-1pm8o92"}">${escape(post.description)}</h2></div>
        <div class="${"post-tags svelte-1pm8o92"}">${each(post.tags, (tag) => `<span class="${"post-tag svelte-1pm8o92"}">${escape(tag)}</span>`)}</div></div></div></a>`
      })}`;
    });
    css21 = {
      code: "main.svelte-l5v6ru{max-width:860px;margin:0 auto;padding:1rem;width:95%;margin-bottom:4rem;margin-top:var(--nav-height)}.posts-grid.svelte-l5v6ru{display:grid;grid-template-columns:repeat(2, 1fr);grid-auto-rows:1fr;grid-gap:10px}.button.svelte-l5v6ru{margin:12px 0 12px auto}.archives-title.svelte-l5v6ru{font-size:3rem;margin:1.5rem 1rem 1rem 1rem;border-top:1px solid rgba(var(--accent-color-rgb), 0.5);padding:2rem 0 0.5rem 0;font-weight:100;color:var(--pure-text-color);text-transform:uppercase;text-align:center}@media screen and (max-width: 668px){.posts-grid.svelte-l5v6ru{grid-template-columns:auto;grid-template-rows:repeat(1, 1fr);grid-auto-rows:auto}.archives-title.svelte-l5v6ru{font-size:9vw}}",
      map: null
    };
    title4 = "Blog | Connor Rothschild";
    description4 = "Some of my writing.";
    Post = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $seo, $$unsubscribe_seo;
      $$unsubscribe_seo = subscribe(seo, (value) => $seo = value);
      let { posts } = $$props;
      let filteredPosts = posts.filter((d) => !d.metadata.draft && !d.metadata.archived).sort((a, b) => {
        if (b.metadata.featured && !a.metadata.featured)
          return 1;
        if (!b.metadata.featured && a.metadata.featured)
          return -1;
        if (Date.parse(b.metadata.date) > Date.parse(a.metadata.date))
          return 1;
        if (Date.parse(b.metadata.date) < Date.parse(a.metadata.date))
          return -1;
      });
      posts.filter((d) => d.metadata.archived == true).sort((a, b) => Date.parse(b.metadata.date) - Date.parse(a.metadata.date));
      set_store_value(seo, $seo = {
        title: title4,
        description: description4,
        image: `https://og-image-eight-eta.vercel.app/${title4}.png?subtitle=${description4}&theme=light&md=true&hasImage=true`
      }, $seo);
      let anyHovered = false;
      if ($$props.posts === void 0 && $$bindings.posts && posts !== void 0)
        $$bindings.posts(posts);
      $$result.css.add(css21);
      let $$settled;
      let $$rendered;
      do {
        $$settled = true;
        $$rendered = `${validate_component(Transition, "Transition").$$render($$result, {}, {}, {})}
<main class="${"svelte-l5v6ru"}">
  ${validate_component(BackTo, "BackTo").$$render($$result, {
          href: "/",
          text: "Home",
          classes: "page-overline transition-subtitle centered"
        }, {}, {})}
  <h1 class="${"page-title transition-title overflow-hidden"}">Writing
    </h1>
  <div class="${"transition-content posts-grid svelte-l5v6ru"}">${each(filteredPosts, (post, index) => `${validate_component(Blog2, "BlogSection").$$render($$result, {
          post: post.metadata,
          slug: post.path.replace(/\.[^/.]+$/, ""),
          index,
          anyHovered
        }, {
          anyHovered: ($$value) => {
            anyHovered = $$value;
            $$settled = false;
          }
        }, {})}`)}</div>
  ${``}
  <button class="${"button pulled-right block transition-content svelte-l5v6ru"}">${escape("Show the archives \u{1F62C}")}</button>
</main>`;
      } while (!$$settled);
      $$unsubscribe_seo();
      return $$rendered;
    });
  }
});

// .svelte-kit/output/server/chunks/app-9f378dda.js
function get_single_valued_header(headers, key) {
  const value = headers[key];
  if (Array.isArray(value)) {
    if (value.length === 0) {
      return void 0;
    }
    if (value.length > 1) {
      throw new Error(`Multiple headers provided for ${key}. Multiple may be provided only for set-cookie`);
    }
    return value[0];
  }
  return value;
}
function coalesce_to_error(err) {
  return err instanceof Error || err && err.name && err.message ? err : new Error(JSON.stringify(err));
}
function lowercase_keys(obj) {
  const clone2 = {};
  for (const key in obj) {
    clone2[key.toLowerCase()] = obj[key];
  }
  return clone2;
}
function error(body) {
  return {
    status: 500,
    body,
    headers: {}
  };
}
function is_string(s2) {
  return typeof s2 === "string" || s2 instanceof String;
}
function is_content_type_textual(content_type) {
  if (!content_type)
    return true;
  const [type] = content_type.split(";");
  return type === "text/plain" || type === "application/json" || type === "application/x-www-form-urlencoded" || type === "multipart/form-data";
}
async function render_endpoint(request, route, match) {
  const mod = await route.load();
  const handler2 = mod[request.method.toLowerCase().replace("delete", "del")];
  if (!handler2) {
    return;
  }
  const params = route.params(match);
  const response = await handler2({ ...request, params });
  const preface = `Invalid response from route ${request.path}`;
  if (!response) {
    return;
  }
  if (typeof response !== "object") {
    return error(`${preface}: expected an object, got ${typeof response}`);
  }
  let { status = 200, body, headers = {} } = response;
  headers = lowercase_keys(headers);
  const type = get_single_valued_header(headers, "content-type");
  const is_type_textual = is_content_type_textual(type);
  if (!is_type_textual && !(body instanceof Uint8Array || is_string(body))) {
    return error(`${preface}: body must be an instance of string or Uint8Array if content-type is not a supported textual content-type`);
  }
  let normalized_body;
  if ((typeof body === "object" || typeof body === "undefined") && !(body instanceof Uint8Array) && (!type || type.startsWith("application/json"))) {
    headers = { ...headers, "content-type": "application/json; charset=utf-8" };
    normalized_body = JSON.stringify(typeof body === "undefined" ? {} : body);
  } else {
    normalized_body = body;
  }
  return { status, body: normalized_body, headers };
}
function devalue(value) {
  var counts = new Map();
  function walk(thing) {
    if (typeof thing === "function") {
      throw new Error("Cannot stringify a function");
    }
    if (counts.has(thing)) {
      counts.set(thing, counts.get(thing) + 1);
      return;
    }
    counts.set(thing, 1);
    if (!isPrimitive(thing)) {
      var type = getType(thing);
      switch (type) {
        case "Number":
        case "String":
        case "Boolean":
        case "Date":
        case "RegExp":
          return;
        case "Array":
          thing.forEach(walk);
          break;
        case "Set":
        case "Map":
          Array.from(thing).forEach(walk);
          break;
        default:
          var proto = Object.getPrototypeOf(thing);
          if (proto !== Object.prototype && proto !== null && Object.getOwnPropertyNames(proto).sort().join("\0") !== objectProtoOwnPropertyNames) {
            throw new Error("Cannot stringify arbitrary non-POJOs");
          }
          if (Object.getOwnPropertySymbols(thing).length > 0) {
            throw new Error("Cannot stringify POJOs with symbolic keys");
          }
          Object.keys(thing).forEach(function(key) {
            return walk(thing[key]);
          });
      }
    }
  }
  walk(value);
  var names = new Map();
  Array.from(counts).filter(function(entry) {
    return entry[1] > 1;
  }).sort(function(a, b) {
    return b[1] - a[1];
  }).forEach(function(entry, i) {
    names.set(entry[0], getName(i));
  });
  function stringify(thing) {
    if (names.has(thing)) {
      return names.get(thing);
    }
    if (isPrimitive(thing)) {
      return stringifyPrimitive(thing);
    }
    var type = getType(thing);
    switch (type) {
      case "Number":
      case "String":
      case "Boolean":
        return "Object(" + stringify(thing.valueOf()) + ")";
      case "RegExp":
        return "new RegExp(" + stringifyString(thing.source) + ', "' + thing.flags + '")';
      case "Date":
        return "new Date(" + thing.getTime() + ")";
      case "Array":
        var members = thing.map(function(v, i) {
          return i in thing ? stringify(v) : "";
        });
        var tail = thing.length === 0 || thing.length - 1 in thing ? "" : ",";
        return "[" + members.join(",") + tail + "]";
      case "Set":
      case "Map":
        return "new " + type + "([" + Array.from(thing).map(stringify).join(",") + "])";
      default:
        var obj = "{" + Object.keys(thing).map(function(key) {
          return safeKey(key) + ":" + stringify(thing[key]);
        }).join(",") + "}";
        var proto = Object.getPrototypeOf(thing);
        if (proto === null) {
          return Object.keys(thing).length > 0 ? "Object.assign(Object.create(null)," + obj + ")" : "Object.create(null)";
        }
        return obj;
    }
  }
  var str = stringify(value);
  if (names.size) {
    var params_1 = [];
    var statements_1 = [];
    var values_1 = [];
    names.forEach(function(name, thing) {
      params_1.push(name);
      if (isPrimitive(thing)) {
        values_1.push(stringifyPrimitive(thing));
        return;
      }
      var type = getType(thing);
      switch (type) {
        case "Number":
        case "String":
        case "Boolean":
          values_1.push("Object(" + stringify(thing.valueOf()) + ")");
          break;
        case "RegExp":
          values_1.push(thing.toString());
          break;
        case "Date":
          values_1.push("new Date(" + thing.getTime() + ")");
          break;
        case "Array":
          values_1.push("Array(" + thing.length + ")");
          thing.forEach(function(v, i) {
            statements_1.push(name + "[" + i + "]=" + stringify(v));
          });
          break;
        case "Set":
          values_1.push("new Set");
          statements_1.push(name + "." + Array.from(thing).map(function(v) {
            return "add(" + stringify(v) + ")";
          }).join("."));
          break;
        case "Map":
          values_1.push("new Map");
          statements_1.push(name + "." + Array.from(thing).map(function(_a) {
            var k = _a[0], v = _a[1];
            return "set(" + stringify(k) + ", " + stringify(v) + ")";
          }).join("."));
          break;
        default:
          values_1.push(Object.getPrototypeOf(thing) === null ? "Object.create(null)" : "{}");
          Object.keys(thing).forEach(function(key) {
            statements_1.push("" + name + safeProp(key) + "=" + stringify(thing[key]));
          });
      }
    });
    statements_1.push("return " + str);
    return "(function(" + params_1.join(",") + "){" + statements_1.join(";") + "}(" + values_1.join(",") + "))";
  } else {
    return str;
  }
}
function getName(num) {
  var name = "";
  do {
    name = chars[num % chars.length] + name;
    num = ~~(num / chars.length) - 1;
  } while (num >= 0);
  return reserved.test(name) ? name + "_" : name;
}
function isPrimitive(thing) {
  return Object(thing) !== thing;
}
function stringifyPrimitive(thing) {
  if (typeof thing === "string")
    return stringifyString(thing);
  if (thing === void 0)
    return "void 0";
  if (thing === 0 && 1 / thing < 0)
    return "-0";
  var str = String(thing);
  if (typeof thing === "number")
    return str.replace(/^(-)?0\./, "$1.");
  return str;
}
function getType(thing) {
  return Object.prototype.toString.call(thing).slice(8, -1);
}
function escapeUnsafeChar(c) {
  return escaped$1[c] || c;
}
function escapeUnsafeChars(str) {
  return str.replace(unsafeChars, escapeUnsafeChar);
}
function safeKey(key) {
  return /^[_$a-zA-Z][_$a-zA-Z0-9]*$/.test(key) ? key : escapeUnsafeChars(JSON.stringify(key));
}
function safeProp(key) {
  return /^[_$a-zA-Z][_$a-zA-Z0-9]*$/.test(key) ? "." + key : "[" + escapeUnsafeChars(JSON.stringify(key)) + "]";
}
function stringifyString(str) {
  var result = '"';
  for (var i = 0; i < str.length; i += 1) {
    var char = str.charAt(i);
    var code = char.charCodeAt(0);
    if (char === '"') {
      result += '\\"';
    } else if (char in escaped$1) {
      result += escaped$1[char];
    } else if (code >= 55296 && code <= 57343) {
      var next = str.charCodeAt(i + 1);
      if (code <= 56319 && (next >= 56320 && next <= 57343)) {
        result += char + str[++i];
      } else {
        result += "\\u" + code.toString(16).toUpperCase();
      }
    } else {
      result += char;
    }
  }
  result += '"';
  return result;
}
function noop$1() {
}
function safe_not_equal$1(a, b) {
  return a != a ? b == b : a !== b || (a && typeof a === "object" || typeof a === "function");
}
function writable2(value, start = noop$1) {
  let stop;
  const subscribers = new Set();
  function set(new_value) {
    if (safe_not_equal$1(value, new_value)) {
      value = new_value;
      if (stop) {
        const run_queue = !subscriber_queue2.length;
        for (const subscriber of subscribers) {
          subscriber[1]();
          subscriber_queue2.push(subscriber, value);
        }
        if (run_queue) {
          for (let i = 0; i < subscriber_queue2.length; i += 2) {
            subscriber_queue2[i][0](subscriber_queue2[i + 1]);
          }
          subscriber_queue2.length = 0;
        }
      }
    }
  }
  function update(fn) {
    set(fn(value));
  }
  function subscribe2(run2, invalidate = noop$1) {
    const subscriber = [run2, invalidate];
    subscribers.add(subscriber);
    if (subscribers.size === 1) {
      stop = start(set) || noop$1;
    }
    run2(value);
    return () => {
      subscribers.delete(subscriber);
      if (subscribers.size === 0) {
        stop();
        stop = null;
      }
    };
  }
  return { set, update, subscribe: subscribe2 };
}
function hash(value) {
  let hash2 = 5381;
  let i = value.length;
  if (typeof value === "string") {
    while (i)
      hash2 = hash2 * 33 ^ value.charCodeAt(--i);
  } else {
    while (i)
      hash2 = hash2 * 33 ^ value[--i];
  }
  return (hash2 >>> 0).toString(36);
}
function escape_json_string_in_html(str) {
  return escape$1(str, escape_json_string_in_html_dict, (code) => `\\u${code.toString(16).toUpperCase()}`);
}
function escape_html_attr(str) {
  return '"' + escape$1(str, escape_html_attr_dict, (code) => `&#${code};`) + '"';
}
function escape$1(str, dict, unicode_encoder) {
  let result = "";
  for (let i = 0; i < str.length; i += 1) {
    const char = str.charAt(i);
    const code = char.charCodeAt(0);
    if (char in dict) {
      result += dict[char];
    } else if (code >= 55296 && code <= 57343) {
      const next = str.charCodeAt(i + 1);
      if (code <= 56319 && next >= 56320 && next <= 57343) {
        result += char + str[++i];
      } else {
        result += unicode_encoder(code);
      }
    } else {
      result += char;
    }
  }
  return result;
}
async function render_response({
  branch,
  options: options2,
  $session,
  page_config,
  status,
  error: error2,
  page: page2
}) {
  const css23 = new Set(options2.entry.css);
  const js = new Set(options2.entry.js);
  const styles = new Set();
  const serialized_data = [];
  let rendered;
  let is_private = false;
  let maxage;
  if (error2) {
    error2.stack = options2.get_stack(error2);
  }
  if (page_config.ssr) {
    branch.forEach(({ node, loaded, fetched, uses_credentials }) => {
      if (node.css)
        node.css.forEach((url) => css23.add(url));
      if (node.js)
        node.js.forEach((url) => js.add(url));
      if (node.styles)
        node.styles.forEach((content) => styles.add(content));
      if (fetched && page_config.hydrate)
        serialized_data.push(...fetched);
      if (uses_credentials)
        is_private = true;
      maxage = loaded.maxage;
    });
    const session = writable2($session);
    const props = {
      stores: {
        page: writable2(null),
        navigating: writable2(null),
        session
      },
      page: page2,
      components: branch.map(({ node }) => node.module.default)
    };
    for (let i = 0; i < branch.length; i += 1) {
      props[`props_${i}`] = await branch[i].loaded.props;
    }
    let session_tracking_active = false;
    const unsubscribe = session.subscribe(() => {
      if (session_tracking_active)
        is_private = true;
    });
    session_tracking_active = true;
    try {
      rendered = options2.root.render(props);
    } finally {
      unsubscribe();
    }
  } else {
    rendered = { head: "", html: "", css: { code: "", map: null } };
  }
  const include_js = page_config.router || page_config.hydrate;
  if (!include_js)
    js.clear();
  const links = options2.amp ? styles.size > 0 || rendered.css.code.length > 0 ? `<style amp-custom>${Array.from(styles).concat(rendered.css.code).join("\n")}</style>` : "" : [
    ...Array.from(js).map((dep) => `<link rel="modulepreload" href="${dep}">`),
    ...Array.from(css23).map((dep) => `<link rel="stylesheet" href="${dep}">`)
  ].join("\n		");
  let init2 = "";
  if (options2.amp) {
    init2 = `
		<style amp-boilerplate>body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}</style>
		<noscript><style amp-boilerplate>body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}</style></noscript>
		<script async src="https://cdn.ampproject.org/v0.js"><\/script>`;
  } else if (include_js) {
    init2 = `<script type="module">
			import { start } from ${s$1(options2.entry.file)};
			start({
				target: ${options2.target ? `document.querySelector(${s$1(options2.target)})` : "document.body"},
				paths: ${s$1(options2.paths)},
				session: ${try_serialize($session, (error3) => {
      throw new Error(`Failed to serialize session data: ${error3.message}`);
    })},
				host: ${page2 && page2.host ? s$1(page2.host) : "location.host"},
				route: ${!!page_config.router},
				spa: ${!page_config.ssr},
				trailing_slash: ${s$1(options2.trailing_slash)},
				hydrate: ${page_config.ssr && page_config.hydrate ? `{
					status: ${status},
					error: ${serialize_error(error2)},
					nodes: [
						${(branch || []).map(({ node }) => `import(${s$1(node.entry)})`).join(",\n						")}
					],
					page: {
						host: ${page2 && page2.host ? s$1(page2.host) : "location.host"}, // TODO this is redundant
						path: ${page2 && page2.path ? try_serialize(page2.path, (error3) => {
      throw new Error(`Failed to serialize page.path: ${error3.message}`);
    }) : null},
						query: new URLSearchParams(${page2 && page2.query ? s$1(page2.query.toString()) : ""}),
						params: ${page2 && page2.params ? try_serialize(page2.params, (error3) => {
      throw new Error(`Failed to serialize page.params: ${error3.message}`);
    }) : null}
					}
				}` : "null"}
			});
		<\/script>`;
  }
  if (options2.service_worker) {
    init2 += `<script>
			if ('serviceWorker' in navigator) {
				navigator.serviceWorker.register('${options2.service_worker}');
			}
		<\/script>`;
  }
  const head = [
    rendered.head,
    styles.size && !options2.amp ? `<style data-svelte>${Array.from(styles).join("\n")}</style>` : "",
    links,
    init2
  ].join("\n\n		");
  const body = options2.amp ? rendered.html : `${rendered.html}

			${serialized_data.map(({ url, body: body2, json }) => {
    let attributes = `type="application/json" data-type="svelte-data" data-url=${escape_html_attr(url)}`;
    if (body2)
      attributes += ` data-body="${hash(body2)}"`;
    return `<script ${attributes}>${json}<\/script>`;
  }).join("\n\n	")}
		`;
  const headers = {
    "content-type": "text/html"
  };
  if (maxage) {
    headers["cache-control"] = `${is_private ? "private" : "public"}, max-age=${maxage}`;
  }
  if (!options2.floc) {
    headers["permissions-policy"] = "interest-cohort=()";
  }
  return {
    status,
    headers,
    body: options2.template({ head, body })
  };
}
function try_serialize(data, fail) {
  try {
    return devalue(data);
  } catch (err) {
    if (fail)
      fail(coalesce_to_error(err));
    return null;
  }
}
function serialize_error(error2) {
  if (!error2)
    return null;
  let serialized = try_serialize(error2);
  if (!serialized) {
    const { name, message, stack } = error2;
    serialized = try_serialize({ ...error2, name, message, stack });
  }
  if (!serialized) {
    serialized = "{}";
  }
  return serialized;
}
function normalize2(loaded) {
  const has_error_status = loaded.status && loaded.status >= 400 && loaded.status <= 599 && !loaded.redirect;
  if (loaded.error || has_error_status) {
    const status = loaded.status;
    if (!loaded.error && has_error_status) {
      return {
        status: status || 500,
        error: new Error()
      };
    }
    const error2 = typeof loaded.error === "string" ? new Error(loaded.error) : loaded.error;
    if (!(error2 instanceof Error)) {
      return {
        status: 500,
        error: new Error(`"error" property returned from load() must be a string or instance of Error, received type "${typeof error2}"`)
      };
    }
    if (!status || status < 400 || status > 599) {
      console.warn('"error" returned from load() without a valid status code \u2014 defaulting to 500');
      return { status: 500, error: error2 };
    }
    return { status, error: error2 };
  }
  if (loaded.redirect) {
    if (!loaded.status || Math.floor(loaded.status / 100) !== 3) {
      return {
        status: 500,
        error: new Error('"redirect" property returned from load() must be accompanied by a 3xx status code')
      };
    }
    if (typeof loaded.redirect !== "string") {
      return {
        status: 500,
        error: new Error('"redirect" property returned from load() must be a string')
      };
    }
  }
  if (loaded.context) {
    throw new Error('You are returning "context" from a load function. "context" was renamed to "stuff", please adjust your code accordingly.');
  }
  return loaded;
}
async function load_node({
  request,
  options: options2,
  state,
  route,
  page: page2,
  node,
  $session,
  stuff,
  prerender_enabled,
  is_leaf,
  is_error,
  status,
  error: error2
}) {
  const { module: module2 } = node;
  let uses_credentials = false;
  const fetched = [];
  let set_cookie_headers = [];
  let loaded;
  const page_proxy = new Proxy(page2, {
    get: (target, prop, receiver) => {
      if (prop === "query" && prerender_enabled) {
        throw new Error("Cannot access query on a page with prerendering enabled");
      }
      return Reflect.get(target, prop, receiver);
    }
  });
  if (module2.load) {
    const load_input = {
      page: page_proxy,
      get session() {
        uses_credentials = true;
        return $session;
      },
      fetch: async (resource, opts = {}) => {
        let url;
        if (typeof resource === "string") {
          url = resource;
        } else {
          url = resource.url;
          opts = {
            method: resource.method,
            headers: resource.headers,
            body: resource.body,
            mode: resource.mode,
            credentials: resource.credentials,
            cache: resource.cache,
            redirect: resource.redirect,
            referrer: resource.referrer,
            integrity: resource.integrity,
            ...opts
          };
        }
        const resolved = resolve(request.path, url.split("?")[0]);
        let response;
        const prefix = options2.paths.assets || options2.paths.base;
        const filename = (resolved.startsWith(prefix) ? resolved.slice(prefix.length) : resolved).slice(1);
        const filename_html = `${filename}/index.html`;
        const asset = options2.manifest.assets.find((d) => d.file === filename || d.file === filename_html);
        if (asset) {
          response = options2.read ? new Response(options2.read(asset.file), {
            headers: asset.type ? { "content-type": asset.type } : {}
          }) : await fetch(`http://${page2.host}/${asset.file}`, opts);
        } else if (resolved.startsWith("/") && !resolved.startsWith("//")) {
          const relative = resolved;
          const headers = {
            ...opts.headers
          };
          if (opts.credentials !== "omit") {
            uses_credentials = true;
            headers.cookie = request.headers.cookie;
            if (!headers.authorization) {
              headers.authorization = request.headers.authorization;
            }
          }
          if (opts.body && typeof opts.body !== "string") {
            throw new Error("Request body must be a string");
          }
          const search = url.includes("?") ? url.slice(url.indexOf("?") + 1) : "";
          const rendered = await respond({
            host: request.host,
            method: opts.method || "GET",
            headers,
            path: relative,
            rawBody: opts.body == null ? null : new TextEncoder().encode(opts.body),
            query: new URLSearchParams(search)
          }, options2, {
            fetched: url,
            initiator: route
          });
          if (rendered) {
            if (state.prerender) {
              state.prerender.dependencies.set(relative, rendered);
            }
            response = new Response(rendered.body, {
              status: rendered.status,
              headers: rendered.headers
            });
          }
        } else {
          if (resolved.startsWith("//")) {
            throw new Error(`Cannot request protocol-relative URL (${url}) in server-side fetch`);
          }
          if (typeof request.host !== "undefined") {
            const { hostname: fetch_hostname } = new URL(url);
            const [server_hostname] = request.host.split(":");
            if (`.${fetch_hostname}`.endsWith(`.${server_hostname}`) && opts.credentials !== "omit") {
              uses_credentials = true;
              opts.headers = {
                ...opts.headers,
                cookie: request.headers.cookie
              };
            }
          }
          const external_request = new Request(url, opts);
          response = await options2.hooks.externalFetch.call(null, external_request);
        }
        if (response) {
          const proxy = new Proxy(response, {
            get(response2, key, _receiver) {
              async function text() {
                const body = await response2.text();
                const headers = {};
                for (const [key2, value] of response2.headers) {
                  if (key2 === "set-cookie") {
                    set_cookie_headers = set_cookie_headers.concat(value);
                  } else if (key2 !== "etag") {
                    headers[key2] = value;
                  }
                }
                if (!opts.body || typeof opts.body === "string") {
                  fetched.push({
                    url,
                    body: opts.body,
                    json: `{"status":${response2.status},"statusText":${s(response2.statusText)},"headers":${s(headers)},"body":"${escape_json_string_in_html(body)}"}`
                  });
                }
                return body;
              }
              if (key === "text") {
                return text;
              }
              if (key === "json") {
                return async () => {
                  return JSON.parse(await text());
                };
              }
              return Reflect.get(response2, key, response2);
            }
          });
          return proxy;
        }
        return response || new Response("Not found", {
          status: 404
        });
      },
      stuff: { ...stuff }
    };
    if (is_error) {
      load_input.status = status;
      load_input.error = error2;
    }
    loaded = await module2.load.call(null, load_input);
  } else {
    loaded = {};
  }
  if (!loaded && is_leaf && !is_error)
    return;
  if (!loaded) {
    throw new Error(`${node.entry} - load must return a value except for page fall through`);
  }
  return {
    node,
    loaded: normalize2(loaded),
    stuff: loaded.stuff || stuff,
    fetched,
    set_cookie_headers,
    uses_credentials
  };
}
function resolve(base2, path) {
  const base_match = absolute.exec(base2);
  const path_match = absolute.exec(path);
  if (!base_match) {
    throw new Error(`bad base path: "${base2}"`);
  }
  const baseparts = path_match ? [] : base2.slice(base_match[0].length).split("/");
  const pathparts = path_match ? path.slice(path_match[0].length).split("/") : path.split("/");
  baseparts.pop();
  for (let i = 0; i < pathparts.length; i += 1) {
    const part = pathparts[i];
    if (part === ".")
      continue;
    else if (part === "..")
      baseparts.pop();
    else
      baseparts.push(part);
  }
  const prefix = path_match && path_match[0] || base_match && base_match[0] || "";
  return `${prefix}${baseparts.join("/")}`;
}
async function respond_with_error({ request, options: options2, state, $session, status, error: error2 }) {
  const default_layout = await options2.load_component(options2.manifest.layout);
  const default_error = await options2.load_component(options2.manifest.error);
  const page2 = {
    host: request.host,
    path: request.path,
    query: request.query,
    params: {}
  };
  const loaded = await load_node({
    request,
    options: options2,
    state,
    route: null,
    page: page2,
    node: default_layout,
    $session,
    stuff: {},
    prerender_enabled: is_prerender_enabled(options2, default_error, state),
    is_leaf: false,
    is_error: false
  });
  const branch = [
    loaded,
    await load_node({
      request,
      options: options2,
      state,
      route: null,
      page: page2,
      node: default_error,
      $session,
      stuff: loaded ? loaded.stuff : {},
      prerender_enabled: is_prerender_enabled(options2, default_error, state),
      is_leaf: false,
      is_error: true,
      status,
      error: error2
    })
  ];
  try {
    return await render_response({
      options: options2,
      $session,
      page_config: {
        hydrate: options2.hydrate,
        router: options2.router,
        ssr: options2.ssr
      },
      status,
      error: error2,
      branch,
      page: page2
    });
  } catch (err) {
    const error3 = coalesce_to_error(err);
    options2.handle_error(error3, request);
    return {
      status: 500,
      headers: {},
      body: error3.stack
    };
  }
}
function is_prerender_enabled(options2, node, state) {
  return options2.prerender && (!!node.module.prerender || !!state.prerender && state.prerender.all);
}
async function respond$1(opts) {
  const { request, options: options2, state, $session, route } = opts;
  let nodes;
  try {
    nodes = await Promise.all(route.a.map((id) => id ? options2.load_component(id) : void 0));
  } catch (err) {
    const error3 = coalesce_to_error(err);
    options2.handle_error(error3, request);
    return await respond_with_error({
      request,
      options: options2,
      state,
      $session,
      status: 500,
      error: error3
    });
  }
  const leaf = nodes[nodes.length - 1].module;
  let page_config = get_page_config(leaf, options2);
  if (!leaf.prerender && state.prerender && !state.prerender.all) {
    return {
      status: 204,
      headers: {}
    };
  }
  let branch = [];
  let status = 200;
  let error2;
  let set_cookie_headers = [];
  ssr:
    if (page_config.ssr) {
      let stuff = {};
      for (let i = 0; i < nodes.length; i += 1) {
        const node = nodes[i];
        let loaded;
        if (node) {
          try {
            loaded = await load_node({
              ...opts,
              node,
              stuff,
              prerender_enabled: is_prerender_enabled(options2, node, state),
              is_leaf: i === nodes.length - 1,
              is_error: false
            });
            if (!loaded)
              return;
            set_cookie_headers = set_cookie_headers.concat(loaded.set_cookie_headers);
            if (loaded.loaded.redirect) {
              return with_cookies({
                status: loaded.loaded.status,
                headers: {
                  location: encodeURI(loaded.loaded.redirect)
                }
              }, set_cookie_headers);
            }
            if (loaded.loaded.error) {
              ({ status, error: error2 } = loaded.loaded);
            }
          } catch (err) {
            const e = coalesce_to_error(err);
            options2.handle_error(e, request);
            status = 500;
            error2 = e;
          }
          if (loaded && !error2) {
            branch.push(loaded);
          }
          if (error2) {
            while (i--) {
              if (route.b[i]) {
                const error_node = await options2.load_component(route.b[i]);
                let node_loaded;
                let j = i;
                while (!(node_loaded = branch[j])) {
                  j -= 1;
                }
                try {
                  const error_loaded = await load_node({
                    ...opts,
                    node: error_node,
                    stuff: node_loaded.stuff,
                    prerender_enabled: is_prerender_enabled(options2, error_node, state),
                    is_leaf: false,
                    is_error: true,
                    status,
                    error: error2
                  });
                  if (error_loaded.loaded.error) {
                    continue;
                  }
                  page_config = get_page_config(error_node.module, options2);
                  branch = branch.slice(0, j + 1).concat(error_loaded);
                  break ssr;
                } catch (err) {
                  const e = coalesce_to_error(err);
                  options2.handle_error(e, request);
                  continue;
                }
              }
            }
            return with_cookies(await respond_with_error({
              request,
              options: options2,
              state,
              $session,
              status,
              error: error2
            }), set_cookie_headers);
          }
        }
        if (loaded && loaded.loaded.stuff) {
          stuff = {
            ...stuff,
            ...loaded.loaded.stuff
          };
        }
      }
    }
  try {
    return with_cookies(await render_response({
      ...opts,
      page_config,
      status,
      error: error2,
      branch: branch.filter(Boolean)
    }), set_cookie_headers);
  } catch (err) {
    const error3 = coalesce_to_error(err);
    options2.handle_error(error3, request);
    return with_cookies(await respond_with_error({
      ...opts,
      status: 500,
      error: error3
    }), set_cookie_headers);
  }
}
function get_page_config(leaf, options2) {
  return {
    ssr: "ssr" in leaf ? !!leaf.ssr : options2.ssr,
    router: "router" in leaf ? !!leaf.router : options2.router,
    hydrate: "hydrate" in leaf ? !!leaf.hydrate : options2.hydrate
  };
}
function with_cookies(response, set_cookie_headers) {
  if (set_cookie_headers.length) {
    response.headers["set-cookie"] = set_cookie_headers;
  }
  return response;
}
async function render_page(request, route, match, options2, state) {
  if (state.initiator === route) {
    return {
      status: 404,
      headers: {},
      body: `Not found: ${request.path}`
    };
  }
  const params = route.params(match);
  const page2 = {
    host: request.host,
    path: request.path,
    query: request.query,
    params
  };
  const $session = await options2.hooks.getSession(request);
  const response = await respond$1({
    request,
    options: options2,
    state,
    $session,
    route,
    page: page2
  });
  if (response) {
    return response;
  }
  if (state.fetched) {
    return {
      status: 500,
      headers: {},
      body: `Bad request in load function: failed to fetch ${state.fetched}`
    };
  }
}
function read_only_form_data() {
  const map2 = new Map();
  return {
    append(key, value) {
      if (map2.has(key)) {
        (map2.get(key) || []).push(value);
      } else {
        map2.set(key, [value]);
      }
    },
    data: new ReadOnlyFormData(map2)
  };
}
function parse_body(raw, headers) {
  if (!raw)
    return raw;
  const content_type = headers["content-type"];
  const [type, ...directives] = content_type ? content_type.split(/;\s*/) : [];
  const text = () => new TextDecoder(headers["content-encoding"] || "utf-8").decode(raw);
  switch (type) {
    case "text/plain":
      return text();
    case "application/json":
      return JSON.parse(text());
    case "application/x-www-form-urlencoded":
      return get_urlencoded(text());
    case "multipart/form-data": {
      const boundary = directives.find((directive) => directive.startsWith("boundary="));
      if (!boundary)
        throw new Error("Missing boundary");
      return get_multipart(text(), boundary.slice("boundary=".length));
    }
    default:
      return raw;
  }
}
function get_urlencoded(text) {
  const { data, append } = read_only_form_data();
  text.replace(/\+/g, " ").split("&").forEach((str) => {
    const [key, value] = str.split("=");
    append(decodeURIComponent(key), decodeURIComponent(value));
  });
  return data;
}
function get_multipart(text, boundary) {
  const parts = text.split(`--${boundary}`);
  if (parts[0] !== "" || parts[parts.length - 1].trim() !== "--") {
    throw new Error("Malformed form data");
  }
  const { data, append } = read_only_form_data();
  parts.slice(1, -1).forEach((part) => {
    const match = /\s*([\s\S]+?)\r\n\r\n([\s\S]*)\s*/.exec(part);
    if (!match) {
      throw new Error("Malformed form data");
    }
    const raw_headers = match[1];
    const body = match[2].trim();
    let key;
    const headers = {};
    raw_headers.split("\r\n").forEach((str) => {
      const [raw_header, ...raw_directives] = str.split("; ");
      let [name, value] = raw_header.split(": ");
      name = name.toLowerCase();
      headers[name] = value;
      const directives = {};
      raw_directives.forEach((raw_directive) => {
        const [name2, value2] = raw_directive.split("=");
        directives[name2] = JSON.parse(value2);
      });
      if (name === "content-disposition") {
        if (value !== "form-data")
          throw new Error("Malformed form data");
        if (directives.filename) {
          throw new Error("File upload is not yet implemented");
        }
        if (directives.name) {
          key = directives.name;
        }
      }
    });
    if (!key)
      throw new Error("Malformed form data");
    append(key, body);
  });
  return data;
}
async function respond(incoming, options2, state = {}) {
  if (incoming.path !== "/" && options2.trailing_slash !== "ignore") {
    const has_trailing_slash = incoming.path.endsWith("/");
    if (has_trailing_slash && options2.trailing_slash === "never" || !has_trailing_slash && options2.trailing_slash === "always" && !(incoming.path.split("/").pop() || "").includes(".")) {
      const path = has_trailing_slash ? incoming.path.slice(0, -1) : incoming.path + "/";
      const q = incoming.query.toString();
      return {
        status: 301,
        headers: {
          location: options2.paths.base + path + (q ? `?${q}` : "")
        }
      };
    }
  }
  const headers = lowercase_keys(incoming.headers);
  const request = {
    ...incoming,
    headers,
    body: parse_body(incoming.rawBody, headers),
    params: {},
    locals: {}
  };
  try {
    return await options2.hooks.handle({
      request,
      resolve: async (request2) => {
        if (state.prerender && state.prerender.fallback) {
          return await render_response({
            options: options2,
            $session: await options2.hooks.getSession(request2),
            page_config: { ssr: false, router: true, hydrate: true },
            status: 200,
            branch: []
          });
        }
        const decoded = decodeURI(request2.path);
        for (const route of options2.manifest.routes) {
          const match = route.pattern.exec(decoded);
          if (!match)
            continue;
          const response = route.type === "endpoint" ? await render_endpoint(request2, route, match) : await render_page(request2, route, match, options2, state);
          if (response) {
            if (response.status === 200) {
              const cache_control = get_single_valued_header(response.headers, "cache-control");
              if (!cache_control || !/(no-store|immutable)/.test(cache_control)) {
                const etag = `"${hash(response.body || "")}"`;
                if (request2.headers["if-none-match"] === etag) {
                  return {
                    status: 304,
                    headers: {}
                  };
                }
                response.headers["etag"] = etag;
              }
            }
            return response;
          }
        }
        const $session = await options2.hooks.getSession(request2);
        return await respond_with_error({
          request: request2,
          options: options2,
          state,
          $session,
          status: 404,
          error: new Error(`Not found: ${request2.path}`)
        });
      }
    });
  } catch (err) {
    const e = coalesce_to_error(err);
    options2.handle_error(e, request);
    return {
      status: 500,
      headers: {},
      body: options2.dev ? e.stack : e.message
    };
  }
}
function noop() {
}
function assign(tar, src2) {
  for (const k in src2)
    tar[k] = src2[k];
  return tar;
}
function run(fn) {
  return fn();
}
function blank_object() {
  return Object.create(null);
}
function run_all(fns) {
  fns.forEach(run);
}
function safe_not_equal(a, b) {
  return a != a ? b == b : a !== b || (a && typeof a === "object" || typeof a === "function");
}
function subscribe(store, ...callbacks) {
  if (store == null) {
    return noop;
  }
  const unsub = store.subscribe(...callbacks);
  return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;
}
function compute_rest_props(props, keys) {
  const rest = {};
  keys = new Set(keys);
  for (const k in props)
    if (!keys.has(k) && k[0] !== "$")
      rest[k] = props[k];
  return rest;
}
function null_to_empty(value) {
  return value == null ? "" : value;
}
function set_store_value(store, ret, value) {
  store.set(value);
  return ret;
}
function run_tasks(now2) {
  tasks.forEach((task) => {
    if (!task.c(now2)) {
      tasks.delete(task);
      task.f();
    }
  });
  if (tasks.size !== 0)
    raf(run_tasks);
}
function loop(callback) {
  let task;
  if (tasks.size === 0)
    raf(run_tasks);
  return {
    promise: new Promise((fulfill) => {
      tasks.add(task = { c: callback, f: fulfill });
    }),
    abort() {
      tasks.delete(task);
    }
  };
}
function custom_event(type, detail, bubbles = false) {
  const e = document.createEvent("CustomEvent");
  e.initCustomEvent(type, bubbles, false, detail);
  return e;
}
function set_current_component(component) {
  current_component = component;
}
function get_current_component() {
  if (!current_component)
    throw new Error("Function called outside component initialization");
  return current_component;
}
function createEventDispatcher() {
  const component = get_current_component();
  return (type, detail) => {
    const callbacks = component.$$.callbacks[type];
    if (callbacks) {
      const event = custom_event(type, detail);
      callbacks.slice().forEach((fn) => {
        fn.call(component, event);
      });
    }
  };
}
function setContext(key, context) {
  get_current_component().$$.context.set(key, context);
}
function getContext(key) {
  return get_current_component().$$.context.get(key);
}
function spread(args, classes_to_add) {
  const attributes = Object.assign({}, ...args);
  if (classes_to_add) {
    if (attributes.class == null) {
      attributes.class = classes_to_add;
    } else {
      attributes.class += " " + classes_to_add;
    }
  }
  let str = "";
  Object.keys(attributes).forEach((name) => {
    if (invalid_attribute_name_character.test(name))
      return;
    const value = attributes[name];
    if (value === true)
      str += " " + name;
    else if (boolean_attributes.has(name.toLowerCase())) {
      if (value)
        str += " " + name;
    } else if (value != null) {
      str += ` ${name}="${value}"`;
    }
  });
  return str;
}
function escape(html) {
  return String(html).replace(/["'&<>]/g, (match) => escaped[match]);
}
function escape_attribute_value(value) {
  return typeof value === "string" ? escape(value) : value;
}
function escape_object(obj) {
  const result = {};
  for (const key in obj) {
    result[key] = escape_attribute_value(obj[key]);
  }
  return result;
}
function each(items, fn) {
  let str = "";
  for (let i = 0; i < items.length; i += 1) {
    str += fn(items[i], i);
  }
  return str;
}
function validate_component(component, name) {
  if (!component || !component.$$render) {
    if (name === "svelte:component")
      name += " this={...}";
    throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);
  }
  return component;
}
function create_ssr_component(fn) {
  function $$render(result, props, bindings, slots, context) {
    const parent_component = current_component;
    const $$ = {
      on_destroy,
      context: new Map(context || (parent_component ? parent_component.$$.context : [])),
      on_mount: [],
      before_update: [],
      after_update: [],
      callbacks: blank_object()
    };
    set_current_component({ $$ });
    const html = fn(result, props, bindings, slots);
    set_current_component(parent_component);
    return html;
  }
  return {
    render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {
      on_destroy = [];
      const result = { title: "", head: "", css: new Set() };
      const html = $$render(result, props, {}, $$slots, context);
      run_all(on_destroy);
      return {
        html,
        css: {
          code: Array.from(result.css).map((css23) => css23.code).join("\n"),
          map: null
        },
        head: result.title + result.head
      };
    },
    $$render
  };
}
function add_attribute(name, value, boolean) {
  if (value == null || boolean && !value)
    return "";
  return ` ${name}${value === true ? "" : `=${typeof value === "string" ? JSON.stringify(escape(value)) : `"${value}"`}`}`;
}
function afterUpdate() {
}
function set_paths(paths) {
  base = paths.base;
  assets = paths.assets || base;
}
function set_prerendering(value) {
}
function init(settings = default_settings) {
  set_paths(settings.paths);
  set_prerendering(settings.prerendering || false);
  const hooks = get_hooks(user_hooks);
  options = {
    amp: false,
    dev: false,
    entry: {
      file: assets + "/_app/start-fb998a10.js",
      css: [assets + "/_app/assets/start-d977ffc4.css"],
      js: [assets + "/_app/start-fb998a10.js", assets + "/_app/chunks/vendor-dfb9df3e.js"]
    },
    fetched: void 0,
    floc: false,
    get_component_path: (id) => assets + "/_app/" + entry_lookup[id],
    get_stack: (error2) => String(error2),
    handle_error: (error2, request) => {
      hooks.handleError({ error: error2, request });
      error2.stack = options.get_stack(error2);
    },
    hooks,
    hydrate: true,
    initiator: void 0,
    load_component,
    manifest,
    paths: settings.paths,
    prerender: true,
    read: settings.read,
    root: Root,
    service_worker: null,
    router: true,
    ssr: true,
    target: "#svelte",
    template,
    trailing_slash: "never"
  };
}
async function load_component(file) {
  const { entry, css: css23, js, styles } = metadata_lookup[file];
  return {
    module: await module_lookup[file](),
    entry: assets + "/_app/" + entry,
    css: css23.map((dep) => assets + "/_app/" + dep),
    js: js.map((dep) => assets + "/_app/" + dep),
    styles
  };
}
function render(request, {
  prerender
} = {}) {
  const host = request.headers["host"];
  return respond({ ...request, host }, options, { prerender });
}
var __accessCheck, __privateGet, __privateAdd, __privateSet, _map, chars, unsafeChars, reserved, escaped$1, objectProtoOwnPropertyNames, subscriber_queue2, escape_json_string_in_html_dict, escape_html_attr_dict, s$1, s, absolute, ReadOnlyFormData, identity, is_client, now, raf, tasks, current_component, boolean_attributes, invalid_attribute_name_character, escaped, missing_component, on_destroy, css22, Root, base, assets, user_hooks, template, options, default_settings, empty, manifest, get_hooks, module_lookup, metadata_lookup;
var init_app_9f378dda = __esm({
  ".svelte-kit/output/server/chunks/app-9f378dda.js"() {
    init_shims();
    __accessCheck = (obj, member, msg) => {
      if (!member.has(obj))
        throw TypeError("Cannot " + msg);
    };
    __privateGet = (obj, member, getter) => {
      __accessCheck(obj, member, "read from private field");
      return getter ? getter.call(obj) : member.get(obj);
    };
    __privateAdd = (obj, member, value) => {
      if (member.has(obj))
        throw TypeError("Cannot add the same private member more than once");
      member instanceof WeakSet ? member.add(obj) : member.set(obj, value);
    };
    __privateSet = (obj, member, value, setter) => {
      __accessCheck(obj, member, "write to private field");
      setter ? setter.call(obj, value) : member.set(obj, value);
      return value;
    };
    chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_$";
    unsafeChars = /[<>\b\f\n\r\t\0\u2028\u2029]/g;
    reserved = /^(?:do|if|in|for|int|let|new|try|var|byte|case|char|else|enum|goto|long|this|void|with|await|break|catch|class|const|final|float|short|super|throw|while|yield|delete|double|export|import|native|return|switch|throws|typeof|boolean|default|extends|finally|package|private|abstract|continue|debugger|function|volatile|interface|protected|transient|implements|instanceof|synchronized)$/;
    escaped$1 = {
      "<": "\\u003C",
      ">": "\\u003E",
      "/": "\\u002F",
      "\\": "\\\\",
      "\b": "\\b",
      "\f": "\\f",
      "\n": "\\n",
      "\r": "\\r",
      "	": "\\t",
      "\0": "\\0",
      "\u2028": "\\u2028",
      "\u2029": "\\u2029"
    };
    objectProtoOwnPropertyNames = Object.getOwnPropertyNames(Object.prototype).sort().join("\0");
    Promise.resolve();
    subscriber_queue2 = [];
    escape_json_string_in_html_dict = {
      '"': '\\"',
      "<": "\\u003C",
      ">": "\\u003E",
      "/": "\\u002F",
      "\\": "\\\\",
      "\b": "\\b",
      "\f": "\\f",
      "\n": "\\n",
      "\r": "\\r",
      "	": "\\t",
      "\0": "\\0",
      "\u2028": "\\u2028",
      "\u2029": "\\u2029"
    };
    escape_html_attr_dict = {
      "<": "&lt;",
      ">": "&gt;",
      '"': "&quot;"
    };
    s$1 = JSON.stringify;
    s = JSON.stringify;
    absolute = /^([a-z]+:)?\/?\//;
    ReadOnlyFormData = class {
      constructor(map2) {
        __privateAdd(this, _map, void 0);
        __privateSet(this, _map, map2);
      }
      get(key) {
        const value = __privateGet(this, _map).get(key);
        return value && value[0];
      }
      getAll(key) {
        return __privateGet(this, _map).get(key);
      }
      has(key) {
        return __privateGet(this, _map).has(key);
      }
      *[Symbol.iterator]() {
        for (const [key, value] of __privateGet(this, _map)) {
          for (let i = 0; i < value.length; i += 1) {
            yield [key, value[i]];
          }
        }
      }
      *entries() {
        for (const [key, value] of __privateGet(this, _map)) {
          for (let i = 0; i < value.length; i += 1) {
            yield [key, value[i]];
          }
        }
      }
      *keys() {
        for (const [key] of __privateGet(this, _map))
          yield key;
      }
      *values() {
        for (const [, value] of __privateGet(this, _map)) {
          for (let i = 0; i < value.length; i += 1) {
            yield value[i];
          }
        }
      }
    };
    _map = new WeakMap();
    identity = (x) => x;
    is_client = typeof window !== "undefined";
    now = is_client ? () => window.performance.now() : () => Date.now();
    raf = is_client ? (cb) => requestAnimationFrame(cb) : noop;
    tasks = new Set();
    Promise.resolve();
    boolean_attributes = new Set([
      "allowfullscreen",
      "allowpaymentrequest",
      "async",
      "autofocus",
      "autoplay",
      "checked",
      "controls",
      "default",
      "defer",
      "disabled",
      "formnovalidate",
      "hidden",
      "ismap",
      "loop",
      "multiple",
      "muted",
      "nomodule",
      "novalidate",
      "open",
      "playsinline",
      "readonly",
      "required",
      "reversed",
      "selected"
    ]);
    invalid_attribute_name_character = /[\s'">/=\u{FDD0}-\u{FDEF}\u{FFFE}\u{FFFF}\u{1FFFE}\u{1FFFF}\u{2FFFE}\u{2FFFF}\u{3FFFE}\u{3FFFF}\u{4FFFE}\u{4FFFF}\u{5FFFE}\u{5FFFF}\u{6FFFE}\u{6FFFF}\u{7FFFE}\u{7FFFF}\u{8FFFE}\u{8FFFF}\u{9FFFE}\u{9FFFF}\u{AFFFE}\u{AFFFF}\u{BFFFE}\u{BFFFF}\u{CFFFE}\u{CFFFF}\u{DFFFE}\u{DFFFF}\u{EFFFE}\u{EFFFF}\u{FFFFE}\u{FFFFF}\u{10FFFE}\u{10FFFF}]/u;
    escaped = {
      '"': "&quot;",
      "'": "&#39;",
      "&": "&amp;",
      "<": "&lt;",
      ">": "&gt;"
    };
    missing_component = {
      $$render: () => ""
    };
    css22 = {
      code: "#svelte-announcer.svelte-1j55zn5{position:absolute;left:0;top:0;clip:rect(0 0 0 0);clip-path:inset(50%);overflow:hidden;white-space:nowrap;width:1px;height:1px}",
      map: null
    };
    Root = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { stores } = $$props;
      let { page: page2 } = $$props;
      let { components } = $$props;
      let { props_0 = null } = $$props;
      let { props_1 = null } = $$props;
      let { props_2 = null } = $$props;
      setContext("__svelte__", stores);
      afterUpdate(stores.page.notify);
      if ($$props.stores === void 0 && $$bindings.stores && stores !== void 0)
        $$bindings.stores(stores);
      if ($$props.page === void 0 && $$bindings.page && page2 !== void 0)
        $$bindings.page(page2);
      if ($$props.components === void 0 && $$bindings.components && components !== void 0)
        $$bindings.components(components);
      if ($$props.props_0 === void 0 && $$bindings.props_0 && props_0 !== void 0)
        $$bindings.props_0(props_0);
      if ($$props.props_1 === void 0 && $$bindings.props_1 && props_1 !== void 0)
        $$bindings.props_1(props_1);
      if ($$props.props_2 === void 0 && $$bindings.props_2 && props_2 !== void 0)
        $$bindings.props_2(props_2);
      $$result.css.add(css22);
      {
        stores.page.set(page2);
      }
      return `


${validate_component(components[0] || missing_component, "svelte:component").$$render($$result, Object.assign(props_0 || {}), {}, {
        default: () => `${components[1] ? `${validate_component(components[1] || missing_component, "svelte:component").$$render($$result, Object.assign(props_1 || {}), {}, {
          default: () => `${components[2] ? `${validate_component(components[2] || missing_component, "svelte:component").$$render($$result, Object.assign(props_2 || {}), {}, {})}` : ``}`
        })}` : ``}`
      })}

${``}`;
    });
    base = "";
    assets = "";
    user_hooks = /* @__PURE__ */ Object.freeze({
      __proto__: null,
      [Symbol.toStringTag]: "Module"
    });
    template = ({ head, body }) => '<!DOCTYPE html>\n<html lang="en">\n  <head>\n    <meta charset="utf-8" />\n    <!-- <link rel="icon" href="/favicon.svg" /> -->\n    <link rel="icon" href="data:image/svg+xml, \n                          <svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22>\n                            <text y=%221em%22 font-size=%2285%22>\u{1F642}</text>\n                          </svg>">\n\n    <link rel="preload" href="https://use.typekit.net/mhr2lku.css" as="style">\n    <meta name="viewport" content="width=device-width, initial-scale=1" />\n    \n    <link rel="stylesheet" href="https://use.typekit.net/mhr2lku.css">\n\n    ' + head + '\n  </head>\n  <body>\n    <div id="svelte">' + body + "</div>\n  </body>\n</html>\n";
    options = null;
    default_settings = { paths: { "base": "", "assets": "" } };
    empty = () => ({});
    manifest = {
      assets: [{ "file": ".DS_Store", "size": 10244, "type": null }, { "file": "favicon.svg", "size": 110, "type": "image/svg+xml" }, { "file": "fonts/.DS_Store", "size": 6148, "type": null }, { "file": "fonts/Satoshi-Black.eot", "size": 73352, "type": "application/vnd.ms-fontobject" }, { "file": "fonts/Satoshi-Black.ttf", "size": 73176, "type": "font/ttf" }, { "file": "fonts/Satoshi-Black.woff", "size": 30376, "type": "font/woff" }, { "file": "fonts/Satoshi-Black.woff2", "size": 23484, "type": "font/woff2" }, { "file": "fonts/Satoshi-BlackItalic.eot", "size": 75950, "type": "application/vnd.ms-fontobject" }, { "file": "fonts/Satoshi-BlackItalic.ttf", "size": 75760, "type": "font/ttf" }, { "file": "fonts/Satoshi-BlackItalic.woff", "size": 31364, "type": "font/woff" }, { "file": "fonts/Satoshi-BlackItalic.woff2", "size": 24276, "type": "font/woff2" }, { "file": "fonts/Satoshi-Bold.eot", "size": 73532, "type": "application/vnd.ms-fontobject" }, { "file": "fonts/Satoshi-Bold.ttf", "size": 73368, "type": "font/ttf" }, { "file": "fonts/Satoshi-Bold.woff", "size": 32972, "type": "font/woff" }, { "file": "fonts/Satoshi-Bold.woff2", "size": 25328, "type": "font/woff2" }, { "file": "fonts/Satoshi-BoldItalic.eot", "size": 76620, "type": "application/vnd.ms-fontobject" }, { "file": "fonts/Satoshi-BoldItalic.ttf", "size": 76452, "type": "font/ttf" }, { "file": "fonts/Satoshi-BoldItalic.woff", "size": 34336, "type": "font/woff" }, { "file": "fonts/Satoshi-BoldItalic.woff2", "size": 26300, "type": "font/woff2" }, { "file": "fonts/Satoshi-Italic.eot", "size": 76762, "type": "application/vnd.ms-fontobject" }, { "file": "fonts/Satoshi-Italic.ttf", "size": 76604, "type": "font/ttf" }, { "file": "fonts/Satoshi-Italic.woff", "size": 34336, "type": "font/woff" }, { "file": "fonts/Satoshi-Italic.woff2", "size": 26456, "type": "font/woff2" }, { "file": "fonts/Satoshi-Light.eot", "size": 71860, "type": "application/vnd.ms-fontobject" }, { "file": "fonts/Satoshi-Light.ttf", "size": 71684, "type": "font/ttf" }, { "file": "fonts/Satoshi-Light.woff", "size": 29276, "type": "font/woff" }, { "file": "fonts/Satoshi-Light.woff2", "size": 22800, "type": "font/woff2" }, { "file": "fonts/Satoshi-LightItalic.eot", "size": 75590, "type": "application/vnd.ms-fontobject" }, { "file": "fonts/Satoshi-LightItalic.ttf", "size": 75400, "type": "font/ttf" }, { "file": "fonts/Satoshi-LightItalic.woff", "size": 30336, "type": "font/woff" }, { "file": "fonts/Satoshi-LightItalic.woff2", "size": 23408, "type": "font/woff2" }, { "file": "fonts/Satoshi-Medium.eot", "size": 73934, "type": "application/vnd.ms-fontobject" }, { "file": "fonts/Satoshi-Medium.ttf", "size": 73756, "type": "font/ttf" }, { "file": "fonts/Satoshi-Medium.woff", "size": 33272, "type": "font/woff" }, { "file": "fonts/Satoshi-Medium.woff2", "size": 25596, "type": "font/woff2" }, { "file": "fonts/Satoshi-MediumItalic.eot", "size": 76888, "type": "application/vnd.ms-fontobject" }, { "file": "fonts/Satoshi-MediumItalic.ttf", "size": 76696, "type": "font/ttf" }, { "file": "fonts/Satoshi-MediumItalic.woff", "size": 34576, "type": "font/woff" }, { "file": "fonts/Satoshi-MediumItalic.woff2", "size": 26696, "type": "font/woff2" }, { "file": "fonts/Satoshi-Regular.eot", "size": 73634, "type": "application/vnd.ms-fontobject" }, { "file": "fonts/Satoshi-Regular.ttf", "size": 73476, "type": "font/ttf" }, { "file": "fonts/Satoshi-Regular.woff", "size": 33024, "type": "font/woff" }, { "file": "fonts/Satoshi-Regular.woff2", "size": 25516, "type": "font/woff2" }, { "file": "fonts/Satoshi-Variable.eot", "size": 127628, "type": "application/vnd.ms-fontobject" }, { "file": "fonts/Satoshi-Variable.ttf", "size": 127420, "type": "font/ttf" }, { "file": "fonts/Satoshi-Variable.woff", "size": 35160, "type": "font/woff" }, { "file": "fonts/Satoshi-Variable.woff2", "size": 42588, "type": "font/woff2" }, { "file": "fonts/Satoshi-VariableItalic.eot", "size": 129984, "type": "application/vnd.ms-fontobject" }, { "file": "fonts/Satoshi-VariableItalic.ttf", "size": 129748, "type": "font/ttf" }, { "file": "fonts/Satoshi-VariableItalic.woff", "size": 36472, "type": "font/woff" }, { "file": "fonts/Satoshi-VariableItalic.woff2", "size": 43844, "type": "font/woff2" }, { "file": "g/images/post/covid-gun-spikes/featured-1200.png", "size": 335200, "type": "image/png" }, { "file": "g/images/post/covid-gun-spikes/featured-1200.webp", "size": 74794, "type": "image/webp" }, { "file": "g/images/post/covid-gun-spikes/featured-400.png", "size": 62998, "type": "image/png" }, { "file": "g/images/post/covid-gun-spikes/featured-400.webp", "size": 11600, "type": "image/webp" }, { "file": "g/images/post/covid-gun-spikes/featured-800.png", "size": 186980, "type": "image/png" }, { "file": "g/images/post/covid-gun-spikes/featured-800.webp", "size": 38156, "type": "image/webp" }, { "file": "g/images/post/covid-gun-spikes/unnamed-chunk-4-1-1200.png", "size": 187606, "type": "image/png" }, { "file": "g/images/post/covid-gun-spikes/unnamed-chunk-4-1-1200.webp", "size": 29142, "type": "image/webp" }, { "file": "g/images/post/covid-gun-spikes/unnamed-chunk-4-1-400.png", "size": 38284, "type": "image/png" }, { "file": "g/images/post/covid-gun-spikes/unnamed-chunk-4-1-400.webp", "size": 7280, "type": "image/webp" }, { "file": "g/images/post/covid-gun-spikes/unnamed-chunk-4-1-800.png", "size": 103448, "type": "image/png" }, { "file": "g/images/post/covid-gun-spikes/unnamed-chunk-4-1-800.webp", "size": 17742, "type": "image/webp" }, { "file": "g/images/post/covid-gun-spikes/unnamed-chunk-5-1-1200.png", "size": 67151, "type": "image/png" }, { "file": "g/images/post/covid-gun-spikes/unnamed-chunk-5-1-1200.webp", "size": 21026, "type": "image/webp" }, { "file": "g/images/post/covid-gun-spikes/unnamed-chunk-5-1-400.png", "size": 21350, "type": "image/png" }, { "file": "g/images/post/covid-gun-spikes/unnamed-chunk-5-1-400.webp", "size": 6202, "type": "image/webp" }, { "file": "g/images/post/covid-gun-spikes/unnamed-chunk-5-1-800.png", "size": 45216, "type": "image/png" }, { "file": "g/images/post/covid-gun-spikes/unnamed-chunk-5-1-800.webp", "size": 13876, "type": "image/webp" }, { "file": "g/images/post/covid-gun-spikes/unnamed-chunk-6-1-1200.png", "size": 143144, "type": "image/png" }, { "file": "g/images/post/covid-gun-spikes/unnamed-chunk-6-1-1200.webp", "size": 34192, "type": "image/webp" }, { "file": "g/images/post/covid-gun-spikes/unnamed-chunk-6-1-400.png", "size": 36205, "type": "image/png" }, { "file": "g/images/post/covid-gun-spikes/unnamed-chunk-6-1-400.webp", "size": 9086, "type": "image/webp" }, { "file": "g/images/post/covid-gun-spikes/unnamed-chunk-6-1-800.png", "size": 88862, "type": "image/png" }, { "file": "g/images/post/covid-gun-spikes/unnamed-chunk-6-1-800.webp", "size": 21660, "type": "image/webp" }, { "file": "g/images/project/atus/header-1200.png", "size": 117468, "type": "image/png" }, { "file": "g/images/project/atus/header-1200.webp", "size": 32554, "type": "image/webp" }, { "file": "g/images/project/atus/header-400.png", "size": 24438, "type": "image/png" }, { "file": "g/images/project/atus/header-400.webp", "size": 5824, "type": "image/webp" }, { "file": "g/images/project/atus/header-800.png", "size": 67372, "type": "image/png" }, { "file": "g/images/project/atus/header-800.webp", "size": 18774, "type": "image/webp" }, { "file": "g/images/project/atus/mac-1-1200.png", "size": 143023, "type": "image/png" }, { "file": "g/images/project/atus/mac-1-1200.webp", "size": 24644, "type": "image/webp" }, { "file": "g/images/project/atus/mac-1-400.png", "size": 28398, "type": "image/png" }, { "file": "g/images/project/atus/mac-1-400.webp", "size": 4934, "type": "image/webp" }, { "file": "g/images/project/atus/mac-1-800.png", "size": 78494, "type": "image/png" }, { "file": "g/images/project/atus/mac-1-800.webp", "size": 14538, "type": "image/webp" }, { "file": "g/images/project/atus/mac-2-1200.png", "size": 155159, "type": "image/png" }, { "file": "g/images/project/atus/mac-2-1200.webp", "size": 29006, "type": "image/webp" }, { "file": "g/images/project/atus/mac-2-400.png", "size": 29767, "type": "image/png" }, { "file": "g/images/project/atus/mac-2-400.webp", "size": 4998, "type": "image/webp" }, { "file": "g/images/project/atus/mac-2-800.png", "size": 84722, "type": "image/png" }, { "file": "g/images/project/atus/mac-2-800.webp", "size": 15280, "type": "image/webp" }, { "file": "g/images/project/atus/phone-1-1200.png", "size": 480445, "type": "image/png" }, { "file": "g/images/project/atus/phone-1-1200.webp", "size": 79350, "type": "image/webp" }, { "file": "g/images/project/atus/phone-1-400.png", "size": 87608, "type": "image/png" }, { "file": "g/images/project/atus/phone-1-400.webp", "size": 20558, "type": "image/webp" }, { "file": "g/images/project/atus/phone-1-800.png", "size": 252859, "type": "image/png" }, { "file": "g/images/project/atus/phone-1-800.webp", "size": 50868, "type": "image/webp" }, { "file": "g/images/project/atus/phone-2-1200.png", "size": 534391, "type": "image/png" }, { "file": "g/images/project/atus/phone-2-1200.webp", "size": 94984, "type": "image/webp" }, { "file": "g/images/project/atus/phone-2-400.png", "size": 96268, "type": "image/png" }, { "file": "g/images/project/atus/phone-2-400.webp", "size": 22660, "type": "image/webp" }, { "file": "g/images/project/atus/phone-2-800.png", "size": 280005, "type": "image/png" }, { "file": "g/images/project/atus/phone-2-800.webp", "size": 59932, "type": "image/webp" }, { "file": "g/images/project/bob-ross-art-gallery/header-1200.png", "size": 659167, "type": "image/png" }, { "file": "g/images/project/bob-ross-art-gallery/header-1200.webp", "size": 23092, "type": "image/webp" }, { "file": "g/images/project/bob-ross-art-gallery/header-400.png", "size": 82475, "type": "image/png" }, { "file": "g/images/project/bob-ross-art-gallery/header-400.webp", "size": 5700, "type": "image/webp" }, { "file": "g/images/project/bob-ross-art-gallery/header-800.png", "size": 314202, "type": "image/png" }, { "file": "g/images/project/bob-ross-art-gallery/header-800.webp", "size": 12684, "type": "image/webp" }, { "file": "g/images/project/bob-ross-art-gallery/iphone-1-400.png", "size": 99969, "type": "image/png" }, { "file": "g/images/project/bob-ross-art-gallery/iphone-1-400.webp", "size": 18320, "type": "image/webp" }, { "file": "g/images/project/bob-ross-art-gallery/iphone-1-800.png", "size": 283987, "type": "image/png" }, { "file": "g/images/project/bob-ross-art-gallery/iphone-1-800.webp", "size": 41218, "type": "image/webp" }, { "file": "g/images/project/bob-ross-art-gallery/iphone-2-400.png", "size": 101625, "type": "image/png" }, { "file": "g/images/project/bob-ross-art-gallery/iphone-2-400.webp", "size": 17096, "type": "image/webp" }, { "file": "g/images/project/bob-ross-art-gallery/iphone-2-800.png", "size": 295392, "type": "image/png" }, { "file": "g/images/project/bob-ross-art-gallery/iphone-2-800.webp", "size": 38990, "type": "image/webp" }, { "file": "g/images/project/bob-ross-art-gallery/iphone-3-400.png", "size": 116485, "type": "image/png" }, { "file": "g/images/project/bob-ross-art-gallery/iphone-3-400.webp", "size": 21446, "type": "image/webp" }, { "file": "g/images/project/bob-ross-art-gallery/iphone-3-800.png", "size": 335388, "type": "image/png" }, { "file": "g/images/project/bob-ross-art-gallery/iphone-3-800.webp", "size": 49034, "type": "image/webp" }, { "file": "g/images/project/bob-ross-art-gallery/iphone-4-400.png", "size": 227477, "type": "image/png" }, { "file": "g/images/project/bob-ross-art-gallery/iphone-4-400.webp", "size": 25014, "type": "image/webp" }, { "file": "g/images/project/bob-ross-art-gallery/iphone-4-800.png", "size": 679086, "type": "image/png" }, { "file": "g/images/project/bob-ross-art-gallery/iphone-4-800.webp", "size": 61190, "type": "image/webp" }, { "file": "g/images/project/bob-ross-art-gallery/mac-1-1200.png", "size": 127931, "type": "image/png" }, { "file": "g/images/project/bob-ross-art-gallery/mac-1-1200.webp", "size": 16534, "type": "image/webp" }, { "file": "g/images/project/bob-ross-art-gallery/mac-1-400.png", "size": 31724, "type": "image/png" }, { "file": "g/images/project/bob-ross-art-gallery/mac-1-400.webp", "size": 3498, "type": "image/webp" }, { "file": "g/images/project/bob-ross-art-gallery/mac-1-800.png", "size": 72757, "type": "image/png" }, { "file": "g/images/project/bob-ross-art-gallery/mac-1-800.webp", "size": 9526, "type": "image/webp" }, { "file": "g/images/project/bob-ross-art-gallery/mac-2-1200.png", "size": 127937, "type": "image/png" }, { "file": "g/images/project/bob-ross-art-gallery/mac-2-1200.webp", "size": 16030, "type": "image/webp" }, { "file": "g/images/project/bob-ross-art-gallery/mac-2-400.png", "size": 25287, "type": "image/png" }, { "file": "g/images/project/bob-ross-art-gallery/mac-2-400.webp", "size": 3426, "type": "image/webp" }, { "file": "g/images/project/bob-ross-art-gallery/mac-2-800.png", "size": 68795, "type": "image/png" }, { "file": "g/images/project/bob-ross-art-gallery/mac-2-800.webp", "size": 9310, "type": "image/webp" }, { "file": "g/images/project/bob-ross-art-gallery/mac-3-1200.png", "size": 127950, "type": "image/png" }, { "file": "g/images/project/bob-ross-art-gallery/mac-3-1200.webp", "size": 18116, "type": "image/webp" }, { "file": "g/images/project/bob-ross-art-gallery/mac-3-400.png", "size": 27536, "type": "image/png" }, { "file": "g/images/project/bob-ross-art-gallery/mac-3-400.webp", "size": 4358, "type": "image/webp" }, { "file": "g/images/project/bob-ross-art-gallery/mac-3-800.png", "size": 69585, "type": "image/png" }, { "file": "g/images/project/bob-ross-art-gallery/mac-3-800.webp", "size": 10800, "type": "image/webp" }, { "file": "g/images/project/bob-ross-art-gallery/mac-4-1200.png", "size": 205667, "type": "image/png" }, { "file": "g/images/project/bob-ross-art-gallery/mac-4-1200.webp", "size": 26798, "type": "image/webp" }, { "file": "g/images/project/bob-ross-art-gallery/mac-4-400.png", "size": 55327, "type": "image/png" }, { "file": "g/images/project/bob-ross-art-gallery/mac-4-400.webp", "size": 5990, "type": "image/webp" }, { "file": "g/images/project/bob-ross-art-gallery/mac-4-800.png", "size": 121104, "type": "image/png" }, { "file": "g/images/project/bob-ross-art-gallery/mac-4-800.webp", "size": 16176, "type": "image/webp" }, { "file": "g/images/project/bob-ross-art-gallery/mac-5-1200.png", "size": 444597, "type": "image/png" }, { "file": "g/images/project/bob-ross-art-gallery/mac-5-1200.webp", "size": 35422, "type": "image/webp" }, { "file": "g/images/project/bob-ross-art-gallery/mac-5-400.png", "size": 68211, "type": "image/png" }, { "file": "g/images/project/bob-ross-art-gallery/mac-5-400.webp", "size": 6964, "type": "image/webp" }, { "file": "g/images/project/bob-ross-art-gallery/mac-5-800.png", "size": 218593, "type": "image/png" }, { "file": "g/images/project/bob-ross-art-gallery/mac-5-800.webp", "size": 20210, "type": "image/webp" }, { "file": "g/images/project/compas/header-1200.png", "size": 85793, "type": "image/png" }, { "file": "g/images/project/compas/header-1200.webp", "size": 18064, "type": "image/webp" }, { "file": "g/images/project/compas/header-400.png", "size": 19742, "type": "image/png" }, { "file": "g/images/project/compas/header-400.webp", "size": 3934, "type": "image/webp" }, { "file": "g/images/project/compas/header-800.png", "size": 50125, "type": "image/png" }, { "file": "g/images/project/compas/header-800.webp", "size": 10854, "type": "image/webp" }, { "file": "g/images/project/compas/mac-1-1200.png", "size": 210308, "type": "image/png" }, { "file": "g/images/project/compas/mac-1-1200.webp", "size": 42762, "type": "image/webp" }, { "file": "g/images/project/compas/mac-1-400.png", "size": 36848, "type": "image/png" }, { "file": "g/images/project/compas/mac-1-400.webp", "size": 6446, "type": "image/webp" }, { "file": "g/images/project/compas/mac-1-800.png", "size": 110550, "type": "image/png" }, { "file": "g/images/project/compas/mac-1-800.webp", "size": 22602, "type": "image/webp" }, { "file": "g/images/project/compas/mac-2-1200.png", "size": 121883, "type": "image/png" }, { "file": "g/images/project/compas/mac-2-1200.webp", "size": 16868, "type": "image/webp" }, { "file": "g/images/project/compas/mac-2-400.png", "size": 25051, "type": "image/png" }, { "file": "g/images/project/compas/mac-2-400.webp", "size": 3898, "type": "image/webp" }, { "file": "g/images/project/compas/mac-2-800.png", "size": 66851, "type": "image/png" }, { "file": "g/images/project/compas/mac-2-800.webp", "size": 9740, "type": "image/webp" }, { "file": "g/images/project/compas/phone-1-1200.png", "size": 732708, "type": "image/png" }, { "file": "g/images/project/compas/phone-1-1200.webp", "size": 155076, "type": "image/webp" }, { "file": "g/images/project/compas/phone-1-400.png", "size": 133246, "type": "image/png" }, { "file": "g/images/project/compas/phone-1-400.webp", "size": 35600, "type": "image/webp" }, { "file": "g/images/project/compas/phone-1-800.png", "size": 392407, "type": "image/png" }, { "file": "g/images/project/compas/phone-1-800.webp", "size": 98604, "type": "image/webp" }, { "file": "g/images/project/compas/phone-2-1200.png", "size": 387380, "type": "image/png" }, { "file": "g/images/project/compas/phone-2-1200.webp", "size": 52924, "type": "image/webp" }, { "file": "g/images/project/compas/phone-2-400.png", "size": 68316, "type": "image/png" }, { "file": "g/images/project/compas/phone-2-400.webp", "size": 13868, "type": "image/webp" }, { "file": "g/images/project/compas/phone-2-800.png", "size": 200114, "type": "image/png" }, { "file": "g/images/project/compas/phone-2-800.webp", "size": 33838, "type": "image/webp" }, { "file": "g/images/project/covid-masking/header-1200.png", "size": 122351, "type": "image/png" }, { "file": "g/images/project/covid-masking/header-1200.webp", "size": 30042, "type": "image/webp" }, { "file": "g/images/project/covid-masking/header-400.png", "size": 24782, "type": "image/png" }, { "file": "g/images/project/covid-masking/header-400.webp", "size": 6154, "type": "image/webp" }, { "file": "g/images/project/covid-masking/header-800.png", "size": 66289, "type": "image/png" }, { "file": "g/images/project/covid-masking/header-800.webp", "size": 18276, "type": "image/webp" }, { "file": "g/images/project/covid-masking/mac-1-1200.png", "size": 148531, "type": "image/png" }, { "file": "g/images/project/covid-masking/mac-1-1200.webp", "size": 23256, "type": "image/webp" }, { "file": "g/images/project/covid-masking/mac-1-400.png", "size": 29247, "type": "image/png" }, { "file": "g/images/project/covid-masking/mac-1-400.webp", "size": 5018, "type": "image/webp" }, { "file": "g/images/project/covid-masking/mac-1-800.png", "size": 80753, "type": "image/png" }, { "file": "g/images/project/covid-masking/mac-1-800.webp", "size": 13864, "type": "image/webp" }, { "file": "g/images/project/covid-masking/mac-2-1200.png", "size": 222640, "type": "image/png" }, { "file": "g/images/project/covid-masking/mac-2-1200.webp", "size": 34498, "type": "image/webp" }, { "file": "g/images/project/covid-masking/mac-2-400.png", "size": 39260, "type": "image/png" }, { "file": "g/images/project/covid-masking/mac-2-400.webp", "size": 6626, "type": "image/webp" }, { "file": "g/images/project/covid-masking/mac-2-800.png", "size": 114679, "type": "image/png" }, { "file": "g/images/project/covid-masking/mac-2-800.webp", "size": 19234, "type": "image/webp" }, { "file": "g/images/project/covid-masking/mac-3-1200.png", "size": 136848, "type": "image/png" }, { "file": "g/images/project/covid-masking/mac-3-1200.webp", "size": 19628, "type": "image/webp" }, { "file": "g/images/project/covid-masking/mac-3-400.png", "size": 29505, "type": "image/png" }, { "file": "g/images/project/covid-masking/mac-3-400.webp", "size": 4690, "type": "image/webp" }, { "file": "g/images/project/covid-masking/mac-3-800.png", "size": 75692, "type": "image/png" }, { "file": "g/images/project/covid-masking/mac-3-800.webp", "size": 11500, "type": "image/webp" }, { "file": "g/images/project/covid-masking/mac-4-1200.png", "size": 203112, "type": "image/png" }, { "file": "g/images/project/covid-masking/mac-4-1200.webp", "size": 31536, "type": "image/webp" }, { "file": "g/images/project/covid-masking/mac-4-400.png", "size": 39083, "type": "image/png" }, { "file": "g/images/project/covid-masking/mac-4-400.webp", "size": 6538, "type": "image/webp" }, { "file": "g/images/project/covid-masking/mac-4-800.png", "size": 108673, "type": "image/png" }, { "file": "g/images/project/covid-masking/mac-4-800.webp", "size": 18250, "type": "image/webp" }, { "file": "g/images/project/covid-masking/mac-5-1200.png", "size": 438462, "type": "image/png" }, { "file": "g/images/project/covid-masking/mac-5-1200.webp", "size": 49144, "type": "image/webp" }, { "file": "g/images/project/covid-masking/mac-5-400.png", "size": 75773, "type": "image/png" }, { "file": "g/images/project/covid-masking/mac-5-400.webp", "size": 9996, "type": "image/webp" }, { "file": "g/images/project/covid-masking/mac-5-800.png", "size": 229909, "type": "image/png" }, { "file": "g/images/project/covid-masking/mac-5-800.webp", "size": 28456, "type": "image/webp" }, { "file": "g/images/project/covid-masking/phone-1-1200.png", "size": 666371, "type": "image/png" }, { "file": "g/images/project/covid-masking/phone-1-1200.webp", "size": 103550, "type": "image/webp" }, { "file": "g/images/project/covid-masking/phone-1-400.png", "size": 126836, "type": "image/png" }, { "file": "g/images/project/covid-masking/phone-1-400.webp", "size": 31446, "type": "image/webp" }, { "file": "g/images/project/covid-masking/phone-1-800.png", "size": 355371, "type": "image/png" }, { "file": "g/images/project/covid-masking/phone-1-800.webp", "size": 70310, "type": "image/webp" }, { "file": "g/images/project/covid-masking/phone-2-1200.png", "size": 633800, "type": "image/png" }, { "file": "g/images/project/covid-masking/phone-2-1200.webp", "size": 92872, "type": "image/webp" }, { "file": "g/images/project/covid-masking/phone-2-400.png", "size": 116944, "type": "image/png" }, { "file": "g/images/project/covid-masking/phone-2-400.webp", "size": 27282, "type": "image/webp" }, { "file": "g/images/project/covid-masking/phone-2-800.png", "size": 333035, "type": "image/png" }, { "file": "g/images/project/covid-masking/phone-2-800.webp", "size": 61460, "type": "image/webp" }, { "file": "g/images/project/covid-masking/phone-3-1200.png", "size": 1115402, "type": "image/png" }, { "file": "g/images/project/covid-masking/phone-3-1200.webp", "size": 0, "type": "image/webp" }, { "file": "g/images/project/covid-masking/phone-3-400.png", "size": 192810, "type": "image/png" }, { "file": "g/images/project/covid-masking/phone-3-400.webp", "size": 40650, "type": "image/webp" }, { "file": "g/images/project/covid-masking/phone-3-800.png", "size": 582363, "type": "image/png" }, { "file": "g/images/project/covid-masking/phone-3-800.webp", "size": 94796, "type": "image/webp" }, { "file": "g/images/project/cudi-hums/albums-mac-1200.png", "size": 190449, "type": "image/png" }, { "file": "g/images/project/cudi-hums/albums-mac-1200.webp", "size": 22720, "type": "image/webp" }, { "file": "g/images/project/cudi-hums/albums-mac-400.png", "size": 34996, "type": "image/png" }, { "file": "g/images/project/cudi-hums/albums-mac-400.webp", "size": 4866, "type": "image/webp" }, { "file": "g/images/project/cudi-hums/albums-mac-800.png", "size": 98209, "type": "image/png" }, { "file": "g/images/project/cudi-hums/albums-mac-800.webp", "size": 12454, "type": "image/webp" }, { "file": "g/images/project/cudi-hums/albums-phone-1200.png", "size": 399353, "type": "image/png" }, { "file": "g/images/project/cudi-hums/albums-phone-1200.webp", "size": 40044, "type": "image/webp" }, { "file": "g/images/project/cudi-hums/albums-phone-400.png", "size": 62996, "type": "image/png" }, { "file": "g/images/project/cudi-hums/albums-phone-400.webp", "size": 9586, "type": "image/webp" }, { "file": "g/images/project/cudi-hums/albums-phone-800.png", "size": 195567, "type": "image/png" }, { "file": "g/images/project/cudi-hums/albums-phone-800.webp", "size": 24588, "type": "image/webp" }, { "file": "g/images/project/cudi-hums/header-1200.png", "size": 144746, "type": "image/png" }, { "file": "g/images/project/cudi-hums/header-1200.webp", "size": 17600, "type": "image/webp" }, { "file": "g/images/project/cudi-hums/header-400.png", "size": 36882, "type": "image/png" }, { "file": "g/images/project/cudi-hums/header-400.webp", "size": 5518, "type": "image/webp" }, { "file": "g/images/project/cudi-hums/header-800.png", "size": 85053, "type": "image/png" }, { "file": "g/images/project/cudi-hums/header-800.webp", "size": 11160, "type": "image/webp" }, { "file": "g/images/project/cudi-hums/intro-phone-1200.png", "size": 303610, "type": "image/png" }, { "file": "g/images/project/cudi-hums/intro-phone-1200.webp", "size": 35528, "type": "image/webp" }, { "file": "g/images/project/cudi-hums/intro-phone-400.png", "size": 57013, "type": "image/png" }, { "file": "g/images/project/cudi-hums/intro-phone-400.webp", "size": 10072, "type": "image/webp" }, { "file": "g/images/project/cudi-hums/intro-phone-800.png", "size": 175764, "type": "image/png" }, { "file": "g/images/project/cudi-hums/intro-phone-800.webp", "size": 22504, "type": "image/webp" }, { "file": "g/images/project/cudi-hums/lyrics-mac-1200.png", "size": 189570, "type": "image/png" }, { "file": "g/images/project/cudi-hums/lyrics-mac-1200.webp", "size": 21870, "type": "image/webp" }, { "file": "g/images/project/cudi-hums/lyrics-mac-400.png", "size": 36678, "type": "image/png" }, { "file": "g/images/project/cudi-hums/lyrics-mac-400.webp", "size": 4688, "type": "image/webp" }, { "file": "g/images/project/cudi-hums/lyrics-mac-800.png", "size": 104622, "type": "image/png" }, { "file": "g/images/project/cudi-hums/lyrics-mac-800.webp", "size": 12756, "type": "image/webp" }, { "file": "g/images/project/cudi-hums/lyrics-phone-1200.png", "size": 429873, "type": "image/png" }, { "file": "g/images/project/cudi-hums/lyrics-phone-1200.webp", "size": 49408, "type": "image/webp" }, { "file": "g/images/project/cudi-hums/lyrics-phone-400.png", "size": 86039, "type": "image/png" }, { "file": "g/images/project/cudi-hums/lyrics-phone-400.webp", "size": 12262, "type": "image/webp" }, { "file": "g/images/project/cudi-hums/lyrics-phone-800.png", "size": 227852, "type": "image/png" }, { "file": "g/images/project/cudi-hums/lyrics-phone-800.webp", "size": 30830, "type": "image/webp" }, { "file": "g/images/project/cudi-hums/outro-phone-1200.png", "size": 703752, "type": "image/png" }, { "file": "g/images/project/cudi-hums/outro-phone-1200.webp", "size": 131896, "type": "image/webp" }, { "file": "g/images/project/cudi-hums/outro-phone-400.png", "size": 135657, "type": "image/png" }, { "file": "g/images/project/cudi-hums/outro-phone-400.webp", "size": 31680, "type": "image/webp" }, { "file": "g/images/project/cudi-hums/outro-phone-800.png", "size": 383870, "type": "image/png" }, { "file": "g/images/project/cudi-hums/outro-phone-800.webp", "size": 83944, "type": "image/webp" }, { "file": "g/images/project/cudi-hums/tracks-mac-1200.png", "size": 181593, "type": "image/png" }, { "file": "g/images/project/cudi-hums/tracks-mac-1200.webp", "size": 21186, "type": "image/webp" }, { "file": "g/images/project/cudi-hums/tracks-mac-400.png", "size": 33630, "type": "image/png" }, { "file": "g/images/project/cudi-hums/tracks-mac-400.webp", "size": 4526, "type": "image/webp" }, { "file": "g/images/project/cudi-hums/tracks-mac-800.png", "size": 95938, "type": "image/png" }, { "file": "g/images/project/cudi-hums/tracks-mac-800.webp", "size": 11792, "type": "image/webp" }, { "file": "g/images/project/cudi-hums/tracks-phone-1200.png", "size": 615707, "type": "image/png" }, { "file": "g/images/project/cudi-hums/tracks-phone-1200.webp", "size": 68988, "type": "image/webp" }, { "file": "g/images/project/cudi-hums/tracks-phone-400.png", "size": 99889, "type": "image/png" }, { "file": "g/images/project/cudi-hums/tracks-phone-400.webp", "size": 15554, "type": "image/webp" }, { "file": "g/images/project/cudi-hums/tracks-phone-800.png", "size": 306600, "type": "image/png" }, { "file": "g/images/project/cudi-hums/tracks-phone-800.webp", "size": 40562, "type": "image/webp" }, { "file": "g/images/project/how-many-people/header-1200.png", "size": 91438, "type": "image/png" }, { "file": "g/images/project/how-many-people/header-1200.webp", "size": 20980, "type": "image/webp" }, { "file": "g/images/project/how-many-people/header-400.png", "size": 22929, "type": "image/png" }, { "file": "g/images/project/how-many-people/header-400.webp", "size": 4158, "type": "image/webp" }, { "file": "g/images/project/how-many-people/header-800.png", "size": 55545, "type": "image/png" }, { "file": "g/images/project/how-many-people/header-800.webp", "size": 12292, "type": "image/webp" }, { "file": "g/images/project/how-many-people/mac-1-1200.png", "size": 160499, "type": "image/png" }, { "file": "g/images/project/how-many-people/mac-1-1200.webp", "size": 27148, "type": "image/webp" }, { "file": "g/images/project/how-many-people/mac-1-400.png", "size": 34102, "type": "image/png" }, { "file": "g/images/project/how-many-people/mac-1-400.webp", "size": 5994, "type": "image/webp" }, { "file": "g/images/project/how-many-people/mac-1-800.png", "size": 90031, "type": "image/png" }, { "file": "g/images/project/how-many-people/mac-1-800.webp", "size": 16414, "type": "image/webp" }, { "file": "g/images/project/how-many-people/mac-2-1200.png", "size": 188707, "type": "image/png" }, { "file": "g/images/project/how-many-people/mac-2-1200.webp", "size": 33948, "type": "image/webp" }, { "file": "g/images/project/how-many-people/mac-2-400.png", "size": 41018, "type": "image/png" }, { "file": "g/images/project/how-many-people/mac-2-400.webp", "size": 7264, "type": "image/webp" }, { "file": "g/images/project/how-many-people/mac-2-800.png", "size": 106120, "type": "image/png" }, { "file": "g/images/project/how-many-people/mac-2-800.webp", "size": 19634, "type": "image/webp" }, { "file": "g/images/project/how-many-people/phone-1-1200.png", "size": 515914, "type": "image/png" }, { "file": "g/images/project/how-many-people/phone-1-1200.webp", "size": 85424, "type": "image/webp" }, { "file": "g/images/project/how-many-people/phone-1-400.png", "size": 101283, "type": "image/png" }, { "file": "g/images/project/how-many-people/phone-1-400.webp", "size": 21960, "type": "image/webp" }, { "file": "g/images/project/how-many-people/phone-1-800.png", "size": 280972, "type": "image/png" }, { "file": "g/images/project/how-many-people/phone-1-800.webp", "size": 52784, "type": "image/webp" }, { "file": "g/images/project/how-many-people/phone-2-1200.png", "size": 450117, "type": "image/png" }, { "file": "g/images/project/how-many-people/phone-2-1200.webp", "size": 69870, "type": "image/webp" }, { "file": "g/images/project/how-many-people/phone-2-400.png", "size": 85569, "type": "image/png" }, { "file": "g/images/project/how-many-people/phone-2-400.webp", "size": 17768, "type": "image/webp" }, { "file": "g/images/project/how-many-people/phone-2-800.png", "size": 239868, "type": "image/png" }, { "file": "g/images/project/how-many-people/phone-2-800.webp", "size": 43586, "type": "image/webp" }, { "file": "g/images/project/map-houston-homicides/header-1200.png", "size": 460621, "type": "image/png" }, { "file": "g/images/project/map-houston-homicides/header-1200.webp", "size": 62090, "type": "image/webp" }, { "file": "g/images/project/map-houston-homicides/header-400.png", "size": 78213, "type": "image/png" }, { "file": "g/images/project/map-houston-homicides/header-400.webp", "size": 11710, "type": "image/webp" }, { "file": "g/images/project/map-houston-homicides/header-800.png", "size": 243964, "type": "image/png" }, { "file": "g/images/project/map-houston-homicides/header-800.webp", "size": 35180, "type": "image/webp" }, { "file": "g/images/project/map-houston-homicides/mac-1-1200.png", "size": 360596, "type": "image/png" }, { "file": "g/images/project/map-houston-homicides/mac-1-1200.webp", "size": 41700, "type": "image/webp" }, { "file": "g/images/project/map-houston-homicides/mac-1-400.png", "size": 61926, "type": "image/png" }, { "file": "g/images/project/map-houston-homicides/mac-1-400.webp", "size": 8048, "type": "image/webp" }, { "file": "g/images/project/map-houston-homicides/mac-1-800.png", "size": 186879, "type": "image/png" }, { "file": "g/images/project/map-houston-homicides/mac-1-800.webp", "size": 23396, "type": "image/webp" }, { "file": "g/images/project/map-houston-homicides/mac-2-1200.png", "size": 395093, "type": "image/png" }, { "file": "g/images/project/map-houston-homicides/mac-2-1200.webp", "size": 33060, "type": "image/webp" }, { "file": "g/images/project/map-houston-homicides/mac-2-400.png", "size": 62816, "type": "image/png" }, { "file": "g/images/project/map-houston-homicides/mac-2-400.webp", "size": 5866, "type": "image/webp" }, { "file": "g/images/project/map-houston-homicides/mac-2-800.png", "size": 197628, "type": "image/png" }, { "file": "g/images/project/map-houston-homicides/mac-2-800.webp", "size": 17554, "type": "image/webp" }, { "file": "g/images/project/map-houston-homicides/mac-3-1200.png", "size": 484007, "type": "image/png" }, { "file": "g/images/project/map-houston-homicides/mac-3-1200.webp", "size": 55020, "type": "image/webp" }, { "file": "g/images/project/map-houston-homicides/mac-3-400.png", "size": 78400, "type": "image/png" }, { "file": "g/images/project/map-houston-homicides/mac-3-400.webp", "size": 9206, "type": "image/webp" }, { "file": "g/images/project/map-houston-homicides/mac-3-800.png", "size": 247347, "type": "image/png" }, { "file": "g/images/project/map-houston-homicides/mac-3-800.webp", "size": 28922, "type": "image/webp" }, { "file": "g/images/project/map-houston-homicides/mac-4-1200.png", "size": 507630, "type": "image/png" }, { "file": "g/images/project/map-houston-homicides/mac-4-1200.webp", "size": 36226, "type": "image/webp" }, { "file": "g/images/project/map-houston-homicides/mac-4-400.png", "size": 77780, "type": "image/png" }, { "file": "g/images/project/map-houston-homicides/mac-4-400.webp", "size": 7438, "type": "image/webp" }, { "file": "g/images/project/map-houston-homicides/mac-4-800.png", "size": 252026, "type": "image/png" }, { "file": "g/images/project/map-houston-homicides/mac-4-800.webp", "size": 20442, "type": "image/webp" }, { "file": "g/images/project/map-houston-homicides/phone-1-1200.png", "size": 1190882, "type": "image/png" }, { "file": "g/images/project/map-houston-homicides/phone-1-1200.webp", "size": 123630, "type": "image/webp" }, { "file": "g/images/project/map-houston-homicides/phone-1-400.png", "size": 201162, "type": "image/png" }, { "file": "g/images/project/map-houston-homicides/phone-1-400.webp", "size": 26462, "type": "image/webp" }, { "file": "g/images/project/map-houston-homicides/phone-1-800.png", "size": 616721, "type": "image/png" }, { "file": "g/images/project/map-houston-homicides/phone-1-800.webp", "size": 73688, "type": "image/webp" }, { "file": "g/images/project/map-houston-homicides/phone-2-1200.png", "size": 1164599, "type": "image/png" }, { "file": "g/images/project/map-houston-homicides/phone-2-1200.webp", "size": 117774, "type": "image/webp" }, { "file": "g/images/project/map-houston-homicides/phone-2-400.png", "size": 196132, "type": "image/png" }, { "file": "g/images/project/map-houston-homicides/phone-2-400.webp", "size": 25220, "type": "image/webp" }, { "file": "g/images/project/map-houston-homicides/phone-2-800.png", "size": 603748, "type": "image/png" }, { "file": "g/images/project/map-houston-homicides/phone-2-800.webp", "size": 70492, "type": "image/webp" }, { "file": "g/images/project/map-houston-homicides/phone-3-1200.png", "size": 1191236, "type": "image/png" }, { "file": "g/images/project/map-houston-homicides/phone-3-1200.webp", "size": 120498, "type": "image/webp" }, { "file": "g/images/project/map-houston-homicides/phone-3-400.png", "size": 200316, "type": "image/png" }, { "file": "g/images/project/map-houston-homicides/phone-3-400.webp", "size": 24888, "type": "image/webp" }, { "file": "g/images/project/map-houston-homicides/phone-3-800.png", "size": 615912, "type": "image/png" }, { "file": "g/images/project/map-houston-homicides/phone-3-800.webp", "size": 70994, "type": "image/webp" }, { "file": "g/images/project/map-missing-migrants/header-1200.png", "size": 1292482, "type": "image/png" }, { "file": "g/images/project/map-missing-migrants/header-1200.webp", "size": 72362, "type": "image/webp" }, { "file": "g/images/project/map-missing-migrants/header-400.png", "size": 182128, "type": "image/png" }, { "file": "g/images/project/map-missing-migrants/header-400.webp", "size": 14084, "type": "image/webp" }, { "file": "g/images/project/map-missing-migrants/header-800.png", "size": 627427, "type": "image/png" }, { "file": "g/images/project/map-missing-migrants/header-800.webp", "size": 41082, "type": "image/webp" }, { "file": "g/images/project/map-missing-migrants/mac-1-1200.png", "size": 749200, "type": "image/png" }, { "file": "g/images/project/map-missing-migrants/mac-1-1200.webp", "size": 48070, "type": "image/webp" }, { "file": "g/images/project/map-missing-migrants/mac-1-400.png", "size": 108441, "type": "image/png" }, { "file": "g/images/project/map-missing-migrants/mac-1-400.webp", "size": 9754, "type": "image/webp" }, { "file": "g/images/project/map-missing-migrants/mac-1-800.png", "size": 364911, "type": "image/png" }, { "file": "g/images/project/map-missing-migrants/mac-1-800.webp", "size": 27312, "type": "image/webp" }, { "file": "g/images/project/map-missing-migrants/mac-2-1200.png", "size": 1031852, "type": "image/png" }, { "file": "g/images/project/map-missing-migrants/mac-2-1200.webp", "size": 68694, "type": "image/webp" }, { "file": "g/images/project/map-missing-migrants/mac-2-400.png", "size": 138799, "type": "image/png" }, { "file": "g/images/project/map-missing-migrants/mac-2-400.webp", "size": 12486, "type": "image/webp" }, { "file": "g/images/project/map-missing-migrants/mac-2-800.png", "size": 488234, "type": "image/png" }, { "file": "g/images/project/map-missing-migrants/mac-2-800.webp", "size": 37384, "type": "image/webp" }, { "file": "g/images/project/map-missing-migrants/mac-3-1200.png", "size": 791258, "type": "image/png" }, { "file": "g/images/project/map-missing-migrants/mac-3-1200.webp", "size": 48976, "type": "image/webp" }, { "file": "g/images/project/map-missing-migrants/mac-3-400.png", "size": 120093, "type": "image/png" }, { "file": "g/images/project/map-missing-migrants/mac-3-400.webp", "size": 9640, "type": "image/webp" }, { "file": "g/images/project/map-missing-migrants/mac-3-800.png", "size": 392959, "type": "image/png" }, { "file": "g/images/project/map-missing-migrants/mac-3-800.webp", "size": 27322, "type": "image/webp" }, { "file": "g/images/project/map-missing-migrants/mac-4-1200.png", "size": 924966, "type": "image/png" }, { "file": "g/images/project/map-missing-migrants/mac-4-1200.webp", "size": 58734, "type": "image/webp" }, { "file": "g/images/project/map-missing-migrants/mac-4-400.png", "size": 121300, "type": "image/png" }, { "file": "g/images/project/map-missing-migrants/mac-4-400.webp", "size": 10604, "type": "image/webp" }, { "file": "g/images/project/map-missing-migrants/mac-4-800.png", "size": 432066, "type": "image/png" }, { "file": "g/images/project/map-missing-migrants/mac-4-800.webp", "size": 32074, "type": "image/webp" }, { "file": "g/images/project/map-missing-migrants/mac-5-1200.png", "size": 1150565, "type": "image/png" }, { "file": "g/images/project/map-missing-migrants/mac-5-1200.webp", "size": 64822, "type": "image/webp" }, { "file": "g/images/project/map-missing-migrants/mac-5-400.png", "size": 149677, "type": "image/png" }, { "file": "g/images/project/map-missing-migrants/mac-5-400.webp", "size": 11730, "type": "image/webp" }, { "file": "g/images/project/map-missing-migrants/mac-5-800.png", "size": 537329, "type": "image/png" }, { "file": "g/images/project/map-missing-migrants/mac-5-800.webp", "size": 35056, "type": "image/webp" }, { "file": "g/images/project/map-missing-migrants/phone-1-1200.png", "size": 1666998, "type": "image/png" }, { "file": "g/images/project/map-missing-migrants/phone-1-1200.webp", "size": 91170, "type": "image/webp" }, { "file": "g/images/project/map-missing-migrants/phone-1-400.png", "size": 249103, "type": "image/png" }, { "file": "g/images/project/map-missing-migrants/phone-1-400.webp", "size": 16374, "type": "image/webp" }, { "file": "g/images/project/map-missing-migrants/phone-1-800.png", "size": 822581, "type": "image/png" }, { "file": "g/images/project/map-missing-migrants/phone-1-800.webp", "size": 50644, "type": "image/webp" }, { "file": "g/images/project/map-missing-migrants/phone-2-1200.png", "size": 2546336, "type": "image/png" }, { "file": "g/images/project/map-missing-migrants/phone-2-1200.webp", "size": 137424, "type": "image/webp" }, { "file": "g/images/project/map-missing-migrants/phone-2-400.png", "size": 327091, "type": "image/png" }, { "file": "g/images/project/map-missing-migrants/phone-2-400.webp", "size": 25134, "type": "image/webp" }, { "file": "g/images/project/map-missing-migrants/phone-2-800.png", "size": 1186624, "type": "image/png" }, { "file": "g/images/project/map-missing-migrants/phone-2-800.webp", "size": 74950, "type": "image/webp" }, { "file": "g/images/project/map-missing-migrants/phone-3-1200.png", "size": 4334509, "type": "image/png" }, { "file": "g/images/project/map-missing-migrants/phone-3-1200.webp", "size": 236046, "type": "image/webp" }, { "file": "g/images/project/map-missing-migrants/phone-3-400.png", "size": 520979, "type": "image/png" }, { "file": "g/images/project/map-missing-migrants/phone-3-400.webp", "size": 35046, "type": "image/webp" }, { "file": "g/images/project/map-missing-migrants/phone-3-800.png", "size": 1975269, "type": "image/png" }, { "file": "g/images/project/map-missing-migrants/phone-3-800.webp", "size": 121258, "type": "image/webp" }, { "file": "g/images/project/media-mentions/header-1200.png", "size": 81134, "type": "image/png" }, { "file": "g/images/project/media-mentions/header-1200.webp", "size": 16844, "type": "image/webp" }, { "file": "g/images/project/media-mentions/header-400.png", "size": 21335, "type": "image/png" }, { "file": "g/images/project/media-mentions/header-400.webp", "size": 3902, "type": "image/webp" }, { "file": "g/images/project/media-mentions/header-800.png", "size": 48480, "type": "image/png" }, { "file": "g/images/project/media-mentions/header-800.webp", "size": 10440, "type": "image/webp" }, { "file": "g/images/project/media-mentions/mac-1200.png", "size": 134195, "type": "image/png" }, { "file": "g/images/project/media-mentions/mac-1200.webp", "size": 17176, "type": "image/webp" }, { "file": "g/images/project/media-mentions/mac-400.png", "size": 29384, "type": "image/png" }, { "file": "g/images/project/media-mentions/mac-400.webp", "size": 3984, "type": "image/webp" }, { "file": "g/images/project/media-mentions/mac-800.png", "size": 73675, "type": "image/png" }, { "file": "g/images/project/media-mentions/mac-800.webp", "size": 9774, "type": "image/webp" }, { "file": "g/images/project/media-mentions/phone-1200.png", "size": 555295, "type": "image/png" }, { "file": "g/images/project/media-mentions/phone-1200.webp", "size": 81074, "type": "image/webp" }, { "file": "g/images/project/media-mentions/phone-400.png", "size": 101995, "type": "image/png" }, { "file": "g/images/project/media-mentions/phone-400.webp", "size": 18496, "type": "image/webp" }, { "file": "g/images/project/media-mentions/phone-800.png", "size": 293436, "type": "image/png" }, { "file": "g/images/project/media-mentions/phone-800.webp", "size": 49808, "type": "image/webp" }, { "file": "g/images/project/one-line-hacks/header-1200.png", "size": 156494, "type": "image/png" }, { "file": "g/images/project/one-line-hacks/header-1200.webp", "size": 36884, "type": "image/webp" }, { "file": "g/images/project/one-line-hacks/header-400.png", "size": 31575, "type": "image/png" }, { "file": "g/images/project/one-line-hacks/header-400.webp", "size": 6290, "type": "image/webp" }, { "file": "g/images/project/one-line-hacks/header-800.png", "size": 88840, "type": "image/png" }, { "file": "g/images/project/one-line-hacks/header-800.webp", "size": 20916, "type": "image/webp" }, { "file": "g/images/project/one-line-hacks/mac-1-1200.png", "size": 174252, "type": "image/png" }, { "file": "g/images/project/one-line-hacks/mac-1-1200.webp", "size": 29964, "type": "image/webp" }, { "file": "g/images/project/one-line-hacks/mac-1-400.png", "size": 32700, "type": "image/png" }, { "file": "g/images/project/one-line-hacks/mac-1-400.webp", "size": 5884, "type": "image/webp" }, { "file": "g/images/project/one-line-hacks/mac-1-800.png", "size": 93818, "type": "image/png" }, { "file": "g/images/project/one-line-hacks/mac-1-800.webp", "size": 17566, "type": "image/webp" }, { "file": "g/images/project/one-line-hacks/phone-1-1200.png", "size": 596101, "type": "image/png" }, { "file": "g/images/project/one-line-hacks/phone-1-1200.webp", "size": 95680, "type": "image/webp" }, { "file": "g/images/project/one-line-hacks/phone-1-400.png", "size": 119865, "type": "image/png" }, { "file": "g/images/project/one-line-hacks/phone-1-400.webp", "size": 29230, "type": "image/webp" }, { "file": "g/images/project/one-line-hacks/phone-1-800.png", "size": 317704, "type": "image/png" }, { "file": "g/images/project/one-line-hacks/phone-1-800.webp", "size": 64200, "type": "image/webp" }, { "file": "g/images/project/police-killings/header-1200.png", "size": 162659, "type": "image/png" }, { "file": "g/images/project/police-killings/header-1200.webp", "size": 35494, "type": "image/webp" }, { "file": "g/images/project/police-killings/header-400.png", "size": 29021, "type": "image/png" }, { "file": "g/images/project/police-killings/header-400.webp", "size": 5618, "type": "image/webp" }, { "file": "g/images/project/police-killings/header-800.png", "size": 87968, "type": "image/png" }, { "file": "g/images/project/police-killings/header-800.webp", "size": 18942, "type": "image/webp" }, { "file": "g/images/project/police-killings/mac-1-1200.png", "size": 122068, "type": "image/png" }, { "file": "g/images/project/police-killings/mac-1-1200.webp", "size": 18578, "type": "image/webp" }, { "file": "g/images/project/police-killings/mac-1-400.png", "size": 24624, "type": "image/png" }, { "file": "g/images/project/police-killings/mac-1-400.webp", "size": 4004, "type": "image/webp" }, { "file": "g/images/project/police-killings/mac-1-800.png", "size": 67715, "type": "image/png" }, { "file": "g/images/project/police-killings/mac-1-800.webp", "size": 10664, "type": "image/webp" }, { "file": "g/images/project/police-killings/mac-2-1200.png", "size": 164025, "type": "image/png" }, { "file": "g/images/project/police-killings/mac-2-1200.webp", "size": 26084, "type": "image/webp" }, { "file": "g/images/project/police-killings/mac-2-400.png", "size": 29493, "type": "image/png" }, { "file": "g/images/project/police-killings/mac-2-400.webp", "size": 4766, "type": "image/webp" }, { "file": "g/images/project/police-killings/mac-2-800.png", "size": 86076, "type": "image/png" }, { "file": "g/images/project/police-killings/mac-2-800.webp", "size": 13862, "type": "image/webp" }, { "file": "g/images/project/police-killings/phone-1-1200.png", "size": 336074, "type": "image/png" }, { "file": "g/images/project/police-killings/phone-1-1200.webp", "size": 47172, "type": "image/webp" }, { "file": "g/images/project/police-killings/phone-1-400.png", "size": 57992, "type": "image/png" }, { "file": "g/images/project/police-killings/phone-1-400.webp", "size": 11556, "type": "image/webp" }, { "file": "g/images/project/police-killings/phone-1-800.png", "size": 171346, "type": "image/png" }, { "file": "g/images/project/police-killings/phone-1-800.webp", "size": 29588, "type": "image/webp" }, { "file": "g/images/project/police-killings/phone-2-1200.png", "size": 338723, "type": "image/png" }, { "file": "g/images/project/police-killings/phone-2-1200.webp", "size": 48850, "type": "image/webp" }, { "file": "g/images/project/police-killings/phone-2-400.png", "size": 56370, "type": "image/png" }, { "file": "g/images/project/police-killings/phone-2-400.webp", "size": 11368, "type": "image/webp" }, { "file": "g/images/project/police-killings/phone-2-800.png", "size": 171481, "type": "image/png" }, { "file": "g/images/project/police-killings/phone-2-800.webp", "size": 29710, "type": "image/webp" }, { "file": "g/images/project/quarantunes/header-1200.png", "size": 161815, "type": "image/png" }, { "file": "g/images/project/quarantunes/header-1200.webp", "size": 9446, "type": "image/webp" }, { "file": "g/images/project/quarantunes/header-400.png", "size": 20500, "type": "image/png" }, { "file": "g/images/project/quarantunes/header-400.webp", "size": 3042, "type": "image/webp" }, { "file": "g/images/project/quarantunes/header-800.png", "size": 82552, "type": "image/png" }, { "file": "g/images/project/quarantunes/header-800.webp", "size": 6272, "type": "image/webp" }, { "file": "g/images/project/quarantunes/macbook-1200.png", "size": 210362, "type": "image/png" }, { "file": "g/images/project/quarantunes/macbook-1200.webp", "size": 25024, "type": "image/webp" }, { "file": "g/images/project/quarantunes/macbook-400.png", "size": 38314, "type": "image/png" }, { "file": "g/images/project/quarantunes/macbook-400.webp", "size": 5658, "type": "image/webp" }, { "file": "g/images/project/quarantunes/macbook-800.png", "size": 107325, "type": "image/png" }, { "file": "g/images/project/quarantunes/macbook-800.webp", "size": 14412, "type": "image/webp" }, { "file": "g/images/project/quarantunes/side-by-side-1200.png", "size": 375514, "type": "image/png" }, { "file": "g/images/project/quarantunes/side-by-side-1200.webp", "size": 45866, "type": "image/webp" }, { "file": "g/images/project/quarantunes/side-by-side-400.png", "size": 69658, "type": "image/png" }, { "file": "g/images/project/quarantunes/side-by-side-400.webp", "size": 9642, "type": "image/webp" }, { "file": "g/images/project/quarantunes/side-by-side-800.png", "size": 197283, "type": "image/png" }, { "file": "g/images/project/quarantunes/side-by-side-800.webp", "size": 26042, "type": "image/webp" }, { "file": "g/images/project/state-police-spending/header-1200.png", "size": 135264, "type": "image/png" }, { "file": "g/images/project/state-police-spending/header-1200.webp", "size": 44216, "type": "image/webp" }, { "file": "g/images/project/state-police-spending/header-400.png", "size": 28375, "type": "image/png" }, { "file": "g/images/project/state-police-spending/header-400.webp", "size": 8214, "type": "image/webp" }, { "file": "g/images/project/state-police-spending/header-800.png", "size": 80460, "type": "image/png" }, { "file": "g/images/project/state-police-spending/header-800.webp", "size": 25376, "type": "image/webp" }, { "file": "g/images/project/state-police-spending/mac-1200.png", "size": 156427, "type": "image/png" }, { "file": "g/images/project/state-police-spending/mac-1200.webp", "size": 32678, "type": "image/webp" }, { "file": "g/images/project/state-police-spending/mac-400.png", "size": 30019, "type": "image/png" }, { "file": "g/images/project/state-police-spending/mac-400.webp", "size": 5980, "type": "image/webp" }, { "file": "g/images/project/state-police-spending/mac-800.png", "size": 84702, "type": "image/png" }, { "file": "g/images/project/state-police-spending/mac-800.webp", "size": 18e3, "type": "image/webp" }, { "file": "g/images/project/state-police-spending/phone-1200.png", "size": 432908, "type": "image/png" }, { "file": "g/images/project/state-police-spending/phone-1200.webp", "size": 92418, "type": "image/webp" }, { "file": "g/images/project/state-police-spending/phone-400.png", "size": 81919, "type": "image/png" }, { "file": "g/images/project/state-police-spending/phone-400.webp", "size": 23380, "type": "image/webp" }, { "file": "g/images/project/state-police-spending/phone-800.png", "size": 232037, "type": "image/png" }, { "file": "g/images/project/state-police-spending/phone-800.webp", "size": 58732, "type": "image/webp" }, { "file": "g/images/project/tpl-schools-db/header-1200.png", "size": 278547, "type": "image/png" }, { "file": "g/images/project/tpl-schools-db/header-1200.webp", "size": 75976, "type": "image/webp" }, { "file": "g/images/project/tpl-schools-db/header-400.png", "size": 54293, "type": "image/png" }, { "file": "g/images/project/tpl-schools-db/header-400.webp", "size": 13e3, "type": "image/webp" }, { "file": "g/images/project/tpl-schools-db/header-800.png", "size": 156165, "type": "image/png" }, { "file": "g/images/project/tpl-schools-db/header-800.webp", "size": 42142, "type": "image/webp" }, { "file": "g/images/project/tpl-schools-db/iphone-1-400.png", "size": 137376, "type": "image/png" }, { "file": "g/images/project/tpl-schools-db/iphone-1-400.webp", "size": 27768, "type": "image/webp" }, { "file": "g/images/project/tpl-schools-db/iphone-1-800.png", "size": 432867, "type": "image/png" }, { "file": "g/images/project/tpl-schools-db/iphone-1-800.webp", "size": 63302, "type": "image/webp" }, { "file": "g/images/project/tpl-schools-db/iphone-2-400.png", "size": 116068, "type": "image/png" }, { "file": "g/images/project/tpl-schools-db/iphone-2-400.webp", "size": 23716, "type": "image/webp" }, { "file": "g/images/project/tpl-schools-db/iphone-2-800.png", "size": 362804, "type": "image/png" }, { "file": "g/images/project/tpl-schools-db/iphone-2-800.webp", "size": 55420, "type": "image/webp" }, { "file": "g/images/project/tpl-schools-db/iphone-3-400.png", "size": 171752, "type": "image/png" }, { "file": "g/images/project/tpl-schools-db/iphone-3-400.webp", "size": 26424, "type": "image/webp" }, { "file": "g/images/project/tpl-schools-db/iphone-3-800.png", "size": 509518, "type": "image/png" }, { "file": "g/images/project/tpl-schools-db/iphone-3-800.webp", "size": 58088, "type": "image/webp" }, { "file": "g/images/project/tpl-schools-db/mac-1-1200.png", "size": 250051, "type": "image/png" }, { "file": "g/images/project/tpl-schools-db/mac-1-1200.webp", "size": 50024, "type": "image/webp" }, { "file": "g/images/project/tpl-schools-db/mac-1-400.png", "size": 47957, "type": "image/png" }, { "file": "g/images/project/tpl-schools-db/mac-1-400.webp", "size": 8780, "type": "image/webp" }, { "file": "g/images/project/tpl-schools-db/mac-1-800.png", "size": 132130, "type": "image/png" }, { "file": "g/images/project/tpl-schools-db/mac-1-800.webp", "size": 26420, "type": "image/webp" }, { "file": "g/images/project/tpl-schools-db/mac-2-1200.png", "size": 222268, "type": "image/png" }, { "file": "g/images/project/tpl-schools-db/mac-2-1200.webp", "size": 27344, "type": "image/webp" }, { "file": "g/images/project/tpl-schools-db/mac-2-400.png", "size": 42871, "type": "image/png" }, { "file": "g/images/project/tpl-schools-db/mac-2-400.webp", "size": 5920, "type": "image/webp" }, { "file": "g/images/project/tpl-schools-db/mac-2-800.png", "size": 120192, "type": "image/png" }, { "file": "g/images/project/tpl-schools-db/mac-2-800.webp", "size": 15862, "type": "image/webp" }, { "file": "images/.DS_Store", "size": 10244, "type": null }, { "file": "images/icons/shuffle.svg", "size": 1574, "type": "image/svg+xml" }, { "file": "images/jobs/axios.svg", "size": 455, "type": "image/svg+xml" }, { "file": "images/jobs/moksha.svg", "size": 1261, "type": "image/svg+xml" }, { "file": "images/jobs/socom.svg", "size": 77530, "type": "image/svg+xml" }, { "file": "images/jobs/tpl.svg", "size": 709, "type": "image/svg+xml" }, { "file": "images/me/.DS_Store", "size": 6148, "type": null }, { "file": "images/me/1.png", "size": 67675, "type": "image/png" }, { "file": "images/me/2.png", "size": 286158, "type": "image/png" }, { "file": "images/me/3.png", "size": 46710, "type": "image/png" }, { "file": "images/me/4.png", "size": 479542, "type": "image/png" }, { "file": "images/post/.DS_Store", "size": 16388, "type": null }, { "file": "images/post/adding-a-chart-to-your-d3-tooltip/.DS_Store", "size": 6148, "type": null }, { "file": "images/post/adding-a-chart-to-your-d3-tooltip/header.png", "size": 222355, "type": "image/png" }, { "file": "images/post/adding-a-chart-to-your-d3-tooltip/new-tooltip.gif", "size": 1394285, "type": "image/gif" }, { "file": "images/post/adding-a-chart-to-your-d3-tooltip/old-tooltip.gif", "size": 1828083, "type": "image/gif" }, { "file": "images/post/adding-a-chart-to-your-d3-tooltip/west-virginia.jpg", "size": 96852, "type": "image/jpeg" }, { "file": "images/post/animate-hugo-academic/about.png", "size": 171201, "type": "image/png" }, { "file": "images/post/animate-hugo-academic/after-demo-hero-remove.png", "size": 274988, "type": "image/png" }, { "file": "images/post/animate-hugo-academic/before-demo-hero-remove.png", "size": 996449, "type": "image/png" }, { "file": "images/post/animate-hugo-academic/bg-red.png", "size": 247553, "type": "image/png" }, { "file": "images/post/animate-hugo-academic/double-slide.gif", "size": 4049647, "type": "image/gif" }, { "file": "images/post/animate-hugo-academic/final.gif", "size": 4711318, "type": "image/gif" }, { "file": "images/post/animate-hugo-academic/font-red.png", "size": 274418, "type": "image/png" }, { "file": "images/post/animate-hugo-academic/header.jpg", "size": 272081, "type": "image/jpeg" }, { "file": "images/post/animate-hugo-academic/header.png", "size": 502097, "type": "image/png" }, { "file": "images/post/animate-hugo-academic/left-and-right.gif", "size": 7187557, "type": "image/gif" }, { "file": "images/post/animate-hugo-academic/red.gif", "size": 6389199, "type": "image/gif" }, { "file": "images/post/animate-hugo-academic/slide-from-right.gif", "size": 5650648, "type": "image/gif" }, { "file": "images/post/automation-scrollytell/header.png", "size": 347231, "type": "image/png" }, { "file": "images/post/bible-babies/boys.gif", "size": 3320504, "type": "image/gif" }, { "file": "images/post/bible-babies/combined.gif", "size": 2500209, "type": "image/gif" }, { "file": "images/post/bible-babies/girls.gif", "size": 3171023, "type": "image/gif" }, { "file": "images/post/bible-babies/header.png", "size": 207384, "type": "image/png" }, { "file": "images/post/bible-babies/line.png", "size": 88209, "type": "image/png" }, { "file": "images/post/bible-babies/male-female-line.png", "size": 103538, "type": "image/png" }, { "file": "images/post/color-in-data-vis/.DS_Store", "size": 8196, "type": null }, { "file": "images/post/color-in-data-vis/all-color.jpg", "size": 48568, "type": "image/jpeg" }, { "file": "images/post/color-in-data-vis/all-grey.jpg", "size": 25976, "type": "image/jpeg" }, { "file": "images/post/color-in-data-vis/bad-and-better.jpg", "size": 41594, "type": "image/jpeg" }, { "file": "images/post/color-in-data-vis/bad-chart.jpg", "size": 144491, "type": "image/jpeg" }, { "file": "images/post/color-in-data-vis/bad-color-use-1.jpg", "size": 25638, "type": "image/jpeg" }, { "file": "images/post/color-in-data-vis/bad-color-use-2.jpg", "size": 462044, "type": "image/jpeg" }, { "file": "images/post/color-in-data-vis/better-chart1.png", "size": 102932, "type": "image/png" }, { "file": "images/post/color-in-data-vis/betterchart-1.jpg", "size": 102932, "type": "image/jpeg" }, { "file": "images/post/color-in-data-vis/choropleth-ex.jpg", "size": 116015, "type": "image/jpeg" }, { "file": "images/post/color-in-data-vis/color-emotion-guide-lol.jpg", "size": 142938, "type": "image/jpeg" }, { "file": "images/post/color-in-data-vis/color-emphasized.png", "size": 88831, "type": "image/png" }, { "file": "images/post/color-in-data-vis/flipping-points-color-annotate1.jpg", "size": 388831, "type": "image/jpeg" }, { "file": "images/post/color-in-data-vis/flipping-points-color-annotate2.jpg", "size": 292758, "type": "image/jpeg" }, { "file": "images/post/color-in-data-vis/flipping-points-color.jpg", "size": 281680, "type": "image/jpeg" }, { "file": "images/post/color-in-data-vis/header-old.png", "size": 1500611, "type": "image/png" }, { "file": "images/post/color-in-data-vis/header.png", "size": 142938, "type": "image/png" }, { "file": "images/post/color-in-data-vis/map-Texas-rainbow-1.jpg", "size": 125882, "type": "image/jpeg" }, { "file": "images/post/color-in-data-vis/popgrowth-vs-popsize-bw-1.png", "size": 102932, "type": "image/png" }, { "file": "images/post/covid-gun-spikes/featured.png", "size": 708910, "type": "image/png" }, { "file": "images/post/covid-gun-spikes/header.png", "size": 960654, "type": "image/png" }, { "file": "images/post/covid-gun-spikes/table-replacement.png", "size": 37277, "type": "image/png" }, { "file": "images/post/covid-gun-spikes/unnamed-chunk-4-1.png", "size": 157047, "type": "image/png" }, { "file": "images/post/covid-gun-spikes/unnamed-chunk-5-1.png", "size": 55822, "type": "image/png" }, { "file": "images/post/covid-gun-spikes/unnamed-chunk-6-1.png", "size": 124650, "type": "image/png" }, { "file": "images/post/covid-on-campus/featured.png", "size": 144039, "type": "image/png" }, { "file": "images/post/covid-on-campus/geofacet_processed.png", "size": 233674, "type": "image/png" }, { "file": "images/post/covid-on-campus/header.png", "size": 246566, "type": "image/png" }, { "file": "images/post/covid-on-campus/table1.png", "size": 111521, "type": "image/png" }, { "file": "images/post/covid-on-campus/table2.png", "size": 49261, "type": "image/png" }, { "file": "images/post/covid-on-campus/table3.png", "size": 46864, "type": "image/png" }, { "file": "images/post/covid-posts/authorVer2-1.png", "size": 66037, "type": "image/png" }, { "file": "images/post/covid-posts/dataTable-1.png", "size": 123935, "type": "image/png" }, { "file": "images/post/covid-posts/featured.png", "size": 142943, "type": "image/png" }, { "file": "images/post/covid-posts/header.png", "size": 142943, "type": "image/png" }, { "file": "images/post/covid-posts/prolificVer2-1.png", "size": 178507, "type": "image/png" }, { "file": "images/post/covid-posts/topicsVer2-1.png", "size": 142943, "type": "image/png" }, { "file": "images/post/covid-posts/weekly-1.png", "size": 66718, "type": "image/png" }, { "file": "images/post/do-something-else/startup-faang-satisfaction.png", "size": 128566, "type": "image/png" }, { "file": "images/post/dumbbell-plots/age-disrupt.jpg", "size": 127112, "type": "image/jpeg" }, { "file": "images/post/dumbbell-plots/age-worry.jpg", "size": 133455, "type": "image/jpeg" }, { "file": "images/post/dumbbell-plots/axios.jpg", "size": 94024, "type": "image/jpeg" }, { "file": "images/post/dumbbell-plots/featured.jpg", "size": 146966, "type": "image/jpeg" }, { "file": "images/post/dumbbell-plots/header.png", "size": 211763, "type": "image/png" }, { "file": "images/post/dumbbell-plots/partisan-disrupt.jpg", "size": 139913, "type": "image/jpeg" }, { "file": "images/post/dumbbell-plots/partisan-worry.jpg", "size": 146966, "type": "image/jpeg" }, { "file": "images/post/dumbbell-plots/pew.jpg", "size": 83415, "type": "image/jpeg" }, { "file": "images/post/dumbbell-plots/process-0.jpg", "size": 79993, "type": "image/jpeg" }, { "file": "images/post/dumbbell-plots/process-1.jpg", "size": 86350, "type": "image/jpeg" }, { "file": "images/post/dumbbell-plots/process-2.jpg", "size": 93592, "type": "image/jpeg" }, { "file": "images/post/dumbbell-plots/process-3.jpg", "size": 101971, "type": "image/jpeg" }, { "file": "images/post/dumbbell-plots/process-4.jpg", "size": 96114, "type": "image/jpeg" }, { "file": "images/post/dumbbell-plots/process-5.jpg", "size": 160258, "type": "image/jpeg" }, { "file": "images/post/dumbbell-plots/process-6.jpg", "size": 146966, "type": "image/jpeg" }, { "file": "images/post/dumbbell-plots/process-gif.gif", "size": 670401, "type": "image/gif" }, { "file": "images/post/dumbbell-plots/table.jpg", "size": 27809, "type": "image/jpeg" }, { "file": "images/post/economist-table-replication-using-reactable/featured.png", "size": 107802, "type": "image/png" }, { "file": "images/post/economist-table-replication-using-reactable/header.png", "size": 207227, "type": "image/png" }, { "file": "images/post/flat-data-r/.DS_Store", "size": 6148, "type": null }, { "file": "images/post/flat-data-r/flat-diagram.png", "size": 739814, "type": "image/png" }, { "file": "images/post/flat-data-r/header.png", "size": 1651665, "type": "image/png" }, { "file": "images/post/introducing-tpltheme/featured.png", "size": 60896, "type": "image/png" }, { "file": "images/post/introducing-tpltheme/header.png", "size": 82172, "type": "image/png" }, { "file": "images/post/introducing-tpltheme/unnamed-chunk-10-1.png", "size": 156710, "type": "image/png" }, { "file": "images/post/introducing-tpltheme/unnamed-chunk-11-1.png", "size": 69452, "type": "image/png" }, { "file": "images/post/introducing-tpltheme/unnamed-chunk-12-1.png", "size": 146481, "type": "image/png" }, { "file": "images/post/introducing-tpltheme/unnamed-chunk-13-1.png", "size": 155022, "type": "image/png" }, { "file": "images/post/introducing-tpltheme/unnamed-chunk-14-1.png", "size": 79963, "type": "image/png" }, { "file": "images/post/introducing-tpltheme/unnamed-chunk-15-1.png", "size": 76710, "type": "image/png" }, { "file": "images/post/introducing-tpltheme/unnamed-chunk-16-1.png", "size": 151633, "type": "image/png" }, { "file": "images/post/introducing-tpltheme/unnamed-chunk-17-1.png", "size": 168762, "type": "image/png" }, { "file": "images/post/introducing-tpltheme/unnamed-chunk-18-1.png", "size": 147878, "type": "image/png" }, { "file": "images/post/introducing-tpltheme/unnamed-chunk-3-1.png", "size": 44351, "type": "image/png" }, { "file": "images/post/introducing-tpltheme/unnamed-chunk-5-1.png", "size": 146995, "type": "image/png" }, { "file": "images/post/introducing-tpltheme/unnamed-chunk-6-1.png", "size": 259141, "type": "image/png" }, { "file": "images/post/introducing-tpltheme/unnamed-chunk-7-1.png", "size": 208134, "type": "image/png" }, { "file": "images/post/introducing-tpltheme/unnamed-chunk-8-1.png", "size": 262530, "type": "image/png" }, { "file": "images/post/introducing-tpltheme/unnamed-chunk-9-1.png", "size": 60075, "type": "image/png" }, { "file": "images/post/map-springfield/bw_map_springfield.png", "size": 374640, "type": "image/png" }, { "file": "images/post/map-springfield/gold_map_springfield.png", "size": 673257, "type": "image/png" }, { "file": "images/post/map-springfield/header.png", "size": 220711, "type": "image/png" }, { "file": "images/post/media-mentions/header.png", "size": 311367, "type": "image/png" }, { "file": "images/post/media-mentions/unnamed-chunk-2-1.png", "size": 80891, "type": "image/png" }, { "file": "images/post/media-mentions/unnamed-chunk-3-1.png", "size": 192170, "type": "image/png" }, { "file": "images/post/media-mentions/unnamed-chunk-4-1.png", "size": 137279, "type": "image/png" }, { "file": "images/post/media-mentions/unnamed-chunk-5-1.png", "size": 86116, "type": "image/png" }, { "file": "images/post/media-mentions/unnamed-chunk-6-1.png", "size": 503911, "type": "image/png" }, { "file": "images/post/media-mentions/unnamed-chunk-7-1.png", "size": 349985, "type": "image/png" }, { "file": "images/post/nuxt-blog-starter/blog-card.png", "size": 317721, "type": "image/png" }, { "file": "images/post/nuxt-blog-starter/dark.png", "size": 86381, "type": "image/png" }, { "file": "images/post/nuxt-blog-starter/header.png", "size": 160358, "type": "image/png" }, { "file": "images/post/nuxt-blog-starter/home-card.png", "size": 245943, "type": "image/png" }, { "file": "images/post/nuxt-blog-starter/light.png", "size": 88342, "type": "image/png" }, { "file": "images/post/nuxt-blog-starter/new-site-perf.png", "size": 729480, "type": "image/png" }, { "file": "images/post/nuxt-blog-starter/old-site-perf.png", "size": 891912, "type": "image/png" }, { "file": "images/post/nuxt-blog-starter/transitions.gif", "size": 1269461, "type": "image/gif" }, { "file": "images/post/refugee-trends/.DS_Store", "size": 6148, "type": null }, { "file": "images/post/refugee-trends/featured.png", "size": 96723, "type": "image/png" }, { "file": "images/post/refugee-trends/final.svg", "size": 339820, "type": "image/svg+xml" }, { "file": "images/post/refugee-trends/firsttry.jpg", "size": 249381, "type": "image/jpeg" }, { "file": "images/post/refugee-trends/header.png", "size": 209771, "type": "image/png" }, { "file": "images/post/refugee-trends/macro.jpg", "size": 59219, "type": "image/jpeg" }, { "file": "images/post/refugee-trends/policyviz.jpg", "size": 62077, "type": "image/jpeg" }, { "file": "images/post/refugee-trends/ref.png", "size": 77965, "type": "image/png" }, { "file": "images/post/refugee-trends/secondtry.jpg", "size": 220813, "type": "image/jpeg" }, { "file": "images/post/refugee-trends/wapo.png", "size": 254826, "type": "image/png" }, { "file": "images/post/svelte-and-d3/header-old.png", "size": 1916771, "type": "image/png" }, { "file": "images/post/svelte-and-d3/header.png", "size": 143947, "type": "image/png" }, { "file": "images/post/tidy-tuesday-powerlifting/featured.png", "size": 395928, "type": "image/png" }, { "file": "images/post/tidy-tuesday-powerlifting/header.png", "size": 609028, "type": "image/png" }, { "file": "images/post/tidy-tuesday-powerlifting/table.png", "size": 39430, "type": "image/png" }, { "file": "images/post/tidy-tuesday-powerlifting/unnamed-chunk-10-1.gif", "size": 2045058, "type": "image/gif" }, { "file": "images/post/tidy-tuesday-powerlifting/unnamed-chunk-11-1.gif", "size": 3152748, "type": "image/gif" }, { "file": "images/post/tidy-tuesday-powerlifting/unnamed-chunk-8-1.png", "size": 80022, "type": "image/png" }, { "file": "images/post/tidy-tuesday-powerlifting/unnamed-chunk-9-1.gif", "size": 1471396, "type": "image/gif" }, { "file": "images/post/tidy-tuesday-replication/bloomberg.png", "size": 286679, "type": "image/png" }, { "file": "images/post/tidy-tuesday-replication/featured.png", "size": 220110, "type": "image/png" }, { "file": "images/post/tidy-tuesday-replication/header.png", "size": 391425, "type": "image/png" }, { "file": "images/post/tidy-tuesday-replication/replication.png", "size": 220110, "type": "image/png" }, { "file": "images/project/.DS_Store", "size": 14340, "type": null }, { "file": "images/project/atus/header.png", "size": 196112, "type": "image/png" }, { "file": "images/project/atus/mac-1.png", "size": 324392, "type": "image/png" }, { "file": "images/project/atus/mac-2.png", "size": 358160, "type": "image/png" }, { "file": "images/project/atus/phone-1.png", "size": 566129, "type": "image/png" }, { "file": "images/project/atus/phone-2.png", "size": 650612, "type": "image/png" }, { "file": "images/project/atus/thumbnail.png", "size": 324392, "type": "image/png" }, { "file": "images/project/bob-ross-art-gallery/header.png", "size": 522077, "type": "image/png" }, { "file": "images/project/bob-ross-art-gallery/iphone-1.png", "size": 344053, "type": "image/png" }, { "file": "images/project/bob-ross-art-gallery/iphone-2.png", "size": 351424, "type": "image/png" }, { "file": "images/project/bob-ross-art-gallery/iphone-3.png", "size": 428163, "type": "image/png" }, { "file": "images/project/bob-ross-art-gallery/iphone-4.png", "size": 717046, "type": "image/png" }, { "file": "images/project/bob-ross-art-gallery/mac-1.png", "size": 289518, "type": "image/png" }, { "file": "images/project/bob-ross-art-gallery/mac-2.png", "size": 281759, "type": "image/png" }, { "file": "images/project/bob-ross-art-gallery/mac-3.png", "size": 302161, "type": "image/png" }, { "file": "images/project/bob-ross-art-gallery/mac-4.png", "size": 490020, "type": "image/png" }, { "file": "images/project/bob-ross-art-gallery/mac-5.png", "size": 856991, "type": "image/png" }, { "file": "images/project/bob-ross-art-gallery/thumbnail.png", "size": 856991, "type": "image/png" }, { "file": "images/project/compas/header.png", "size": 142488, "type": "image/png" }, { "file": "images/project/compas/mac-1.png", "size": 472868, "type": "image/png" }, { "file": "images/project/compas/mac-2.png", "size": 280729, "type": "image/png" }, { "file": "images/project/compas/phone-1.png", "size": 920374, "type": "image/png" }, { "file": "images/project/compas/phone-2.png", "size": 426156, "type": "image/png" }, { "file": "images/project/compas/thumbnail.png", "size": 280729, "type": "image/png" }, { "file": "images/project/covid-masking/header.png", "size": 162235, "type": "image/png" }, { "file": "images/project/covid-masking/mac-1.png", "size": 309479, "type": "image/png" }, { "file": "images/project/covid-masking/mac-2.png", "size": 499158, "type": "image/png" }, { "file": "images/project/covid-masking/mac-3.png", "size": 259141, "type": "image/png" }, { "file": "images/project/covid-masking/mac-4.png", "size": 422151, "type": "image/png" }, { "file": "images/project/covid-masking/mac-5.png", "size": 889689, "type": "image/png" }, { "file": "images/project/covid-masking/phone-1.png", "size": 876488, "type": "image/png" }, { "file": "images/project/covid-masking/phone-2.png", "size": 793978, "type": "image/png" }, { "file": "images/project/covid-masking/phone-3.png", "size": 1382827, "type": "image/png" }, { "file": "images/project/covid-masking/thumbnail.png", "size": 889689, "type": "image/png" }, { "file": "images/project/cudi-hums/albums-mac.png", "size": 436737, "type": "image/png" }, { "file": "images/project/cudi-hums/albums-phone.png", "size": 434100, "type": "image/png" }, { "file": "images/project/cudi-hums/header.png", "size": 387992, "type": "image/png" }, { "file": "images/project/cudi-hums/intro-phone.png", "size": 344442, "type": "image/png" }, { "file": "images/project/cudi-hums/lyrics-mac.png", "size": 391896, "type": "image/png" }, { "file": "images/project/cudi-hums/lyrics-phone.png", "size": 391041, "type": "image/png" }, { "file": "images/project/cudi-hums/outro-phone.png", "size": 839368, "type": "image/png" }, { "file": "images/project/cudi-hums/thumbnail.png", "size": 436910, "type": "image/png" }, { "file": "images/project/cudi-hums/tracks-mac.png", "size": 409045, "type": "image/png" }, { "file": "images/project/cudi-hums/tracks-phone.png", "size": 702731, "type": "image/png" }, { "file": "images/project/how-many-people/header.png", "size": 279507, "type": "image/png" }, { "file": "images/project/how-many-people/mac-1.png", "size": 344834, "type": "image/png" }, { "file": "images/project/how-many-people/mac-2.png", "size": 419217, "type": "image/png" }, { "file": "images/project/how-many-people/phone-1.png", "size": 539341, "type": "image/png" }, { "file": "images/project/how-many-people/phone-2.png", "size": 480652, "type": "image/png" }, { "file": "images/project/how-many-people/thumbnail.png", "size": 419044, "type": "image/png" }, { "file": "images/project/map-houston-homicides/header.png", "size": 940867, "type": "image/png" }, { "file": "images/project/map-houston-homicides/mac-1.png", "size": 686069, "type": "image/png" }, { "file": "images/project/map-houston-homicides/mac-2.png", "size": 763418, "type": "image/png" }, { "file": "images/project/map-houston-homicides/mac-3.png", "size": 993711, "type": "image/png" }, { "file": "images/project/map-houston-homicides/mac-4.png", "size": 1095083, "type": "image/png" }, { "file": "images/project/map-houston-homicides/phone-1.png", "size": 1357800, "type": "image/png" }, { "file": "images/project/map-houston-homicides/phone-2.png", "size": 1322563, "type": "image/png" }, { "file": "images/project/map-houston-homicides/phone-3.png", "size": 1366588, "type": "image/png" }, { "file": "images/project/map-houston-homicides/thumbnail.png", "size": 686069, "type": "image/png" }, { "file": "images/project/map-missing-migrants/header.png", "size": 2595176, "type": "image/png" }, { "file": "images/project/map-missing-migrants/mac-1.png", "size": 1686366, "type": "image/png" }, { "file": "images/project/map-missing-migrants/mac-2.png", "size": 2525417, "type": "image/png" }, { "file": "images/project/map-missing-migrants/mac-3.png", "size": 1666740, "type": "image/png" }, { "file": "images/project/map-missing-migrants/mac-4.png", "size": 2408824, "type": "image/png" }, { "file": "images/project/map-missing-migrants/mac-5.png", "size": 2937636, "type": "image/png" }, { "file": "images/project/map-missing-migrants/phone-1.png", "size": 1593964, "type": "image/png" }, { "file": "images/project/map-missing-migrants/phone-2.png", "size": 2671671, "type": "image/png" }, { "file": "images/project/map-missing-migrants/phone-3.png", "size": 4814414, "type": "image/png" }, { "file": "images/project/map-missing-migrants/thumbnail.png", "size": 1686366, "type": "image/png" }, { "file": "images/project/media-mentions/header.png", "size": 118535, "type": "image/png" }, { "file": "images/project/media-mentions/mac.png", "size": 306203, "type": "image/png" }, { "file": "images/project/media-mentions/phone.png", "size": 582627, "type": "image/png" }, { "file": "images/project/media-mentions/thumbnail.png", "size": 306203, "type": "image/png" }, { "file": "images/project/one-line-hacks/.DS_Store", "size": 6148, "type": null }, { "file": "images/project/one-line-hacks/header-old.png", "size": 490537, "type": "image/png" }, { "file": "images/project/one-line-hacks/header.png", "size": 117340, "type": "image/png" }, { "file": "images/project/one-line-hacks/mac-1.png", "size": 383847, "type": "image/png" }, { "file": "images/project/one-line-hacks/phone-1.png", "size": 769617, "type": "image/png" }, { "file": "images/project/one-line-hacks/thumbnail.png", "size": 383847, "type": "image/png" }, { "file": "images/project/police-killings/header.png", "size": 250166, "type": "image/png" }, { "file": "images/project/police-killings/mac-1.png", "size": 279769, "type": "image/png" }, { "file": "images/project/police-killings/mac-2.png", "size": 391676, "type": "image/png" }, { "file": "images/project/police-killings/phone-1.png", "size": 381385, "type": "image/png" }, { "file": "images/project/police-killings/phone-2.png", "size": 391569, "type": "image/png" }, { "file": "images/project/police-killings/thumbnail.png", "size": 391676, "type": "image/png" }, { "file": "images/project/quarantunes/header.png", "size": 214359, "type": "image/png" }, { "file": "images/project/quarantunes/macbook.png", "size": 454223, "type": "image/png" }, { "file": "images/project/quarantunes/phone.png", "size": 779131, "type": "image/png" }, { "file": "images/project/quarantunes/side-by-side.png", "size": 667703, "type": "image/png" }, { "file": "images/project/quarantunes/tablet.png", "size": 404682, "type": "image/png" }, { "file": "images/project/quarantunes/thumbnail.png", "size": 454223, "type": "image/png" }, { "file": "images/project/state-police-spending/header.png", "size": 229693, "type": "image/png" }, { "file": "images/project/state-police-spending/mac.png", "size": 365809, "type": "image/png" }, { "file": "images/project/state-police-spending/phone.png", "size": 549873, "type": "image/png" }, { "file": "images/project/state-police-spending/thumbnail.png", "size": 365809, "type": "image/png" }, { "file": "images/project/tpl-schools-db/.DS_Store", "size": 6148, "type": null }, { "file": "images/project/tpl-schools-db/header.png", "size": 437453, "type": "image/png" }, { "file": "images/project/tpl-schools-db/iphone-1.png", "size": 603447, "type": "image/png" }, { "file": "images/project/tpl-schools-db/iphone-2.png", "size": 505851, "type": "image/png" }, { "file": "images/project/tpl-schools-db/iphone-3.png", "size": 596795, "type": "image/png" }, { "file": "images/project/tpl-schools-db/mac-1.png", "size": 562424, "type": "image/png" }, { "file": "images/project/tpl-schools-db/mac-2.png", "size": 470837, "type": "image/png" }, { "file": "images/project/tpl-schools-db/thumbnail.png", "size": 562424, "type": "image/png" }, { "file": "plugins/MorphSVGPlugin.min.js", "size": 16715, "type": "application/javascript" }, { "file": "videos/.DS_Store", "size": 6148, "type": null }, { "file": "videos/0.mov", "size": 2530263, "type": "video/quicktime" }, { "file": "videos/0.webm", "size": 2255719, "type": "video/webm" }, { "file": "videos/1.mov", "size": 1620978, "type": "video/quicktime" }, { "file": "videos/1.webm", "size": 1775726, "type": "video/webm" }, { "file": "videos/2.mov", "size": 2352553, "type": "video/quicktime" }, { "file": "videos/2.webm", "size": 1768475, "type": "video/webm" }, { "file": "videos/3.mov", "size": 1687563, "type": "video/quicktime" }, { "file": "videos/3.webm", "size": 1814469, "type": "video/webm" }, { "file": "videos/raw/.DS_Store", "size": 6148, "type": null }, { "file": "videos/raw/0-prores.mov", "size": 104966007, "type": "video/quicktime" }, { "file": "videos/raw/0.mov", "size": 2530263, "type": "video/quicktime" }, { "file": "videos/raw/0.webm", "size": 2255719, "type": "video/webm" }, { "file": "videos/raw/1-prores.mov", "size": 51115571, "type": "video/quicktime" }, { "file": "videos/raw/1.mov", "size": 1620978, "type": "video/quicktime" }, { "file": "videos/raw/1.webm", "size": 1775726, "type": "video/webm" }, { "file": "videos/raw/2-prores.mov", "size": 106541251, "type": "video/quicktime" }, { "file": "videos/raw/2.mov", "size": 2352553, "type": "video/quicktime" }, { "file": "videos/raw/2.webm", "size": 1768475, "type": "video/webm" }, { "file": "videos/raw/3-prores.mov", "size": 52868467, "type": "video/quicktime" }, { "file": "videos/raw/3.mov", "size": 1687563, "type": "video/quicktime" }, { "file": "videos/raw/3.webm", "size": 1814469, "type": "video/webm" }, { "file": "workers/bundler.js", "size": 468912, "type": "application/javascript" }, { "file": "workers/compiler.js", "size": 605, "type": "application/javascript" }],
      layout: "src/routes/__layout.svelte",
      error: "src/routes/__error.svelte",
      routes: [
        {
          type: "page",
          pattern: /^\/$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/index.svelte"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "endpoint",
          pattern: /^\/experience\.json$/,
          params: empty,
          load: () => Promise.resolve().then(() => (init_experience_json_eeaf338a(), experience_json_eeaf338a_exports))
        },
        {
          type: "endpoint",
          pattern: /^\/projects\.json$/,
          params: empty,
          load: () => Promise.resolve().then(() => (init_projects_json_5153e243(), projects_json_5153e243_exports))
        },
        {
          type: "endpoint",
          pattern: /^\/awards\.json$/,
          params: empty,
          load: () => Promise.resolve().then(() => (init_awards_json_2a867850(), awards_json_2a867850_exports))
        },
        {
          type: "page",
          pattern: /^\/experience\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/experience/index.svelte"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/experience\/layout\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/experience/layout.svelte"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/experience\/moksha\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/experience/moksha.md"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/experience\/axios\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/experience/axios.md"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/experience\/socom\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/experience/socom.md"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/experience\/tpl\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/experience/tpl.md"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "endpoint",
          pattern: /^\/posts\.json$/,
          params: empty,
          load: () => Promise.resolve().then(() => (init_posts_json_c9cb5aa2(), posts_json_c9cb5aa2_exports))
        },
        {
          type: "page",
          pattern: /^\/project\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/project/index.svelte"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/project\/map-houston-homicides\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/project/map-houston-homicides.md"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/project\/state-police-spending\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/project/state-police-spending.md"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/project\/bob-ross-art-gallery\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/project/bob-ross-art-gallery.md"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/project\/map-missing-migrants\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/project/map-missing-migrants.md"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/project\/how-many-people\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/project/how-many-people.md"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/project\/police-killings\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/project/police-killings.md"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/project\/media-mentions\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/project/media-mentions.md"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/project\/one-line-hacks\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/project/one-line-hacks.md"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/project\/tpl-schools-db\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/project/tpl-schools-db.md"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/project\/covid-masking\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/project/covid-masking.md"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/project\/quarantunes\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/project/quarantunes.md"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/project\/cudi-hums\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/project/cudi-hums.md"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/project\/compas\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/project/compas.md"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/project\/layout\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/project/layout.svelte"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/project\/atus\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/project/atus.md"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/about\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/about/index.svelte"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/award\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/award/index.svelte"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/award\/rstudio-table-contest-2021\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/award/rstudio-table-contest-2021.md"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/award\/d2k-showcase-2020\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/award/d2k-showcase-2020.md"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/award\/northeastern-2020\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/award/northeastern-2020.md"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/award\/pudding-cup-2020\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/award/pudding-cup-2020.md"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/award\/nationals-2017\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/award/nationals-2017.md"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/award\/datathon-2020\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/award/datathon-2020.md"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/award\/hudspeth-2020\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/award/hudspeth-2020.md"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/award\/malofiej-2020\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/award/malofiej-2020.md"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/award\/malofiej-2021\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/award/malofiej-2021.md"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/award\/bipp-2018\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/award/bipp-2018.md"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/award\/chrp-2020\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/award/chrp-2020.md"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/award\/hpc-2018\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/award/hpc-2018.md"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/award\/hpc-2019\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/award/hpc-2019.md"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/award\/hpc-2020\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/award/hpc-2020.md"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/award\/snd-2021\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/award/snd-2021.md"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/award\/layout\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/award/layout.svelte"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/post\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/post/index.svelte"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/post\/economist-table-replication-using-reactable\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/post/economist-table-replication-using-reactable.md"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/post\/adding-a-chart-to-your-d3-tooltip\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/post/adding-a-chart-to-your-d3-tooltip.md"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/post\/tidy-tuesday-powerlifting\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/post/tidy-tuesday-powerlifting.md"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/post\/tidy-tuesday-replication\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/post/tidy-tuesday-replication.md"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/post\/automation-scrollytell\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/post/automation-scrollytell.md"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/post\/animate-hugo-academic\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/post/animate-hugo-academic.md"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/post\/introducing-tpltheme\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/post/introducing-tpltheme.md"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/post\/color-in-data-vis\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/post/color-in-data-vis.md"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/post\/do-something-else\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/post/do-something-else.md"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/post\/nuxt-blog-starter\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/post/nuxt-blog-starter.md"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/post\/covid-gun-spikes\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/post/covid-gun-spikes.md"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/post\/covid-on-campus\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/post/covid-on-campus.md"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/post\/map-springfield\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/post/map-springfield.md"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/post\/dumbbell-plots\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/post/dumbbell-plots.md"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/post\/refugee-trends\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/post/refugee-trends.md"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/post\/svelte-scatter\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/post/svelte-scatter.md"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/post\/svelte-and-d3\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/post/svelte-and-d3.md"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/post\/covid-posts\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/post/covid-posts.md"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/post\/flat-data-r\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/post/flat-data-r.md"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/post\/layout\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/post/layout.svelte"],
          b: ["src/routes/__error.svelte"]
        }
      ]
    };
    get_hooks = (hooks) => ({
      getSession: hooks.getSession || (() => ({})),
      handle: hooks.handle || (({ request, resolve: resolve2 }) => resolve2(request)),
      handleError: hooks.handleError || (({ error: error2 }) => console.error(error2.stack)),
      externalFetch: hooks.externalFetch || fetch
    });
    module_lookup = {
      "src/routes/__layout.svelte": () => Promise.resolve().then(() => (init_layout_f4d524c8(), layout_f4d524c8_exports)),
      "src/routes/__error.svelte": () => Promise.resolve().then(() => (init_error_e9146f31(), error_e9146f31_exports)),
      "src/routes/index.svelte": () => Promise.resolve().then(() => (init_index_ec7d7444(), index_ec7d7444_exports)),
      "src/routes/experience/index.svelte": () => Promise.resolve().then(() => (init_index_1d23e8c8(), index_1d23e8c8_exports)),
      "src/routes/experience/layout.svelte": () => Promise.resolve().then(() => (init_layout_720789ab(), layout_720789ab_exports)),
      "src/routes/experience/moksha.md": () => Promise.resolve().then(() => (init_moksha_36761011(), moksha_36761011_exports)),
      "src/routes/experience/axios.md": () => Promise.resolve().then(() => (init_axios_c62f5b73(), axios_c62f5b73_exports)),
      "src/routes/experience/socom.md": () => Promise.resolve().then(() => (init_socom_928a555d(), socom_928a555d_exports)),
      "src/routes/experience/tpl.md": () => Promise.resolve().then(() => (init_tpl_a65e72fb(), tpl_a65e72fb_exports)),
      "src/routes/project/index.svelte": () => Promise.resolve().then(() => (init_index_d2625cbc(), index_d2625cbc_exports)),
      "src/routes/project/map-houston-homicides.md": () => Promise.resolve().then(() => (init_map_houston_homicides_fb5e3c63(), map_houston_homicides_fb5e3c63_exports)),
      "src/routes/project/state-police-spending.md": () => Promise.resolve().then(() => (init_state_police_spending_3f7bcce7(), state_police_spending_3f7bcce7_exports)),
      "src/routes/project/bob-ross-art-gallery.md": () => Promise.resolve().then(() => (init_bob_ross_art_gallery_9eeb337a(), bob_ross_art_gallery_9eeb337a_exports)),
      "src/routes/project/map-missing-migrants.md": () => Promise.resolve().then(() => (init_map_missing_migrants_1cf10cfb(), map_missing_migrants_1cf10cfb_exports)),
      "src/routes/project/how-many-people.md": () => Promise.resolve().then(() => (init_how_many_people_3ca8cf42(), how_many_people_3ca8cf42_exports)),
      "src/routes/project/police-killings.md": () => Promise.resolve().then(() => (init_police_killings_c1167173(), police_killings_c1167173_exports)),
      "src/routes/project/media-mentions.md": () => Promise.resolve().then(() => (init_media_mentions_37dc09b6(), media_mentions_37dc09b6_exports)),
      "src/routes/project/one-line-hacks.md": () => Promise.resolve().then(() => (init_one_line_hacks_8cd8beed(), one_line_hacks_8cd8beed_exports)),
      "src/routes/project/tpl-schools-db.md": () => Promise.resolve().then(() => (init_tpl_schools_db_e581ff12(), tpl_schools_db_e581ff12_exports)),
      "src/routes/project/covid-masking.md": () => Promise.resolve().then(() => (init_covid_masking_556f2090(), covid_masking_556f2090_exports)),
      "src/routes/project/quarantunes.md": () => Promise.resolve().then(() => (init_quarantunes_4fd849e9(), quarantunes_4fd849e9_exports)),
      "src/routes/project/cudi-hums.md": () => Promise.resolve().then(() => (init_cudi_hums_00d50d13(), cudi_hums_00d50d13_exports)),
      "src/routes/project/compas.md": () => Promise.resolve().then(() => (init_compas_720ac1d2(), compas_720ac1d2_exports)),
      "src/routes/project/layout.svelte": () => Promise.resolve().then(() => (init_layout_3f1c4dcc(), layout_3f1c4dcc_exports)),
      "src/routes/project/atus.md": () => Promise.resolve().then(() => (init_atus_5ac17a29(), atus_5ac17a29_exports)),
      "src/routes/about/index.svelte": () => Promise.resolve().then(() => (init_index_ad8386c5(), index_ad8386c5_exports)),
      "src/routes/award/index.svelte": () => Promise.resolve().then(() => (init_index_11158698(), index_11158698_exports)),
      "src/routes/award/rstudio-table-contest-2021.md": () => Promise.resolve().then(() => (init_rstudio_table_contest_2021_1dd07ccb(), rstudio_table_contest_2021_1dd07ccb_exports)),
      "src/routes/award/d2k-showcase-2020.md": () => Promise.resolve().then(() => (init_d2k_showcase_2020_6103b3a1(), d2k_showcase_2020_6103b3a1_exports)),
      "src/routes/award/northeastern-2020.md": () => Promise.resolve().then(() => (init_northeastern_2020_6cc1f185(), northeastern_2020_6cc1f185_exports)),
      "src/routes/award/pudding-cup-2020.md": () => Promise.resolve().then(() => (init_pudding_cup_2020_f7625164(), pudding_cup_2020_f7625164_exports)),
      "src/routes/award/nationals-2017.md": () => Promise.resolve().then(() => (init_nationals_2017_ef86cfd7(), nationals_2017_ef86cfd7_exports)),
      "src/routes/award/datathon-2020.md": () => Promise.resolve().then(() => (init_datathon_2020_417f5796(), datathon_2020_417f5796_exports)),
      "src/routes/award/hudspeth-2020.md": () => Promise.resolve().then(() => (init_hudspeth_2020_05fcf5b9(), hudspeth_2020_05fcf5b9_exports)),
      "src/routes/award/malofiej-2020.md": () => Promise.resolve().then(() => (init_malofiej_2020_fa078526(), malofiej_2020_fa078526_exports)),
      "src/routes/award/malofiej-2021.md": () => Promise.resolve().then(() => (init_malofiej_2021_adbb9a9b(), malofiej_2021_adbb9a9b_exports)),
      "src/routes/award/bipp-2018.md": () => Promise.resolve().then(() => (init_bipp_2018_2f226335(), bipp_2018_2f226335_exports)),
      "src/routes/award/chrp-2020.md": () => Promise.resolve().then(() => (init_chrp_2020_7675f653(), chrp_2020_7675f653_exports)),
      "src/routes/award/hpc-2018.md": () => Promise.resolve().then(() => (init_hpc_2018_3b361fa0(), hpc_2018_3b361fa0_exports)),
      "src/routes/award/hpc-2019.md": () => Promise.resolve().then(() => (init_hpc_2019_ea0c7b04(), hpc_2019_ea0c7b04_exports)),
      "src/routes/award/hpc-2020.md": () => Promise.resolve().then(() => (init_hpc_2020_8d2ea241(), hpc_2020_8d2ea241_exports)),
      "src/routes/award/snd-2021.md": () => Promise.resolve().then(() => (init_snd_2021_b57846b6(), snd_2021_b57846b6_exports)),
      "src/routes/award/layout.svelte": () => Promise.resolve().then(() => (init_layout_f08d1a0d(), layout_f08d1a0d_exports)),
      "src/routes/post/index.svelte": () => Promise.resolve().then(() => (init_index_1de0c6e9(), index_1de0c6e9_exports)),
      "src/routes/post/economist-table-replication-using-reactable.md": () => Promise.resolve().then(() => (init_economist_table_replication_using_reactable_d59c42a0(), economist_table_replication_using_reactable_d59c42a0_exports)),
      "src/routes/post/adding-a-chart-to-your-d3-tooltip.md": () => Promise.resolve().then(() => (init_adding_a_chart_to_your_d3_tooltip_67831f20(), adding_a_chart_to_your_d3_tooltip_67831f20_exports)),
      "src/routes/post/tidy-tuesday-powerlifting.md": () => Promise.resolve().then(() => (init_tidy_tuesday_powerlifting_56cc77f6(), tidy_tuesday_powerlifting_56cc77f6_exports)),
      "src/routes/post/tidy-tuesday-replication.md": () => Promise.resolve().then(() => (init_tidy_tuesday_replication_27e2426e(), tidy_tuesday_replication_27e2426e_exports)),
      "src/routes/post/automation-scrollytell.md": () => Promise.resolve().then(() => (init_automation_scrollytell_6d42332b(), automation_scrollytell_6d42332b_exports)),
      "src/routes/post/animate-hugo-academic.md": () => Promise.resolve().then(() => (init_animate_hugo_academic_123d84a8(), animate_hugo_academic_123d84a8_exports)),
      "src/routes/post/introducing-tpltheme.md": () => Promise.resolve().then(() => (init_introducing_tpltheme_70118bb6(), introducing_tpltheme_70118bb6_exports)),
      "src/routes/post/color-in-data-vis.md": () => Promise.resolve().then(() => (init_color_in_data_vis_3bd4b890(), color_in_data_vis_3bd4b890_exports)),
      "src/routes/post/do-something-else.md": () => Promise.resolve().then(() => (init_do_something_else_1f16f77a(), do_something_else_1f16f77a_exports)),
      "src/routes/post/nuxt-blog-starter.md": () => Promise.resolve().then(() => (init_nuxt_blog_starter_99b71689(), nuxt_blog_starter_99b71689_exports)),
      "src/routes/post/covid-gun-spikes.md": () => Promise.resolve().then(() => (init_covid_gun_spikes_595c3f78(), covid_gun_spikes_595c3f78_exports)),
      "src/routes/post/covid-on-campus.md": () => Promise.resolve().then(() => (init_covid_on_campus_09e3e28f(), covid_on_campus_09e3e28f_exports)),
      "src/routes/post/map-springfield.md": () => Promise.resolve().then(() => (init_map_springfield_65bdac35(), map_springfield_65bdac35_exports)),
      "src/routes/post/dumbbell-plots.md": () => Promise.resolve().then(() => (init_dumbbell_plots_da9731c3(), dumbbell_plots_da9731c3_exports)),
      "src/routes/post/refugee-trends.md": () => Promise.resolve().then(() => (init_refugee_trends_97b67ae7(), refugee_trends_97b67ae7_exports)),
      "src/routes/post/svelte-scatter.md": () => Promise.resolve().then(() => (init_svelte_scatter_f5d4a79a(), svelte_scatter_f5d4a79a_exports)),
      "src/routes/post/svelte-and-d3.md": () => Promise.resolve().then(() => (init_svelte_and_d3_81974204(), svelte_and_d3_81974204_exports)),
      "src/routes/post/covid-posts.md": () => Promise.resolve().then(() => (init_covid_posts_32b068ed(), covid_posts_32b068ed_exports)),
      "src/routes/post/flat-data-r.md": () => Promise.resolve().then(() => (init_flat_data_r_0a30bdaf(), flat_data_r_0a30bdaf_exports)),
      "src/routes/post/layout.svelte": () => Promise.resolve().then(() => (init_layout_ef610ed1(), layout_ef610ed1_exports))
    };
    metadata_lookup = { "src/routes/__layout.svelte": { "entry": "pages/__layout.svelte-6473699b.js", "css": ["assets/pages/__layout.svelte-431b68d6.css"], "js": ["pages/__layout.svelte-6473699b.js", "chunks/vendor-dfb9df3e.js", "chunks/global-164a8ca5.js", "chunks/store-b0ba4c19.js"], "styles": [] }, "src/routes/__error.svelte": { "entry": "pages/__error.svelte-0b036aa0.js", "css": ["assets/pages/__error.svelte-79081d85.css"], "js": ["pages/__error.svelte-0b036aa0.js", "chunks/vendor-dfb9df3e.js"], "styles": [] }, "src/routes/index.svelte": { "entry": "pages/index.svelte-15dee25f.js", "css": ["assets/pages/index.svelte-d10f607e.css", "assets/TransitionInView-36466010.css", "assets/Star-4c3ba909.css", "assets/Award-3545467f.css"], "js": ["pages/index.svelte-15dee25f.js", "chunks/vendor-dfb9df3e.js", "chunks/global-164a8ca5.js", "chunks/utils-419e8671.js", "chunks/TransitionInView-b5bbebe8.js", "chunks/Star-6bfb9ffc.js", "chunks/Award-eea2e85e.js"], "styles": [] }, "src/routes/experience/index.svelte": { "entry": "pages/experience/index.svelte-c172f2a0.js", "css": ["assets/pages/experience/index.svelte-4f98499e.css", "assets/BackTo-02f76bde.css", "assets/TransitionInView-36466010.css"], "js": ["pages/experience/index.svelte-c172f2a0.js", "chunks/vendor-dfb9df3e.js", "chunks/BackTo-f09ad798.js", "chunks/global-164a8ca5.js", "chunks/utils-419e8671.js", "chunks/TransitionInView-b5bbebe8.js", "chunks/store-b0ba4c19.js"], "styles": [] }, "src/routes/experience/layout.svelte": { "entry": "pages/experience/layout.svelte-99c48cf7.js", "css": ["assets/pages/experience/layout.svelte-35e46340.css", "assets/BackTo-02f76bde.css"], "js": ["pages/experience/layout.svelte-99c48cf7.js", "chunks/vendor-dfb9df3e.js", "chunks/BackTo-f09ad798.js", "chunks/global-164a8ca5.js", "chunks/utils-419e8671.js", "chunks/store-b0ba4c19.js"], "styles": [] }, "src/routes/experience/moksha.md": { "entry": "pages/experience/moksha.md-cf68674c.js", "css": ["assets/pages/experience/layout.svelte-35e46340.css", "assets/BackTo-02f76bde.css"], "js": ["pages/experience/moksha.md-cf68674c.js", "chunks/vendor-dfb9df3e.js", "pages/experience/layout.svelte-99c48cf7.js", "chunks/BackTo-f09ad798.js", "chunks/global-164a8ca5.js", "chunks/utils-419e8671.js", "chunks/store-b0ba4c19.js"], "styles": [] }, "src/routes/experience/axios.md": { "entry": "pages/experience/axios.md-fb6e5245.js", "css": ["assets/pages/experience/layout.svelte-35e46340.css", "assets/BackTo-02f76bde.css"], "js": ["pages/experience/axios.md-fb6e5245.js", "chunks/vendor-dfb9df3e.js", "pages/experience/layout.svelte-99c48cf7.js", "chunks/BackTo-f09ad798.js", "chunks/global-164a8ca5.js", "chunks/utils-419e8671.js", "chunks/store-b0ba4c19.js"], "styles": [] }, "src/routes/experience/socom.md": { "entry": "pages/experience/socom.md-65b5481c.js", "css": ["assets/pages/experience/layout.svelte-35e46340.css", "assets/BackTo-02f76bde.css"], "js": ["pages/experience/socom.md-65b5481c.js", "chunks/vendor-dfb9df3e.js", "pages/experience/layout.svelte-99c48cf7.js", "chunks/BackTo-f09ad798.js", "chunks/global-164a8ca5.js", "chunks/utils-419e8671.js", "chunks/store-b0ba4c19.js"], "styles": [] }, "src/routes/experience/tpl.md": { "entry": "pages/experience/tpl.md-38e2b1b9.js", "css": ["assets/pages/experience/layout.svelte-35e46340.css", "assets/BackTo-02f76bde.css"], "js": ["pages/experience/tpl.md-38e2b1b9.js", "chunks/vendor-dfb9df3e.js", "pages/experience/layout.svelte-99c48cf7.js", "chunks/BackTo-f09ad798.js", "chunks/global-164a8ca5.js", "chunks/utils-419e8671.js", "chunks/store-b0ba4c19.js"], "styles": [] }, "src/routes/project/index.svelte": { "entry": "pages/project/index.svelte-b48403fa.js", "css": ["assets/pages/project/index.svelte-11ccdf9b.css", "assets/BackTo-02f76bde.css", "assets/TransitionInView-36466010.css"], "js": ["pages/project/index.svelte-b48403fa.js", "chunks/vendor-dfb9df3e.js", "chunks/BackTo-f09ad798.js", "chunks/global-164a8ca5.js", "chunks/utils-419e8671.js", "chunks/TransitionInView-b5bbebe8.js", "chunks/store-b0ba4c19.js"], "styles": [] }, "src/routes/project/map-houston-homicides.md": { "entry": "pages/project/map-houston-homicides.md-96cb682a.js", "css": ["assets/Image.svelte_svelte&type=style&lang-a3a01521.css", "assets/CornerTitle-85b81caa.css", "assets/BackTo-02f76bde.css"], "js": ["pages/project/map-houston-homicides.md-96cb682a.js", "chunks/vendor-dfb9df3e.js", "pages/project/layout.svelte-0fd35314.js", "chunks/CornerTitle-3a53cda1.js", "chunks/BackTo-f09ad798.js", "chunks/global-164a8ca5.js", "chunks/utils-419e8671.js", "chunks/store-b0ba4c19.js", "chunks/Image-4d50732f.js"], "styles": [] }, "src/routes/project/state-police-spending.md": { "entry": "pages/project/state-police-spending.md-c7fa242d.js", "css": ["assets/Image.svelte_svelte&type=style&lang-a3a01521.css", "assets/CornerTitle-85b81caa.css", "assets/BackTo-02f76bde.css"], "js": ["pages/project/state-police-spending.md-c7fa242d.js", "chunks/vendor-dfb9df3e.js", "pages/project/layout.svelte-0fd35314.js", "chunks/CornerTitle-3a53cda1.js", "chunks/BackTo-f09ad798.js", "chunks/global-164a8ca5.js", "chunks/utils-419e8671.js", "chunks/store-b0ba4c19.js", "chunks/Image-4d50732f.js"], "styles": [] }, "src/routes/project/bob-ross-art-gallery.md": { "entry": "pages/project/bob-ross-art-gallery.md-1f643dcb.js", "css": ["assets/Image.svelte_svelte&type=style&lang-a3a01521.css", "assets/CornerTitle-85b81caa.css", "assets/BackTo-02f76bde.css"], "js": ["pages/project/bob-ross-art-gallery.md-1f643dcb.js", "chunks/vendor-dfb9df3e.js", "pages/project/layout.svelte-0fd35314.js", "chunks/CornerTitle-3a53cda1.js", "chunks/BackTo-f09ad798.js", "chunks/global-164a8ca5.js", "chunks/utils-419e8671.js", "chunks/store-b0ba4c19.js", "chunks/Image-4d50732f.js"], "styles": [] }, "src/routes/project/map-missing-migrants.md": { "entry": "pages/project/map-missing-migrants.md-5796f0d5.js", "css": ["assets/Image.svelte_svelte&type=style&lang-a3a01521.css", "assets/CornerTitle-85b81caa.css", "assets/BackTo-02f76bde.css"], "js": ["pages/project/map-missing-migrants.md-5796f0d5.js", "chunks/vendor-dfb9df3e.js", "pages/project/layout.svelte-0fd35314.js", "chunks/CornerTitle-3a53cda1.js", "chunks/BackTo-f09ad798.js", "chunks/global-164a8ca5.js", "chunks/utils-419e8671.js", "chunks/store-b0ba4c19.js", "chunks/Image-4d50732f.js"], "styles": [] }, "src/routes/project/how-many-people.md": { "entry": "pages/project/how-many-people.md-295c2b83.js", "css": ["assets/Image.svelte_svelte&type=style&lang-a3a01521.css", "assets/CornerTitle-85b81caa.css", "assets/BackTo-02f76bde.css"], "js": ["pages/project/how-many-people.md-295c2b83.js", "chunks/vendor-dfb9df3e.js", "pages/project/layout.svelte-0fd35314.js", "chunks/CornerTitle-3a53cda1.js", "chunks/BackTo-f09ad798.js", "chunks/global-164a8ca5.js", "chunks/utils-419e8671.js", "chunks/store-b0ba4c19.js", "chunks/Image-4d50732f.js"], "styles": [] }, "src/routes/project/police-killings.md": { "entry": "pages/project/police-killings.md-f04b883b.js", "css": ["assets/Image.svelte_svelte&type=style&lang-a3a01521.css", "assets/CornerTitle-85b81caa.css", "assets/BackTo-02f76bde.css"], "js": ["pages/project/police-killings.md-f04b883b.js", "chunks/vendor-dfb9df3e.js", "pages/project/layout.svelte-0fd35314.js", "chunks/CornerTitle-3a53cda1.js", "chunks/BackTo-f09ad798.js", "chunks/global-164a8ca5.js", "chunks/utils-419e8671.js", "chunks/store-b0ba4c19.js", "chunks/Image-4d50732f.js"], "styles": [] }, "src/routes/project/media-mentions.md": { "entry": "pages/project/media-mentions.md-8df97392.js", "css": ["assets/Image.svelte_svelte&type=style&lang-a3a01521.css", "assets/CornerTitle-85b81caa.css", "assets/BackTo-02f76bde.css"], "js": ["pages/project/media-mentions.md-8df97392.js", "chunks/vendor-dfb9df3e.js", "pages/project/layout.svelte-0fd35314.js", "chunks/CornerTitle-3a53cda1.js", "chunks/BackTo-f09ad798.js", "chunks/global-164a8ca5.js", "chunks/utils-419e8671.js", "chunks/store-b0ba4c19.js", "chunks/Image-4d50732f.js"], "styles": [] }, "src/routes/project/one-line-hacks.md": { "entry": "pages/project/one-line-hacks.md-44577a09.js", "css": ["assets/Image.svelte_svelte&type=style&lang-a3a01521.css", "assets/CornerTitle-85b81caa.css", "assets/BackTo-02f76bde.css"], "js": ["pages/project/one-line-hacks.md-44577a09.js", "chunks/vendor-dfb9df3e.js", "pages/project/layout.svelte-0fd35314.js", "chunks/CornerTitle-3a53cda1.js", "chunks/BackTo-f09ad798.js", "chunks/global-164a8ca5.js", "chunks/utils-419e8671.js", "chunks/store-b0ba4c19.js", "chunks/Image-4d50732f.js"], "styles": [] }, "src/routes/project/tpl-schools-db.md": { "entry": "pages/project/tpl-schools-db.md-39d097b8.js", "css": ["assets/Image.svelte_svelte&type=style&lang-a3a01521.css", "assets/CornerTitle-85b81caa.css", "assets/BackTo-02f76bde.css"], "js": ["pages/project/tpl-schools-db.md-39d097b8.js", "chunks/vendor-dfb9df3e.js", "pages/project/layout.svelte-0fd35314.js", "chunks/CornerTitle-3a53cda1.js", "chunks/BackTo-f09ad798.js", "chunks/global-164a8ca5.js", "chunks/utils-419e8671.js", "chunks/store-b0ba4c19.js", "chunks/Image-4d50732f.js"], "styles": [] }, "src/routes/project/covid-masking.md": { "entry": "pages/project/covid-masking.md-270fe9bd.js", "css": ["assets/Image.svelte_svelte&type=style&lang-a3a01521.css", "assets/CornerTitle-85b81caa.css", "assets/BackTo-02f76bde.css"], "js": ["pages/project/covid-masking.md-270fe9bd.js", "chunks/vendor-dfb9df3e.js", "pages/project/layout.svelte-0fd35314.js", "chunks/CornerTitle-3a53cda1.js", "chunks/BackTo-f09ad798.js", "chunks/global-164a8ca5.js", "chunks/utils-419e8671.js", "chunks/store-b0ba4c19.js", "chunks/Image-4d50732f.js"], "styles": [] }, "src/routes/project/quarantunes.md": { "entry": "pages/project/quarantunes.md-08f873c5.js", "css": ["assets/Image.svelte_svelte&type=style&lang-a3a01521.css", "assets/CornerTitle-85b81caa.css", "assets/BackTo-02f76bde.css"], "js": ["pages/project/quarantunes.md-08f873c5.js", "chunks/vendor-dfb9df3e.js", "pages/project/layout.svelte-0fd35314.js", "chunks/CornerTitle-3a53cda1.js", "chunks/BackTo-f09ad798.js", "chunks/global-164a8ca5.js", "chunks/utils-419e8671.js", "chunks/store-b0ba4c19.js", "chunks/Image-4d50732f.js"], "styles": [] }, "src/routes/project/cudi-hums.md": { "entry": "pages/project/cudi-hums.md-f192b5b9.js", "css": ["assets/Image.svelte_svelte&type=style&lang-a3a01521.css", "assets/CornerTitle-85b81caa.css", "assets/BackTo-02f76bde.css"], "js": ["pages/project/cudi-hums.md-f192b5b9.js", "chunks/vendor-dfb9df3e.js", "pages/project/layout.svelte-0fd35314.js", "chunks/CornerTitle-3a53cda1.js", "chunks/BackTo-f09ad798.js", "chunks/global-164a8ca5.js", "chunks/utils-419e8671.js", "chunks/store-b0ba4c19.js", "chunks/Image-4d50732f.js"], "styles": [] }, "src/routes/project/compas.md": { "entry": "pages/project/compas.md-e6dbc74d.js", "css": ["assets/Image.svelte_svelte&type=style&lang-a3a01521.css", "assets/CornerTitle-85b81caa.css", "assets/BackTo-02f76bde.css"], "js": ["pages/project/compas.md-e6dbc74d.js", "chunks/vendor-dfb9df3e.js", "pages/project/layout.svelte-0fd35314.js", "chunks/CornerTitle-3a53cda1.js", "chunks/BackTo-f09ad798.js", "chunks/global-164a8ca5.js", "chunks/utils-419e8671.js", "chunks/store-b0ba4c19.js", "chunks/Image-4d50732f.js"], "styles": [] }, "src/routes/project/layout.svelte": { "entry": "pages/project/layout.svelte-0fd35314.js", "css": ["assets/CornerTitle-85b81caa.css", "assets/BackTo-02f76bde.css"], "js": ["pages/project/layout.svelte-0fd35314.js", "chunks/vendor-dfb9df3e.js", "chunks/CornerTitle-3a53cda1.js", "chunks/BackTo-f09ad798.js", "chunks/global-164a8ca5.js", "chunks/utils-419e8671.js", "chunks/store-b0ba4c19.js"], "styles": [] }, "src/routes/project/atus.md": { "entry": "pages/project/atus.md-d2609d04.js", "css": ["assets/Image.svelte_svelte&type=style&lang-a3a01521.css", "assets/CornerTitle-85b81caa.css", "assets/BackTo-02f76bde.css"], "js": ["pages/project/atus.md-d2609d04.js", "chunks/vendor-dfb9df3e.js", "pages/project/layout.svelte-0fd35314.js", "chunks/CornerTitle-3a53cda1.js", "chunks/BackTo-f09ad798.js", "chunks/global-164a8ca5.js", "chunks/utils-419e8671.js", "chunks/store-b0ba4c19.js", "chunks/Image-4d50732f.js"], "styles": [] }, "src/routes/about/index.svelte": { "entry": "pages/about/index.svelte-0307c3c8.js", "css": ["assets/pages/about/index.svelte-e794dbec.css", "assets/BackTo-02f76bde.css"], "js": ["pages/about/index.svelte-0307c3c8.js", "chunks/vendor-dfb9df3e.js", "chunks/BackTo-f09ad798.js", "chunks/global-164a8ca5.js", "chunks/utils-419e8671.js"], "styles": [] }, "src/routes/award/index.svelte": { "entry": "pages/award/index.svelte-f09329d5.js", "css": ["assets/pages/award/index.svelte-84333ddc.css", "assets/Award-3545467f.css", "assets/TransitionInView-36466010.css", "assets/BackTo-02f76bde.css"], "js": ["pages/award/index.svelte-f09329d5.js", "chunks/vendor-dfb9df3e.js", "chunks/Award-eea2e85e.js", "chunks/TransitionInView-b5bbebe8.js", "chunks/BackTo-f09ad798.js", "chunks/global-164a8ca5.js", "chunks/utils-419e8671.js", "chunks/store-b0ba4c19.js"], "styles": [] }, "src/routes/award/rstudio-table-contest-2021.md": { "entry": "pages/award/rstudio-table-contest-2021.md-84005dbd.js", "css": ["assets/CornerTitle-85b81caa.css", "assets/BackTo-02f76bde.css"], "js": ["pages/award/rstudio-table-contest-2021.md-84005dbd.js", "chunks/vendor-dfb9df3e.js", "pages/award/layout.svelte-633b925c.js", "chunks/CornerTitle-3a53cda1.js", "chunks/BackTo-f09ad798.js", "chunks/global-164a8ca5.js", "chunks/utils-419e8671.js", "chunks/store-b0ba4c19.js"], "styles": [] }, "src/routes/award/d2k-showcase-2020.md": { "entry": "pages/award/d2k-showcase-2020.md-34462170.js", "css": ["assets/CornerTitle-85b81caa.css", "assets/BackTo-02f76bde.css"], "js": ["pages/award/d2k-showcase-2020.md-34462170.js", "chunks/vendor-dfb9df3e.js", "pages/award/layout.svelte-633b925c.js", "chunks/CornerTitle-3a53cda1.js", "chunks/BackTo-f09ad798.js", "chunks/global-164a8ca5.js", "chunks/utils-419e8671.js", "chunks/store-b0ba4c19.js"], "styles": [] }, "src/routes/award/northeastern-2020.md": { "entry": "pages/award/northeastern-2020.md-ebc3ce19.js", "css": ["assets/CornerTitle-85b81caa.css", "assets/BackTo-02f76bde.css"], "js": ["pages/award/northeastern-2020.md-ebc3ce19.js", "chunks/vendor-dfb9df3e.js", "pages/award/layout.svelte-633b925c.js", "chunks/CornerTitle-3a53cda1.js", "chunks/BackTo-f09ad798.js", "chunks/global-164a8ca5.js", "chunks/utils-419e8671.js", "chunks/store-b0ba4c19.js"], "styles": [] }, "src/routes/award/pudding-cup-2020.md": { "entry": "pages/award/pudding-cup-2020.md-404cdb9b.js", "css": ["assets/CornerTitle-85b81caa.css", "assets/BackTo-02f76bde.css"], "js": ["pages/award/pudding-cup-2020.md-404cdb9b.js", "chunks/vendor-dfb9df3e.js", "pages/award/layout.svelte-633b925c.js", "chunks/CornerTitle-3a53cda1.js", "chunks/BackTo-f09ad798.js", "chunks/global-164a8ca5.js", "chunks/utils-419e8671.js", "chunks/store-b0ba4c19.js"], "styles": [] }, "src/routes/award/nationals-2017.md": { "entry": "pages/award/nationals-2017.md-b0a17a33.js", "css": ["assets/CornerTitle-85b81caa.css", "assets/BackTo-02f76bde.css"], "js": ["pages/award/nationals-2017.md-b0a17a33.js", "chunks/vendor-dfb9df3e.js", "pages/award/layout.svelte-633b925c.js", "chunks/CornerTitle-3a53cda1.js", "chunks/BackTo-f09ad798.js", "chunks/global-164a8ca5.js", "chunks/utils-419e8671.js", "chunks/store-b0ba4c19.js"], "styles": [] }, "src/routes/award/datathon-2020.md": { "entry": "pages/award/datathon-2020.md-47ec0d40.js", "css": ["assets/CornerTitle-85b81caa.css", "assets/BackTo-02f76bde.css"], "js": ["pages/award/datathon-2020.md-47ec0d40.js", "chunks/vendor-dfb9df3e.js", "pages/award/layout.svelte-633b925c.js", "chunks/CornerTitle-3a53cda1.js", "chunks/BackTo-f09ad798.js", "chunks/global-164a8ca5.js", "chunks/utils-419e8671.js", "chunks/store-b0ba4c19.js"], "styles": [] }, "src/routes/award/hudspeth-2020.md": { "entry": "pages/award/hudspeth-2020.md-748c5866.js", "css": ["assets/CornerTitle-85b81caa.css", "assets/BackTo-02f76bde.css"], "js": ["pages/award/hudspeth-2020.md-748c5866.js", "chunks/vendor-dfb9df3e.js", "pages/award/layout.svelte-633b925c.js", "chunks/CornerTitle-3a53cda1.js", "chunks/BackTo-f09ad798.js", "chunks/global-164a8ca5.js", "chunks/utils-419e8671.js", "chunks/store-b0ba4c19.js"], "styles": [] }, "src/routes/award/malofiej-2020.md": { "entry": "pages/award/malofiej-2020.md-4e6ac535.js", "css": ["assets/CornerTitle-85b81caa.css", "assets/BackTo-02f76bde.css"], "js": ["pages/award/malofiej-2020.md-4e6ac535.js", "chunks/vendor-dfb9df3e.js", "pages/award/layout.svelte-633b925c.js", "chunks/CornerTitle-3a53cda1.js", "chunks/BackTo-f09ad798.js", "chunks/global-164a8ca5.js", "chunks/utils-419e8671.js", "chunks/store-b0ba4c19.js"], "styles": [] }, "src/routes/award/malofiej-2021.md": { "entry": "pages/award/malofiej-2021.md-b88e1ce1.js", "css": ["assets/CornerTitle-85b81caa.css", "assets/BackTo-02f76bde.css"], "js": ["pages/award/malofiej-2021.md-b88e1ce1.js", "chunks/vendor-dfb9df3e.js", "pages/award/layout.svelte-633b925c.js", "chunks/CornerTitle-3a53cda1.js", "chunks/BackTo-f09ad798.js", "chunks/global-164a8ca5.js", "chunks/utils-419e8671.js", "chunks/store-b0ba4c19.js"], "styles": [] }, "src/routes/award/bipp-2018.md": { "entry": "pages/award/bipp-2018.md-5eefde65.js", "css": ["assets/CornerTitle-85b81caa.css", "assets/BackTo-02f76bde.css"], "js": ["pages/award/bipp-2018.md-5eefde65.js", "chunks/vendor-dfb9df3e.js", "pages/award/layout.svelte-633b925c.js", "chunks/CornerTitle-3a53cda1.js", "chunks/BackTo-f09ad798.js", "chunks/global-164a8ca5.js", "chunks/utils-419e8671.js", "chunks/store-b0ba4c19.js"], "styles": [] }, "src/routes/award/chrp-2020.md": { "entry": "pages/award/chrp-2020.md-ad24c52d.js", "css": ["assets/CornerTitle-85b81caa.css", "assets/BackTo-02f76bde.css"], "js": ["pages/award/chrp-2020.md-ad24c52d.js", "chunks/vendor-dfb9df3e.js", "pages/award/layout.svelte-633b925c.js", "chunks/CornerTitle-3a53cda1.js", "chunks/BackTo-f09ad798.js", "chunks/global-164a8ca5.js", "chunks/utils-419e8671.js", "chunks/store-b0ba4c19.js"], "styles": [] }, "src/routes/award/hpc-2018.md": { "entry": "pages/award/hpc-2018.md-4a9ffdd1.js", "css": ["assets/CornerTitle-85b81caa.css", "assets/BackTo-02f76bde.css"], "js": ["pages/award/hpc-2018.md-4a9ffdd1.js", "chunks/vendor-dfb9df3e.js", "pages/award/layout.svelte-633b925c.js", "chunks/CornerTitle-3a53cda1.js", "chunks/BackTo-f09ad798.js", "chunks/global-164a8ca5.js", "chunks/utils-419e8671.js", "chunks/store-b0ba4c19.js"], "styles": [] }, "src/routes/award/hpc-2019.md": { "entry": "pages/award/hpc-2019.md-a20b96a4.js", "css": ["assets/CornerTitle-85b81caa.css", "assets/BackTo-02f76bde.css"], "js": ["pages/award/hpc-2019.md-a20b96a4.js", "chunks/vendor-dfb9df3e.js", "pages/award/layout.svelte-633b925c.js", "chunks/CornerTitle-3a53cda1.js", "chunks/BackTo-f09ad798.js", "chunks/global-164a8ca5.js", "chunks/utils-419e8671.js", "chunks/store-b0ba4c19.js"], "styles": [] }, "src/routes/award/hpc-2020.md": { "entry": "pages/award/hpc-2020.md-da7b5518.js", "css": ["assets/CornerTitle-85b81caa.css", "assets/BackTo-02f76bde.css"], "js": ["pages/award/hpc-2020.md-da7b5518.js", "chunks/vendor-dfb9df3e.js", "pages/award/layout.svelte-633b925c.js", "chunks/CornerTitle-3a53cda1.js", "chunks/BackTo-f09ad798.js", "chunks/global-164a8ca5.js", "chunks/utils-419e8671.js", "chunks/store-b0ba4c19.js"], "styles": [] }, "src/routes/award/snd-2021.md": { "entry": "pages/award/snd-2021.md-bdec5480.js", "css": ["assets/CornerTitle-85b81caa.css", "assets/BackTo-02f76bde.css"], "js": ["pages/award/snd-2021.md-bdec5480.js", "chunks/vendor-dfb9df3e.js", "pages/award/layout.svelte-633b925c.js", "chunks/CornerTitle-3a53cda1.js", "chunks/BackTo-f09ad798.js", "chunks/global-164a8ca5.js", "chunks/utils-419e8671.js", "chunks/store-b0ba4c19.js"], "styles": [] }, "src/routes/award/layout.svelte": { "entry": "pages/award/layout.svelte-633b925c.js", "css": ["assets/CornerTitle-85b81caa.css", "assets/BackTo-02f76bde.css"], "js": ["pages/award/layout.svelte-633b925c.js", "chunks/vendor-dfb9df3e.js", "chunks/CornerTitle-3a53cda1.js", "chunks/BackTo-f09ad798.js", "chunks/global-164a8ca5.js", "chunks/utils-419e8671.js", "chunks/store-b0ba4c19.js"], "styles": [] }, "src/routes/post/index.svelte": { "entry": "pages/post/index.svelte-94cafe6a.js", "css": ["assets/pages/post/index.svelte-690c2c55.css", "assets/Star-4c3ba909.css", "assets/TransitionInView-36466010.css", "assets/BackTo-02f76bde.css"], "js": ["pages/post/index.svelte-94cafe6a.js", "chunks/vendor-dfb9df3e.js", "chunks/utils-419e8671.js", "chunks/Star-6bfb9ffc.js", "chunks/global-164a8ca5.js", "chunks/TransitionInView-b5bbebe8.js", "chunks/BackTo-f09ad798.js", "chunks/store-b0ba4c19.js"], "styles": [] }, "src/routes/post/economist-table-replication-using-reactable.md": { "entry": "pages/post/economist-table-replication-using-reactable.md-1953a285.js", "css": ["assets/Info.svelte_svelte&type=style&lang-4136c559.css", "assets/Image.svelte_svelte&type=style&lang-a3a01521.css", "assets/pages/post/layout.svelte-745e8606.css", "assets/BackTo-02f76bde.css", "assets/CornerTitle-85b81caa.css"], "js": ["pages/post/economist-table-replication-using-reactable.md-1953a285.js", "chunks/vendor-dfb9df3e.js", "pages/post/layout.svelte-0511337f.js", "chunks/BackTo-f09ad798.js", "chunks/global-164a8ca5.js", "chunks/utils-419e8671.js", "chunks/CornerTitle-3a53cda1.js", "chunks/store-b0ba4c19.js", "chunks/Image-4d50732f.js"], "styles": [] }, "src/routes/post/adding-a-chart-to-your-d3-tooltip.md": { "entry": "pages/post/adding-a-chart-to-your-d3-tooltip.md-08a0de4e.js", "css": ["assets/Image.svelte_svelte&type=style&lang-a3a01521.css", "assets/Info.svelte_svelte&type=style&lang-4136c559.css", "assets/pages/post/layout.svelte-745e8606.css", "assets/BackTo-02f76bde.css", "assets/CornerTitle-85b81caa.css", "assets/Code-304e9aa7.css", "assets/HighlightFromProp-c6af3753.css"], "js": ["pages/post/adding-a-chart-to-your-d3-tooltip.md-08a0de4e.js", "chunks/vendor-dfb9df3e.js", "pages/post/layout.svelte-0511337f.js", "chunks/BackTo-f09ad798.js", "chunks/global-164a8ca5.js", "chunks/utils-419e8671.js", "chunks/CornerTitle-3a53cda1.js", "chunks/store-b0ba4c19.js", "chunks/Image-4d50732f.js", "chunks/Code-46ee5f1b.js", "chunks/HighlightFromProp-a3212567.js", "chunks/Info-a85e8c05.js"], "styles": [] }, "src/routes/post/tidy-tuesday-powerlifting.md": { "entry": "pages/post/tidy-tuesday-powerlifting.md-2d8d0a55.js", "css": ["assets/Info.svelte_svelte&type=style&lang-4136c559.css", "assets/Image.svelte_svelte&type=style&lang-a3a01521.css", "assets/pages/post/layout.svelte-745e8606.css", "assets/BackTo-02f76bde.css", "assets/CornerTitle-85b81caa.css"], "js": ["pages/post/tidy-tuesday-powerlifting.md-2d8d0a55.js", "chunks/vendor-dfb9df3e.js", "pages/post/layout.svelte-0511337f.js", "chunks/BackTo-f09ad798.js", "chunks/global-164a8ca5.js", "chunks/utils-419e8671.js", "chunks/CornerTitle-3a53cda1.js", "chunks/store-b0ba4c19.js", "chunks/Image-4d50732f.js"], "styles": [] }, "src/routes/post/tidy-tuesday-replication.md": { "entry": "pages/post/tidy-tuesday-replication.md-e686fc67.js", "css": ["assets/Info.svelte_svelte&type=style&lang-4136c559.css", "assets/Image.svelte_svelte&type=style&lang-a3a01521.css", "assets/pages/post/layout.svelte-745e8606.css", "assets/BackTo-02f76bde.css", "assets/CornerTitle-85b81caa.css"], "js": ["pages/post/tidy-tuesday-replication.md-e686fc67.js", "chunks/vendor-dfb9df3e.js", "pages/post/layout.svelte-0511337f.js", "chunks/BackTo-f09ad798.js", "chunks/global-164a8ca5.js", "chunks/utils-419e8671.js", "chunks/CornerTitle-3a53cda1.js", "chunks/store-b0ba4c19.js", "chunks/Image-4d50732f.js"], "styles": [] }, "src/routes/post/automation-scrollytell.md": { "entry": "pages/post/automation-scrollytell.md-985086b6.js", "css": ["assets/Image.svelte_svelte&type=style&lang-a3a01521.css", "assets/Info.svelte_svelte&type=style&lang-4136c559.css", "assets/pages/post/layout.svelte-745e8606.css", "assets/BackTo-02f76bde.css", "assets/CornerTitle-85b81caa.css", "assets/Code-304e9aa7.css", "assets/HighlightFromProp-c6af3753.css"], "js": ["pages/post/automation-scrollytell.md-985086b6.js", "chunks/vendor-dfb9df3e.js", "pages/post/layout.svelte-0511337f.js", "chunks/BackTo-f09ad798.js", "chunks/global-164a8ca5.js", "chunks/utils-419e8671.js", "chunks/CornerTitle-3a53cda1.js", "chunks/store-b0ba4c19.js", "chunks/Code-46ee5f1b.js", "chunks/HighlightFromProp-a3212567.js"], "styles": [] }, "src/routes/post/animate-hugo-academic.md": { "entry": "pages/post/animate-hugo-academic.md-d1d9f140.js", "css": ["assets/Image.svelte_svelte&type=style&lang-a3a01521.css", "assets/Info.svelte_svelte&type=style&lang-4136c559.css", "assets/pages/post/layout.svelte-745e8606.css", "assets/BackTo-02f76bde.css", "assets/CornerTitle-85b81caa.css", "assets/Code-304e9aa7.css"], "js": ["pages/post/animate-hugo-academic.md-d1d9f140.js", "chunks/vendor-dfb9df3e.js", "pages/post/layout.svelte-0511337f.js", "chunks/BackTo-f09ad798.js", "chunks/global-164a8ca5.js", "chunks/utils-419e8671.js", "chunks/CornerTitle-3a53cda1.js", "chunks/store-b0ba4c19.js", "chunks/Image-4d50732f.js", "chunks/Code-46ee5f1b.js", "chunks/Info-a85e8c05.js"], "styles": [] }, "src/routes/post/introducing-tpltheme.md": { "entry": "pages/post/introducing-tpltheme.md-762ac090.js", "css": ["assets/Info.svelte_svelte&type=style&lang-4136c559.css", "assets/Image.svelte_svelte&type=style&lang-a3a01521.css", "assets/pages/post/layout.svelte-745e8606.css", "assets/BackTo-02f76bde.css", "assets/CornerTitle-85b81caa.css"], "js": ["pages/post/introducing-tpltheme.md-762ac090.js", "chunks/vendor-dfb9df3e.js", "pages/post/layout.svelte-0511337f.js", "chunks/BackTo-f09ad798.js", "chunks/global-164a8ca5.js", "chunks/utils-419e8671.js", "chunks/CornerTitle-3a53cda1.js", "chunks/store-b0ba4c19.js", "chunks/Image-4d50732f.js"], "styles": [] }, "src/routes/post/color-in-data-vis.md": { "entry": "pages/post/color-in-data-vis.md-7598503c.js", "css": ["assets/Info.svelte_svelte&type=style&lang-4136c559.css", "assets/Image.svelte_svelte&type=style&lang-a3a01521.css", "assets/pages/post/layout.svelte-745e8606.css", "assets/BackTo-02f76bde.css", "assets/CornerTitle-85b81caa.css"], "js": ["pages/post/color-in-data-vis.md-7598503c.js", "chunks/vendor-dfb9df3e.js", "pages/post/layout.svelte-0511337f.js", "chunks/BackTo-f09ad798.js", "chunks/global-164a8ca5.js", "chunks/utils-419e8671.js", "chunks/CornerTitle-3a53cda1.js", "chunks/store-b0ba4c19.js", "chunks/Image-4d50732f.js"], "styles": [] }, "src/routes/post/do-something-else.md": { "entry": "pages/post/do-something-else.md-4e81b03b.js", "css": ["assets/Image.svelte_svelte&type=style&lang-a3a01521.css", "assets/Info.svelte_svelte&type=style&lang-4136c559.css", "assets/pages/post/layout.svelte-745e8606.css", "assets/BackTo-02f76bde.css", "assets/CornerTitle-85b81caa.css"], "js": ["pages/post/do-something-else.md-4e81b03b.js", "chunks/vendor-dfb9df3e.js", "pages/post/layout.svelte-0511337f.js", "chunks/BackTo-f09ad798.js", "chunks/global-164a8ca5.js", "chunks/utils-419e8671.js", "chunks/CornerTitle-3a53cda1.js", "chunks/store-b0ba4c19.js", "chunks/Image-4d50732f.js", "chunks/Info-a85e8c05.js"], "styles": [] }, "src/routes/post/nuxt-blog-starter.md": { "entry": "pages/post/nuxt-blog-starter.md-92a719a5.js", "css": ["assets/Image.svelte_svelte&type=style&lang-a3a01521.css", "assets/Info.svelte_svelte&type=style&lang-4136c559.css", "assets/pages/post/layout.svelte-745e8606.css", "assets/BackTo-02f76bde.css", "assets/CornerTitle-85b81caa.css", "assets/Code-304e9aa7.css"], "js": ["pages/post/nuxt-blog-starter.md-92a719a5.js", "chunks/vendor-dfb9df3e.js", "pages/post/layout.svelte-0511337f.js", "chunks/BackTo-f09ad798.js", "chunks/global-164a8ca5.js", "chunks/utils-419e8671.js", "chunks/CornerTitle-3a53cda1.js", "chunks/store-b0ba4c19.js", "chunks/Image-4d50732f.js", "chunks/Info-a85e8c05.js", "chunks/Code-46ee5f1b.js"], "styles": [] }, "src/routes/post/covid-gun-spikes.md": { "entry": "pages/post/covid-gun-spikes.md-c9fdf934.js", "css": ["assets/Info.svelte_svelte&type=style&lang-4136c559.css", "assets/Image.svelte_svelte&type=style&lang-a3a01521.css", "assets/pages/post/layout.svelte-745e8606.css", "assets/BackTo-02f76bde.css", "assets/CornerTitle-85b81caa.css", "assets/TableHandler-cb54b39c.css", "assets/Code-304e9aa7.css"], "js": ["pages/post/covid-gun-spikes.md-c9fdf934.js", "chunks/vendor-dfb9df3e.js", "pages/post/layout.svelte-0511337f.js", "chunks/BackTo-f09ad798.js", "chunks/global-164a8ca5.js", "chunks/utils-419e8671.js", "chunks/CornerTitle-3a53cda1.js", "chunks/store-b0ba4c19.js", "chunks/Image-4d50732f.js", "chunks/TableHandler-d5a8eb42.js", "chunks/Code-46ee5f1b.js"], "styles": [] }, "src/routes/post/covid-on-campus.md": { "entry": "pages/post/covid-on-campus.md-43682325.js", "css": ["assets/Info.svelte_svelte&type=style&lang-4136c559.css", "assets/Image.svelte_svelte&type=style&lang-a3a01521.css", "assets/pages/post/layout.svelte-745e8606.css", "assets/BackTo-02f76bde.css", "assets/CornerTitle-85b81caa.css", "assets/TableHandler-cb54b39c.css"], "js": ["pages/post/covid-on-campus.md-43682325.js", "chunks/vendor-dfb9df3e.js", "pages/post/layout.svelte-0511337f.js", "chunks/BackTo-f09ad798.js", "chunks/global-164a8ca5.js", "chunks/utils-419e8671.js", "chunks/CornerTitle-3a53cda1.js", "chunks/store-b0ba4c19.js", "chunks/Image-4d50732f.js", "chunks/TableHandler-d5a8eb42.js"], "styles": [] }, "src/routes/post/map-springfield.md": { "entry": "pages/post/map-springfield.md-cbbe4e88.js", "css": ["assets/Info.svelte_svelte&type=style&lang-4136c559.css", "assets/Image.svelte_svelte&type=style&lang-a3a01521.css", "assets/pages/post/layout.svelte-745e8606.css", "assets/BackTo-02f76bde.css", "assets/CornerTitle-85b81caa.css"], "js": ["pages/post/map-springfield.md-cbbe4e88.js", "chunks/vendor-dfb9df3e.js", "pages/post/layout.svelte-0511337f.js", "chunks/BackTo-f09ad798.js", "chunks/global-164a8ca5.js", "chunks/utils-419e8671.js", "chunks/CornerTitle-3a53cda1.js", "chunks/store-b0ba4c19.js", "chunks/Image-4d50732f.js"], "styles": [] }, "src/routes/post/dumbbell-plots.md": { "entry": "pages/post/dumbbell-plots.md-f626ff29.js", "css": ["assets/Info.svelte_svelte&type=style&lang-4136c559.css", "assets/Image.svelte_svelte&type=style&lang-a3a01521.css", "assets/pages/post/layout.svelte-745e8606.css", "assets/BackTo-02f76bde.css", "assets/CornerTitle-85b81caa.css"], "js": ["pages/post/dumbbell-plots.md-f626ff29.js", "chunks/vendor-dfb9df3e.js", "pages/post/layout.svelte-0511337f.js", "chunks/BackTo-f09ad798.js", "chunks/global-164a8ca5.js", "chunks/utils-419e8671.js", "chunks/CornerTitle-3a53cda1.js", "chunks/store-b0ba4c19.js", "chunks/Image-4d50732f.js"], "styles": [] }, "src/routes/post/refugee-trends.md": { "entry": "pages/post/refugee-trends.md-06f3ced7.js", "css": ["assets/Info.svelte_svelte&type=style&lang-4136c559.css", "assets/Image.svelte_svelte&type=style&lang-a3a01521.css", "assets/pages/post/layout.svelte-745e8606.css", "assets/BackTo-02f76bde.css", "assets/CornerTitle-85b81caa.css"], "js": ["pages/post/refugee-trends.md-06f3ced7.js", "chunks/vendor-dfb9df3e.js", "pages/post/layout.svelte-0511337f.js", "chunks/BackTo-f09ad798.js", "chunks/global-164a8ca5.js", "chunks/utils-419e8671.js", "chunks/CornerTitle-3a53cda1.js", "chunks/store-b0ba4c19.js", "chunks/Image-4d50732f.js"], "styles": [] }, "src/routes/post/svelte-scatter.md": { "entry": "pages/post/svelte-scatter.md-41e9957b.js", "css": ["assets/Image.svelte_svelte&type=style&lang-a3a01521.css", "assets/Info.svelte_svelte&type=style&lang-4136c559.css", "assets/pages/post/layout.svelte-745e8606.css", "assets/BackTo-02f76bde.css", "assets/CornerTitle-85b81caa.css"], "js": ["pages/post/svelte-scatter.md-41e9957b.js", "chunks/vendor-dfb9df3e.js", "pages/post/layout.svelte-0511337f.js", "chunks/BackTo-f09ad798.js", "chunks/global-164a8ca5.js", "chunks/utils-419e8671.js", "chunks/CornerTitle-3a53cda1.js", "chunks/store-b0ba4c19.js", "chunks/Info-a85e8c05.js"], "styles": [] }, "src/routes/post/svelte-and-d3.md": { "entry": "pages/post/svelte-and-d3.md-7b255dd3.js", "css": ["assets/pages/post/svelte-and-d3.md-829f18dc.css", "assets/Image.svelte_svelte&type=style&lang-a3a01521.css", "assets/Info.svelte_svelte&type=style&lang-4136c559.css", "assets/pages/post/layout.svelte-745e8606.css", "assets/BackTo-02f76bde.css", "assets/CornerTitle-85b81caa.css", "assets/Code-304e9aa7.css"], "js": ["pages/post/svelte-and-d3.md-7b255dd3.js", "chunks/vendor-dfb9df3e.js", "pages/post/layout.svelte-0511337f.js", "chunks/BackTo-f09ad798.js", "chunks/global-164a8ca5.js", "chunks/utils-419e8671.js", "chunks/CornerTitle-3a53cda1.js", "chunks/store-b0ba4c19.js", "chunks/Code-46ee5f1b.js", "chunks/Info-a85e8c05.js"], "styles": [] }, "src/routes/post/covid-posts.md": { "entry": "pages/post/covid-posts.md-34be9cac.js", "css": ["assets/Info.svelte_svelte&type=style&lang-4136c559.css", "assets/Image.svelte_svelte&type=style&lang-a3a01521.css", "assets/pages/post/layout.svelte-745e8606.css", "assets/BackTo-02f76bde.css", "assets/CornerTitle-85b81caa.css"], "js": ["pages/post/covid-posts.md-34be9cac.js", "chunks/vendor-dfb9df3e.js", "pages/post/layout.svelte-0511337f.js", "chunks/BackTo-f09ad798.js", "chunks/global-164a8ca5.js", "chunks/utils-419e8671.js", "chunks/CornerTitle-3a53cda1.js", "chunks/store-b0ba4c19.js", "chunks/Image-4d50732f.js"], "styles": [] }, "src/routes/post/flat-data-r.md": { "entry": "pages/post/flat-data-r.md-ff4dd269.js", "css": ["assets/Image.svelte_svelte&type=style&lang-a3a01521.css", "assets/Info.svelte_svelte&type=style&lang-4136c559.css", "assets/pages/post/layout.svelte-745e8606.css", "assets/BackTo-02f76bde.css", "assets/CornerTitle-85b81caa.css", "assets/Code-304e9aa7.css"], "js": ["pages/post/flat-data-r.md-ff4dd269.js", "chunks/vendor-dfb9df3e.js", "pages/post/layout.svelte-0511337f.js", "chunks/BackTo-f09ad798.js", "chunks/global-164a8ca5.js", "chunks/utils-419e8671.js", "chunks/CornerTitle-3a53cda1.js", "chunks/store-b0ba4c19.js", "chunks/Code-46ee5f1b.js", "chunks/Image-4d50732f.js", "chunks/Info-a85e8c05.js"], "styles": [] }, "src/routes/post/layout.svelte": { "entry": "pages/post/layout.svelte-0511337f.js", "css": ["assets/pages/post/layout.svelte-745e8606.css", "assets/BackTo-02f76bde.css", "assets/CornerTitle-85b81caa.css"], "js": ["pages/post/layout.svelte-0511337f.js", "chunks/vendor-dfb9df3e.js", "chunks/BackTo-f09ad798.js", "chunks/global-164a8ca5.js", "chunks/utils-419e8671.js", "chunks/CornerTitle-3a53cda1.js", "chunks/store-b0ba4c19.js"], "styles": [] } };
  }
});

// .svelte-kit/netlify/entry.js
__export(exports, {
  handler: () => handler
});
init_shims();

// .svelte-kit/output/server/app.js
init_shims();
init_app_9f378dda();

// .svelte-kit/netlify/entry.js
init();
async function handler(event) {
  const { path, httpMethod, headers, rawQuery, body, isBase64Encoded } = event;
  const query = new URLSearchParams(rawQuery);
  const encoding = isBase64Encoded ? "base64" : headers["content-encoding"] || "utf-8";
  const rawBody = typeof body === "string" ? Buffer.from(body, encoding) : body;
  const rendered = await render({
    method: httpMethod,
    headers,
    path,
    query,
    rawBody
  });
  if (rendered) {
    return {
      isBase64Encoded: false,
      statusCode: rendered.status,
      ...splitHeaders(rendered.headers),
      body: rendered.body
    };
  }
  return {
    statusCode: 404,
    body: "Not found"
  };
}
function splitHeaders(headers) {
  const h = {};
  const m = {};
  for (const key in headers) {
    const value = headers[key];
    const target = Array.isArray(value) ? m : h;
    target[key] = value;
  }
  return {
    headers: h,
    multiValueHeaders: m
  };
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  handler
});
/*!
 * GSAP 3.8.0
 * https://greensock.com
 *
 * @license Copyright 2008-2021, GreenSock. All rights reserved.
 * Subject to the terms at https://greensock.com/standard-license or for
 * Club GreenSock members, the agreement issued with that membership.
 * @author: Jack Doyle, jack@greensock.com
*/
/*!
 * MorphSVGPlugin 3.8.0
 * https://greensock.com
 *
 * @license Copyright 2008-2021, GreenSock. All rights reserved.
 * Subject to the terms at https://greensock.com/standard-license or for
 * Club GreenSock members, the agreement issued with that membership.
 * @author: Jack Doyle, jack@greensock.com
*/
/*!
 * ScrollTrigger 3.8.0
 * https://greensock.com
 *
 * @license Copyright 2008-2021, GreenSock. All rights reserved.
 * Subject to the terms at https://greensock.com/standard-license or for
 * Club GreenSock members, the agreement issued with that membership.
 * @author: Jack Doyle, jack@greensock.com
*/
/*!
 * SplitText: 3.8.0
 * https://greensock.com
 *
 * @license Copyright 2008-2021, GreenSock. All rights reserved.
 * Subject to the terms at https://greensock.com/standard-license or for
 * Club GreenSock members, the agreement issued with that membership.
 * @author: Jack Doyle, jack@greensock.com
*/
/*! fetch-blob. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */
/**
 * Prism: Lightweight, robust, elegant syntax highlighting
 *
 * @license MIT <https://opensource.org/licenses/MIT>
 * @author Lea Verou <https://lea.verou.me>
 * @namespace
 * @public
 */
