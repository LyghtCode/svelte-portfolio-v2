import{S as ec,i as oc,s as pc,B as Mp,j as g,m as _,o as b,p as lc,q as br,x as y,u as v,v as w,ak as yr,e as l,t as e,k as i,c as r,a as c,g as o,d as a,n as u,b as k,f as p,L as n,D as rc}from"../../chunks/vendor-dfb9df3e.js";import cc from"./layout.svelte-b65b887a.js";import{I as E}from"../../chunks/Image-4d50732f.js";/* empty css                                                      */import"../../chunks/BackTo-f09ad798.js";import"../../chunks/global-164a8ca5.js";import"../../chunks/utils-419e8671.js";import"../../chunks/CornerTitle-3a53cda1.js";import"../../chunks/store-b0ba4c19.js";/* empty css                                                       */function ic(ta){let f,R,P,as,m,L,ea,Qt,En,O,Xt,Da,Zt,se,Ra,ae,ne,xn,N,te,Oa,ns,ee,oe,$n,oa,pe,Tn,ts,pa,le,Pn,x,re,es,ce,ie,os,ue,ke,ps,fe,me,ls,de,he,Ln,la,ge,Cn,ra,_e,In,rs,ca,be,Sn,ia,ye,An,cs,ua,ve,Dn,ka,we,Rn,is,wr=`<code class="language-r">library<span class="token punctuation">(</span>ggplot2<span class="token punctuation">)</span>
library<span class="token punctuation">(</span>tidyverse<span class="token punctuation">)</span>

<span class="token comment">#devtools::install_github("connorrothschild/tpltheme")</span>
library<span class="token punctuation">(</span>tpltheme<span class="token punctuation">)</span></code>`,On,$,Ee,Ha,xe,$e,ja,Te,Pe,za,Le,Ce,Ma,Ie,Se,Hn,d,Ae,Ba,De,Re,Wa,Oe,He,qa,je,ze,Ua,Me,Be,Ga,We,qe,jn,us,Er=`<code class="language-r">set_tpl_theme<span class="token punctuation">(</span>font <span class="token operator">=</span> <span class="token string">'IBM Plex Sans'</span><span class="token punctuation">)</span>

ggplot<span class="token punctuation">(</span>iris<span class="token punctuation">,</span> aes<span class="token punctuation">(</span>x<span class="token operator">=</span>Species<span class="token punctuation">,</span> y<span class="token operator">=</span>Sepal.Width<span class="token punctuation">,</span> fill<span class="token operator">=</span>Species<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
    geom_bar<span class="token punctuation">(</span>stat<span class="token operator">=</span><span class="token string">"summary"</span><span class="token punctuation">,</span> fun.y<span class="token operator">=</span><span class="token string">"mean"</span><span class="token punctuation">,</span> show.legend <span class="token operator">=</span> <span class="token boolean">FALSE</span><span class="token punctuation">)</span> <span class="token operator">+</span>
    scale_y_continuous<span class="token punctuation">(</span>expand <span class="token operator">=</span> expand_scale<span class="token punctuation">(</span>mult <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.001</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
    labs<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">"Species"</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token string">"Mean Sepal Width (cm)"</span><span class="token punctuation">,</span> fill<span class="token operator">=</span><span class="token string">"Species"</span><span class="token punctuation">,</span> title<span class="token operator">=</span><span class="token string">"Iris Dataset"</span><span class="token punctuation">)</span></code>`,zn,ks,Mn,fs,fa,Ue,Bn,H,Ge,Fa,Fe,Ne,Na,Ke,Ve,Wn,j,Je,Ka,Ye,Qe,Va,Xe,Ze,qn,ms,xr=`<code class="language-r">tpl_font_test<span class="token punctuation">(</span><span class="token punctuation">)</span>
tpl_font_install<span class="token punctuation">(</span><span class="token punctuation">)</span></code>`,Un,z,so,Ja,ao,no,Ya,to,eo,Gn,ds,$r=`<code class="language-r">set_tpl_theme<span class="token punctuation">(</span>style <span class="token operator">=</span> <span class="token string">"print"</span><span class="token punctuation">,</span> font <span class="token operator">=</span> <span class="token string">"lato"</span><span class="token punctuation">)</span>

ggplot<span class="token punctuation">(</span>iris<span class="token punctuation">,</span> aes<span class="token punctuation">(</span>x<span class="token operator">=</span>jitter<span class="token punctuation">(</span>Sepal.Width<span class="token punctuation">)</span><span class="token punctuation">,</span> y<span class="token operator">=</span>jitter<span class="token punctuation">(</span>Sepal.Length<span class="token punctuation">)</span><span class="token punctuation">,</span> col<span class="token operator">=</span>Species<span class="token punctuation">,</span> size <span class="token operator">=</span> Petal.Length<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
    geom_point<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>
    labs<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">"Sepal Width (cm)"</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token string">"Sepal Length (cm)"</span><span class="token punctuation">,</span> col<span class="token operator">=</span><span class="token string">"Species"</span><span class="token punctuation">,</span> size <span class="token operator">=</span> <span class="token string">"Petal Length"</span><span class="token punctuation">,</span> title<span class="token operator">=</span><span class="token string">"Iris Dataset"</span><span class="token punctuation">)</span></code>`,Fn,hs,Nn,M,oo,Qa,po,lo,Xa,ro,co,Kn,gs,Tr=`<code class="language-r">tx_vac <span class="token operator">&lt;-</span> readr<span class="token operator">::</span>read_csv<span class="token punctuation">(</span><span class="token string">"https://raw.githubusercontent.com/connorrothschild/tpltheme/master/data/tx_vac_example.csv"</span><span class="token punctuation">)</span>
set_tpl_theme<span class="token punctuation">(</span>style <span class="token operator">=</span> <span class="token string">"Texas"</span><span class="token punctuation">,</span> font <span class="token operator">=</span> <span class="token string">"adobe"</span><span class="token punctuation">)</span>

ggplot<span class="token punctuation">(</span>data <span class="token operator">=</span> tx_vac<span class="token punctuation">,</span> mapping <span class="token operator">=</span> aes<span class="token punctuation">(</span>x <span class="token operator">=</span> long<span class="token punctuation">,</span> y <span class="token operator">=</span> lat<span class="token punctuation">,</span> group <span class="token operator">=</span> group<span class="token punctuation">,</span> fill <span class="token operator">=</span> avgvac<span class="token operator">*</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  coord_fixed<span class="token punctuation">(</span><span class="token number">1.3</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  scale_fill_continuous<span class="token punctuation">(</span>limits <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">78.3</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  geom_polygon<span class="token punctuation">(</span>color <span class="token operator">=</span> <span class="token string">"black"</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  labs<span class="token punctuation">(</span>title <span class="token operator">=</span> <span class="token string">"Texas Vaccination Rate by County"</span><span class="token punctuation">,</span>
       subtitle <span class="token operator">=</span> <span class="token string">"Among Kindergarteners"</span><span class="token punctuation">,</span>
       fill <span class="token operator">=</span> <span class="token string">"Percent&#92;nVaccinated"</span><span class="token punctuation">,</span>
       caption <span class="token operator">=</span> <span class="token string">"Source: Texas DSHS"</span><span class="token punctuation">)</span></code>`,Vn,_s,Jn,ma,io,Yn,bs,Pr=`<code class="language-r">set_tpl_theme<span class="token punctuation">(</span>style <span class="token operator">=</span> <span class="token string">"Texas"</span><span class="token punctuation">,</span> font <span class="token operator">=</span> <span class="token string">"lato"</span><span class="token punctuation">)</span>

tx_vac <span class="token percent-operator operator">%>%</span>
  dplyr<span class="token operator">::</span>mutate<span class="token punctuation">(</span>cat <span class="token operator">=</span> factor<span class="token punctuation">(</span>dplyr<span class="token operator">::</span>case_when<span class="token punctuation">(</span>avgvac<span class="token operator">*</span><span class="token number">100</span> <span class="token operator">></span> <span class="token number">99</span> <span class="token operator">~</span> <span class="token string">"Great"</span><span class="token punctuation">,</span>
                         avgvac<span class="token operator">*</span><span class="token number">100</span> <span class="token operator">></span> <span class="token number">90</span> <span class="token operator">~</span> <span class="token string">"Average"</span><span class="token punctuation">,</span>
                         avgvac<span class="token operator">*</span><span class="token number">100</span> <span class="token operator">&lt;</span> <span class="token number">90</span> <span class="token operator">~</span> <span class="token string">"Bad"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  ggplot<span class="token punctuation">(</span>mapping <span class="token operator">=</span> aes<span class="token punctuation">(</span>x <span class="token operator">=</span> long<span class="token punctuation">,</span> y <span class="token operator">=</span> lat<span class="token punctuation">,</span> group <span class="token operator">=</span> group<span class="token punctuation">,</span> fill <span class="token operator">=</span> cat<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  coord_fixed<span class="token punctuation">(</span><span class="token number">1.3</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  geom_polygon<span class="token punctuation">(</span>color <span class="token operator">=</span> <span class="token string">"black"</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  labs<span class="token punctuation">(</span>title <span class="token operator">=</span> <span class="token string">"Texas Vaccination Rate by County"</span><span class="token punctuation">,</span>
       subtitle <span class="token operator">=</span> <span class="token string">"Among Kindergarteners"</span><span class="token punctuation">,</span>
       fill <span class="token operator">=</span> <span class="token string">"Vaccination Rating"</span><span class="token punctuation">,</span>
       caption <span class="token operator">=</span> <span class="token string">"Source: Texas DSHS"</span><span class="token punctuation">)</span></code>`,Qn,ys,Xn,B,uo,Za,ko,fo,vs,mo,ho,Zn,ws,Lr=`<code class="language-r">tx_vac <span class="token percent-operator operator">%>%</span>
  ggplot<span class="token punctuation">(</span>mapping <span class="token operator">=</span> aes<span class="token punctuation">(</span>x <span class="token operator">=</span> long<span class="token punctuation">,</span> y <span class="token operator">=</span> lat<span class="token punctuation">,</span> group <span class="token operator">=</span> group<span class="token punctuation">,</span> fill <span class="token operator">=</span> subregion<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  coord_fixed<span class="token punctuation">(</span><span class="token number">1.3</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  geom_polygon<span class="token punctuation">(</span>color <span class="token operator">=</span> <span class="token string">"black"</span><span class="token punctuation">,</span> show.legend <span class="token operator">=</span> <span class="token boolean">FALSE</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  labs<span class="token punctuation">(</span>title <span class="token operator">=</span> <span class="token string">"Texas Counties"</span><span class="token punctuation">)</span></code>`,st,Es,at,xs,Cr=`<code class="language-r"><span class="token comment"># default to print afterwards</span>
set_tpl_theme<span class="token punctuation">(</span>style <span class="token operator">=</span> <span class="token string">"print"</span><span class="token punctuation">)</span></code>`,nt,$s,da,go,tt,Ts,ha,_o,et,ga,bo,ot,T,yo,sn,vo,wo,an,Eo,xo,nn,$o,To,tn,Po,Lo,pt,Ps,Ir=`<code class="language-r">plot <span class="token operator">&lt;-</span> ggplot<span class="token punctuation">(</span>iris<span class="token punctuation">,</span> aes<span class="token punctuation">(</span>x<span class="token operator">=</span>Species<span class="token punctuation">,</span> y<span class="token operator">=</span>Sepal.Width<span class="token punctuation">,</span> fill<span class="token operator">=</span>Species<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
    geom_bar<span class="token punctuation">(</span>stat<span class="token operator">=</span><span class="token string">"summary"</span><span class="token punctuation">,</span> fun.y<span class="token operator">=</span><span class="token string">"mean"</span><span class="token punctuation">,</span> show.legend <span class="token operator">=</span> <span class="token boolean">FALSE</span><span class="token punctuation">)</span> <span class="token operator">+</span>
    scale_y_continuous<span class="token punctuation">(</span>expand <span class="token operator">=</span> expand_scale<span class="token punctuation">(</span>mult <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.001</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
    labs<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">"Species"</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token string">"Mean Sepal Width (cm)"</span><span class="token punctuation">,</span> fill<span class="token operator">=</span><span class="token string">"Species"</span><span class="token punctuation">,</span> title<span class="token operator">=</span><span class="token string">"Iris Dataset"</span><span class="token punctuation">)</span>

add_tpl_logo<span class="token punctuation">(</span>plot<span class="token punctuation">,</span> position <span class="token operator">=</span> <span class="token string">"top right"</span><span class="token punctuation">,</span> scale <span class="token operator">=</span> <span class="token number">1.5</span><span class="token punctuation">)</span></code>`,lt,Ls,rt,Cs,_a,Co,ct,K,Io,en,So,Ao,it,Is,Sr=`<code class="language-r">plot <span class="token operator">&lt;-</span> ggplot<span class="token punctuation">(</span>iris<span class="token punctuation">,</span> aes<span class="token punctuation">(</span>x<span class="token operator">=</span>jitter<span class="token punctuation">(</span>Sepal.Width<span class="token punctuation">)</span><span class="token punctuation">,</span> y<span class="token operator">=</span>jitter<span class="token punctuation">(</span>Sepal.Length<span class="token punctuation">)</span><span class="token punctuation">,</span> col<span class="token operator">=</span>Species<span class="token punctuation">,</span> size <span class="token operator">=</span> Petal.Length<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
    geom_point<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>
    labs<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">"Sepal Width (cm)"</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token string">"Sepal Length (cm)"</span><span class="token punctuation">,</span> col<span class="token operator">=</span><span class="token string">"Species"</span><span class="token punctuation">,</span> size <span class="token operator">=</span> <span class="token string">"Petal Length"</span><span class="token punctuation">,</span> title<span class="token operator">=</span><span class="token string">"Iris Dataset"</span><span class="token punctuation">)</span>

add_tpl_logo_text<span class="token punctuation">(</span>plot<span class="token punctuation">)</span></code>`,ut,Ss,kt,V,Do,on,Ro,Oo,ft,As,Ar=`<code class="language-r">plot <span class="token operator">&lt;-</span> ggplot<span class="token punctuation">(</span>iris<span class="token punctuation">,</span> aes<span class="token punctuation">(</span>x<span class="token operator">=</span>Species<span class="token punctuation">,</span> y<span class="token operator">=</span>Sepal.Width<span class="token punctuation">,</span> fill<span class="token operator">=</span>Species<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
    geom_boxplot<span class="token punctuation">(</span>show.legend <span class="token operator">=</span> <span class="token boolean">FALSE</span><span class="token punctuation">)</span> <span class="token operator">+</span>
    labs<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">"Species"</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token string">"Sepal Width (cm)"</span><span class="token punctuation">,</span> fill<span class="token operator">=</span><span class="token string">"Species"</span><span class="token punctuation">,</span> title<span class="token operator">=</span><span class="token string">"Iris Dataset"</span><span class="token punctuation">,</span> subtitle <span class="token operator">=</span><span class="token string">"When specifying align = 1"</span><span class="token punctuation">)</span>

add_tpl_logo_text<span class="token punctuation">(</span>plot<span class="token punctuation">,</span> align <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span></code>`,mt,Ds,dt,Rs,ba,Ho,ht,Os,ya,jo,gt,h,zo,pn,Mo,Bo,ln,Wo,qo,rn,Uo,Go,cn,Fo,No,un,Ko,Vo,_t,C,Jo,kn,Yo,Qo,fn,Xo,Zo,mn,sp,ap,bt,Hs,Dr=`<code class="language-r">ggplot<span class="token punctuation">(</span>iris<span class="token punctuation">,</span> aes<span class="token punctuation">(</span>x<span class="token operator">=</span>jitter<span class="token punctuation">(</span>Sepal.Width<span class="token punctuation">)</span><span class="token punctuation">,</span> y<span class="token operator">=</span>jitter<span class="token punctuation">(</span>Sepal.Length<span class="token punctuation">)</span><span class="token punctuation">,</span> col<span class="token operator">=</span>Species<span class="token punctuation">,</span> size <span class="token operator">=</span> Petal.Length<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
    geom_point<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>
    labs<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">"Sepal Width (cm)"</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token string">"Sepal Length (cm)"</span><span class="token punctuation">,</span> col<span class="token operator">=</span><span class="token string">"Species"</span><span class="token punctuation">,</span> size <span class="token operator">=</span> <span class="token string">"Petal Length"</span><span class="token punctuation">,</span> title<span class="token operator">=</span><span class="token string">"Iris Dataset"</span><span class="token punctuation">)</span> <span class="token operator">+</span>
    drop_axis<span class="token punctuation">(</span>axis <span class="token operator">=</span> <span class="token string">"y"</span><span class="token punctuation">)</span></code>`,yt,js,vt,zs,va,np,wt,J,tp,Ms,ep,op,Et,I,pp,dn,lp,rp,hn,cp,ip,gn,up,kp,xt,Bs,Rr=`<code class="language-r">p1 <span class="token operator">&lt;-</span> view_palette<span class="token punctuation">(</span>palette <span class="token operator">=</span> palette_tpl_main<span class="token punctuation">)</span> <span class="token operator">+</span> ggtitle<span class="token punctuation">(</span><span class="token string">"Categorical"</span><span class="token punctuation">)</span>
p2 <span class="token operator">&lt;-</span> view_palette<span class="token punctuation">(</span>palette <span class="token operator">=</span> palette_tpl_diverging<span class="token punctuation">)</span> <span class="token operator">+</span> ggtitle<span class="token punctuation">(</span><span class="token string">"Diverging"</span><span class="token punctuation">)</span>
p3 <span class="token operator">&lt;-</span> view_palette<span class="token punctuation">(</span>palette <span class="token operator">=</span> palette_tpl_sequential<span class="token punctuation">)</span> <span class="token operator">+</span> ggtitle<span class="token punctuation">(</span><span class="token string">"Sequential"</span><span class="token punctuation">)</span>

gridExtra<span class="token operator">::</span>grid.arrange<span class="token punctuation">(</span>p1<span class="token punctuation">,</span> p2<span class="token punctuation">,</span> p3<span class="token punctuation">,</span> nrow <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span></code>`,$t,Ws,Tt,W,fp,qs,mp,dp,Us,hp,gp,Pt,q,_p,Gs,bp,yp,Fs,vp,wp,Lt,wa,Ep,Ct,Ns,Or=`<code class="language-r">normal <span class="token operator">&lt;-</span> diamonds <span class="token percent-operator operator">%>%</span>
  group_by<span class="token punctuation">(</span>clarity<span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  summarise<span class="token punctuation">(</span>price <span class="token operator">=</span> mean<span class="token punctuation">(</span>price<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  mutate<span class="token punctuation">(</span>clarity <span class="token operator">=</span> forcats<span class="token operator">::</span>fct_reorder<span class="token punctuation">(</span>clarity<span class="token punctuation">,</span> price<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  ggplot<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  geom_col<span class="token punctuation">(</span>aes<span class="token punctuation">(</span>x <span class="token operator">=</span> clarity<span class="token punctuation">,</span> y <span class="token operator">=</span> price<span class="token punctuation">,</span> fill <span class="token operator">=</span> clarity<span class="token punctuation">)</span><span class="token punctuation">,</span> show.legend <span class="token operator">=</span> <span class="token boolean">FALSE</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  labs<span class="token punctuation">(</span>title <span class="token operator">=</span> <span class="token string">"TPL Color Palette"</span><span class="token punctuation">,</span>
       subtitle <span class="token operator">=</span> <span class="token string">"in action"</span><span class="token punctuation">,</span>
       x <span class="token operator">=</span> <span class="token string">"Clarity"</span><span class="token punctuation">,</span>
       y <span class="token operator">=</span> <span class="token string">"Price"</span><span class="token punctuation">,</span>
       fill <span class="token operator">=</span> element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  theme<span class="token punctuation">(</span>axis.text.x <span class="token operator">=</span> element_text<span class="token punctuation">(</span>angle <span class="token operator">=</span> <span class="token number">45</span><span class="token punctuation">,</span> hjust <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  coord_flip<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  scale_fill_discrete<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  scale_y_continuous<span class="token punctuation">(</span>expand <span class="token operator">=</span> expand_scale<span class="token punctuation">(</span>mult <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.001</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  drop_axis<span class="token punctuation">(</span>axis <span class="token operator">=</span> <span class="token string">"x"</span><span class="token punctuation">)</span>

reversed <span class="token operator">&lt;-</span> normal <span class="token operator">+</span>
  labs<span class="token punctuation">(</span>subtitle <span class="token operator">=</span> <span class="token string">"(reversed)"</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  scale_fill_discrete<span class="token punctuation">(</span>reverse <span class="token operator">=</span> <span class="token boolean">TRUE</span><span class="token punctuation">)</span>

gridExtra<span class="token operator">::</span>grid.arrange<span class="token punctuation">(</span>normal<span class="token punctuation">,</span> reversed<span class="token punctuation">)</span></code>`,It,Ks,St,S,xp,_n,$p,Tp,bn,Pp,Lp,yn,Cp,Ip,At,Vs,Hr=`<code class="language-r">set_tpl_theme<span class="token punctuation">(</span>style <span class="token operator">=</span> <span class="token string">"print"</span><span class="token punctuation">,</span> font <span class="token operator">=</span> <span class="token string">"lato"</span><span class="token punctuation">)</span>
normal <span class="token operator">&lt;-</span> ggplot<span class="token punctuation">(</span>diamonds<span class="token punctuation">)</span> <span class="token operator">+</span>
  geom_bar<span class="token punctuation">(</span>aes<span class="token punctuation">(</span>x <span class="token operator">=</span> cut<span class="token punctuation">,</span> fill <span class="token operator">=</span> clarity<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  labs<span class="token punctuation">(</span>title <span class="token operator">=</span> <span class="token string">"TPL Color Palette"</span><span class="token punctuation">,</span>
       subtitle <span class="token operator">=</span> <span class="token string">"On sample data"</span><span class="token punctuation">,</span>
       x <span class="token operator">=</span> <span class="token string">"Cut"</span><span class="token punctuation">,</span>
       y <span class="token operator">=</span> <span class="token string">"Count"</span><span class="token punctuation">,</span>
       fill <span class="token operator">=</span> <span class="token string">"Clarity"</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  scale_y_continuous<span class="token punctuation">(</span>expand <span class="token operator">=</span> expand_scale<span class="token punctuation">(</span>mult <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.001</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  theme<span class="token punctuation">(</span>axis.text.x <span class="token operator">=</span> element_text<span class="token punctuation">(</span>angle <span class="token operator">=</span> <span class="token number">45</span><span class="token punctuation">,</span> hjust <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

reversed <span class="token operator">&lt;-</span> normal <span class="token operator">+</span>
  labs<span class="token punctuation">(</span>subtitle <span class="token operator">=</span> <span class="token string">"(reversed)"</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  scale_fill_discrete<span class="token punctuation">(</span>reverse <span class="token operator">=</span> <span class="token boolean">TRUE</span><span class="token punctuation">)</span>

gridExtra<span class="token operator">::</span>grid.arrange<span class="token punctuation">(</span>normal<span class="token punctuation">,</span> reversed<span class="token punctuation">,</span> nrow <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span></code>`,Dt,Js,Rt,Ys,jr=`<code class="language-r">data <span class="token operator">&lt;-</span> gapminder<span class="token operator">::</span>gapminder <span class="token percent-operator operator">%>%</span>
  dplyr<span class="token operator">::</span>filter<span class="token punctuation">(</span>gapminder<span class="token operator">::</span>gapminder<span class="token operator">$</span>country <span class="token percent-operator operator">%in%</span> c<span class="token punctuation">(</span><span class="token string">"France"</span><span class="token punctuation">,</span> <span class="token string">"Germany"</span><span class="token punctuation">,</span> <span class="token string">"Ireland"</span><span class="token punctuation">,</span> <span class="token string">"Italy"</span><span class="token punctuation">,</span> <span class="token string">"Japan"</span><span class="token punctuation">,</span> <span class="token string">"Norway"</span><span class="token punctuation">,</span> <span class="token string">"Mexico"</span><span class="token punctuation">,</span> <span class="token string">"United States"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  dplyr<span class="token operator">::</span>mutate<span class="token punctuation">(</span>year <span class="token operator">=</span> as.Date<span class="token punctuation">(</span>paste<span class="token punctuation">(</span>year<span class="token punctuation">,</span> <span class="token string">"-01-01"</span><span class="token punctuation">,</span> sep <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">,</span> format<span class="token operator">=</span><span class="token string">'%Y-%b-%d'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

ggplot<span class="token punctuation">(</span>data <span class="token operator">=</span> data<span class="token punctuation">,</span> aes<span class="token punctuation">(</span>x <span class="token operator">=</span> year<span class="token punctuation">,</span> y <span class="token operator">=</span> gdpPercap<span class="token punctuation">,</span> fill <span class="token operator">=</span> country<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  geom_area<span class="token punctuation">(</span>alpha <span class="token operator">=</span> <span class="token number">0.8</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  scale_x_date<span class="token punctuation">(</span>expand <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  scale_y_continuous<span class="token punctuation">(</span>expand <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> labels <span class="token operator">=</span> scales<span class="token operator">::</span>dollar<span class="token punctuation">)</span> <span class="token operator">+</span>
  labs<span class="token punctuation">(</span>title <span class="token operator">=</span> <span class="token string">"GDP Per Capita Over Time"</span><span class="token punctuation">,</span>
       subtitle <span class="token operator">=</span> <span class="token string">"Using the TPL Color Palette"</span><span class="token punctuation">,</span>
       x <span class="token operator">=</span> element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
       y <span class="token operator">=</span> <span class="token string">"GDP Per Capita"</span><span class="token punctuation">,</span>
       fill <span class="token operator">=</span> <span class="token string">"Country"</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  theme<span class="token punctuation">(</span>axis.text.x <span class="token operator">=</span> element_text<span class="token punctuation">(</span>angle <span class="token operator">=</span> <span class="token number">45</span><span class="token punctuation">,</span> hjust <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code>`,Ot,Qs,Ht,Xs,Ea,Sp,jt,Y,Ap,vn,Dp,Rp,zt,Zs,zr=`<code class="language-r">undo_tpl_theme<span class="token punctuation">(</span><span class="token punctuation">)</span>

ggplot<span class="token punctuation">(</span>iris<span class="token punctuation">,</span> aes<span class="token punctuation">(</span>x<span class="token operator">=</span>jitter<span class="token punctuation">(</span>Sepal.Width<span class="token punctuation">)</span><span class="token punctuation">,</span> y<span class="token operator">=</span>jitter<span class="token punctuation">(</span>Sepal.Length<span class="token punctuation">)</span><span class="token punctuation">,</span> col<span class="token operator">=</span>Species<span class="token punctuation">,</span> size <span class="token operator">=</span> Petal.Length<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
    geom_point<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>
    labs<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">"Sepal Width (cm)"</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token string">"Sepal Length (cm)"</span><span class="token punctuation">,</span> col<span class="token operator">=</span><span class="token string">"Species"</span><span class="token punctuation">,</span> size <span class="token operator">=</span> <span class="token string">"Petal Length"</span><span class="token punctuation">,</span> title<span class="token operator">=</span><span class="token string">"Iris Dataset"</span><span class="token punctuation">)</span></code>`,Mt,xa,Op,Bt,sa,Wt,Q,Hp,wn,jp,zp,qt,aa,Mr=`<code class="language-r">set_tpl_theme<span class="token punctuation">(</span><span class="token punctuation">)</span>
last_plot<span class="token punctuation">(</span><span class="token punctuation">)</span></code>`,Ut,na,Gt;return ks=new E({props:{alt:"An example of a plot in the TPL theme.",src:"../images/post/introducing-tpltheme/unnamed-chunk-3-1.png"}}),hs=new E({props:{alt:"An example of a plot in the TPL theme.",src:"../images/post/introducing-tpltheme/unnamed-chunk-5-1.png"}}),_s=new E({props:{alt:"An example of a plot in the TPL theme.",src:"../images/post/introducing-tpltheme/unnamed-chunk-6-1.png"}}),ys=new E({props:{alt:"An example of a plot in the TPL theme.",src:"../images/post/introducing-tpltheme/unnamed-chunk-7-1.png"}}),Es=new E({props:{alt:"An example of a plot in the TPL theme.",src:"../images/post/introducing-tpltheme/unnamed-chunk-8-1.png"}}),Ls=new E({props:{alt:"An example of a plot in the TPL theme.",src:"../images/post/introducing-tpltheme/unnamed-chunk-9-1.png"}}),Ss=new E({props:{alt:"An example of a plot in the TPL theme.",src:"../images/post/introducing-tpltheme/unnamed-chunk-10-1.png"}}),Ds=new E({props:{alt:"An example of a plot in the TPL theme.",src:"../images/post/introducing-tpltheme/unnamed-chunk-11-1.png"}}),js=new E({props:{alt:"An example of a plot in the TPL theme.",src:"../images/post/introducing-tpltheme/unnamed-chunk-12-1.png"}}),Ws=new E({props:{alt:"An example of a plot in the TPL theme.",src:"../images/post/introducing-tpltheme/unnamed-chunk-13-1.png"}}),Ks=new E({props:{alt:"An example of a plot in the TPL theme.",src:"../images/post/introducing-tpltheme/unnamed-chunk-14-1.png"}}),Js=new E({props:{alt:"An example of a plot in the TPL theme.",src:"../images/post/introducing-tpltheme/unnamed-chunk-15-1.png"}}),Qs=new E({props:{alt:"An example of a plot in the TPL theme.",src:"../images/post/introducing-tpltheme/unnamed-chunk-16-1.png"}}),sa=new E({props:{alt:"An example of a plot in the TPL theme.",src:"../images/post/introducing-tpltheme/unnamed-chunk-17-1.png"}}),na=new E({props:{alt:"An example of a plot in the TPL theme.",src:"../images/post/introducing-tpltheme/unnamed-chunk-18-1.png"}}),{c(){f=l("p"),R=e(`I\u2019ve spent the majority of the summer as an
`),P=l("a"),as=e("intern"),m=e(` with
the Texas Policy Lab, working on primarily data science-related matters
such as data cleaning and visualization. Most recently, I sought to
create a custom theme in `),L=l("code"),ea=e("ggplot2"),Qt=e(" for TPL."),En=i(),O=l("p"),Xt=e(`The project was my first experience in developing my own R package.
Prior to this project, the most familiarity I had with packages were
from the `),Da=l("code"),Zt=e("install.packages()"),se=e(" and "),Ra=l("code"),ae=e("library()"),ne=e(" commands."),xn=i(),N=l("p"),te=e("Hadley Wickham\u2019s book "),Oa=l("strong"),ns=l("a"),ee=e("R Packages"),oe=e(` was
enormously helpful in introducing package development to me. I ran into
(a lot of) issues in building the package, specifically encountering
problems related to local file paths and logo placement on plots.`),$n=i(),oa=l("p"),pe=e(`Creating your own package is a great exercise in trial and error, and
taught me a lot about programming in R that I wouldn\u2019t have learned
otherwise. I was also struck by how remarkably easy it was to create
one\u2019s own package (seriously, it requires the same amount of clicks as
starting a new R project), and how thorough online resources were.`),Tn=i(),ts=l("h2"),pa=l("a"),le=e("Inspiration"),Pn=i(),x=l("p"),re=e(`The catalyst for creating this package was coming across the Urban
Institute\u2019s `),es=l("a"),ce=e("urbnthemes"),ie=e(`
package on GitHub. I also gathered a lot of inspiration (and borrowed
some code) from `),os=l("a"),ue=e("ggthemes"),ke=e(` (Jeffrey
Arnold), `),ps=l("a"),fe=e("bbplot"),me=e(` (BBC News), and
`),ls=l("a"),de=e("hrbrthemes"),he=e(` (Bob Rudis). I was
impressed by the fact that these organizations were able to use R to
create publication-ready plots despite the fact that base ggplot figures
can look rather ugly (if we\u2019re being honest).`),Ln=i(),la=l("p"),ge=e(`Because the organization I intern with is still in its infancy, I
thought it would be a perfect time to create a standardized theme for
figures made in the future. So long as future employees adopt the theme,
this package has the potential to create figures specific to our
publications, lending TPL organizational credibility and creating
cross-report consistency.`),Cn=i(),ra=l("p"),_e=e(`I thought a lot about some basic tenets of design, such as font
readability, text size, and color contrast. I learned a lot about visual
and aesthetic design I wouldn\u2019t know otherwise (Kieran Healy\u2019s section
on how graphs can deceive the reader\u2013intentionally or not\u2013opened my eyes
to a lot of important visual concepts.`),In=i(),rs=l("h1"),ca=l("a"),be=e("Overview"),Sn=i(),ia=l("p"),ye=e("Here\u2019s an overview of some of the packages key features:"),An=i(),cs=l("h2"),ua=l("a"),ve=e("Installation and Usage"),Dn=i(),ka=l("p"),we=e("You can install the package via GitHub:"),Rn=i(),is=l("pre"),On=i(),$=l("p"),Ee=e("Always load "),Ha=l("code"),xe=e("library(tpltheme)"),$e=i(),ja=l("strong"),Te=e("after"),Pe=i(),za=l("code"),Le=e("library(ggplot2)"),Ce=e(` and/or
`),Ma=l("code"),Ie=e("library(tidyverse)"),Se=e("."),Hn=i(),d=l("p"),Ae=e(`The package creates a standardized formats for plots to be used in
reports created by the Texas Policy Lab. It primarily relies on
`),Ba=l("code"),De=e("set_tpl_theme()"),Re=e(`, which allows the user to specify whether the plot
theme should align with a standard plot (`),Wa=l("code"),Oe=e('style = "print"'),He=e(`), or one
specially created for plotting geographical data (`),qa=l("code"),je=e('style = "Texas"'),ze=e(`).
Calling `),Ua=l("code"),Me=e("set_tpl_theme()"),Be=e(" after "),Ga=l("code"),We=e("library(tpltheme)"),qe=e(` does most of the
work for this package!`),jn=i(),us=l("pre"),zn=i(),g(ks.$$.fragment),Mn=i(),fs=l("h3"),fa=l("a"),Ue=e("Fonts"),Bn=i(),H=l("p"),Ge=e("The user is able to specify whether they want to use "),Fa=l("em"),Fe=e("Lato"),Ne=e(" or "),Na=l("em"),Ke=e(`Adobe
Caslon Pro`),Ve=e(" in their figures."),Wn=i(),j=l("p"),Je=e(`To ensure that these fonts are installed and registered, use
`),Ka=l("code"),Ye=e("tpl_font_test()"),Qe=e(`. If fonts are not properly installed, install both
fonts online and then run `),Va=l("code"),Xe=e("tpl_font_install()"),Ze=e("."),qn=i(),ms=l("pre"),Un=i(),z=l("p"),so=e(`Here are some examples of sample TPL plots with different specifications
for `),Ja=l("code"),ao=e("style"),no=e(" and "),Ya=l("code"),to=e("font"),eo=e("."),Gn=i(),ds=l("pre"),Fn=i(),g(hs.$$.fragment),Nn=i(),M=l("p"),oo=e("By specifying "),Qa=l("code"),po=e('style = "Texas"'),lo=e(" within "),Xa=l("code"),ro=e("set_tpl_theme"),co=e(`, the user may
also create Texas-specific plots.`),Kn=i(),gs=l("pre"),Vn=i(),g(_s.$$.fragment),Jn=i(),ma=l("p"),io=e("And it also works for categorical variables:"),Yn=i(),bs=l("pre"),Qn=i(),g(ys.$$.fragment),Xn=i(),B=l("p"),uo=e(`If the number of colors exceeds the number of colors in the TPL palette
(9), the function `),Za=l("code"),ko=e("tpl_color_pal()"),fo=e(` will drop the TPL color palette and
return the greatest number of unique colors possible within the
RColorBrewer\u2019s \u201CPaired\u201D palette (for more information on the use of
RColorBrewer palettes, see `),vs=l("a"),mo=e(`this
chapter`),ho=e(")."),Zn=i(),ws=l("pre"),st=i(),g(Es.$$.fragment),at=i(),xs=l("pre"),nt=i(),$s=l("h3"),da=l("a"),go=e("TPL Branding"),tt=i(),Ts=l("h4"),ha=l("a"),_o=e("Logo"),et=i(),ga=l("p"),bo=e(`The user also has the option to include the TPL logo in single plots.
This may be preferred for those reports being made especially public, or
to serve as a pseudo-watermark in proprietary plots.`),ot=i(),T=l("p"),yo=e("The user can specify the "),sn=l("code"),vo=e("position"),wo=e(" of the logo as well as its "),an=l("code"),Eo=e("scale"),xo=e(`.
The scale argument refers to the size of the logo object, with the
specified number corresponding to a multiplication with the normal logo
size. In other words, `),nn=l("code"),$o=e("scale = 2"),To=e(" will "),tn=l("em"),Po=e("double"),Lo=e(` the size of the logo.
The logo defaults to 1/7th of the size of the plot.`),pt=i(),Ps=l("pre"),lt=i(),g(Ls.$$.fragment),rt=i(),Cs=l("h4"),_a=l("a"),Co=e("Logo text"),ct=i(),K=l("p"),Io=e(`There may be some instances when an all-out logo is not warranted or
preferred. If that is the case and the user would still like to
watermark their figures, they can use the function `),en=l("code"),So=e("add_tpl_logo_text()"),Ao=e(`
to add text to an existing plot object:`),it=i(),Is=l("pre"),ut=i(),g(Ss.$$.fragment),kt=i(),V=l("p"),Do=e("The user may also need to specify "),on=l("code"),Ro=e("align"),Oo=e(`, which moves the plot
horizontally across the bottom of the page.`),ft=i(),As=l("pre"),mt=i(),g(Ds.$$.fragment),dt=i(),Rs=l("h3"),ba=l("a"),Ho=e("Additional functions"),ht=i(),Os=l("h4"),ya=l("a"),jo=e("Drop axes"),gt=i(),h=l("p"),zo=e(`In the event that the user wishes to drop an axis, they may do so with
`),pn=l("code"),Mo=e("drop_axis()"),Bo=e(`. The function may drop any combination of axes depending
on the user\u2019s input (`),ln=l("code"),Wo=e('drop = "x"'),qo=e(", "),rn=l("code"),Uo=e('drop = "y"'),Go=e(", "),cn=l("code"),Fo=e('drop = "both"'),No=e(`,
`),un=l("code"),Ko=e('drop = "neither"'),Vo=e(")."),_t=i(),C=l("p"),Jo=e("Unlike "),kn=l("code"),Yo=e("add_tpl_logo()"),Qo=e(", "),fn=l("code"),Xo=e("drop_axis()"),Zo=e(" should be "),mn=l("em"),sp=e("added"),ap=e(` to an existing
plot object:`),bt=i(),Hs=l("pre"),yt=i(),g(js.$$.fragment),vt=i(),zs=l("h3"),va=l("a"),np=e("Colors"),wt=i(),J=l("p"),tp=e(`I also put a lot of time into creating a color palette which was both
aesthetically pleasing and accessible to color-blind viewers. This was
somewhat difficult because there are `),Ms=l("a"),ep=e(`quite a few types of
colorblindness`),op=e(`.
Thankfully, my boss is colorblind, making test cases a lot more
accessible!`),Et=i(),I=l("p"),pp=e("The function "),dn=l("code"),lp=e("view_palette"),rp=e(` plots base color palettes included in
`),hn=l("code"),cp=e("tpltheme"),ip=e(`. All TPL color palettes are led by the notation
`),gn=l("code"),up=e("palette_tpl_*"),kp=e(` and therefore can be easily autocompleted within
RStudio.`),xt=i(),Bs=l("pre"),$t=i(),g(Ws.$$.fragment),Tt=i(),W=l("p"),fp=e("These palettes were created using "),qs=l("a"),mp=e("http://colorbrewer2.org"),dp=e(` and
`),Us=l("a"),hp=e("http://coloors.co"),gp=e(" and are colorblind friendly."),Pt=i(),q=l("p"),_p=e(`The diverging and sequential color palettes are from
`),Gs=l("a"),bp=e("http://colorbrewer2.org"),yp=e(` and the categorical palette is composed of a
variety of colors from `),Fs=l("a"),vp=e("https://coolors.co/"),wp=e(" and the TPL website."),Lt=i(),wa=l("p"),Ep=e("In action, the color palette looks like this:"),Ct=i(),Ns=l("pre"),It=i(),g(Ks.$$.fragment),St=i(),S=l("p"),xp=e("The user may specify the color palette in the "),_n=l("code"),$p=e("scale_fill_*"),Tp=e(` or
`),bn=l("code"),Pp=e("scale_color_*"),Lp=e(` functions in a ggplot call. Specifically, the user can
specify the `),yn=l("code"),Cp=e("palette"),Ip=e(` (categorical, diverging, sequential) and whether
the palette should be reversed.`),At=i(),Vs=l("pre"),Dt=i(),g(Js.$$.fragment),Rt=i(),Ys=l("pre"),Ot=i(),g(Qs.$$.fragment),Ht=i(),Xs=l("h3"),Ea=l("a"),Sp=e("Restore Defaults"),jt=i(),Y=l("p"),Ap=e("By calling "),vn=l("code"),Dp=e("undo_tpl_theme"),Rp=e(`, you are able to remove TPL-specific theme
settings and restores to ggplot defaults (but why would you want to do
that?).`),zt=i(),Zs=l("pre"),Mt=i(),xa=l("p"),Op=e("This results in the following plot:"),Bt=i(),g(sa.$$.fragment),Wt=i(),Q=l("p"),Hp=e("To restore the TPL theme, simply call "),wn=l("code"),jp=e("set_tpl_theme()"),zp=e(":"),qt=i(),aa=l("pre"),Ut=i(),g(na.$$.fragment),this.h()},l(s){f=r(s,"P",{});var t=c(f);R=o(t,`I\u2019ve spent the majority of the summer as an
`),P=r(t,"A",{href:!0,rel:!0});var Bp=c(P);as=o(Bp,"intern"),Bp.forEach(a),m=o(t,` with
the Texas Policy Lab, working on primarily data science-related matters
such as data cleaning and visualization. Most recently, I sought to
create a custom theme in `),L=r(t,"CODE",{});var Wp=c(L);ea=o(Wp,"ggplot2"),Wp.forEach(a),Qt=o(t," for TPL."),t.forEach(a),En=u(s),O=r(s,"P",{});var $a=c(O);Xt=o($a,`The project was my first experience in developing my own R package.
Prior to this project, the most familiarity I had with packages were
from the `),Da=r($a,"CODE",{});var qp=c(Da);Zt=o(qp,"install.packages()"),qp.forEach(a),se=o($a," and "),Ra=r($a,"CODE",{});var Up=c(Ra);ae=o(Up,"library()"),Up.forEach(a),ne=o($a," commands."),$a.forEach(a),xn=u(s),N=r(s,"P",{});var Ft=c(N);te=o(Ft,"Hadley Wickham\u2019s book "),Oa=r(Ft,"STRONG",{});var Gp=c(Oa);ns=r(Gp,"A",{href:!0,rel:!0});var Fp=c(ns);ee=o(Fp,"R Packages"),Fp.forEach(a),Gp.forEach(a),oe=o(Ft,` was
enormously helpful in introducing package development to me. I ran into
(a lot of) issues in building the package, specifically encountering
problems related to local file paths and logo placement on plots.`),Ft.forEach(a),$n=u(s),oa=r(s,"P",{});var Np=c(oa);pe=o(Np,`Creating your own package is a great exercise in trial and error, and
taught me a lot about programming in R that I wouldn\u2019t have learned
otherwise. I was also struck by how remarkably easy it was to create
one\u2019s own package (seriously, it requires the same amount of clicks as
starting a new R project), and how thorough online resources were.`),Np.forEach(a),Tn=u(s),ts=r(s,"H2",{id:!0});var Kp=c(ts);pa=r(Kp,"A",{href:!0});var Vp=c(pa);le=o(Vp,"Inspiration"),Vp.forEach(a),Kp.forEach(a),Pn=u(s),x=r(s,"P",{});var U=c(x);re=o(U,`The catalyst for creating this package was coming across the Urban
Institute\u2019s `),es=r(U,"A",{href:!0,rel:!0});var Jp=c(es);ce=o(Jp,"urbnthemes"),Jp.forEach(a),ie=o(U,`
package on GitHub. I also gathered a lot of inspiration (and borrowed
some code) from `),os=r(U,"A",{href:!0,rel:!0});var Yp=c(os);ue=o(Yp,"ggthemes"),Yp.forEach(a),ke=o(U,` (Jeffrey
Arnold), `),ps=r(U,"A",{href:!0,rel:!0});var Qp=c(ps);fe=o(Qp,"bbplot"),Qp.forEach(a),me=o(U,` (BBC News), and
`),ls=r(U,"A",{href:!0,rel:!0});var Xp=c(ls);de=o(Xp,"hrbrthemes"),Xp.forEach(a),he=o(U,` (Bob Rudis). I was
impressed by the fact that these organizations were able to use R to
create publication-ready plots despite the fact that base ggplot figures
can look rather ugly (if we\u2019re being honest).`),U.forEach(a),Ln=u(s),la=r(s,"P",{});var Zp=c(la);ge=o(Zp,`Because the organization I intern with is still in its infancy, I
thought it would be a perfect time to create a standardized theme for
figures made in the future. So long as future employees adopt the theme,
this package has the potential to create figures specific to our
publications, lending TPL organizational credibility and creating
cross-report consistency.`),Zp.forEach(a),Cn=u(s),ra=r(s,"P",{});var sl=c(ra);_e=o(sl,`I thought a lot about some basic tenets of design, such as font
readability, text size, and color contrast. I learned a lot about visual
and aesthetic design I wouldn\u2019t know otherwise (Kieran Healy\u2019s section
on how graphs can deceive the reader\u2013intentionally or not\u2013opened my eyes
to a lot of important visual concepts.`),sl.forEach(a),In=u(s),rs=r(s,"H1",{id:!0});var al=c(rs);ca=r(al,"A",{href:!0});var nl=c(ca);be=o(nl,"Overview"),nl.forEach(a),al.forEach(a),Sn=u(s),ia=r(s,"P",{});var tl=c(ia);ye=o(tl,"Here\u2019s an overview of some of the packages key features:"),tl.forEach(a),An=u(s),cs=r(s,"H2",{id:!0});var el=c(cs);ua=r(el,"A",{href:!0});var ol=c(ua);ve=o(ol,"Installation and Usage"),ol.forEach(a),el.forEach(a),Dn=u(s),ka=r(s,"P",{});var pl=c(ka);we=o(pl,"You can install the package via GitHub:"),pl.forEach(a),Rn=u(s),is=r(s,"PRE",{class:!0});var Br=c(is);Br.forEach(a),On=u(s),$=r(s,"P",{});var G=c($);Ee=o(G,"Always load "),Ha=r(G,"CODE",{});var ll=c(Ha);xe=o(ll,"library(tpltheme)"),ll.forEach(a),$e=u(G),ja=r(G,"STRONG",{});var rl=c(ja);Te=o(rl,"after"),rl.forEach(a),Pe=u(G),za=r(G,"CODE",{});var cl=c(za);Le=o(cl,"library(ggplot2)"),cl.forEach(a),Ce=o(G,` and/or
`),Ma=r(G,"CODE",{});var il=c(Ma);Ie=o(il,"library(tidyverse)"),il.forEach(a),Se=o(G,"."),G.forEach(a),Hn=u(s),d=r(s,"P",{});var A=c(d);Ae=o(A,`The package creates a standardized formats for plots to be used in
reports created by the Texas Policy Lab. It primarily relies on
`),Ba=r(A,"CODE",{});var ul=c(Ba);De=o(ul,"set_tpl_theme()"),ul.forEach(a),Re=o(A,`, which allows the user to specify whether the plot
theme should align with a standard plot (`),Wa=r(A,"CODE",{});var kl=c(Wa);Oe=o(kl,'style = "print"'),kl.forEach(a),He=o(A,`), or one
specially created for plotting geographical data (`),qa=r(A,"CODE",{});var fl=c(qa);je=o(fl,'style = "Texas"'),fl.forEach(a),ze=o(A,`).
Calling `),Ua=r(A,"CODE",{});var ml=c(Ua);Me=o(ml,"set_tpl_theme()"),ml.forEach(a),Be=o(A," after "),Ga=r(A,"CODE",{});var dl=c(Ga);We=o(dl,"library(tpltheme)"),dl.forEach(a),qe=o(A,` does most of the
work for this package!`),A.forEach(a),jn=u(s),us=r(s,"PRE",{class:!0});var Wr=c(us);Wr.forEach(a),zn=u(s),_(ks.$$.fragment,s),Mn=u(s),fs=r(s,"H3",{id:!0});var hl=c(fs);fa=r(hl,"A",{href:!0});var gl=c(fa);Ue=o(gl,"Fonts"),gl.forEach(a),hl.forEach(a),Bn=u(s),H=r(s,"P",{});var Ta=c(H);Ge=o(Ta,"The user is able to specify whether they want to use "),Fa=r(Ta,"EM",{});var _l=c(Fa);Fe=o(_l,"Lato"),_l.forEach(a),Ne=o(Ta," or "),Na=r(Ta,"EM",{});var bl=c(Na);Ke=o(bl,`Adobe
Caslon Pro`),bl.forEach(a),Ve=o(Ta," in their figures."),Ta.forEach(a),Wn=u(s),j=r(s,"P",{});var Pa=c(j);Je=o(Pa,`To ensure that these fonts are installed and registered, use
`),Ka=r(Pa,"CODE",{});var yl=c(Ka);Ye=o(yl,"tpl_font_test()"),yl.forEach(a),Qe=o(Pa,`. If fonts are not properly installed, install both
fonts online and then run `),Va=r(Pa,"CODE",{});var vl=c(Va);Xe=o(vl,"tpl_font_install()"),vl.forEach(a),Ze=o(Pa,"."),Pa.forEach(a),qn=u(s),ms=r(s,"PRE",{class:!0});var qr=c(ms);qr.forEach(a),Un=u(s),z=r(s,"P",{});var La=c(z);so=o(La,`Here are some examples of sample TPL plots with different specifications
for `),Ja=r(La,"CODE",{});var wl=c(Ja);ao=o(wl,"style"),wl.forEach(a),no=o(La," and "),Ya=r(La,"CODE",{});var El=c(Ya);to=o(El,"font"),El.forEach(a),eo=o(La,"."),La.forEach(a),Gn=u(s),ds=r(s,"PRE",{class:!0});var Ur=c(ds);Ur.forEach(a),Fn=u(s),_(hs.$$.fragment,s),Nn=u(s),M=r(s,"P",{});var Ca=c(M);oo=o(Ca,"By specifying "),Qa=r(Ca,"CODE",{});var xl=c(Qa);po=o(xl,'style = "Texas"'),xl.forEach(a),lo=o(Ca," within "),Xa=r(Ca,"CODE",{});var $l=c(Xa);ro=o($l,"set_tpl_theme"),$l.forEach(a),co=o(Ca,`, the user may
also create Texas-specific plots.`),Ca.forEach(a),Kn=u(s),gs=r(s,"PRE",{class:!0});var Gr=c(gs);Gr.forEach(a),Vn=u(s),_(_s.$$.fragment,s),Jn=u(s),ma=r(s,"P",{});var Tl=c(ma);io=o(Tl,"And it also works for categorical variables:"),Tl.forEach(a),Yn=u(s),bs=r(s,"PRE",{class:!0});var Fr=c(bs);Fr.forEach(a),Qn=u(s),_(ys.$$.fragment,s),Xn=u(s),B=r(s,"P",{});var Ia=c(B);uo=o(Ia,`If the number of colors exceeds the number of colors in the TPL palette
(9), the function `),Za=r(Ia,"CODE",{});var Pl=c(Za);ko=o(Pl,"tpl_color_pal()"),Pl.forEach(a),fo=o(Ia,` will drop the TPL color palette and
return the greatest number of unique colors possible within the
RColorBrewer\u2019s \u201CPaired\u201D palette (for more information on the use of
RColorBrewer palettes, see `),vs=r(Ia,"A",{href:!0,rel:!0});var Ll=c(vs);mo=o(Ll,`this
chapter`),Ll.forEach(a),ho=o(Ia,")."),Ia.forEach(a),Zn=u(s),ws=r(s,"PRE",{class:!0});var Nr=c(ws);Nr.forEach(a),st=u(s),_(Es.$$.fragment,s),at=u(s),xs=r(s,"PRE",{class:!0});var Kr=c(xs);Kr.forEach(a),nt=u(s),$s=r(s,"H3",{id:!0});var Cl=c($s);da=r(Cl,"A",{href:!0});var Il=c(da);go=o(Il,"TPL Branding"),Il.forEach(a),Cl.forEach(a),tt=u(s),Ts=r(s,"H4",{id:!0});var Sl=c(Ts);ha=r(Sl,"A",{href:!0});var Al=c(ha);_o=o(Al,"Logo"),Al.forEach(a),Sl.forEach(a),et=u(s),ga=r(s,"P",{});var Dl=c(ga);bo=o(Dl,`The user also has the option to include the TPL logo in single plots.
This may be preferred for those reports being made especially public, or
to serve as a pseudo-watermark in proprietary plots.`),Dl.forEach(a),ot=u(s),T=r(s,"P",{});var F=c(T);yo=o(F,"The user can specify the "),sn=r(F,"CODE",{});var Rl=c(sn);vo=o(Rl,"position"),Rl.forEach(a),wo=o(F," of the logo as well as its "),an=r(F,"CODE",{});var Ol=c(an);Eo=o(Ol,"scale"),Ol.forEach(a),xo=o(F,`.
The scale argument refers to the size of the logo object, with the
specified number corresponding to a multiplication with the normal logo
size. In other words, `),nn=r(F,"CODE",{});var Hl=c(nn);$o=o(Hl,"scale = 2"),Hl.forEach(a),To=o(F," will "),tn=r(F,"EM",{});var jl=c(tn);Po=o(jl,"double"),jl.forEach(a),Lo=o(F,` the size of the logo.
The logo defaults to 1/7th of the size of the plot.`),F.forEach(a),pt=u(s),Ps=r(s,"PRE",{class:!0});var Vr=c(Ps);Vr.forEach(a),lt=u(s),_(Ls.$$.fragment,s),rt=u(s),Cs=r(s,"H4",{id:!0});var zl=c(Cs);_a=r(zl,"A",{href:!0});var Ml=c(_a);Co=o(Ml,"Logo text"),Ml.forEach(a),zl.forEach(a),ct=u(s),K=r(s,"P",{});var Nt=c(K);Io=o(Nt,`There may be some instances when an all-out logo is not warranted or
preferred. If that is the case and the user would still like to
watermark their figures, they can use the function `),en=r(Nt,"CODE",{});var Bl=c(en);So=o(Bl,"add_tpl_logo_text()"),Bl.forEach(a),Ao=o(Nt,`
to add text to an existing plot object:`),Nt.forEach(a),it=u(s),Is=r(s,"PRE",{class:!0});var Jr=c(Is);Jr.forEach(a),ut=u(s),_(Ss.$$.fragment,s),kt=u(s),V=r(s,"P",{});var Kt=c(V);Do=o(Kt,"The user may also need to specify "),on=r(Kt,"CODE",{});var Wl=c(on);Ro=o(Wl,"align"),Wl.forEach(a),Oo=o(Kt,`, which moves the plot
horizontally across the bottom of the page.`),Kt.forEach(a),ft=u(s),As=r(s,"PRE",{class:!0});var Yr=c(As);Yr.forEach(a),mt=u(s),_(Ds.$$.fragment,s),dt=u(s),Rs=r(s,"H3",{id:!0});var ql=c(Rs);ba=r(ql,"A",{href:!0});var Ul=c(ba);Ho=o(Ul,"Additional functions"),Ul.forEach(a),ql.forEach(a),ht=u(s),Os=r(s,"H4",{id:!0});var Gl=c(Os);ya=r(Gl,"A",{href:!0});var Fl=c(ya);jo=o(Fl,"Drop axes"),Fl.forEach(a),Gl.forEach(a),gt=u(s),h=r(s,"P",{});var D=c(h);zo=o(D,`In the event that the user wishes to drop an axis, they may do so with
`),pn=r(D,"CODE",{});var Nl=c(pn);Mo=o(Nl,"drop_axis()"),Nl.forEach(a),Bo=o(D,`. The function may drop any combination of axes depending
on the user\u2019s input (`),ln=r(D,"CODE",{});var Kl=c(ln);Wo=o(Kl,'drop = "x"'),Kl.forEach(a),qo=o(D,", "),rn=r(D,"CODE",{});var Vl=c(rn);Uo=o(Vl,'drop = "y"'),Vl.forEach(a),Go=o(D,", "),cn=r(D,"CODE",{});var Jl=c(cn);Fo=o(Jl,'drop = "both"'),Jl.forEach(a),No=o(D,`,
`),un=r(D,"CODE",{});var Yl=c(un);Ko=o(Yl,'drop = "neither"'),Yl.forEach(a),Vo=o(D,")."),D.forEach(a),_t=u(s),C=r(s,"P",{});var X=c(C);Jo=o(X,"Unlike "),kn=r(X,"CODE",{});var Ql=c(kn);Yo=o(Ql,"add_tpl_logo()"),Ql.forEach(a),Qo=o(X,", "),fn=r(X,"CODE",{});var Xl=c(fn);Xo=o(Xl,"drop_axis()"),Xl.forEach(a),Zo=o(X," should be "),mn=r(X,"EM",{});var Zl=c(mn);sp=o(Zl,"added"),Zl.forEach(a),ap=o(X,` to an existing
plot object:`),X.forEach(a),bt=u(s),Hs=r(s,"PRE",{class:!0});var Qr=c(Hs);Qr.forEach(a),yt=u(s),_(js.$$.fragment,s),vt=u(s),zs=r(s,"H3",{id:!0});var sr=c(zs);va=r(sr,"A",{href:!0});var ar=c(va);np=o(ar,"Colors"),ar.forEach(a),sr.forEach(a),wt=u(s),J=r(s,"P",{});var Vt=c(J);tp=o(Vt,`I also put a lot of time into creating a color palette which was both
aesthetically pleasing and accessible to color-blind viewers. This was
somewhat difficult because there are `),Ms=r(Vt,"A",{href:!0,rel:!0});var nr=c(Ms);ep=o(nr,`quite a few types of
colorblindness`),nr.forEach(a),op=o(Vt,`.
Thankfully, my boss is colorblind, making test cases a lot more
accessible!`),Vt.forEach(a),Et=u(s),I=r(s,"P",{});var Z=c(I);pp=o(Z,"The function "),dn=r(Z,"CODE",{});var tr=c(dn);lp=o(tr,"view_palette"),tr.forEach(a),rp=o(Z,` plots base color palettes included in
`),hn=r(Z,"CODE",{});var er=c(hn);cp=o(er,"tpltheme"),er.forEach(a),ip=o(Z,`. All TPL color palettes are led by the notation
`),gn=r(Z,"CODE",{});var or=c(gn);up=o(or,"palette_tpl_*"),or.forEach(a),kp=o(Z,` and therefore can be easily autocompleted within
RStudio.`),Z.forEach(a),xt=u(s),Bs=r(s,"PRE",{class:!0});var Xr=c(Bs);Xr.forEach(a),$t=u(s),_(Ws.$$.fragment,s),Tt=u(s),W=r(s,"P",{});var Sa=c(W);fp=o(Sa,"These palettes were created using "),qs=r(Sa,"A",{href:!0,rel:!0});var pr=c(qs);mp=o(pr,"http://colorbrewer2.org"),pr.forEach(a),dp=o(Sa,` and
`),Us=r(Sa,"A",{href:!0,rel:!0});var lr=c(Us);hp=o(lr,"http://coloors.co"),lr.forEach(a),gp=o(Sa," and are colorblind friendly."),Sa.forEach(a),Pt=u(s),q=r(s,"P",{});var Aa=c(q);_p=o(Aa,`The diverging and sequential color palettes are from
`),Gs=r(Aa,"A",{href:!0,rel:!0});var rr=c(Gs);bp=o(rr,"http://colorbrewer2.org"),rr.forEach(a),yp=o(Aa,` and the categorical palette is composed of a
variety of colors from `),Fs=r(Aa,"A",{href:!0,rel:!0});var cr=c(Fs);vp=o(cr,"https://coolors.co/"),cr.forEach(a),wp=o(Aa," and the TPL website."),Aa.forEach(a),Lt=u(s),wa=r(s,"P",{});var ir=c(wa);Ep=o(ir,"In action, the color palette looks like this:"),ir.forEach(a),Ct=u(s),Ns=r(s,"PRE",{class:!0});var Zr=c(Ns);Zr.forEach(a),It=u(s),_(Ks.$$.fragment,s),St=u(s),S=r(s,"P",{});var ss=c(S);xp=o(ss,"The user may specify the color palette in the "),_n=r(ss,"CODE",{});var ur=c(_n);$p=o(ur,"scale_fill_*"),ur.forEach(a),Tp=o(ss,` or
`),bn=r(ss,"CODE",{});var kr=c(bn);Pp=o(kr,"scale_color_*"),kr.forEach(a),Lp=o(ss,` functions in a ggplot call. Specifically, the user can
specify the `),yn=r(ss,"CODE",{});var fr=c(yn);Cp=o(fr,"palette"),fr.forEach(a),Ip=o(ss,` (categorical, diverging, sequential) and whether
the palette should be reversed.`),ss.forEach(a),At=u(s),Vs=r(s,"PRE",{class:!0});var sc=c(Vs);sc.forEach(a),Dt=u(s),_(Js.$$.fragment,s),Rt=u(s),Ys=r(s,"PRE",{class:!0});var ac=c(Ys);ac.forEach(a),Ot=u(s),_(Qs.$$.fragment,s),Ht=u(s),Xs=r(s,"H3",{id:!0});var mr=c(Xs);Ea=r(mr,"A",{href:!0});var dr=c(Ea);Sp=o(dr,"Restore Defaults"),dr.forEach(a),mr.forEach(a),jt=u(s),Y=r(s,"P",{});var Jt=c(Y);Ap=o(Jt,"By calling "),vn=r(Jt,"CODE",{});var hr=c(vn);Dp=o(hr,"undo_tpl_theme"),hr.forEach(a),Rp=o(Jt,`, you are able to remove TPL-specific theme
settings and restores to ggplot defaults (but why would you want to do
that?).`),Jt.forEach(a),zt=u(s),Zs=r(s,"PRE",{class:!0});var nc=c(Zs);nc.forEach(a),Mt=u(s),xa=r(s,"P",{});var gr=c(xa);Op=o(gr,"This results in the following plot:"),gr.forEach(a),Bt=u(s),_(sa.$$.fragment,s),Wt=u(s),Q=r(s,"P",{});var Yt=c(Q);Hp=o(Yt,"To restore the TPL theme, simply call "),wn=r(Yt,"CODE",{});var _r=c(wn);jp=o(_r,"set_tpl_theme()"),_r.forEach(a),zp=o(Yt,":"),Yt.forEach(a),qt=u(s),aa=r(s,"PRE",{class:!0});var tc=c(aa);tc.forEach(a),Ut=u(s),_(na.$$.fragment,s),this.h()},h(){k(P,"href","https://www.texaspolicylab.org/profile/connor-rothschild/"),k(P,"rel","nofollow"),k(ns,"href","http://r-pkgs.had.co.nz/"),k(ns,"rel","nofollow"),k(pa,"href","#inspiration"),k(ts,"id","inspiration"),k(es,"href","https://github.com/UrbanInstitute/urbnthemes"),k(es,"rel","nofollow"),k(os,"href","https://github.com/jrnold/ggthemes"),k(os,"rel","nofollow"),k(ps,"href","https://github.com/bbc/bbplot"),k(ps,"rel","nofollow"),k(ls,"href","https://github.com/hrbrmstr/hrbrthemes"),k(ls,"rel","nofollow"),k(ca,"href","#overview"),k(rs,"id","overview"),k(ua,"href","#installation-and-usage"),k(cs,"id","installation-and-usage"),k(is,"class","language-r"),k(us,"class","language-r"),k(fa,"href","#fonts"),k(fs,"id","fonts"),k(ms,"class","language-r"),k(ds,"class","language-r"),k(gs,"class","language-r"),k(bs,"class","language-r"),k(vs,"href","https://bookdown.org/rdpeng/exdata/plotting-and-color-in-r.html#using-the-rcolorbrewer-palettes"),k(vs,"rel","nofollow"),k(ws,"class","language-r"),k(xs,"class","language-r"),k(da,"href","#tpl-branding"),k($s,"id","tpl-branding"),k(ha,"href","#logo"),k(Ts,"id","logo"),k(Ps,"class","language-r"),k(_a,"href","#logo-text"),k(Cs,"id","logo-text"),k(Is,"class","language-r"),k(As,"class","language-r"),k(ba,"href","#additional-functions"),k(Rs,"id","additional-functions"),k(ya,"href","#drop-axes"),k(Os,"id","drop-axes"),k(Hs,"class","language-r"),k(va,"href","#colors"),k(zs,"id","colors"),k(Ms,"href","https://nei.nih.gov/learn-about-eye-health/eye-conditions-and-diseases/color-blindness"),k(Ms,"rel","nofollow"),k(Bs,"class","language-r"),k(qs,"href","http://colorbrewer2.org"),k(qs,"rel","nofollow"),k(Us,"href","http://coloors.co"),k(Us,"rel","nofollow"),k(Gs,"href","http://colorbrewer2.org"),k(Gs,"rel","nofollow"),k(Fs,"href","https://coolors.co/"),k(Fs,"rel","nofollow"),k(Ns,"class","language-r"),k(Vs,"class","language-r"),k(Ys,"class","language-r"),k(Ea,"href","#restore-defaults"),k(Xs,"id","restore-defaults"),k(Zs,"class","language-r"),k(aa,"class","language-r")},m(s,t){p(s,f,t),n(f,R),n(f,P),n(P,as),n(f,m),n(f,L),n(L,ea),n(f,Qt),p(s,En,t),p(s,O,t),n(O,Xt),n(O,Da),n(Da,Zt),n(O,se),n(O,Ra),n(Ra,ae),n(O,ne),p(s,xn,t),p(s,N,t),n(N,te),n(N,Oa),n(Oa,ns),n(ns,ee),n(N,oe),p(s,$n,t),p(s,oa,t),n(oa,pe),p(s,Tn,t),p(s,ts,t),n(ts,pa),n(pa,le),p(s,Pn,t),p(s,x,t),n(x,re),n(x,es),n(es,ce),n(x,ie),n(x,os),n(os,ue),n(x,ke),n(x,ps),n(ps,fe),n(x,me),n(x,ls),n(ls,de),n(x,he),p(s,Ln,t),p(s,la,t),n(la,ge),p(s,Cn,t),p(s,ra,t),n(ra,_e),p(s,In,t),p(s,rs,t),n(rs,ca),n(ca,be),p(s,Sn,t),p(s,ia,t),n(ia,ye),p(s,An,t),p(s,cs,t),n(cs,ua),n(ua,ve),p(s,Dn,t),p(s,ka,t),n(ka,we),p(s,Rn,t),p(s,is,t),is.innerHTML=wr,p(s,On,t),p(s,$,t),n($,Ee),n($,Ha),n(Ha,xe),n($,$e),n($,ja),n(ja,Te),n($,Pe),n($,za),n(za,Le),n($,Ce),n($,Ma),n(Ma,Ie),n($,Se),p(s,Hn,t),p(s,d,t),n(d,Ae),n(d,Ba),n(Ba,De),n(d,Re),n(d,Wa),n(Wa,Oe),n(d,He),n(d,qa),n(qa,je),n(d,ze),n(d,Ua),n(Ua,Me),n(d,Be),n(d,Ga),n(Ga,We),n(d,qe),p(s,jn,t),p(s,us,t),us.innerHTML=Er,p(s,zn,t),b(ks,s,t),p(s,Mn,t),p(s,fs,t),n(fs,fa),n(fa,Ue),p(s,Bn,t),p(s,H,t),n(H,Ge),n(H,Fa),n(Fa,Fe),n(H,Ne),n(H,Na),n(Na,Ke),n(H,Ve),p(s,Wn,t),p(s,j,t),n(j,Je),n(j,Ka),n(Ka,Ye),n(j,Qe),n(j,Va),n(Va,Xe),n(j,Ze),p(s,qn,t),p(s,ms,t),ms.innerHTML=xr,p(s,Un,t),p(s,z,t),n(z,so),n(z,Ja),n(Ja,ao),n(z,no),n(z,Ya),n(Ya,to),n(z,eo),p(s,Gn,t),p(s,ds,t),ds.innerHTML=$r,p(s,Fn,t),b(hs,s,t),p(s,Nn,t),p(s,M,t),n(M,oo),n(M,Qa),n(Qa,po),n(M,lo),n(M,Xa),n(Xa,ro),n(M,co),p(s,Kn,t),p(s,gs,t),gs.innerHTML=Tr,p(s,Vn,t),b(_s,s,t),p(s,Jn,t),p(s,ma,t),n(ma,io),p(s,Yn,t),p(s,bs,t),bs.innerHTML=Pr,p(s,Qn,t),b(ys,s,t),p(s,Xn,t),p(s,B,t),n(B,uo),n(B,Za),n(Za,ko),n(B,fo),n(B,vs),n(vs,mo),n(B,ho),p(s,Zn,t),p(s,ws,t),ws.innerHTML=Lr,p(s,st,t),b(Es,s,t),p(s,at,t),p(s,xs,t),xs.innerHTML=Cr,p(s,nt,t),p(s,$s,t),n($s,da),n(da,go),p(s,tt,t),p(s,Ts,t),n(Ts,ha),n(ha,_o),p(s,et,t),p(s,ga,t),n(ga,bo),p(s,ot,t),p(s,T,t),n(T,yo),n(T,sn),n(sn,vo),n(T,wo),n(T,an),n(an,Eo),n(T,xo),n(T,nn),n(nn,$o),n(T,To),n(T,tn),n(tn,Po),n(T,Lo),p(s,pt,t),p(s,Ps,t),Ps.innerHTML=Ir,p(s,lt,t),b(Ls,s,t),p(s,rt,t),p(s,Cs,t),n(Cs,_a),n(_a,Co),p(s,ct,t),p(s,K,t),n(K,Io),n(K,en),n(en,So),n(K,Ao),p(s,it,t),p(s,Is,t),Is.innerHTML=Sr,p(s,ut,t),b(Ss,s,t),p(s,kt,t),p(s,V,t),n(V,Do),n(V,on),n(on,Ro),n(V,Oo),p(s,ft,t),p(s,As,t),As.innerHTML=Ar,p(s,mt,t),b(Ds,s,t),p(s,dt,t),p(s,Rs,t),n(Rs,ba),n(ba,Ho),p(s,ht,t),p(s,Os,t),n(Os,ya),n(ya,jo),p(s,gt,t),p(s,h,t),n(h,zo),n(h,pn),n(pn,Mo),n(h,Bo),n(h,ln),n(ln,Wo),n(h,qo),n(h,rn),n(rn,Uo),n(h,Go),n(h,cn),n(cn,Fo),n(h,No),n(h,un),n(un,Ko),n(h,Vo),p(s,_t,t),p(s,C,t),n(C,Jo),n(C,kn),n(kn,Yo),n(C,Qo),n(C,fn),n(fn,Xo),n(C,Zo),n(C,mn),n(mn,sp),n(C,ap),p(s,bt,t),p(s,Hs,t),Hs.innerHTML=Dr,p(s,yt,t),b(js,s,t),p(s,vt,t),p(s,zs,t),n(zs,va),n(va,np),p(s,wt,t),p(s,J,t),n(J,tp),n(J,Ms),n(Ms,ep),n(J,op),p(s,Et,t),p(s,I,t),n(I,pp),n(I,dn),n(dn,lp),n(I,rp),n(I,hn),n(hn,cp),n(I,ip),n(I,gn),n(gn,up),n(I,kp),p(s,xt,t),p(s,Bs,t),Bs.innerHTML=Rr,p(s,$t,t),b(Ws,s,t),p(s,Tt,t),p(s,W,t),n(W,fp),n(W,qs),n(qs,mp),n(W,dp),n(W,Us),n(Us,hp),n(W,gp),p(s,Pt,t),p(s,q,t),n(q,_p),n(q,Gs),n(Gs,bp),n(q,yp),n(q,Fs),n(Fs,vp),n(q,wp),p(s,Lt,t),p(s,wa,t),n(wa,Ep),p(s,Ct,t),p(s,Ns,t),Ns.innerHTML=Or,p(s,It,t),b(Ks,s,t),p(s,St,t),p(s,S,t),n(S,xp),n(S,_n),n(_n,$p),n(S,Tp),n(S,bn),n(bn,Pp),n(S,Lp),n(S,yn),n(yn,Cp),n(S,Ip),p(s,At,t),p(s,Vs,t),Vs.innerHTML=Hr,p(s,Dt,t),b(Js,s,t),p(s,Rt,t),p(s,Ys,t),Ys.innerHTML=jr,p(s,Ot,t),b(Qs,s,t),p(s,Ht,t),p(s,Xs,t),n(Xs,Ea),n(Ea,Sp),p(s,jt,t),p(s,Y,t),n(Y,Ap),n(Y,vn),n(vn,Dp),n(Y,Rp),p(s,zt,t),p(s,Zs,t),Zs.innerHTML=zr,p(s,Mt,t),p(s,xa,t),n(xa,Op),p(s,Bt,t),b(sa,s,t),p(s,Wt,t),p(s,Q,t),n(Q,Hp),n(Q,wn),n(wn,jp),n(Q,zp),p(s,qt,t),p(s,aa,t),aa.innerHTML=Mr,p(s,Ut,t),b(na,s,t),Gt=!0},p:rc,i(s){Gt||(y(ks.$$.fragment,s),y(hs.$$.fragment,s),y(_s.$$.fragment,s),y(ys.$$.fragment,s),y(Es.$$.fragment,s),y(Ls.$$.fragment,s),y(Ss.$$.fragment,s),y(Ds.$$.fragment,s),y(js.$$.fragment,s),y(Ws.$$.fragment,s),y(Ks.$$.fragment,s),y(Js.$$.fragment,s),y(Qs.$$.fragment,s),y(sa.$$.fragment,s),y(na.$$.fragment,s),Gt=!0)},o(s){v(ks.$$.fragment,s),v(hs.$$.fragment,s),v(_s.$$.fragment,s),v(ys.$$.fragment,s),v(Es.$$.fragment,s),v(Ls.$$.fragment,s),v(Ss.$$.fragment,s),v(Ds.$$.fragment,s),v(js.$$.fragment,s),v(Ws.$$.fragment,s),v(Ks.$$.fragment,s),v(Js.$$.fragment,s),v(Qs.$$.fragment,s),v(sa.$$.fragment,s),v(na.$$.fragment,s),Gt=!1},d(s){s&&a(f),s&&a(En),s&&a(O),s&&a(xn),s&&a(N),s&&a($n),s&&a(oa),s&&a(Tn),s&&a(ts),s&&a(Pn),s&&a(x),s&&a(Ln),s&&a(la),s&&a(Cn),s&&a(ra),s&&a(In),s&&a(rs),s&&a(Sn),s&&a(ia),s&&a(An),s&&a(cs),s&&a(Dn),s&&a(ka),s&&a(Rn),s&&a(is),s&&a(On),s&&a($),s&&a(Hn),s&&a(d),s&&a(jn),s&&a(us),s&&a(zn),w(ks,s),s&&a(Mn),s&&a(fs),s&&a(Bn),s&&a(H),s&&a(Wn),s&&a(j),s&&a(qn),s&&a(ms),s&&a(Un),s&&a(z),s&&a(Gn),s&&a(ds),s&&a(Fn),w(hs,s),s&&a(Nn),s&&a(M),s&&a(Kn),s&&a(gs),s&&a(Vn),w(_s,s),s&&a(Jn),s&&a(ma),s&&a(Yn),s&&a(bs),s&&a(Qn),w(ys,s),s&&a(Xn),s&&a(B),s&&a(Zn),s&&a(ws),s&&a(st),w(Es,s),s&&a(at),s&&a(xs),s&&a(nt),s&&a($s),s&&a(tt),s&&a(Ts),s&&a(et),s&&a(ga),s&&a(ot),s&&a(T),s&&a(pt),s&&a(Ps),s&&a(lt),w(Ls,s),s&&a(rt),s&&a(Cs),s&&a(ct),s&&a(K),s&&a(it),s&&a(Is),s&&a(ut),w(Ss,s),s&&a(kt),s&&a(V),s&&a(ft),s&&a(As),s&&a(mt),w(Ds,s),s&&a(dt),s&&a(Rs),s&&a(ht),s&&a(Os),s&&a(gt),s&&a(h),s&&a(_t),s&&a(C),s&&a(bt),s&&a(Hs),s&&a(yt),w(js,s),s&&a(vt),s&&a(zs),s&&a(wt),s&&a(J),s&&a(Et),s&&a(I),s&&a(xt),s&&a(Bs),s&&a($t),w(Ws,s),s&&a(Tt),s&&a(W),s&&a(Pt),s&&a(q),s&&a(Lt),s&&a(wa),s&&a(Ct),s&&a(Ns),s&&a(It),w(Ks,s),s&&a(St),s&&a(S),s&&a(At),s&&a(Vs),s&&a(Dt),w(Js,s),s&&a(Rt),s&&a(Ys),s&&a(Ot),w(Qs,s),s&&a(Ht),s&&a(Xs),s&&a(jt),s&&a(Y),s&&a(zt),s&&a(Zs),s&&a(Mt),s&&a(xa),s&&a(Bt),w(sa,s),s&&a(Wt),s&&a(Q),s&&a(qt),s&&a(aa),s&&a(Ut),w(na,s)}}}function uc(ta){let f,R;const P=[ta[0],vr];let as={$$slots:{default:[ic]},$$scope:{ctx:ta}};for(let m=0;m<P.length;m+=1)as=Mp(as,P[m]);return f=new cc({props:as}),{c(){g(f.$$.fragment)},l(m){_(f.$$.fragment,m)},m(m,L){b(f,m,L),R=!0},p(m,[L]){const ea=L&1?lc(P,[L&1&&br(m[0]),L&0&&br(vr)]):{};L&2&&(ea.$$scope={dirty:L,ctx:m}),f.$set(ea)},i(m){R||(y(f.$$.fragment,m),R=!0)},o(m){v(f.$$.fragment,m),R=!1},d(m){w(f,m)}}}const vr={layout:"blog",title:"My First Package! Introducing tpltheme",description:"Introducing {tpltheme}, a toolkit to create publication-ready plots in the style of the Texas Policy Lab.",image:"introducing-tpltheme/header.png",date:"2019-07-02",archived:!0,tags:["r"]};function kc(ta,f,R){return ta.$$set=P=>{R(0,f=Mp(Mp({},f),yr(P)))},f=yr(f),[f]}class Ec extends ec{constructor(f){super();oc(this,f,kc,uc,pc,{})}}export{Ec as default,vr as metadata};
