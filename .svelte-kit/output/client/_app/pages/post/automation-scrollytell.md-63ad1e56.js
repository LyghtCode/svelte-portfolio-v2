import{S as zc,i as Nc,s as Fc,B as jo,j as Co,m as Ho,o as Oo,p as Wc,q as sc,x as Mo,u as Do,v as Ao,ak as ac,_ as tc,$ as pc,e,t,k as u,c,a as l,g as p,d as s,n as i,b as k,ae as oc,f as r,L as a,Y as ec,D as Uc}from"../../chunks/vendor-dfb9df3e.js";import Bc from"./layout.svelte-b65b887a.js";/* empty css                                                       *//* empty css                                                      */import{C as Yc}from"../../chunks/Code-46ee5f1b.js";import{H as qc}from"../../chunks/HighlightFromProp-a3212567.js";import"../../chunks/BackTo-f09ad798.js";import"../../chunks/global-164a8ca5.js";import"../../chunks/utils-419e8671.js";import"../../chunks/CornerTitle-3a53cda1.js";import"../../chunks/store-b0ba4c19.js";function Gc(b){let d,m=`<code class="language-r">plot <span class="token operator">&lt;-</span> data <span class="token percent-operator operator">%>%</span>
  filter<span class="token punctuation">(</span><span class="token keyword">if</span> <span class="token punctuation">(</span>add <span class="token operator">!=</span> <span class="token number">8</span><span class="token punctuation">)</span> add <span class="token operator">>=</span> reveal <span class="token keyword">else</span> reveal <span class="token percent-operator operator">%in%</span> c<span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  ggplot<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  geom_point<span class="token punctuation">(</span>mapping<span class="token operator">=</span>aes<span class="token punctuation">(</span>x<span class="token operator">=</span>A_MEDIAN<span class="token punctuation">,</span> y<span class="token operator">=</span>probability<span class="token punctuation">,</span> size<span class="token operator">=</span>TOT_EMP<span class="token punctuation">,</span>
                         alpha<span class="token operator">=</span>ifelse<span class="token punctuation">(</span>add <span class="token operator">==</span> reveal<span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">/</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">/</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span> col<span class="token operator">=</span>typicaled<span class="token punctuation">,</span>
                         text <span class="token operator">=</span> glue<span class="token operator">::</span>glue<span class="token punctuation">(</span>'<span class="token operator">&lt;</span>b<span class="token operator">></span>Occupation<span class="token operator">&lt;</span><span class="token operator">/</span>b<span class="token operator">></span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>occupation<span class="token punctuation">&#125;</span>
                                            <span class="token operator">&lt;</span>b<span class="token operator">></span>Probability of Automation<span class="token operator">&lt;</span><span class="token operator">/</span>b<span class="token operator">></span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>probability<span class="token punctuation">&#125;</span>%
                                            <span class="token operator">&lt;</span>b<span class="token operator">></span>Median Income<span class="token operator">&lt;</span><span class="token operator">/</span>b<span class="token operator">></span><span class="token operator">:</span> <span class="token operator">$</span><span class="token punctuation">&#123;</span>A_MEDIAN<span class="token punctuation">&#125;</span>
                                            <span class="token operator">&lt;</span>b<span class="token operator">></span>Number of Workers<span class="token operator">&lt;</span><span class="token operator">/</span>b<span class="token operator">></span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>TOT_EMP<span class="token punctuation">&#125;</span>'<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  scale_size<span class="token punctuation">(</span>range <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  xlab<span class="token punctuation">(</span><span class="token string">"&#92;nMedian Income"</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  ylab<span class="token punctuation">(</span><span class="token string">"Probability of Automation"</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  labs<span class="token punctuation">(</span>size <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">,</span> col <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">,</span> alpha <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  scale_color_manual<span class="token punctuation">(</span>values <span class="token operator">=</span> cols<span class="token punctuation">,</span> breaks <span class="token operator">=</span> legend_ord<span class="token punctuation">)</span> <span class="token operator">+</span>
  scale_x_continuous<span class="token punctuation">(</span>labels <span class="token operator">=</span> scales<span class="token operator">::</span>dollar_format<span class="token punctuation">(</span>prefix<span class="token operator">=</span><span class="token string">"$"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> limits <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">25000</span><span class="token punctuation">,</span><span class="token number">200000</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  scale_y_continuous<span class="token punctuation">(</span>labels <span class="token operator">=</span> scales<span class="token operator">::</span>number_format<span class="token punctuation">(</span>suffix<span class="token operator">=</span><span class="token string">"%"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> limits <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  theme<span class="token punctuation">(</span>axis.line.x <span class="token operator">=</span> ggplot2<span class="token operator">::</span>element_line<span class="token punctuation">(</span>colour <span class="token operator">=</span> <span class="token keyword">NULL</span><span class="token punctuation">,</span>
                                            size <span class="token operator">=</span> <span class="token keyword">NULL</span><span class="token punctuation">,</span> linetype <span class="token operator">=</span> <span class="token keyword">NULL</span><span class="token punctuation">,</span> lineend <span class="token operator">=</span> <span class="token keyword">NULL</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        axis.line.y <span class="token operator">=</span> ggplot2<span class="token operator">::</span>element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        panel.grid.major.x <span class="token operator">=</span> element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code>`;return{c(){d=e("pre"),this.h()},l(h){d=c(h,"PRE",{class:!0});var v=l(d);v.forEach(s),this.h()},h(){k(d,"class","language-r")},m(h,v){r(h,d,v),d.innerHTML=m},p:Uc,d(h){h&&s(d)}}}function Jc(b){let d;return{c(){d=t("second line of code")},l(m){d=p(m,"second line of code")},m(m,h){r(m,d,h)},d(m){m&&s(d)}}}function Kc(b){let d,m,h,v,f,_,E,Qa,sn,Va,Xa,an,Za,nt,Fs,W,st,tn,at,tt,Ws,Cn,pt,Us,I,Ro,Bs,pn,Hn,ot,Ys,On,et,qs,on,lc=`<code class="language-r">library<span class="token punctuation">(</span>shiny<span class="token punctuation">)</span>
library<span class="token punctuation">(</span>scrollytell<span class="token punctuation">)</span>
library<span class="token punctuation">(</span>shinyjs<span class="token punctuation">)</span>
library<span class="token punctuation">(</span>ggvis<span class="token punctuation">)</span>
library<span class="token punctuation">(</span>plotly<span class="token punctuation">)</span>

theme_set<span class="token punctuation">(</span>theme_minimal<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code>`,Gs,en,Mn,ct,Js,x,lt,cn,rt,ut,ln,it,kt,rn,dt,ft,Ks,U,Qs,B,ht,C,mt,bt,_t,Vs,Y,vt,ss,yt,wt,Xs,T,gt,as,Et,xt,ts,Tt,Pt,ps,$t,Lt,Zs,un,rc=`<code class="language-r">data <span class="token operator">&lt;-</span> data <span class="token percent-operator operator">%>%</span>
  mutate<span class="token punctuation">(</span>reveal <span class="token operator">=</span> case_when<span class="token punctuation">(</span>
    typicaled <span class="token operator">==</span> <span class="token string">"No formal educational credential"</span> <span class="token operator">~</span> <span class="token number">1</span><span class="token punctuation">,</span>
    typicaled <span class="token operator">==</span> <span class="token string">"High school diploma or equivalent"</span> <span class="token operator">~</span> <span class="token number">2</span><span class="token punctuation">,</span>
    typicaled <span class="token operator">==</span> <span class="token string">"Postsecondary nondegree award"</span> <span class="token operator">~</span> <span class="token number">3</span><span class="token punctuation">,</span>
    typicaled <span class="token operator">==</span> <span class="token string">"Some college, no degree"</span> <span class="token operator">~</span> <span class="token number">0</span><span class="token punctuation">,</span>
    typicaled <span class="token operator">==</span> <span class="token string">"Associate's degree"</span> <span class="token operator">~</span> <span class="token number">4</span><span class="token punctuation">,</span>
    typicaled <span class="token operator">==</span> <span class="token string">"Bachelor's degree"</span> <span class="token operator">~</span> <span class="token number">5</span><span class="token punctuation">,</span>
    typicaled <span class="token operator">==</span> <span class="token string">"Master's degree"</span> <span class="token operator">~</span> <span class="token number">6</span><span class="token punctuation">,</span>
    typicaled <span class="token operator">==</span> <span class="token string">"Doctoral or professional degree"</span> <span class="token operator">~</span> <span class="token number">7</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token punctuation">)</span></code>`,na,Dn,It,sa,kn,uc='<code class="language-r">filter<span class="token punctuation">(</span><span class="token keyword">if</span> <span class="token punctuation">(</span>add <span class="token operator">!=</span> <span class="token number">8</span><span class="token punctuation">)</span> add <span class="token operator">>=</span> reveal <span class="token keyword">else</span> reveal <span class="token percent-operator operator">%in%</span> c<span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code>',aa,H,jt,os,Ct,Ht,es,Ot,Mt,ta,P,Dt,cs,At,Rt,ls,St,zt,rs,Nt,Ft,pa,q,Wt,us,Ut,Bt,oa,O,Yt,is,qt,Gt,ks,Jt,Kt,ea,dn,ic=`<code class="language-r">server <span class="token operator">&lt;-</span> <span class="token keyword">function</span><span class="token punctuation">(</span>input<span class="token punctuation">,</span> output<span class="token punctuation">,</span> session<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>

  output<span class="token operator">$</span>plot <span class="token operator">&lt;-</span> renderPlotly<span class="token punctuation">(</span><span class="token punctuation">&#123;</span>

    add <span class="token operator">&lt;-</span> input<span class="token operator">$</span>scr

    plot <span class="token operator">&lt;-</span>
      <span class="token comment"># static ggplot goes here</span>

      ggplotly<span class="token punctuation">(</span>plot<span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
      <span class="token comment"># other ggplotly parameters go here</span>

  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>

  <span class="token comment"># render the plot here</span>
  output<span class="token operator">$</span>scr <span class="token operator">&lt;-</span> renderScrollytell<span class="token punctuation">(</span><span class="token punctuation">&#123;</span>scrollytell<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
  renderText<span class="token punctuation">(</span>paste0<span class="token punctuation">(</span><span class="token string">"Section: "</span><span class="token punctuation">,</span> input<span class="token operator">$</span>scr<span class="token punctuation">)</span><span class="token punctuation">)</span>
  observe<span class="token punctuation">(</span><span class="token punctuation">&#123;</span>cat<span class="token punctuation">(</span><span class="token string">"section:"</span><span class="token punctuation">,</span> input<span class="token operator">$</span>scr<span class="token punctuation">,</span> <span class="token string">"&#92;n"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>

<span class="token punctuation">&#125;</span></code>`,ca,An,Qt,la,y,Vt,ds,Xt,Zt,fs,np,sp,hs,ap,tp,ms,pp,op,ra,w,ep,bs,cp,lp,_s,rp,up,vs,ip,kp,ys,dp,fp,ua,fn,kc=`<code class="language-r">ui <span class="token operator">&lt;-</span> fluidPage<span class="token punctuation">(</span>

  <span class="token comment"># a bunch of introductory stuff, css stuff</span>

  <span class="token comment"># scrollytelling plot</span>
  scrolly_container<span class="token punctuation">(</span>outputId <span class="token operator">=</span> <span class="token string">"scr"</span><span class="token punctuation">,</span>
                       scrolly_graph<span class="token punctuation">(</span>
                                     <span class="token comment">## this is the plot object that we made earlier:</span>
                                     plotlyOutput<span class="token punctuation">(</span><span class="token string">"plot"</span><span class="token punctuation">,</span> height <span class="token operator">=</span> <span class="token string">'600px'</span><span class="token punctuation">)</span>

                    <span class="token punctuation">)</span><span class="token punctuation">,</span>
                    scrolly_sections<span class="token punctuation">(</span>
                      <span class="token comment">## each of these sections corresponds to an update</span>
                      <span class="token comment">## the number after id = corresponds to the &#96;scr&#96; update</span>
                      <span class="token comment">## the render_text() function will be discussed later</span>
                      scrolly_section<span class="token punctuation">(</span>id <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> render_text<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                      scrolly_section<span class="token punctuation">(</span>id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> render_text<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                      scrolly_section<span class="token punctuation">(</span>id <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span> render_text<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                      scrolly_section<span class="token punctuation">(</span>id <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">,</span> render_text<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                      scrolly_section<span class="token punctuation">(</span>id <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">,</span> render_text<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                      scrolly_section<span class="token punctuation">(</span>id <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">,</span> render_text<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                      scrolly_section<span class="token punctuation">(</span>id <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">,</span> render_text<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                      scrolly_section<span class="token punctuation">(</span>id <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">,</span> render_text<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                      scrolly_section<span class="token punctuation">(</span>id <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">,</span> render_text<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                      <span class="token comment"># add a scrolly_section with nothing in it;</span>
                      <span class="token comment"># this buffer prevents the plot from disappearing while reading last section</span>
                      scrolly_section<span class="token punctuation">(</span>id <span class="token operator">=</span> <span class="token string">"buffer"</span><span class="token punctuation">,</span> br<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">)</span>

  <span class="token punctuation">)</span><span class="token punctuation">,</span>

  <span class="token comment"># a bunch of concluding stuff, other html</span>

<span class="token punctuation">)</span></code>`,ia,Rn,hp,ka,G,mp,ws,bp,_p,da,hn,dc='<code class="language-r">filter<span class="token punctuation">(</span><span class="token keyword">if</span> <span class="token punctuation">(</span>add <span class="token operator">!=</span> <span class="token number">8</span><span class="token punctuation">)</span> add <span class="token operator">>=</span> reveal <span class="token keyword">else</span> reveal <span class="token percent-operator operator">%in%</span> c<span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code>',fa,M,vp,gs,yp,wp,Es,gp,Ep,ha,mn,fc=`<code class="language-r">server <span class="token operator">&lt;-</span> <span class="token keyword">function</span><span class="token punctuation">(</span>input<span class="token punctuation">,</span> output<span class="token punctuation">,</span> session<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>

  output<span class="token operator">$</span>plot <span class="token operator">&lt;-</span> renderPlotly<span class="token punctuation">(</span><span class="token punctuation">&#123;</span>

    add <span class="token operator">&lt;-</span> input<span class="token operator">$</span>scr
    <span class="token comment">#...</span></code>`,ma,D,xp,xs,Tp,Pp,Ts,$p,Lp,ba,bn,hc=`<code class="language-r">ui <span class="token operator">&lt;-</span> fluidPage<span class="token punctuation">(</span>

  <span class="token comment"># a bunch of introductory stuff, css stuff</span>

  <span class="token comment"># scrollytelling plot</span>
  scrolly_container<span class="token punctuation">(</span>outputId <span class="token operator">=</span> <span class="token string">"scr"</span><span class="token punctuation">,</span>
                       scrolly_graph<span class="token punctuation">(</span>plotlyOutput<span class="token punctuation">(</span><span class="token string">"plot"</span><span class="token punctuation">,</span> height <span class="token operator">=</span> <span class="token string">'600px'</span><span class="token punctuation">)</span>

                    <span class="token punctuation">)</span><span class="token punctuation">,</span>
                    scrolly_sections<span class="token punctuation">(</span>
                      scrolly_section<span class="token punctuation">(</span>id <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> render_text<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                      scrolly_section<span class="token punctuation">(</span>id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> render_text<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>

                      <span class="token comment"># ...</span></code>`,_a,Sn,Ip,va,_n,mc=`<code class="language-r">server <span class="token operator">&lt;-</span> <span class="token keyword">function</span><span class="token punctuation">(</span>input<span class="token punctuation">,</span> output<span class="token punctuation">,</span> session<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>

  output<span class="token operator">$</span>plot <span class="token operator">&lt;-</span>
    <span class="token comment">#...</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>

  output<span class="token operator">$</span>scr <span class="token operator">&lt;-</span> renderScrollytell<span class="token punctuation">(</span><span class="token punctuation">&#123;</span>scrollytell<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
  renderText<span class="token punctuation">(</span>paste0<span class="token punctuation">(</span><span class="token string">"Section: "</span><span class="token punctuation">,</span> input<span class="token operator">$</span>scr<span class="token punctuation">)</span><span class="token punctuation">)</span>
  observe<span class="token punctuation">(</span><span class="token punctuation">&#123;</span>cat<span class="token punctuation">(</span><span class="token string">"section:"</span><span class="token punctuation">,</span> input<span class="token operator">$</span>scr<span class="token punctuation">,</span> <span class="token string">"&#92;n"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>

<span class="token punctuation">&#125;</span></code>`,ya,A,jp,Ps,Cp,Hp,$s,Op,Mp,wa,vn,zn,Dp,ga,J,Ap,Ls,Rp,Sp,Ea,Nn,zp,xa,yn,bc=`<code class="language-r">text1 <span class="token operator">&lt;-</span> HTML<span class="token punctuation">(</span>"<span class="token operator">&lt;</span>H2<span class="token operator">></span> No education credentials <span class="token operator">&lt;</span><span class="token operator">/</span>H2<span class="token operator">></span>
              <span class="token operator">&lt;</span>br<span class="token operator">></span> <span class="token operator">&lt;</span>p<span class="token operator">></span> Workers with <span class="token operator">&lt;</span>font color<span class="token operator">=</span><span class="token string">'#A00042'</span><span class="token operator">></span>no formal education credential<span class="token operator">&lt;</span><span class="token operator">/</span>font<span class="token operator">></span> have a median income of <span class="token operator">$</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">636.</span>
              <span class="token operator">&lt;</span>br<span class="token operator">></span> On average<span class="token punctuation">,</span> those occupations have a <span class="token operator">&lt;</span>b<span class="token operator">></span><span class="token number">90</span>% chance<span class="token operator">&lt;</span><span class="token operator">/</span>b<span class="token operator">></span> of job automation.
              <span class="token operator">&lt;</span>br<span class="token operator">></span><span class="token operator">&lt;</span>br<span class="token operator">></span> There are <span class="token number">23</span><span class="token punctuation">,</span><span class="token number">765</span><span class="token punctuation">,</span><span class="token number">700</span> workers with <span class="token operator">&lt;</span>font color<span class="token operator">=</span><span class="token string">'#A00042'</span><span class="token operator">></span>no formal education credential<span class="token operator">&lt;</span><span class="token operator">/</span>font<span class="token operator">></span>.<span class="token operator">&lt;</span>p<span class="token operator">></span>"<span class="token punctuation">)</span>

text2 <span class="token operator">&lt;-</span> HTML<span class="token punctuation">(</span>"<span class="token operator">&lt;</span>H2<span class="token operator">></span> High school diplomas <span class="token operator">&lt;</span><span class="token operator">/</span>H2<span class="token operator">></span>
              <span class="token operator">&lt;</span>br<span class="token operator">></span> <span class="token operator">&lt;</span>p<span class="token operator">></span>Workers with <span class="token operator">&lt;</span>font color<span class="token operator">=</span><span class="token string">'#F56C42'</span><span class="token operator">></span>high school diplomas<span class="token operator">&lt;</span><span class="token operator">/</span>font<span class="token operator">></span> have a median income of <span class="token operator">$</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">636.</span>
              <span class="token operator">&lt;</span>br<span class="token operator">></span> On average<span class="token punctuation">,</span> those occupations have a <span class="token operator">&lt;</span>b<span class="token operator">></span><span class="token number">60</span>% chance<span class="token operator">&lt;</span><span class="token operator">/</span>b<span class="token operator">></span> of job automation.
              <span class="token operator">&lt;</span>br<span class="token operator">></span><span class="token operator">&lt;</span>br<span class="token operator">></span> There are <span class="token number">33</span><span class="token punctuation">,</span><span class="token number">129</span><span class="token punctuation">,</span><span class="token number">910</span> workers with a <span class="token operator">&lt;</span>font color<span class="token operator">=</span><span class="token string">'#F56C42'</span><span class="token operator">></span>high school diploma<span class="token operator">&lt;</span><span class="token operator">/</span>font<span class="token operator">></span>.<span class="token operator">&lt;</span>p<span class="token operator">></span>"<span class="token punctuation">)</span>

<span class="token comment"># ...</span></code>`,Ta,K,Np,Is,Fp,Wp,Pa,wn,_c=`<code class="language-r">text <span class="token operator">&lt;-</span> <span class="token keyword">function</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
  p<span class="token punctuation">(</span>
    switch<span class="token punctuation">(</span>num<span class="token punctuation">,</span>
           text1<span class="token punctuation">,</span>
           text2<span class="token punctuation">,</span>
           text3<span class="token punctuation">,</span>
           text4<span class="token punctuation">,</span>
           text5<span class="token punctuation">,</span>
           text6<span class="token punctuation">,</span>
           text7<span class="token punctuation">,</span>
           text8
    <span class="token punctuation">)</span>
  <span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span>

render_text <span class="token operator">&lt;-</span> <span class="token keyword">function</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
  div<span class="token punctuation">(</span>
    text<span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">,</span> class <span class="token operator">=</span> <span class="token string">"text"</span>
  <span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span></code>`,$a,$,Up,js,Bp,Yp,Cs,qp,Gp,Hs,Jp,Kp,La,Fn,Qp,Ia,Wn,Vp,ja,gn,vc=`<code class="language-r">scrolly_sections<span class="token punctuation">(</span>
  HTML<span class="token punctuation">(</span><span class="token string">'&lt;center>'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  scrolly_section<span class="token punctuation">(</span>id <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> render_text<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  scrolly_section<span class="token punctuation">(</span>id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> render_text<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token comment"># ... continued</span>
<span class="token punctuation">)</span></code>`,Ca,L,Xp,Os,Zp,no,Ms,so,ao,Ds,to,po,Ha,g,oo,As,eo,co,Rs,lo,ro,Ss,uo,io,zs,ko,fo,Oa,En,Un,ho,Ma,R,mo,Ns,bo,_o,xn,vo,yo,Da,Bn,wo,Aa,Tn,yc=`<code class="language-r">ui <span class="token operator">&lt;-</span> fluidPage<span class="token punctuation">(</span>

  <span class="token comment"># suppress warning messages while data is loading on-screen</span>
  tags<span class="token operator">$</span>style<span class="token punctuation">(</span>type<span class="token operator">=</span><span class="token string">"text/css"</span><span class="token punctuation">,</span>
             <span class="token string">".shiny-output-error &#123; visibility: hidden; &#125;"</span><span class="token punctuation">,</span>
             <span class="token string">".shiny-output-error:before &#123; visibility: hidden; &#125;"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  tags<span class="token operator">$</span>head<span class="token punctuation">(</span>
    includeCSS<span class="token punctuation">(</span><span class="token string">"www/style.css"</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">,</span>

  <span class="token comment"># article title &amp; name</span>
  fluidRow<span class="token punctuation">(</span>HTML<span class="token punctuation">(</span>"<span class="token operator">&lt;</span>center<span class="token operator">></span>
                <span class="token operator">&lt;</span>h1<span class="token operator">></span>Automation and Its Impact on Jobs<span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">></span>
                <span class="token operator">&lt;</span>p style<span class="token operator">=</span><span class="token string">'font-size:26px'</span><span class="token operator">></span> by <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">'https://connorrothschild.github.io/'</span> target<span class="token operator">=</span><span class="token string">'_blank'</span><span class="token operator">></span>Connor Rothschild<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>
                <span class="token operator">&lt;</span><span class="token operator">/</span>center<span class="token operator">></span>"<span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">,</span>

  br<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>

  fluidRow<span class="token punctuation">(</span>
    column<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>

    column<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span>
           <span class="token comment"># intro text</span>
           fluidRow<span class="token punctuation">(</span>id<span class="token operator">=</span><span class="token string">'text'</span><span class="token punctuation">,</span>
                    column<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    column<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span>
                           br<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                           text0<span class="token punctuation">,</span>
                           hr<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                           h1<span class="token punctuation">(</span>
                             class <span class="token operator">=</span> <span class="token string">"instructions"</span><span class="token punctuation">,</span>
                             <span class="token string">"How to read this chart:"</span><span class="token punctuation">,</span>
                             br<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                             br<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                             <span class="token string">"The size of each"</span><span class="token punctuation">,</span> icon<span class="token punctuation">(</span><span class="token string">"circle"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"corresponds to the number of workers in that job."</span><span class="token punctuation">,</span>
                             br<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                             <span class="token string">"Hover over each"</span><span class="token punctuation">,</span> icon<span class="token punctuation">(</span><span class="token string">"circle"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"to see details on the occupation's income and probability of automation."</span><span class="token punctuation">,</span>
                             br<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                             <span class="token string">"Double click on a"</span><span class="token punctuation">,</span> icon<span class="token punctuation">(</span><span class="token string">"circle"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"in the legend to focus on a specific level of education."</span>
                           <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    column<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
           <span class="token comment"># plot object for intro</span>
           plotlyOutput<span class="token punctuation">(</span><span class="token string">"introPlot"</span><span class="token punctuation">,</span> height <span class="token operator">=</span> <span class="token string">'400px'</span><span class="token punctuation">)</span>
           <span class="token punctuation">)</span><span class="token punctuation">,</span>

    column<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>

           <span class="token punctuation">)</span><span class="token punctuation">,</span>

  <span class="token comment"># scrollytelling plot</span>
  scrolly_container<span class="token punctuation">(</span><span class="token string">"scr"</span>
                    <span class="token punctuation">,</span> scrolly_graph<span class="token punctuation">(</span> br<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                     br<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                     textOutput<span class="token punctuation">(</span><span class="token string">"section"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                     br<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                     HTML<span class="token punctuation">(</span><span class="token string">'&lt;center>'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                     plotlyOutput<span class="token punctuation">(</span><span class="token string">"plot"</span><span class="token punctuation">,</span> height <span class="token operator">=</span> <span class="token string">'600px'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                     HTML<span class="token punctuation">(</span><span class="token string">'&lt;/center>'</span><span class="token punctuation">)</span>

                    <span class="token punctuation">)</span>
                    <span class="token punctuation">,</span> scrolly_sections<span class="token punctuation">(</span>
                      HTML<span class="token punctuation">(</span><span class="token string">'&lt;center>'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                      scrolly_section<span class="token punctuation">(</span>id <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> render_text<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                      scrolly_section<span class="token punctuation">(</span>id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> render_text<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                      scrolly_section<span class="token punctuation">(</span>id <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span> render_text<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                      scrolly_section<span class="token punctuation">(</span>id <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">,</span> render_text<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                      scrolly_section<span class="token punctuation">(</span>id <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">,</span> render_text<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                      scrolly_section<span class="token punctuation">(</span>id <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">,</span> render_text<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                      scrolly_section<span class="token punctuation">(</span>id <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">,</span> render_text<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                      scrolly_section<span class="token punctuation">(</span>id <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">,</span> render_text<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                      scrolly_section<span class="token punctuation">(</span>id <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">,</span> render_text<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                      <span class="token comment"># add a scrolly_section with nothing in it;</span>
                      <span class="token comment"># this buffer prevents the plot from disappearing while reading last section</span>
                      scrolly_section<span class="token punctuation">(</span>id <span class="token operator">=</span> <span class="token string">"buffer"</span><span class="token punctuation">,</span> br<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                      HTML<span class="token punctuation">(</span><span class="token string">'&lt;/center>'</span><span class="token punctuation">)</span>
                    <span class="token punctuation">)</span>

  <span class="token punctuation">)</span><span class="token punctuation">,</span>

  <span class="token comment"># concluding text</span>
  div<span class="token punctuation">(</span>fluidRow<span class="token punctuation">(</span>id <span class="token operator">=</span> <span class="token string">'text'</span><span class="token punctuation">,</span>
               column<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
               column<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span>
                      concludingtext<span class="token punctuation">,</span>
                      br<span class="token punctuation">(</span><span class="token punctuation">)</span>
               <span class="token punctuation">)</span><span class="token punctuation">,</span>
               column<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">,</span> style <span class="token operator">=</span> <span class="token string">'margin-top: -300px;'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>

  br<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  br<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  br<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  hr<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>

  fluidRow<span class="token punctuation">(</span>
    column<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    column<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span>
           technicalnotes
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
    column<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">,</span>
  br<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  br<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
column<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>

<span class="token punctuation">)</span></code>`,Ra,Yn,go,Sa,Pn,wc=`<code class="language-r">server <span class="token operator">&lt;-</span> <span class="token keyword">function</span><span class="token punctuation">(</span>input<span class="token punctuation">,</span> output<span class="token punctuation">,</span> session<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>

  output<span class="token operator">$</span>plot <span class="token operator">&lt;-</span> renderPlotly<span class="token punctuation">(</span><span class="token punctuation">&#123;</span>

    add <span class="token operator">&lt;-</span> input<span class="token operator">$</span>scr

    plot <span class="token operator">&lt;-</span> data <span class="token percent-operator operator">%>%</span>
      filter<span class="token punctuation">(</span>typicaled <span class="token operator">!=</span> <span class="token string">"Some college, no degree"</span><span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
      filter<span class="token punctuation">(</span><span class="token keyword">if</span> <span class="token punctuation">(</span>add <span class="token operator">!=</span> <span class="token number">8</span><span class="token punctuation">)</span> add <span class="token operator">>=</span> reveal <span class="token keyword">else</span> reveal <span class="token percent-operator operator">%in%</span> c<span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
      ggplot<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>
      geom_point<span class="token punctuation">(</span>mapping<span class="token operator">=</span>aes<span class="token punctuation">(</span>x<span class="token operator">=</span>A_MEDIAN<span class="token punctuation">,</span> y<span class="token operator">=</span>probability<span class="token punctuation">,</span> size<span class="token operator">=</span>TOT_EMP<span class="token punctuation">,</span>
                             alpha<span class="token operator">=</span>ifelse<span class="token punctuation">(</span>add <span class="token operator">==</span> reveal<span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">/</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">/</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span> col<span class="token operator">=</span>typicaled<span class="token punctuation">,</span>
                             text <span class="token operator">=</span> glue<span class="token operator">::</span>glue<span class="token punctuation">(</span>'<span class="token operator">&lt;</span>b<span class="token operator">></span>Occupation<span class="token operator">&lt;</span><span class="token operator">/</span>b<span class="token operator">></span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>occupation<span class="token punctuation">&#125;</span>
                                                <span class="token operator">&lt;</span>b<span class="token operator">></span>Probability of Automation<span class="token operator">&lt;</span><span class="token operator">/</span>b<span class="token operator">></span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>probability<span class="token punctuation">&#125;</span>%
                                                <span class="token operator">&lt;</span>b<span class="token operator">></span>Median Income<span class="token operator">&lt;</span><span class="token operator">/</span>b<span class="token operator">></span><span class="token operator">:</span> <span class="token operator">$</span><span class="token punctuation">&#123;</span>A_MEDIAN<span class="token punctuation">&#125;</span>
                                                <span class="token operator">&lt;</span>b<span class="token operator">></span>Number of Workers<span class="token operator">&lt;</span><span class="token operator">/</span>b<span class="token operator">></span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>TOT_EMP<span class="token punctuation">&#125;</span>'<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
      scale_size<span class="token punctuation">(</span>range <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
      xlab<span class="token punctuation">(</span><span class="token string">"&#92;nMedian Income"</span><span class="token punctuation">)</span> <span class="token operator">+</span>
      ylab<span class="token punctuation">(</span><span class="token string">"Probability of Automation"</span><span class="token punctuation">)</span> <span class="token operator">+</span>
      labs<span class="token punctuation">(</span>size<span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">,</span> col<span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">,</span> alpha <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">)</span> <span class="token operator">+</span>
      scale_color_manual<span class="token punctuation">(</span>values <span class="token operator">=</span> cols<span class="token punctuation">,</span> breaks <span class="token operator">=</span> legend_ord<span class="token punctuation">)</span> <span class="token operator">+</span>
      scale_x_continuous<span class="token punctuation">(</span>labels<span class="token operator">=</span>scales<span class="token operator">::</span>dollar_format<span class="token punctuation">(</span>prefix<span class="token operator">=</span><span class="token string">"$"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> limits <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">25000</span><span class="token punctuation">,</span><span class="token number">200000</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
      scale_y_continuous<span class="token punctuation">(</span>labels<span class="token operator">=</span>scales<span class="token operator">::</span>number_format<span class="token punctuation">(</span>suffix<span class="token operator">=</span><span class="token string">"%"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> limits <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
      theme<span class="token punctuation">(</span>axis.line.x <span class="token operator">=</span> ggplot2<span class="token operator">::</span>element_line<span class="token punctuation">(</span>colour <span class="token operator">=</span> <span class="token keyword">NULL</span><span class="token punctuation">,</span>
                                                size <span class="token operator">=</span> <span class="token keyword">NULL</span><span class="token punctuation">,</span> linetype <span class="token operator">=</span> <span class="token keyword">NULL</span><span class="token punctuation">,</span> lineend <span class="token operator">=</span> <span class="token keyword">NULL</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            axis.line.y <span class="token operator">=</span> ggplot2<span class="token operator">::</span>element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            panel.grid.major.x <span class="token operator">=</span> element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    ggplotly<span class="token punctuation">(</span>plot<span class="token punctuation">,</span> tooltip <span class="token operator">=</span> <span class="token string">'text'</span><span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
    layout<span class="token punctuation">(</span>
      title <span class="token operator">=</span> list<span class="token punctuation">(</span>element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      legend <span class="token operator">=</span> list<span class="token punctuation">(</span>x <span class="token operator">=</span> <span class="token number">0.65</span><span class="token punctuation">,</span> y <span class="token operator">=</span> <span class="token number">0.925</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      font <span class="token operator">=</span> list<span class="token punctuation">(</span>family <span class="token operator">=</span> <span class="token string">'Lato'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      margin<span class="token operator">=</span>list<span class="token punctuation">(</span>t<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      hoverlabel <span class="token operator">=</span> list<span class="token punctuation">(</span>bgcolor <span class="token operator">=</span> <span class="token string">'whitesmoke'</span><span class="token punctuation">,</span> color <span class="token operator">=</span> <span class="token string">'DarkGray'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
    config<span class="token punctuation">(</span>displaylogo <span class="token operator">=</span> F<span class="token punctuation">,</span> showSendToCloud <span class="token operator">=</span> F<span class="token punctuation">,</span> displayModeBar <span class="token operator">=</span> F<span class="token punctuation">)</span>

  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>

  output<span class="token operator">$</span>introPlot <span class="token operator">&lt;-</span> renderPlotly<span class="token punctuation">(</span><span class="token punctuation">&#123;</span>introPlot<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
  output<span class="token operator">$</span>scr <span class="token operator">&lt;-</span> renderScrollytell<span class="token punctuation">(</span><span class="token punctuation">&#123;</span>scrollytell<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
  renderText<span class="token punctuation">(</span>paste0<span class="token punctuation">(</span><span class="token string">"Section: "</span><span class="token punctuation">,</span> input<span class="token operator">$</span>scr<span class="token punctuation">)</span><span class="token punctuation">)</span>
  observe<span class="token punctuation">(</span><span class="token punctuation">&#123;</span>cat<span class="token punctuation">(</span><span class="token string">"section:"</span><span class="token punctuation">,</span> input<span class="token operator">$</span>scr<span class="token punctuation">,</span> <span class="token string">"&#92;n"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>

<span class="token punctuation">&#125;</span></code>`,za,$n,qn,Eo,Na,S,xo,Ln,To,Po,In,$o,Lo,Fa,j,So,Wa;U=new Yc({props:{language:"r",showLineNumbers:!0,highlightedLines:b[0]=="create-plot"?b[1]:null,$$slots:{default:[Gc]},$$scope:{ctx:b}}});function gc(n){b[3](n)}function Ec(n){b[4](n)}let Io={hoveredIdProp:"create-plot",highlightedLinesProp:"2",$$slots:{default:[Jc]},$$scope:{ctx:b}};return b[0]!==void 0&&(Io.hoveredId=b[0]),b[1]!==void 0&&(Io.highlightedLines=b[1]),C=new qc({props:Io}),tc.push(()=>pc(C,"hoveredId",gc)),tc.push(()=>pc(C,"highlightedLines",Ec)),{c(){d=e("p"),m=t(`I\u2019ve always been interested in data visualization, and my most recent
sub-passion has been `),h=e("em"),v=t("scrollytelling"),f=t(`. I\u2019ve seen numerous examples of
amazing scrolling articles, from sites such as `),_=e("a"),E=t(`The
Pudding`),Qa=t(", the "),sn=e("a"),Va=t(`New York
Times`),Xa=t(`, and
`),an=e("a"),Za=t("FiveThirtyEight"),nt=t("."),Fs=u(),W=e("p"),st=t(`Although most of these sites rely on the same high-powered visualization
tools (such as `),tn=e("a"),at=t("D3.js"),tt=t(`) to create their stories, the
learning curve for those are a bit steep! Thankfully, I came across some examples of scrollytelling in my language
of choice, R.`),Ws=u(),Cn=e("p"),pt=t("Today, I\u2019ll walk you through a tutorial of scrollytelling in R. It\u2019s a bit complicated, and the output isn\u2019t as powerful as a full-fledged D3 project, but its a rough sketch, and it works. Here\u2019s the output:"),Us=u(),I=e("iframe"),Bs=u(),pn=e("h3"),Hn=e("a"),ot=t("Load libraries"),Ys=u(),On=e("p"),et=t("We begin by loading the libraries required for our project:"),qs=u(),on=e("pre"),Gs=u(),en=e("h2"),Mn=e("a"),ct=t("Construct an updating plot object"),Js=u(),x=e("p"),lt=t("Once the data ("),cn=e("a"),rt=t(`which can be found
here`),ut=t(`)
is already `),ln=e("a"),it=t(`loaded and
cleaned`),kt=t(`,
we construct a plot object that will update as the user scrolls. (`),rn=e("a"),dt=t(`Other
R users`),ft=t(` make multiple plots;
either way is fine.)`),Ks=u(),Co(U.$$.fragment),Qs=u(),B=e("p"),ht=t("But wait, what\u2019s that "),Co(C.$$.fragment),_t=t("?"),Vs=u(),Y=e("p"),vt=t("This may make "),ss=e("em"),yt=t("0 sense"),wt=t(" right now, but here\u2019s why we have it."),Xs=u(),T=e("p"),gt=t(`The important part (and somewhat difficult thing to understand) about
this step is that your plot object has some `),as=e("strong"),Et=t(`data which corresponds to
an updating variable`),xt=t(". For me, I added a variable called "),ts=e("code"),Tt=t("reveal"),Pt=t(` for
each step of the visualization. For me, this meant having `),ps=e("code"),$t=t("reveal"),Lt=t(`
correspond to a typical level of education for a given job.`),Zs=u(),un=e("pre"),na=u(),Dn=e("p"),It=t("So, when my plot object has a line of code which says:"),sa=u(),kn=e("pre"),aa=u(),H=e("p"),jt=t(`That can be read as \u201CUpdate the plot object to include all data points
`),os=e("strong"),Ct=t("up until the current point"),Ht=t(" encoded in "),es=e("code"),Ot=t("reveal"),Mt=t(".\u201D"),ta=u(),P=e("p"),Dt=t("But, it also depends on what level of "),cs=e("code"),At=t("add"),Rt=t(" we are at; if "),ls=e("code"),St=t("add"),zt=t(` == 8
(the last data point, e.g.\xA0the concluding plot), then we want to show
`),rs=e("em"),Nt=t("all data points"),Ft=t("."),pa=u(),q=e("p"),Wt=t("\u201COkay, okay. But what is "),us=e("code"),Ut=t("add"),Bt=t("???\u201D"),oa=u(),O=e("p"),Yt=t("Good question. "),is=e("code"),qt=t("add"),Gt=t(` is the variable I constructed to correspond to the
user\u2019s input (in this case, the scroll!). When we put it all together,
we\u2019re going to wrap our plot object into a rendering function `),ks=e("em"),Jt=t("inside"),Kt=t(`
the server function. Confusing? It looks like this:`),ea=u(),dn=e("pre"),ca=u(),An=e("p"),Qt=t(`What\u2019s happening here? Within the server function, we\u2019re doing two
things:`),la=u(),y=e("p"),Vt=t("First, we\u2019re creating the plot object. Because we have the command "),ds=e("code"),Xt=t("add <- input$scr"),Zt=u(),fs=e("strong"),np=t("inside"),sp=t(" the function "),hs=e("code"),ap=t("renderPlotly"),tp=t(", our plot object will be dynamically updated along with "),ms=e("code"),pp=t("input$scr"),op=t("."),ra=u(),w=e("p"),ep=t("This makes more sense when you connect it to the UI. In our "),bs=e("code"),cp=t("ui"),lp=t(` function,
we include a `),_s=e("code"),rp=t("scrolly_container"),up=t(` from the scrollytell package. Within
that, we make our `),vs=e("code"),ip=t("outputId"),kp=t(` correspond to the name of our updating
input (in this case, `),ys=e("em"),dp=t("scr"),fp=t(")."),ua=u(),fn=e("pre"),ia=u(),Rn=e("p"),hp=t("So, the simplest way to think about this so far is:"),ka=u(),G=e("p"),mp=t("Construct a plot object with some updating variable (in my case, "),ws=e("code"),bp=t("reveal"),_p=t(")."),da=u(),hn=e("pre"),fa=u(),M=e("p"),vp=t("Make that variable correspond with some input variable (in my case "),gs=e("code"),yp=t("add"),wp=t(", which is created from the "),Es=e("code"),gp=t("input$scr"),Ep=t(")."),ha=u(),mn=e("pre"),ma=u(),D=e("p"),xp=t("Render your plot object in "),xs=e("code"),Tp=t("scrolly_graph"),Pp=t(`, and provide input updates
via each `),Ts=e("code"),$p=t("scrolly_section"),Lp=t("."),ba=u(),bn=e("pre"),_a=u(),Sn=e("p"),Ip=t("Render your plots in your server function."),va=u(),_n=e("pre"),ya=u(),A=e("p"),jp=t(`That\u2019s (most of) it for the plot section. You can play around with other
customizations too (for example, the alphas for my circles correspond to
an `),Ps=e("code"),Cp=t("ifelse"),Hp=t(" around "),$s=e("code"),Op=t("reveal"),Mp=t(`, so old circles are faded out compared to
new ones).`),wa=u(),vn=e("h3"),zn=e("a"),Dp=t("Create a series of text reveals"),ga=u(),J=e("p"),Ap=t("Next, we create text sections using "),Ls=e("code"),Rp=t("HTML"),Sp=t(` and some helper functions
which beautify them.`),Ea=u(),Nn=e("p"),zp=t(`First, we create the text boxes for each section following a similar
naming convention:`),xa=u(),yn=e("pre"),Ta=u(),K=e("p"),Np=t("Then, we create a function "),Is=e("code"),Fp=t("render_text"),Wp=t(" which simply parses that HTML, adds it into a div, and appends a class of \u2018text.\u2019"),Pa=u(),wn=e("pre"),$a=u(),$=e("p"),Up=t("For all 8 of the above "),js=e("code"),Bp=t("text"),Yp=t(`s, we\u2019ve created a switch function which
calls them depending on the number passed to `),Cs=e("code"),qp=t("render_text"),Gp=t(`. Then, we
apply paragraph format, put them in their own div, and apply the `),Hs=e("em"),Jp=t("text"),Kp=t(`
class in our CSS sheet.`),La=u(),Fn=e("p"),Qp=t("How does this work?"),Ia=u(),Wn=e("p"),Vp=t("Recall that above, in our ui section, we had the following:"),ja=u(),gn=e("pre"),Ca=u(),L=e("p"),Xp=t("Here, our "),Os=e("code"),Zp=t("scrolly_section"),no=t(`s take two inputs: our ID and our
corresponding text. Rather than write out lengthy text boxes in each
`),Ms=e("code"),so=t("scrolly_section"),ao=t(`, we can construct them in a single file and then knit
them all into the same format using `),Ds=e("code"),to=t("render_text"),po=t(`. This makes life a lot
easier.`),Ha=u(),g=e("p"),oo=t(`So, on each scroll (or observation), the app will update 1) the plot
object, by adding `),As=e("code"),eo=t("add"),co=t(" and updating according to "),Rs=e("code"),lo=t("reveal"),ro=t(`, and 2) the
text, by running `),Ss=e("code"),uo=t("render_text"),io=t(" which calls "),zs=e("code"),ko=t("text"),fo=t(` which beautifies our
HTML text.`),Oa=u(),En=e("h3"),Un=e("a"),ho=t("Final touches"),Ma=u(),R=e("p"),mo=t(`The rest of the app is built via
`),Ns=e("code"),bo=t("fluidPage"),_o=t(`, and organizing via rows and columns in your shiny app. Your
app should have a CSS style sheet (in the `),xn=e("a"),vo=t(`www
folder`),yo=t(`). You may also
include other plots (for my post, I have an introductory plot with a bit
more context), which you will have to separately create and render in
your server function.`),Da=u(),Bn=e("p"),wo=t("All in all, my UI code looks like this:"),Aa=u(),Tn=e("pre"),Ra=u(),Yn=e("p"),go=t("And the server looks like this:"),Sa=u(),Pn=e("pre"),za=u(),$n=e("h2"),qn=e("a"),Eo=t("The output"),Na=u(),S=e("p"),xo=t(`You can look at the code and all of its context on GitHub
`),Ln=e("a"),To=t("here"),Po=t(". Want to visit the live page? You can access it "),In=e("a"),$o=t("here"),Lo=t(", or embedded below!"),Fa=u(),j=e("iframe"),this.h()},l(n){d=c(n,"P",{});var o=l(d);m=p(o,`I\u2019ve always been interested in data visualization, and my most recent
sub-passion has been `),h=c(o,"EM",{});var Gn=l(h);v=p(Gn,"scrollytelling"),Gn.forEach(s),f=p(o,`. I\u2019ve seen numerous examples of
amazing scrolling articles, from sites such as `),_=c(o,"A",{href:!0,rel:!0});var jn=l(_);E=p(jn,`The
Pudding`),jn.forEach(s),Qa=p(o,", the "),sn=c(o,"A",{href:!0,rel:!0});var zo=l(sn);Va=p(zo,`New York
Times`),zo.forEach(s),Xa=p(o,`, and
`),an=c(o,"A",{href:!0,rel:!0});var No=l(an);Za=p(No,"FiveThirtyEight"),No.forEach(s),nt=p(o,"."),o.forEach(s),Fs=i(n),W=c(n,"P",{});var Ua=l(W);st=p(Ua,`Although most of these sites rely on the same high-powered visualization
tools (such as `),tn=c(Ua,"A",{href:!0,rel:!0});var Fo=l(tn);at=p(Fo,"D3.js"),Fo.forEach(s),tt=p(Ua,`) to create their stories, the
learning curve for those are a bit steep! Thankfully, I came across some examples of scrollytelling in my language
of choice, R.`),Ua.forEach(s),Ws=i(n),Cn=c(n,"P",{});var Wo=l(Cn);pt=p(Wo,"Today, I\u2019ll walk you through a tutorial of scrollytelling in R. It\u2019s a bit complicated, and the output isn\u2019t as powerful as a full-fledged D3 project, but its a rough sketch, and it works. Here\u2019s the output:"),Wo.forEach(s),Us=i(n),I=c(n,"IFRAME",{loading:!0,title:!0,src:!0,width:!0,height:!0});var xc=l(I);xc.forEach(s),Bs=i(n),pn=c(n,"H3",{id:!0});var Uo=l(pn);Hn=c(Uo,"A",{href:!0});var Bo=l(Hn);ot=p(Bo,"Load libraries"),Bo.forEach(s),Uo.forEach(s),Ys=i(n),On=c(n,"P",{});var Yo=l(On);et=p(Yo,"We begin by loading the libraries required for our project:"),Yo.forEach(s),qs=i(n),on=c(n,"PRE",{class:!0});var Tc=l(on);Tc.forEach(s),Gs=i(n),en=c(n,"H2",{id:!0});var qo=l(en);Mn=c(qo,"A",{href:!0});var Go=l(Mn);ct=p(Go,"Construct an updating plot object"),Go.forEach(s),qo.forEach(s),Js=i(n),x=c(n,"P",{});var Q=l(x);lt=p(Q,"Once the data ("),cn=c(Q,"A",{href:!0,rel:!0});var Jo=l(cn);rt=p(Jo,`which can be found
here`),Jo.forEach(s),ut=p(Q,`)
is already `),ln=c(Q,"A",{href:!0,rel:!0});var Ko=l(ln);it=p(Ko,`loaded and
cleaned`),Ko.forEach(s),kt=p(Q,`,
we construct a plot object that will update as the user scrolls. (`),rn=c(Q,"A",{href:!0,rel:!0});var Qo=l(rn);dt=p(Qo,`Other
R users`),Qo.forEach(s),ft=p(Q,` make multiple plots;
either way is fine.)`),Q.forEach(s),Ks=i(n),Ho(U.$$.fragment,n),Qs=i(n),B=c(n,"P",{});var Ba=l(B);ht=p(Ba,"But wait, what\u2019s that "),Ho(C.$$.fragment,Ba),_t=p(Ba,"?"),Ba.forEach(s),Vs=i(n),Y=c(n,"P",{});var Ya=l(Y);vt=p(Ya,"This may make "),ss=c(Ya,"EM",{});var Vo=l(ss);yt=p(Vo,"0 sense"),Vo.forEach(s),wt=p(Ya," right now, but here\u2019s why we have it."),Ya.forEach(s),Xs=i(n),T=c(n,"P",{});var V=l(T);gt=p(V,`The important part (and somewhat difficult thing to understand) about
this step is that your plot object has some `),as=c(V,"STRONG",{});var Xo=l(as);Et=p(Xo,`data which corresponds to
an updating variable`),Xo.forEach(s),xt=p(V,". For me, I added a variable called "),ts=c(V,"CODE",{});var Zo=l(ts);Tt=p(Zo,"reveal"),Zo.forEach(s),Pt=p(V,` for
each step of the visualization. For me, this meant having `),ps=c(V,"CODE",{});var ne=l(ps);$t=p(ne,"reveal"),ne.forEach(s),Lt=p(V,`
correspond to a typical level of education for a given job.`),V.forEach(s),Zs=i(n),un=c(n,"PRE",{class:!0});var Pc=l(un);Pc.forEach(s),na=i(n),Dn=c(n,"P",{});var se=l(Dn);It=p(se,"So, when my plot object has a line of code which says:"),se.forEach(s),sa=i(n),kn=c(n,"PRE",{class:!0});var $c=l(kn);$c.forEach(s),aa=i(n),H=c(n,"P",{});var Jn=l(H);jt=p(Jn,`That can be read as \u201CUpdate the plot object to include all data points
`),os=c(Jn,"STRONG",{});var ae=l(os);Ct=p(ae,"up until the current point"),ae.forEach(s),Ht=p(Jn," encoded in "),es=c(Jn,"CODE",{});var te=l(es);Ot=p(te,"reveal"),te.forEach(s),Mt=p(Jn,".\u201D"),Jn.forEach(s),ta=i(n),P=c(n,"P",{});var X=l(P);Dt=p(X,"But, it also depends on what level of "),cs=c(X,"CODE",{});var pe=l(cs);At=p(pe,"add"),pe.forEach(s),Rt=p(X," we are at; if "),ls=c(X,"CODE",{});var oe=l(ls);St=p(oe,"add"),oe.forEach(s),zt=p(X,` == 8
(the last data point, e.g.\xA0the concluding plot), then we want to show
`),rs=c(X,"EM",{});var ee=l(rs);Nt=p(ee,"all data points"),ee.forEach(s),Ft=p(X,"."),X.forEach(s),pa=i(n),q=c(n,"P",{});var qa=l(q);Wt=p(qa,"\u201COkay, okay. But what is "),us=c(qa,"CODE",{});var ce=l(us);Ut=p(ce,"add"),ce.forEach(s),Bt=p(qa,"???\u201D"),qa.forEach(s),oa=i(n),O=c(n,"P",{});var Kn=l(O);Yt=p(Kn,"Good question. "),is=c(Kn,"CODE",{});var le=l(is);qt=p(le,"add"),le.forEach(s),Gt=p(Kn,` is the variable I constructed to correspond to the
user\u2019s input (in this case, the scroll!). When we put it all together,
we\u2019re going to wrap our plot object into a rendering function `),ks=c(Kn,"EM",{});var re=l(ks);Jt=p(re,"inside"),re.forEach(s),Kt=p(Kn,`
the server function. Confusing? It looks like this:`),Kn.forEach(s),ea=i(n),dn=c(n,"PRE",{class:!0});var Lc=l(dn);Lc.forEach(s),ca=i(n),An=c(n,"P",{});var ue=l(An);Qt=p(ue,`What\u2019s happening here? Within the server function, we\u2019re doing two
things:`),ue.forEach(s),la=i(n),y=c(n,"P",{});var z=l(y);Vt=p(z,"First, we\u2019re creating the plot object. Because we have the command "),ds=c(z,"CODE",{});var ie=l(ds);Xt=p(ie,"add <- input$scr"),ie.forEach(s),Zt=i(z),fs=c(z,"STRONG",{});var ke=l(fs);np=p(ke,"inside"),ke.forEach(s),sp=p(z," the function "),hs=c(z,"CODE",{});var de=l(hs);ap=p(de,"renderPlotly"),de.forEach(s),tp=p(z,", our plot object will be dynamically updated along with "),ms=c(z,"CODE",{});var fe=l(ms);pp=p(fe,"input$scr"),fe.forEach(s),op=p(z,"."),z.forEach(s),ra=i(n),w=c(n,"P",{});var N=l(w);ep=p(N,"This makes more sense when you connect it to the UI. In our "),bs=c(N,"CODE",{});var he=l(bs);cp=p(he,"ui"),he.forEach(s),lp=p(N,` function,
we include a `),_s=c(N,"CODE",{});var me=l(_s);rp=p(me,"scrolly_container"),me.forEach(s),up=p(N,` from the scrollytell package. Within
that, we make our `),vs=c(N,"CODE",{});var be=l(vs);ip=p(be,"outputId"),be.forEach(s),kp=p(N,` correspond to the name of our updating
input (in this case, `),ys=c(N,"EM",{});var _e=l(ys);dp=p(_e,"scr"),_e.forEach(s),fp=p(N,")."),N.forEach(s),ua=i(n),fn=c(n,"PRE",{class:!0});var Ic=l(fn);Ic.forEach(s),ia=i(n),Rn=c(n,"P",{});var ve=l(Rn);hp=p(ve,"So, the simplest way to think about this so far is:"),ve.forEach(s),ka=i(n),G=c(n,"P",{});var Ga=l(G);mp=p(Ga,"Construct a plot object with some updating variable (in my case, "),ws=c(Ga,"CODE",{});var ye=l(ws);bp=p(ye,"reveal"),ye.forEach(s),_p=p(Ga,")."),Ga.forEach(s),da=i(n),hn=c(n,"PRE",{class:!0});var jc=l(hn);jc.forEach(s),fa=i(n),M=c(n,"P",{});var Qn=l(M);vp=p(Qn,"Make that variable correspond with some input variable (in my case "),gs=c(Qn,"CODE",{});var we=l(gs);yp=p(we,"add"),we.forEach(s),wp=p(Qn,", which is created from the "),Es=c(Qn,"CODE",{});var ge=l(Es);gp=p(ge,"input$scr"),ge.forEach(s),Ep=p(Qn,")."),Qn.forEach(s),ha=i(n),mn=c(n,"PRE",{class:!0});var Cc=l(mn);Cc.forEach(s),ma=i(n),D=c(n,"P",{});var Vn=l(D);xp=p(Vn,"Render your plot object in "),xs=c(Vn,"CODE",{});var Ee=l(xs);Tp=p(Ee,"scrolly_graph"),Ee.forEach(s),Pp=p(Vn,`, and provide input updates
via each `),Ts=c(Vn,"CODE",{});var xe=l(Ts);$p=p(xe,"scrolly_section"),xe.forEach(s),Lp=p(Vn,"."),Vn.forEach(s),ba=i(n),bn=c(n,"PRE",{class:!0});var Hc=l(bn);Hc.forEach(s),_a=i(n),Sn=c(n,"P",{});var Te=l(Sn);Ip=p(Te,"Render your plots in your server function."),Te.forEach(s),va=i(n),_n=c(n,"PRE",{class:!0});var Oc=l(_n);Oc.forEach(s),ya=i(n),A=c(n,"P",{});var Xn=l(A);jp=p(Xn,`That\u2019s (most of) it for the plot section. You can play around with other
customizations too (for example, the alphas for my circles correspond to
an `),Ps=c(Xn,"CODE",{});var Pe=l(Ps);Cp=p(Pe,"ifelse"),Pe.forEach(s),Hp=p(Xn," around "),$s=c(Xn,"CODE",{});var $e=l($s);Op=p($e,"reveal"),$e.forEach(s),Mp=p(Xn,`, so old circles are faded out compared to
new ones).`),Xn.forEach(s),wa=i(n),vn=c(n,"H3",{id:!0});var Le=l(vn);zn=c(Le,"A",{href:!0});var Ie=l(zn);Dp=p(Ie,"Create a series of text reveals"),Ie.forEach(s),Le.forEach(s),ga=i(n),J=c(n,"P",{});var Ja=l(J);Ap=p(Ja,"Next, we create text sections using "),Ls=c(Ja,"CODE",{});var je=l(Ls);Rp=p(je,"HTML"),je.forEach(s),Sp=p(Ja,` and some helper functions
which beautify them.`),Ja.forEach(s),Ea=i(n),Nn=c(n,"P",{});var Ce=l(Nn);zp=p(Ce,`First, we create the text boxes for each section following a similar
naming convention:`),Ce.forEach(s),xa=i(n),yn=c(n,"PRE",{class:!0});var Mc=l(yn);Mc.forEach(s),Ta=i(n),K=c(n,"P",{});var Ka=l(K);Np=p(Ka,"Then, we create a function "),Is=c(Ka,"CODE",{});var He=l(Is);Fp=p(He,"render_text"),He.forEach(s),Wp=p(Ka," which simply parses that HTML, adds it into a div, and appends a class of \u2018text.\u2019"),Ka.forEach(s),Pa=i(n),wn=c(n,"PRE",{class:!0});var Dc=l(wn);Dc.forEach(s),$a=i(n),$=c(n,"P",{});var Z=l($);Up=p(Z,"For all 8 of the above "),js=c(Z,"CODE",{});var Oe=l(js);Bp=p(Oe,"text"),Oe.forEach(s),Yp=p(Z,`s, we\u2019ve created a switch function which
calls them depending on the number passed to `),Cs=c(Z,"CODE",{});var Me=l(Cs);qp=p(Me,"render_text"),Me.forEach(s),Gp=p(Z,`. Then, we
apply paragraph format, put them in their own div, and apply the `),Hs=c(Z,"EM",{});var De=l(Hs);Jp=p(De,"text"),De.forEach(s),Kp=p(Z,`
class in our CSS sheet.`),Z.forEach(s),La=i(n),Fn=c(n,"P",{});var Ae=l(Fn);Qp=p(Ae,"How does this work?"),Ae.forEach(s),Ia=i(n),Wn=c(n,"P",{});var Re=l(Wn);Vp=p(Re,"Recall that above, in our ui section, we had the following:"),Re.forEach(s),ja=i(n),gn=c(n,"PRE",{class:!0});var Ac=l(gn);Ac.forEach(s),Ca=i(n),L=c(n,"P",{});var nn=l(L);Xp=p(nn,"Here, our "),Os=c(nn,"CODE",{});var Se=l(Os);Zp=p(Se,"scrolly_section"),Se.forEach(s),no=p(nn,`s take two inputs: our ID and our
corresponding text. Rather than write out lengthy text boxes in each
`),Ms=c(nn,"CODE",{});var ze=l(Ms);so=p(ze,"scrolly_section"),ze.forEach(s),ao=p(nn,`, we can construct them in a single file and then knit
them all into the same format using `),Ds=c(nn,"CODE",{});var Ne=l(Ds);to=p(Ne,"render_text"),Ne.forEach(s),po=p(nn,`. This makes life a lot
easier.`),nn.forEach(s),Ha=i(n),g=c(n,"P",{});var F=l(g);oo=p(F,`So, on each scroll (or observation), the app will update 1) the plot
object, by adding `),As=c(F,"CODE",{});var Fe=l(As);eo=p(Fe,"add"),Fe.forEach(s),co=p(F," and updating according to "),Rs=c(F,"CODE",{});var We=l(Rs);lo=p(We,"reveal"),We.forEach(s),ro=p(F,`, and 2) the
text, by running `),Ss=c(F,"CODE",{});var Ue=l(Ss);uo=p(Ue,"render_text"),Ue.forEach(s),io=p(F," which calls "),zs=c(F,"CODE",{});var Be=l(zs);ko=p(Be,"text"),Be.forEach(s),fo=p(F,` which beautifies our
HTML text.`),F.forEach(s),Oa=i(n),En=c(n,"H3",{id:!0});var Ye=l(En);Un=c(Ye,"A",{href:!0});var qe=l(Un);ho=p(qe,"Final touches"),qe.forEach(s),Ye.forEach(s),Ma=i(n),R=c(n,"P",{});var Zn=l(R);mo=p(Zn,`The rest of the app is built via
`),Ns=c(Zn,"CODE",{});var Ge=l(Ns);bo=p(Ge,"fluidPage"),Ge.forEach(s),_o=p(Zn,`, and organizing via rows and columns in your shiny app. Your
app should have a CSS style sheet (in the `),xn=c(Zn,"A",{href:!0,rel:!0});var Je=l(xn);vo=p(Je,`www
folder`),Je.forEach(s),yo=p(Zn,`). You may also
include other plots (for my post, I have an introductory plot with a bit
more context), which you will have to separately create and render in
your server function.`),Zn.forEach(s),Da=i(n),Bn=c(n,"P",{});var Ke=l(Bn);wo=p(Ke,"All in all, my UI code looks like this:"),Ke.forEach(s),Aa=i(n),Tn=c(n,"PRE",{class:!0});var Rc=l(Tn);Rc.forEach(s),Ra=i(n),Yn=c(n,"P",{});var Qe=l(Yn);go=p(Qe,"And the server looks like this:"),Qe.forEach(s),Sa=i(n),Pn=c(n,"PRE",{class:!0});var Sc=l(Pn);Sc.forEach(s),za=i(n),$n=c(n,"H2",{id:!0});var Ve=l($n);qn=c(Ve,"A",{href:!0});var Xe=l(qn);Eo=p(Xe,"The output"),Xe.forEach(s),Ve.forEach(s),Na=i(n),S=c(n,"P",{});var ns=l(S);xo=p(ns,`You can look at the code and all of its context on GitHub
`),Ln=c(ns,"A",{href:!0,rel:!0});var Ze=l(Ln);To=p(Ze,"here"),Ze.forEach(s),Po=p(ns,". Want to visit the live page? You can access it "),In=c(ns,"A",{href:!0,rel:!0});var nc=l(In);$o=p(nc,"here"),nc.forEach(s),Lo=p(ns,", or embedded below!"),ns.forEach(s),Fa=i(n),j=c(n,"IFRAME",{loading:!0,title:!0,src:!0,width:!0,height:!0}),l(j).forEach(s),this.h()},h(){k(_,"href","https://pudding.cool/"),k(_,"rel","nofollow"),k(sn,"href","https://www.nytimes.com/"),k(sn,"rel","nofollow"),k(an,"href","https://fivethirtyeight.com/"),k(an,"rel","nofollow"),k(tn,"href","https://d3js.org/"),k(tn,"rel","nofollow"),k(I,"loading","lazy"),k(I,"title","Automation and Its Impact on Jobs"),oc(I.src,Ro="https://connorrothschild.shinyapps.io/automation/")||k(I,"src",Ro),k(I,"width","100%"),k(I,"height","800px"),k(Hn,"href","#load-libraries"),k(pn,"id","load-libraries"),k(on,"class","language-r"),k(Mn,"href","#construct-an-updating-plot-object"),k(en,"id","construct-an-updating-plot-object"),k(cn,"href","https://github.com/connorrothschild/shiny-scrollytell/tree/master/data"),k(cn,"rel","nofollow"),k(ln,"href","https://github.com/connorrothschild/shiny-scrollytell/blob/master/scripts/merge_data.R"),k(ln,"rel","nofollow"),k(rn,"href","https://github.com/scottyd22/dream_team"),k(rn,"rel","nofollow"),k(un,"class","language-r"),k(kn,"class","language-r"),k(dn,"class","language-r"),k(fn,"class","language-r"),k(hn,"class","language-r"),k(mn,"class","language-r"),k(bn,"class","language-r"),k(_n,"class","language-r"),k(zn,"href","#create-a-series-of-text-reveals"),k(vn,"id","create-a-series-of-text-reveals"),k(yn,"class","language-r"),k(wn,"class","language-r"),k(gn,"class","language-r"),k(Un,"href","#final-touches"),k(En,"id","final-touches"),k(xn,"href","https://shiny.rstudio.com/articles/css.html"),k(xn,"rel","nofollow"),k(Tn,"class","language-r"),k(Pn,"class","language-r"),k(qn,"href","#the-output"),k($n,"id","the-output"),k(Ln,"href","https://github.com/connorrothschild/shiny-scrollytell"),k(Ln,"rel","nofollow"),k(In,"href","https://connorrothschild.shinyapps.io/automation/"),k(In,"rel","nofollow"),k(j,"loading","lazy"),k(j,"title","Automation and Its Impact on Jobs"),oc(j.src,So="https://connorrothschild.shinyapps.io/automation/")||k(j,"src",So),k(j,"width","100%"),k(j,"height","800px")},m(n,o){r(n,d,o),a(d,m),a(d,h),a(h,v),a(d,f),a(d,_),a(_,E),a(d,Qa),a(d,sn),a(sn,Va),a(d,Xa),a(d,an),a(an,Za),a(d,nt),r(n,Fs,o),r(n,W,o),a(W,st),a(W,tn),a(tn,at),a(W,tt),r(n,Ws,o),r(n,Cn,o),a(Cn,pt),r(n,Us,o),r(n,I,o),r(n,Bs,o),r(n,pn,o),a(pn,Hn),a(Hn,ot),r(n,Ys,o),r(n,On,o),a(On,et),r(n,qs,o),r(n,on,o),on.innerHTML=lc,r(n,Gs,o),r(n,en,o),a(en,Mn),a(Mn,ct),r(n,Js,o),r(n,x,o),a(x,lt),a(x,cn),a(cn,rt),a(x,ut),a(x,ln),a(ln,it),a(x,kt),a(x,rn),a(rn,dt),a(x,ft),r(n,Ks,o),Oo(U,n,o),r(n,Qs,o),r(n,B,o),a(B,ht),Oo(C,B,null),a(B,_t),r(n,Vs,o),r(n,Y,o),a(Y,vt),a(Y,ss),a(ss,yt),a(Y,wt),r(n,Xs,o),r(n,T,o),a(T,gt),a(T,as),a(as,Et),a(T,xt),a(T,ts),a(ts,Tt),a(T,Pt),a(T,ps),a(ps,$t),a(T,Lt),r(n,Zs,o),r(n,un,o),un.innerHTML=rc,r(n,na,o),r(n,Dn,o),a(Dn,It),r(n,sa,o),r(n,kn,o),kn.innerHTML=uc,r(n,aa,o),r(n,H,o),a(H,jt),a(H,os),a(os,Ct),a(H,Ht),a(H,es),a(es,Ot),a(H,Mt),r(n,ta,o),r(n,P,o),a(P,Dt),a(P,cs),a(cs,At),a(P,Rt),a(P,ls),a(ls,St),a(P,zt),a(P,rs),a(rs,Nt),a(P,Ft),r(n,pa,o),r(n,q,o),a(q,Wt),a(q,us),a(us,Ut),a(q,Bt),r(n,oa,o),r(n,O,o),a(O,Yt),a(O,is),a(is,qt),a(O,Gt),a(O,ks),a(ks,Jt),a(O,Kt),r(n,ea,o),r(n,dn,o),dn.innerHTML=ic,r(n,ca,o),r(n,An,o),a(An,Qt),r(n,la,o),r(n,y,o),a(y,Vt),a(y,ds),a(ds,Xt),a(y,Zt),a(y,fs),a(fs,np),a(y,sp),a(y,hs),a(hs,ap),a(y,tp),a(y,ms),a(ms,pp),a(y,op),r(n,ra,o),r(n,w,o),a(w,ep),a(w,bs),a(bs,cp),a(w,lp),a(w,_s),a(_s,rp),a(w,up),a(w,vs),a(vs,ip),a(w,kp),a(w,ys),a(ys,dp),a(w,fp),r(n,ua,o),r(n,fn,o),fn.innerHTML=kc,r(n,ia,o),r(n,Rn,o),a(Rn,hp),r(n,ka,o),r(n,G,o),a(G,mp),a(G,ws),a(ws,bp),a(G,_p),r(n,da,o),r(n,hn,o),hn.innerHTML=dc,r(n,fa,o),r(n,M,o),a(M,vp),a(M,gs),a(gs,yp),a(M,wp),a(M,Es),a(Es,gp),a(M,Ep),r(n,ha,o),r(n,mn,o),mn.innerHTML=fc,r(n,ma,o),r(n,D,o),a(D,xp),a(D,xs),a(xs,Tp),a(D,Pp),a(D,Ts),a(Ts,$p),a(D,Lp),r(n,ba,o),r(n,bn,o),bn.innerHTML=hc,r(n,_a,o),r(n,Sn,o),a(Sn,Ip),r(n,va,o),r(n,_n,o),_n.innerHTML=mc,r(n,ya,o),r(n,A,o),a(A,jp),a(A,Ps),a(Ps,Cp),a(A,Hp),a(A,$s),a($s,Op),a(A,Mp),r(n,wa,o),r(n,vn,o),a(vn,zn),a(zn,Dp),r(n,ga,o),r(n,J,o),a(J,Ap),a(J,Ls),a(Ls,Rp),a(J,Sp),r(n,Ea,o),r(n,Nn,o),a(Nn,zp),r(n,xa,o),r(n,yn,o),yn.innerHTML=bc,r(n,Ta,o),r(n,K,o),a(K,Np),a(K,Is),a(Is,Fp),a(K,Wp),r(n,Pa,o),r(n,wn,o),wn.innerHTML=_c,r(n,$a,o),r(n,$,o),a($,Up),a($,js),a(js,Bp),a($,Yp),a($,Cs),a(Cs,qp),a($,Gp),a($,Hs),a(Hs,Jp),a($,Kp),r(n,La,o),r(n,Fn,o),a(Fn,Qp),r(n,Ia,o),r(n,Wn,o),a(Wn,Vp),r(n,ja,o),r(n,gn,o),gn.innerHTML=vc,r(n,Ca,o),r(n,L,o),a(L,Xp),a(L,Os),a(Os,Zp),a(L,no),a(L,Ms),a(Ms,so),a(L,ao),a(L,Ds),a(Ds,to),a(L,po),r(n,Ha,o),r(n,g,o),a(g,oo),a(g,As),a(As,eo),a(g,co),a(g,Rs),a(Rs,lo),a(g,ro),a(g,Ss),a(Ss,uo),a(g,io),a(g,zs),a(zs,ko),a(g,fo),r(n,Oa,o),r(n,En,o),a(En,Un),a(Un,ho),r(n,Ma,o),r(n,R,o),a(R,mo),a(R,Ns),a(Ns,bo),a(R,_o),a(R,xn),a(xn,vo),a(R,yo),r(n,Da,o),r(n,Bn,o),a(Bn,wo),r(n,Aa,o),r(n,Tn,o),Tn.innerHTML=yc,r(n,Ra,o),r(n,Yn,o),a(Yn,go),r(n,Sa,o),r(n,Pn,o),Pn.innerHTML=wc,r(n,za,o),r(n,$n,o),a($n,qn),a(qn,Eo),r(n,Na,o),r(n,S,o),a(S,xo),a(S,Ln),a(Ln,To),a(S,Po),a(S,In),a(In,$o),a(S,Lo),r(n,Fa,o),r(n,j,o),Wa=!0},p(n,o){const Gn={};o&3&&(Gn.highlightedLines=n[0]=="create-plot"?n[1]:null),o&32&&(Gn.$$scope={dirty:o,ctx:n}),U.$set(Gn);const jn={};o&32&&(jn.$$scope={dirty:o,ctx:n}),!mt&&o&1&&(mt=!0,jn.hoveredId=n[0],ec(()=>mt=!1)),!bt&&o&2&&(bt=!0,jn.highlightedLines=n[1],ec(()=>bt=!1)),C.$set(jn)},i(n){Wa||(Mo(U.$$.fragment,n),Mo(C.$$.fragment,n),Wa=!0)},o(n){Do(U.$$.fragment,n),Do(C.$$.fragment,n),Wa=!1},d(n){n&&s(d),n&&s(Fs),n&&s(W),n&&s(Ws),n&&s(Cn),n&&s(Us),n&&s(I),n&&s(Bs),n&&s(pn),n&&s(Ys),n&&s(On),n&&s(qs),n&&s(on),n&&s(Gs),n&&s(en),n&&s(Js),n&&s(x),n&&s(Ks),Ao(U,n),n&&s(Qs),n&&s(B),Ao(C),n&&s(Vs),n&&s(Y),n&&s(Xs),n&&s(T),n&&s(Zs),n&&s(un),n&&s(na),n&&s(Dn),n&&s(sa),n&&s(kn),n&&s(aa),n&&s(H),n&&s(ta),n&&s(P),n&&s(pa),n&&s(q),n&&s(oa),n&&s(O),n&&s(ea),n&&s(dn),n&&s(ca),n&&s(An),n&&s(la),n&&s(y),n&&s(ra),n&&s(w),n&&s(ua),n&&s(fn),n&&s(ia),n&&s(Rn),n&&s(ka),n&&s(G),n&&s(da),n&&s(hn),n&&s(fa),n&&s(M),n&&s(ha),n&&s(mn),n&&s(ma),n&&s(D),n&&s(ba),n&&s(bn),n&&s(_a),n&&s(Sn),n&&s(va),n&&s(_n),n&&s(ya),n&&s(A),n&&s(wa),n&&s(vn),n&&s(ga),n&&s(J),n&&s(Ea),n&&s(Nn),n&&s(xa),n&&s(yn),n&&s(Ta),n&&s(K),n&&s(Pa),n&&s(wn),n&&s($a),n&&s($),n&&s(La),n&&s(Fn),n&&s(Ia),n&&s(Wn),n&&s(ja),n&&s(gn),n&&s(Ca),n&&s(L),n&&s(Ha),n&&s(g),n&&s(Oa),n&&s(En),n&&s(Ma),n&&s(R),n&&s(Da),n&&s(Bn),n&&s(Aa),n&&s(Tn),n&&s(Ra),n&&s(Yn),n&&s(Sa),n&&s(Pn),n&&s(za),n&&s($n),n&&s(Na),n&&s(S),n&&s(Fa),n&&s(j)}}}function Qc(b){let d,m;const h=[b[2],cc];let v={$$slots:{default:[Kc]},$$scope:{ctx:b}};for(let f=0;f<h.length;f+=1)v=jo(v,h[f]);return d=new Bc({props:v}),{c(){Co(d.$$.fragment)},l(f){Ho(d.$$.fragment,f)},m(f,_){Oo(d,f,_),m=!0},p(f,[_]){const E=_&4?Wc(h,[_&4&&sc(f[2]),_&0&&sc(cc)]):{};_&35&&(E.$$scope={dirty:_,ctx:f}),d.$set(E)},i(f){m||(Mo(d.$$.fragment,f),m=!0)},o(f){Do(d.$$.fragment,f),m=!1},d(f){Ao(d,f)}}}const cc={layout:"blog",title:"How to Scrollytell in R",description:"Because its easier than doing it in D3",image:"automation-scrollytell/header.png",date:"2019-10-02",tags:["r","tutorial"]};function Vc(b,d,m){let h,v;function f(E){h=E,m(0,h)}function _(E){v=E,m(1,v)}return b.$$set=E=>{m(2,d=jo(jo({},d),ac(E)))},d=ac(d),[h,v,d,f,_]}class rl extends zc{constructor(d){super();Nc(this,d,Vc,Qc,Fc,{})}}export{rl as default,cc as metadata};
