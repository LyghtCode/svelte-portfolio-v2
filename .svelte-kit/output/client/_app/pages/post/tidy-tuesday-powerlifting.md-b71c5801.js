import{S as Ol,i as Ml,s as Sl,B as Go,j as xs,m as Ds,o as Is,p as Bl,q as dl,x as $s,u as Fs,v as Ps,ak as hl,e as o,t,k as i,c as p,a as l,g as e,d as n,n as u,b as k,f as r,L as s,D as Gl}from"../../chunks/vendor-dfb9df3e.js";import ql from"./layout.svelte-b65b887a.js";import{I as an}from"../../chunks/Image-4d50732f.js";/* empty css                                                      */import"../../chunks/BackTo-f09ad798.js";import"../../chunks/global-164a8ca5.js";import"../../chunks/utils-419e8671.js";import"../../chunks/CornerTitle-3a53cda1.js";import"../../chunks/store-b0ba4c19.js";/* empty css                                                       */function Nl(Ta){let f,F,P,d,m,g,xa,Qn,Rs,Xn,Zn,Ls,at,st,sn,Da,nt,nn,Q,tn,X,Ia,tt,en,R,et,Z,ot,pt,As,lt,ct,on,aa,gl=`<code class="language-r">library<span class="token punctuation">(</span>ggplot2<span class="token punctuation">)</span>
library<span class="token punctuation">(</span>tidyverse<span class="token punctuation">)</span>
library<span class="token punctuation">(</span>ggtext<span class="token punctuation">)</span>
library<span class="token punctuation">(</span>gifski<span class="token punctuation">)</span>
library<span class="token punctuation">(</span>gganimate<span class="token punctuation">)</span>

theme_set<span class="token punctuation">(</span>theme_minimal<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code>`,pn,sa,$a,rt,ln,Fa,it,cn,Pa,ut,rn,na,bl=`<code class="language-r">ipf_lifts <span class="token operator">&lt;-</span> readr<span class="token operator">::</span>read_csv<span class="token punctuation">(</span><span class="token string">"data/ipf_lifts.csv"</span><span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  mutate<span class="token punctuation">(</span>year <span class="token operator">=</span> lubridate<span class="token operator">::</span>year<span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">)</span>

ipf_lifts_reshape <span class="token operator">&lt;-</span> ipf_lifts <span class="token percent-operator operator">%>%</span>
  tidyr<span class="token operator">::</span>pivot_longer<span class="token punctuation">(</span>cols <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token string">"best3squat_kg"</span><span class="token punctuation">,</span> <span class="token string">"best3bench_kg"</span><span class="token punctuation">,</span> <span class="token string">"best3deadlift_kg"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> names_to <span class="token operator">=</span> <span class="token string">"lift"</span><span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  select<span class="token punctuation">(</span>name<span class="token punctuation">,</span> sex<span class="token punctuation">,</span> year<span class="token punctuation">,</span> lift<span class="token punctuation">,</span> value<span class="token punctuation">)</span></code>`,un,N,kt,Cs,ft,mt,kn,ta,vl=`<code class="language-r">ipf_lifts_maxes <span class="token operator">&lt;-</span> ipf_lifts_reshape <span class="token percent-operator operator">%>%</span>
  group_by<span class="token punctuation">(</span>year<span class="token punctuation">,</span> sex<span class="token punctuation">,</span> lift<span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  top_n<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  ungroup <span class="token percent-operator operator">%>%</span>
  distinct<span class="token punctuation">(</span>year<span class="token punctuation">,</span> lift<span class="token punctuation">,</span> value<span class="token punctuation">,</span> .keep_all <span class="token operator">=</span> <span class="token boolean">TRUE</span><span class="token punctuation">)</span></code>`,fn,L,dt,Hs,ht,_t,ea,gt,bt,mn,W,vt,zs,Et,wt,dn,oa,El=`<code class="language-r">max_pivot <span class="token operator">&lt;-</span> ipf_lifts_maxes <span class="token percent-operator operator">%>%</span>
  spread<span class="token punctuation">(</span>sex<span class="token punctuation">,</span> value<span class="token punctuation">)</span></code>`,hn,Ra,yt,_n,pa,wl=`<code class="language-r">male_lifts <span class="token operator">&lt;-</span> max_pivot <span class="token percent-operator operator">%>%</span>
  select<span class="token punctuation">(</span><span class="token operator">-</span>name<span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  filter<span class="token punctuation">(</span><span class="token operator">!</span>is.na<span class="token punctuation">(</span>M<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  group_by<span class="token punctuation">(</span>year<span class="token punctuation">,</span> lift<span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  summarise<span class="token punctuation">(</span>male <span class="token operator">=</span> mean<span class="token punctuation">(</span>M<span class="token punctuation">)</span><span class="token punctuation">)</span>

female_lifts <span class="token operator">&lt;-</span> max_pivot <span class="token percent-operator operator">%>%</span>
  select<span class="token punctuation">(</span><span class="token operator">-</span>name<span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  filter<span class="token punctuation">(</span><span class="token operator">!</span>is.na<span class="token punctuation">(</span>F<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  group_by<span class="token punctuation">(</span>year<span class="token punctuation">,</span> lift<span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  summarise<span class="token punctuation">(</span>female <span class="token operator">=</span> mean<span class="token punctuation">(</span>F<span class="token punctuation">)</span><span class="token punctuation">)</span></code>`,gn,La,Tt,bn,la,yl=`<code class="language-r">max_lifts <span class="token operator">&lt;-</span> merge<span class="token punctuation">(</span>male_lifts<span class="token punctuation">,</span> female_lifts<span class="token punctuation">)</span>

max_lifts_final <span class="token operator">&lt;-</span> max_lifts <span class="token percent-operator operator">%>%</span>
  group_by<span class="token punctuation">(</span>year<span class="token punctuation">,</span> lift<span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  mutate<span class="token punctuation">(</span>diff <span class="token operator">=</span> male <span class="token operator">-</span> female<span class="token punctuation">)</span></code>`,vn,Aa,xt,En,ca,ra,js,b,Ca,Dt,It,Ha,$t,Ft,za,Pt,Rt,ja,Lt,At,Oa,Ct,Ht,_,v,Ma,zt,jt,Sa,Ot,Mt,Ba,St,Bt,Ga,Gt,qt,qa,Nt,Wt,E,Na,Yt,Ut,Wa,Vt,Jt,Ya,Kt,Qt,Ua,Xt,Zt,Va,ae,se,w,Ja,ne,te,Ka,ee,oe,Qa,pe,le,Xa,ce,re,Za,ie,ue,y,as,ke,fe,ss,me,de,ns,he,_e,ts,ge,be,es,ve,Ee,T,os,we,ye,ps,Te,xe,ls,De,Ie,cs,$e,Fe,rs,Pe,Re,x,is,Le,Ae,us,Ce,He,ks,ze,je,fs,Oe,Me,ms,Se,wn,ia,ds,Be,yn,hs,Ge,Tn,A,qe,Os,Ne,We,ua,Ye,Ue,xn,Y,Ve,Ms,Je,Ke,Dn,ka,Tl=`<code class="language-r">max_lifts_final <span class="token percent-operator operator">%>%</span>
  filter<span class="token punctuation">(</span>year <span class="token operator">==</span> <span class="token number">2019</span><span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  ggplot<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  ggalt<span class="token operator">::</span>geom_dumbbell<span class="token punctuation">(</span>aes<span class="token punctuation">(</span>y <span class="token operator">=</span> lift<span class="token punctuation">,</span>
                    x <span class="token operator">=</span> female<span class="token punctuation">,</span> xend <span class="token operator">=</span> male<span class="token punctuation">)</span><span class="token punctuation">,</span>
                colour <span class="token operator">=</span> <span class="token string">"grey"</span><span class="token punctuation">,</span> size <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">,</span>
                colour_x <span class="token operator">=</span> <span class="token string">"#D6604C"</span><span class="token punctuation">,</span> colour_xend <span class="token operator">=</span> <span class="token string">"#395B74"</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  labs<span class="token punctuation">(</span>y <span class="token operator">=</span> element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
       x <span class="token operator">=</span> <span class="token string">"Top Lift Recorded (kg)"</span><span class="token punctuation">,</span>
       title <span class="token operator">=</span>  <span class="token string">"How &lt;span style='color:#D6604C'>Women&lt;/span> and &lt;span style='color:#395B74'>Men&lt;/span> Differ in Top Lifts"</span><span class="token punctuation">,</span>
                       subtitle <span class="token operator">=</span> <span class="token string">"In 2019"</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  theme<span class="token punctuation">(</span>plot.title <span class="token operator">=</span> element_markdown<span class="token punctuation">(</span>lineheight <span class="token operator">=</span> <span class="token number">1.1</span><span class="token punctuation">,</span> size <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        plot.subtitle <span class="token operator">=</span> element_text<span class="token punctuation">(</span>size <span class="token operator">=</span> <span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  scale_y_discrete<span class="token punctuation">(</span>labels <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token string">"Bench"</span><span class="token punctuation">,</span> <span class="token string">"Deadlift"</span><span class="token punctuation">,</span> <span class="token string">"Squat"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  geom_text<span class="token punctuation">(</span>aes<span class="token punctuation">(</span>x <span class="token operator">=</span> female<span class="token punctuation">,</span> y <span class="token operator">=</span> lift<span class="token punctuation">,</span> label <span class="token operator">=</span> paste<span class="token punctuation">(</span>female<span class="token punctuation">,</span> <span class="token string">"kg"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            color <span class="token operator">=</span> <span class="token string">"#D6604C"</span><span class="token punctuation">,</span> size <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">,</span> vjust <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  geom_text<span class="token punctuation">(</span>aes<span class="token punctuation">(</span>x <span class="token operator">=</span> male<span class="token punctuation">,</span> y <span class="token operator">=</span> lift<span class="token punctuation">,</span> label <span class="token operator">=</span> paste<span class="token punctuation">(</span>male<span class="token punctuation">,</span> <span class="token string">"kg"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            color <span class="token operator">=</span> <span class="token string">"#395B74"</span><span class="token punctuation">,</span> size <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">,</span> vjust <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  geom_rect<span class="token punctuation">(</span>aes<span class="token punctuation">(</span>xmin<span class="token operator">=</span><span class="token number">430</span><span class="token punctuation">,</span> xmax<span class="token operator">=</span><span class="token number">470</span><span class="token punctuation">,</span> ymin<span class="token operator">=</span><span class="token operator">-</span><span class="token number">Inf</span><span class="token punctuation">,</span> ymax<span class="token operator">=</span><span class="token number">Inf</span><span class="token punctuation">)</span><span class="token punctuation">,</span> fill<span class="token operator">=</span><span class="token string">"grey80"</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  geom_text<span class="token punctuation">(</span>aes<span class="token punctuation">(</span>label<span class="token operator">=</span>diff<span class="token punctuation">,</span> y<span class="token operator">=</span>lift<span class="token punctuation">,</span> x<span class="token operator">=</span><span class="token number">450</span><span class="token punctuation">)</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  geom_text<span class="token punctuation">(</span>aes<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token number">450</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">"Difference"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            color<span class="token operator">=</span><span class="token string">"grey20"</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">,</span> vjust<span class="token operator">=</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">)</span></code>`,In,fa,$n,h,Qe,ma,Xe,Ze,Ss,ao,so,Bs,no,to,Gs,eo,oo,qs,po,lo,Fn,da,xl=`<code class="language-r">animation <span class="token operator">&lt;-</span> max_lifts_final <span class="token percent-operator operator">%>%</span>
  ggplot<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  ggalt<span class="token operator">::</span>geom_dumbbell<span class="token punctuation">(</span>aes<span class="token punctuation">(</span>y <span class="token operator">=</span> lift<span class="token punctuation">,</span>
                    x <span class="token operator">=</span> female<span class="token punctuation">,</span> xend <span class="token operator">=</span> male<span class="token punctuation">)</span><span class="token punctuation">,</span>
                colour <span class="token operator">=</span> <span class="token string">"grey"</span><span class="token punctuation">,</span> size <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">,</span>
                colour_x <span class="token operator">=</span> <span class="token string">"#D6604C"</span><span class="token punctuation">,</span> colour_xend <span class="token operator">=</span> <span class="token string">"#395B74"</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  labs<span class="token punctuation">(</span>y <span class="token operator">=</span> element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
       x <span class="token operator">=</span> <span class="token string">"Top Lift Recorded (kg)"</span><span class="token punctuation">,</span>
       title <span class="token operator">=</span>  <span class="token string">"How &lt;span style='color:#D6604C'>Women&lt;/span> and &lt;span style='color:#395B74'>Men&lt;/span> Differ in Top Lifts"</span><span class="token punctuation">,</span>
  subtitle<span class="token operator">=</span><span class="token string">'&#92;nThis plot depicts the difference between the heaviest lifts for each sex at International Powerlifting Federation&#92;nevents over time. &#92;n &#92;n&#123;closest_state&#125;'</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  theme<span class="token punctuation">(</span>plot.title <span class="token operator">=</span> element_markdown<span class="token punctuation">(</span>lineheight <span class="token operator">=</span> <span class="token number">1.1</span><span class="token punctuation">,</span> size <span class="token operator">=</span> <span class="token number">25</span><span class="token punctuation">,</span> margin<span class="token operator">=</span>margin<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        plot.subtitle <span class="token operator">=</span> element_text<span class="token punctuation">(</span>size <span class="token operator">=</span> <span class="token number">15</span><span class="token punctuation">,</span> margin<span class="token operator">=</span>margin<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  scale_y_discrete<span class="token punctuation">(</span>labels <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token string">"Bench"</span><span class="token punctuation">,</span> <span class="token string">"Deadlift"</span><span class="token punctuation">,</span> <span class="token string">"Squat"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  geom_text<span class="token punctuation">(</span>aes<span class="token punctuation">(</span>x <span class="token operator">=</span> female<span class="token punctuation">,</span> y <span class="token operator">=</span> lift<span class="token punctuation">,</span> label <span class="token operator">=</span> paste<span class="token punctuation">(</span>female<span class="token punctuation">,</span> <span class="token string">"kg"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            color <span class="token operator">=</span> <span class="token string">"#D6604C"</span><span class="token punctuation">,</span> size <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">,</span> vjust <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  geom_text<span class="token punctuation">(</span>aes<span class="token punctuation">(</span>x <span class="token operator">=</span> male<span class="token punctuation">,</span> y <span class="token operator">=</span> lift<span class="token punctuation">,</span> label <span class="token operator">=</span> paste<span class="token punctuation">(</span>male<span class="token punctuation">,</span> <span class="token string">"kg"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            color <span class="token operator">=</span> <span class="token string">"#395B74"</span><span class="token punctuation">,</span> size <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">,</span> vjust <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  transition_states<span class="token punctuation">(</span>year<span class="token punctuation">,</span> transition_length <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">,</span> state_length <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  ease_aes<span class="token punctuation">(</span><span class="token string">'cubic-in-out'</span><span class="token punctuation">)</span>

a_gif <span class="token operator">&lt;-</span> animate<span class="token punctuation">(</span>animation<span class="token punctuation">,</span>
                 fps <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">,</span>
                 duration <span class="token operator">=</span> <span class="token number">25</span><span class="token punctuation">,</span>
                 width <span class="token operator">=</span> <span class="token number">800</span><span class="token punctuation">,</span> height <span class="token operator">=</span> <span class="token number">400</span><span class="token punctuation">,</span>
                 renderer <span class="token operator">=</span> gifski_renderer<span class="token punctuation">(</span><span class="token string">"outputs/animation.gif"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

a_gif</code>`,Pn,ha,Rn,_s,co,Ln,_a,Dl=`<code class="language-r">animation2 <span class="token operator">&lt;-</span> max_lifts_final <span class="token percent-operator operator">%>%</span>
  ungroup <span class="token percent-operator operator">%>%</span>
  mutate<span class="token punctuation">(</span>lift <span class="token operator">=</span> case_when<span class="token punctuation">(</span>lift <span class="token operator">==</span> <span class="token string">"best3bench_kg"</span> <span class="token operator">~</span> <span class="token string">"Bench"</span><span class="token punctuation">,</span>
                          lift <span class="token operator">==</span> <span class="token string">"best3squat_kg"</span> <span class="token operator">~</span> <span class="token string">"Squat"</span><span class="token punctuation">,</span>
                          lift <span class="token operator">==</span> <span class="token string">"best3deadlift_kg"</span> <span class="token operator">~</span> <span class="token string">"Deadlift"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  ggplot<span class="token punctuation">(</span>aes<span class="token punctuation">(</span>year<span class="token punctuation">,</span> diff<span class="token punctuation">,</span> group <span class="token operator">=</span> lift<span class="token punctuation">,</span> color <span class="token operator">=</span> lift<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  geom_line<span class="token punctuation">(</span>show.legend <span class="token operator">=</span> <span class="token boolean">FALSE</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  geom_segment<span class="token punctuation">(</span>aes<span class="token punctuation">(</span>xend <span class="token operator">=</span> <span class="token number">2019.1</span><span class="token punctuation">,</span> yend <span class="token operator">=</span> diff<span class="token punctuation">)</span><span class="token punctuation">,</span> linetype <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span> colour <span class="token operator">=</span> <span class="token string">'grey'</span><span class="token punctuation">,</span> show.legend <span class="token operator">=</span> <span class="token boolean">FALSE</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  geom_point<span class="token punctuation">(</span>size <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span> show.legend <span class="token operator">=</span> <span class="token boolean">FALSE</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  geom_text<span class="token punctuation">(</span>aes<span class="token punctuation">(</span>x <span class="token operator">=</span> <span class="token number">2019.1</span><span class="token punctuation">,</span> label <span class="token operator">=</span> lift<span class="token punctuation">,</span> color <span class="token operator">=</span> <span class="token string">"#000000"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> hjust <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> show.legend <span class="token operator">=</span> <span class="token boolean">FALSE</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  transition_reveal<span class="token punctuation">(</span>year<span class="token punctuation">)</span> <span class="token operator">+</span>
  coord_cartesian<span class="token punctuation">(</span>clip <span class="token operator">=</span> <span class="token string">'off'</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  theme<span class="token punctuation">(</span>plot.title <span class="token operator">=</span> element_text<span class="token punctuation">(</span>size <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  labs<span class="token punctuation">(</span>title <span class="token operator">=</span> <span class="token string">'Difference over time'</span><span class="token punctuation">,</span>
       y <span class="token operator">=</span> <span class="token string">'Difference (kg)'</span><span class="token punctuation">,</span>
       x <span class="token operator">=</span> element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  theme<span class="token punctuation">(</span>plot.margin <span class="token operator">=</span> margin<span class="token punctuation">(</span><span class="token number">5.5</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">5.5</span><span class="token punctuation">,</span> <span class="token number">5.5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

b_gif <span class="token operator">&lt;-</span> animate<span class="token punctuation">(</span>animation2<span class="token punctuation">,</span>
                 fps <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">,</span>
                 duration <span class="token operator">=</span> <span class="token number">25</span><span class="token punctuation">,</span>
        width <span class="token operator">=</span> <span class="token number">800</span><span class="token punctuation">,</span> height <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">,</span>
        renderer <span class="token operator">=</span> gifski_renderer<span class="token punctuation">(</span><span class="token string">"outputs/animation2.gif"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

b_gif</code>`,An,ga,Cn,C,ro,Ns,io,uo,ba,ko,fo,Hn,va,Il=`<code class="language-r">library<span class="token punctuation">(</span>magick<span class="token punctuation">)</span>
a_mgif <span class="token operator">&lt;-</span> image_read<span class="token punctuation">(</span>a_gif<span class="token punctuation">)</span>
b_mgif <span class="token operator">&lt;-</span> image_read<span class="token punctuation">(</span>b_gif<span class="token punctuation">)</span>

new_gif <span class="token operator">&lt;-</span> image_append<span class="token punctuation">(</span>c<span class="token punctuation">(</span>a_mgif<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> b_mgif<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> stack <span class="token operator">=</span> <span class="token boolean">TRUE</span><span class="token punctuation">)</span>
<span class="token keyword">for</span><span class="token punctuation">(</span>i <span class="token keyword">in</span> <span class="token number">2</span><span class="token operator">:</span><span class="token number">250</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
  combined <span class="token operator">&lt;-</span> image_append<span class="token punctuation">(</span>c<span class="token punctuation">(</span>a_mgif<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> b_mgif<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> stack <span class="token operator">=</span> <span class="token boolean">TRUE</span><span class="token punctuation">)</span>
  new_gif <span class="token operator">&lt;-</span> c<span class="token punctuation">(</span>new_gif<span class="token punctuation">,</span> combined<span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span></code>`,zn,U,mo,Ws,ho,_o,jn,H,q,go,Ys,bo,vo,Us,Eo,wo,yo,Ea,To,Vs,xo,Do,Io,wa,$o,Js,Fo,Po,On,D,Ro,Ks,Lo,Ao,Qs,Co,Ho,Xs,zo,jo,Mn,gs,Oo,Sn,ya,Bn,V,Mo,Zs,So,Bo,Gn;return Q=new an({props:{src:"../images/post/tidy-tuesday-powerlifting/unnamed-chunk-11-1.gif",alt:"A combination of the two aforementioned plots. The top plot is the animated dumbbell plot, and the bottom is a line chart. In combination, they allow the user to see the magnitude of differences between men and women, as well as how these differences have evolved over time."}}),fa=new an({props:{src:"../images/post/tidy-tuesday-powerlifting/unnamed-chunk-8-1.png",alt:"A static dumbbell plot which represents male and female \u2018top lifts' in 2019."}}),ha=new an({props:{src:"../images/post/tidy-tuesday-powerlifting/unnamed-chunk-9-1.gif",alt:"An animated dumbbell plot which represents male and female \u2018top lifts' over time. Each tick of the animation represents a new year."}}),ga=new an({props:{src:"../images/post/tidy-tuesday-powerlifting/unnamed-chunk-10-1.gif",alt:"An animated line chart that shows, year by year, the difference in male and female top lifts on the Y axis. Each tick of the chart shows a new year."}}),ya=new an({props:{src:"../images/post/tidy-tuesday-powerlifting/unnamed-chunk-11-1.gif",alt:"A combination of the two aforementioned plots. The top plot is the animated dumbbell plot, and the bottom is a line chart. In combination, they allow the user to see the magnitude of differences between men and women, as well as how these differences have evolved over time."}}),{c(){f=o("p"),F=t("In this tutorial, I\u2019m going to outline the steps necessary to create an animated, faceted plot in R. Although rare, combining animated plots can be a powerful way to showcase different elements of the same data (as you\u2019ll see below)."),P=i(),d=o("p"),m=t("In this example, I\u2019m using weightlifting data from the International Powerlifting Federation. For the purposes of this tutorial, we\u2019ll look at "),g=o("em"),xa=t("differences in top lifts by sex"),Qn=t(". A faceted, animated plot is a great option because we\u2019d like to observe "),Rs=o("strong"),Xn=t("the magnitude of these differences"),Zn=t(" and "),Ls=o("strong"),at=t("how these differences have evolved over time"),st=t("."),sn=i(),Da=o("p"),nt=t("We\u2019ll be creating this GIF:"),nn=i(),xs(Q.$$.fragment),tn=i(),X=o("h2"),Ia=o("a"),tt=t("Environment setup"),en=i(),R=o("p"),et=t("These are the packages we\u2019ll need to get started. In my case, I use a "),Z=o("a"),ot=t("custom theme"),pt=t(" I\u2019ve developed for stylistic purposes. Feel free to instead run "),As=o("code"),lt=t("theme_set(theme_minimal())"),ct=t(" rather than use my theme!"),on=i(),aa=o("pre"),pn=i(),sa=o("h2"),$a=o("a"),rt=t("Load and clean data"),ln=i(),Fa=o("p"),it=t("I\u2019ve already done a lot of the data cleaning for you. If you\u2019d like to follow along, here\u2019s the process (or, skip ahead!)."),cn=i(),Pa=o("p"),ut=t("Here, we\u2019ll do some minor cleaning and then reshape the three lifts into one column:"),rn=i(),na=o("pre"),un=i(),N=o("p"),kt=t("For my visualization, I\u2019m only concerned with the "),Cs=o("em"),ft=t("heaviest"),mt=t(` lifts from
each year:`),kn=i(),ta=o("pre"),fn=i(),L=o("p"),dt=t("The first visualization we\u2019ll create for the final output is a "),Hs=o("strong"),ht=t("dumbbell plot"),_t=t(". Curious what that is, or how to make it in R? "),ea=o("a"),gt=t("Check out my other post on the topic"),bt=t("."),mn=i(),W=o("p"),vt=t(`In order to construct a dumbbell plot, we need both male and female
observations in the same row. For this, we use the `),zs=o("code"),Et=t("spread"),wt=t(" function."),dn=i(),oa=o("pre"),hn=i(),Ra=o("p"),yt=t("Now, let\u2019s construct a dataframe for each sex:"),_n=i(),pa=o("pre"),gn=i(),La=o("p"),Tt=t("And join them:"),bn=i(),la=o("pre"),vn=i(),Aa=o("p"),xt=t("Not following along, or want to check your progress? Here\u2019s what our data looks like in its final form:"),En=i(),ca=o("div"),ra=o("table"),js=o("thead"),b=o("tr"),Ca=o("th"),Dt=t("year"),It=i(),Ha=o("th"),$t=t("lift"),Ft=i(),za=o("th"),Pt=t("male"),Rt=i(),ja=o("th"),Lt=t("female"),At=i(),Oa=o("th"),Ct=t("diff"),Ht=i(),_=o("tbody"),v=o("tr"),Ma=o("td"),zt=t("1980"),jt=i(),Sa=o("td"),Ot=t("best3bench_kg"),Mt=i(),Ba=o("td"),St=t("262.5"),Bt=i(),Ga=o("td"),Gt=t("120"),qt=i(),qa=o("td"),Nt=t("142.5"),Wt=i(),E=o("tr"),Na=o("td"),Yt=t("1980"),Ut=i(),Wa=o("td"),Vt=t("best3deadlift_kg"),Jt=i(),Ya=o("td"),Kt=t("395"),Qt=i(),Ua=o("td"),Xt=t("205"),Zt=i(),Va=o("td"),ae=t("190"),se=i(),w=o("tr"),Ja=o("td"),ne=t("1980"),te=i(),Ka=o("td"),ee=t("best3squat_kg"),oe=i(),Qa=o("td"),pe=t("417.5"),le=i(),Xa=o("td"),ce=t("230"),re=i(),Za=o("td"),ie=t("187.5"),ue=i(),y=o("tr"),as=o("td"),ke=t("1981"),fe=i(),ss=o("td"),me=t("best3bench_kg"),de=i(),ns=o("td"),he=t("245"),_e=i(),ts=o("td"),ge=t("150"),be=i(),es=o("td"),ve=t("95"),Ee=i(),T=o("tr"),os=o("td"),we=t("1981"),ye=i(),ps=o("td"),Te=t("best3deadlift_kg"),xe=i(),ls=o("td"),De=t("367.5"),Ie=i(),cs=o("td"),$e=t("230"),Fe=i(),rs=o("td"),Pe=t("137.5"),Re=i(),x=o("tr"),is=o("td"),Le=t("1981"),Ae=i(),us=o("td"),Ce=t("best3squat_kg"),He=i(),ks=o("td"),ze=t("427.5"),je=i(),fs=o("td"),Oe=t("215"),Me=i(),ms=o("td"),Se=t("212.5"),wn=i(),ia=o("h2"),ds=o("a"),Be=t("Visualize!"),yn=i(),hs=o("p"),Ge=t("Finally, we can construct the visualization."),Tn=i(),A=o("p"),qe=t("First, we can create a static visualization using "),Os=o("code"),Ne=t("ggalt"),We=t(" (again, my "),ua=o("a"),Ye=t("blog post"),Ue=t(" covers the details of this step)."),xn=i(),Y=o("p"),Ve=t("You can fast forward the creation of individual plots if you\u2019re only interested in the "),Ms=o("strong"),Je=t("combination"),Ke=t(" of the two. You\u2019ll find that at the end of this post!"),Dn=i(),ka=o("pre"),In=i(),xs(fa.$$.fragment),$n=i(),h=o("p"),Qe=t("Finally, we animate, using Thomas Pedersen\u2019s wonderful "),ma=o("a"),Xe=t(`gganimate
package`),Ze=t(". This is a relatively easy step, because "),Ss=o("code"),ao=t("gganimate"),so=t(" only requires two extra lines of code: "),Bs=o("code"),no=t("transition_states"),to=t(" and "),Gs=o("code"),eo=t("ease_aes"),oo=t(". Then, we pass it into the "),qs=o("code"),po=t("animate"),lo=t(" function!"),Fn=i(),da=o("pre"),Pn=i(),xs(ha.$$.fragment),Rn=i(),_s=o("p"),co=t("But in our case, we\u2019d like to include another GIF: a line chart of differences over time."),Ln=i(),_a=o("pre"),An=i(),xs(ga.$$.fragment),Cn=i(),C=o("p"),ro=t("Finally, we\u2019ll combine them using "),Ns=o("code"),io=t("magick"),uo=t(" (thanks to "),ba=o("a"),ko=t(`this
post`),fo=t("):"),Hn=i(),va=o("pre"),zn=i(),U=o("p"),mo=t("What\u2019s happening here? Essentially, we\u2019re using the power of "),Ws=o("code"),ho=t("magick"),_o=t(" to:"),jn=i(),H=o("ol"),q=o("li"),go=t("Read in all of the "),Ys=o("em"),bo=t("individual images"),vo=t(" ("),Us=o("code"),Eo=t("image_read"),wo=t(") from each GIF (after all, a GIF is just a series of images!)."),yo=i(),Ea=o("li"),To=t("For the first frame, stack the two images on top of each other ("),Vs=o("code"),xo=t("image_append"),Do=t("), so plot 1 is above plot 2."),Io=i(),wa=o("li"),$o=t("For the rest of the frames (in my case, the next 249, because my GIF had 250 frames), replicate this and combine it with the first frame (this is the "),Js=o("code"),Fo=t("for"),Po=t(" loop)."),On=i(),D=o("p"),Ro=t("Here, we specify "),Ks=o("code"),Lo=t("stack = TRUE"),Ao=t(" so that one plot is "),Qs=o("strong"),Co=t("above"),Ho=t(" the other. If you\u2019d like to place them side-by-side, specify "),Xs=o("code"),zo=t("stack = FALSE"),jo=t("."),Mn=i(),gs=o("p"),Oo=t("In combination, the process results in our final output:"),Sn=i(),xs(ya.$$.fragment),Bn=i(),V=o("p"),Mo=t("In this view, we can see the magnitude of the differences both relatively and absolutely (top chart), "),Zs=o("em"),So=t("and"),Bo=t(" we can see how these differences change over time (bottom chart). The power of an animated, combined chart!"),this.h()},l(a){f=p(a,"P",{});var c=l(f);F=e(c,"In this tutorial, I\u2019m going to outline the steps necessary to create an animated, faceted plot in R. Although rare, combining animated plots can be a powerful way to showcase different elements of the same data (as you\u2019ll see below)."),c.forEach(n),P=u(a),d=p(a,"P",{});var J=l(d);m=e(J,"In this example, I\u2019m using weightlifting data from the International Powerlifting Federation. For the purposes of this tutorial, we\u2019ll look at "),g=p(J,"EM",{});var qo=l(g);xa=e(qo,"differences in top lifts by sex"),qo.forEach(n),Qn=e(J,". A faceted, animated plot is a great option because we\u2019d like to observe "),Rs=p(J,"STRONG",{});var No=l(Rs);Xn=e(No,"the magnitude of these differences"),No.forEach(n),Zn=e(J," and "),Ls=p(J,"STRONG",{});var Wo=l(Ls);at=e(Wo,"how these differences have evolved over time"),Wo.forEach(n),st=e(J,"."),J.forEach(n),sn=u(a),Da=p(a,"P",{});var Yo=l(Da);nt=e(Yo,"We\u2019ll be creating this GIF:"),Yo.forEach(n),nn=u(a),Ds(Q.$$.fragment,a),tn=u(a),X=p(a,"H2",{id:!0});var Uo=l(X);Ia=p(Uo,"A",{href:!0});var Vo=l(Ia);tt=e(Vo,"Environment setup"),Vo.forEach(n),Uo.forEach(n),en=u(a),R=p(a,"P",{});var bs=l(R);et=e(bs,"These are the packages we\u2019ll need to get started. In my case, I use a "),Z=p(bs,"A",{href:!0,rel:!0});var Jo=l(Z);ot=e(Jo,"custom theme"),Jo.forEach(n),pt=e(bs," I\u2019ve developed for stylistic purposes. Feel free to instead run "),As=p(bs,"CODE",{});var Ko=l(As);lt=e(Ko,"theme_set(theme_minimal())"),Ko.forEach(n),ct=e(bs," rather than use my theme!"),bs.forEach(n),on=u(a),aa=p(a,"PRE",{class:!0});var $l=l(aa);$l.forEach(n),pn=u(a),sa=p(a,"H2",{id:!0});var Qo=l(sa);$a=p(Qo,"A",{href:!0});var Xo=l($a);rt=e(Xo,"Load and clean data"),Xo.forEach(n),Qo.forEach(n),ln=u(a),Fa=p(a,"P",{});var Zo=l(Fa);it=e(Zo,"I\u2019ve already done a lot of the data cleaning for you. If you\u2019d like to follow along, here\u2019s the process (or, skip ahead!)."),Zo.forEach(n),cn=u(a),Pa=p(a,"P",{});var ap=l(Pa);ut=e(ap,"Here, we\u2019ll do some minor cleaning and then reshape the three lifts into one column:"),ap.forEach(n),rn=u(a),na=p(a,"PRE",{class:!0});var Fl=l(na);Fl.forEach(n),un=u(a),N=p(a,"P",{});var qn=l(N);kt=e(qn,"For my visualization, I\u2019m only concerned with the "),Cs=p(qn,"EM",{});var sp=l(Cs);ft=e(sp,"heaviest"),sp.forEach(n),mt=e(qn,` lifts from
each year:`),qn.forEach(n),kn=u(a),ta=p(a,"PRE",{class:!0});var Pl=l(ta);Pl.forEach(n),fn=u(a),L=p(a,"P",{});var vs=l(L);dt=e(vs,"The first visualization we\u2019ll create for the final output is a "),Hs=p(vs,"STRONG",{});var np=l(Hs);ht=e(np,"dumbbell plot"),np.forEach(n),_t=e(vs,". Curious what that is, or how to make it in R? "),ea=p(vs,"A",{href:!0,rel:!0});var tp=l(ea);gt=e(tp,"Check out my other post on the topic"),tp.forEach(n),bt=e(vs,"."),vs.forEach(n),mn=u(a),W=p(a,"P",{});var Nn=l(W);vt=e(Nn,`In order to construct a dumbbell plot, we need both male and female
observations in the same row. For this, we use the `),zs=p(Nn,"CODE",{});var ep=l(zs);Et=e(ep,"spread"),ep.forEach(n),wt=e(Nn," function."),Nn.forEach(n),dn=u(a),oa=p(a,"PRE",{class:!0});var Rl=l(oa);Rl.forEach(n),hn=u(a),Ra=p(a,"P",{});var op=l(Ra);yt=e(op,"Now, let\u2019s construct a dataframe for each sex:"),op.forEach(n),_n=u(a),pa=p(a,"PRE",{class:!0});var Ll=l(pa);Ll.forEach(n),gn=u(a),La=p(a,"P",{});var pp=l(La);Tt=e(pp,"And join them:"),pp.forEach(n),bn=u(a),la=p(a,"PRE",{class:!0});var Al=l(la);Al.forEach(n),vn=u(a),Aa=p(a,"P",{});var lp=l(Aa);xt=e(lp,"Not following along, or want to check your progress? Here\u2019s what our data looks like in its final form:"),lp.forEach(n),En=u(a),ca=p(a,"DIV",{class:!0});var cp=l(ca);ra=p(cp,"TABLE",{});var Wn=l(ra);js=p(Wn,"THEAD",{});var rp=l(js);b=p(rp,"TR",{});var z=l(b);Ca=p(z,"TH",{align:!0});var ip=l(Ca);Dt=e(ip,"year"),ip.forEach(n),It=u(z),Ha=p(z,"TH",{align:!0});var up=l(Ha);$t=e(up,"lift"),up.forEach(n),Ft=u(z),za=p(z,"TH",{align:!0});var kp=l(za);Pt=e(kp,"male"),kp.forEach(n),Rt=u(z),ja=p(z,"TH",{align:!0});var fp=l(ja);Lt=e(fp,"female"),fp.forEach(n),At=u(z),Oa=p(z,"TH",{align:!0});var mp=l(Oa);Ct=e(mp,"diff"),mp.forEach(n),z.forEach(n),rp.forEach(n),Ht=u(Wn),_=p(Wn,"TBODY",{});var I=l(_);v=p(I,"TR",{});var j=l(v);Ma=p(j,"TD",{align:!0});var dp=l(Ma);zt=e(dp,"1980"),dp.forEach(n),jt=u(j),Sa=p(j,"TD",{align:!0});var hp=l(Sa);Ot=e(hp,"best3bench_kg"),hp.forEach(n),Mt=u(j),Ba=p(j,"TD",{align:!0});var _p=l(Ba);St=e(_p,"262.5"),_p.forEach(n),Bt=u(j),Ga=p(j,"TD",{align:!0});var gp=l(Ga);Gt=e(gp,"120"),gp.forEach(n),qt=u(j),qa=p(j,"TD",{align:!0});var bp=l(qa);Nt=e(bp,"142.5"),bp.forEach(n),j.forEach(n),Wt=u(I),E=p(I,"TR",{});var O=l(E);Na=p(O,"TD",{align:!0});var vp=l(Na);Yt=e(vp,"1980"),vp.forEach(n),Ut=u(O),Wa=p(O,"TD",{align:!0});var Ep=l(Wa);Vt=e(Ep,"best3deadlift_kg"),Ep.forEach(n),Jt=u(O),Ya=p(O,"TD",{align:!0});var wp=l(Ya);Kt=e(wp,"395"),wp.forEach(n),Qt=u(O),Ua=p(O,"TD",{align:!0});var yp=l(Ua);Xt=e(yp,"205"),yp.forEach(n),Zt=u(O),Va=p(O,"TD",{align:!0});var Tp=l(Va);ae=e(Tp,"190"),Tp.forEach(n),O.forEach(n),se=u(I),w=p(I,"TR",{});var M=l(w);Ja=p(M,"TD",{align:!0});var xp=l(Ja);ne=e(xp,"1980"),xp.forEach(n),te=u(M),Ka=p(M,"TD",{align:!0});var Dp=l(Ka);ee=e(Dp,"best3squat_kg"),Dp.forEach(n),oe=u(M),Qa=p(M,"TD",{align:!0});var Ip=l(Qa);pe=e(Ip,"417.5"),Ip.forEach(n),le=u(M),Xa=p(M,"TD",{align:!0});var $p=l(Xa);ce=e($p,"230"),$p.forEach(n),re=u(M),Za=p(M,"TD",{align:!0});var Fp=l(Za);ie=e(Fp,"187.5"),Fp.forEach(n),M.forEach(n),ue=u(I),y=p(I,"TR",{});var S=l(y);as=p(S,"TD",{align:!0});var Pp=l(as);ke=e(Pp,"1981"),Pp.forEach(n),fe=u(S),ss=p(S,"TD",{align:!0});var Rp=l(ss);me=e(Rp,"best3bench_kg"),Rp.forEach(n),de=u(S),ns=p(S,"TD",{align:!0});var Lp=l(ns);he=e(Lp,"245"),Lp.forEach(n),_e=u(S),ts=p(S,"TD",{align:!0});var Ap=l(ts);ge=e(Ap,"150"),Ap.forEach(n),be=u(S),es=p(S,"TD",{align:!0});var Cp=l(es);ve=e(Cp,"95"),Cp.forEach(n),S.forEach(n),Ee=u(I),T=p(I,"TR",{});var B=l(T);os=p(B,"TD",{align:!0});var Hp=l(os);we=e(Hp,"1981"),Hp.forEach(n),ye=u(B),ps=p(B,"TD",{align:!0});var zp=l(ps);Te=e(zp,"best3deadlift_kg"),zp.forEach(n),xe=u(B),ls=p(B,"TD",{align:!0});var jp=l(ls);De=e(jp,"367.5"),jp.forEach(n),Ie=u(B),cs=p(B,"TD",{align:!0});var Op=l(cs);$e=e(Op,"230"),Op.forEach(n),Fe=u(B),rs=p(B,"TD",{align:!0});var Mp=l(rs);Pe=e(Mp,"137.5"),Mp.forEach(n),B.forEach(n),Re=u(I),x=p(I,"TR",{});var G=l(x);is=p(G,"TD",{align:!0});var Sp=l(is);Le=e(Sp,"1981"),Sp.forEach(n),Ae=u(G),us=p(G,"TD",{align:!0});var Bp=l(us);Ce=e(Bp,"best3squat_kg"),Bp.forEach(n),He=u(G),ks=p(G,"TD",{align:!0});var Gp=l(ks);ze=e(Gp,"427.5"),Gp.forEach(n),je=u(G),fs=p(G,"TD",{align:!0});var qp=l(fs);Oe=e(qp,"215"),qp.forEach(n),Me=u(G),ms=p(G,"TD",{align:!0});var Np=l(ms);Se=e(Np,"212.5"),Np.forEach(n),G.forEach(n),I.forEach(n),Wn.forEach(n),cp.forEach(n),wn=u(a),ia=p(a,"H2",{id:!0});var Wp=l(ia);ds=p(Wp,"A",{href:!0});var Yp=l(ds);Be=e(Yp,"Visualize!"),Yp.forEach(n),Wp.forEach(n),yn=u(a),hs=p(a,"P",{});var Up=l(hs);Ge=e(Up,"Finally, we can construct the visualization."),Up.forEach(n),Tn=u(a),A=p(a,"P",{});var Es=l(A);qe=e(Es,"First, we can create a static visualization using "),Os=p(Es,"CODE",{});var Vp=l(Os);Ne=e(Vp,"ggalt"),Vp.forEach(n),We=e(Es," (again, my "),ua=p(Es,"A",{href:!0,rel:!0});var Jp=l(ua);Ye=e(Jp,"blog post"),Jp.forEach(n),Ue=e(Es," covers the details of this step)."),Es.forEach(n),xn=u(a),Y=p(a,"P",{});var Yn=l(Y);Ve=e(Yn,"You can fast forward the creation of individual plots if you\u2019re only interested in the "),Ms=p(Yn,"STRONG",{});var Kp=l(Ms);Je=e(Kp,"combination"),Kp.forEach(n),Ke=e(Yn," of the two. You\u2019ll find that at the end of this post!"),Yn.forEach(n),Dn=u(a),ka=p(a,"PRE",{class:!0});var Cl=l(ka);Cl.forEach(n),In=u(a),Ds(fa.$$.fragment,a),$n=u(a),h=p(a,"P",{});var $=l(h);Qe=e($,"Finally, we animate, using Thomas Pedersen\u2019s wonderful "),ma=p($,"A",{href:!0,rel:!0});var Qp=l(ma);Xe=e(Qp,`gganimate
package`),Qp.forEach(n),Ze=e($,". This is a relatively easy step, because "),Ss=p($,"CODE",{});var Xp=l(Ss);ao=e(Xp,"gganimate"),Xp.forEach(n),so=e($," only requires two extra lines of code: "),Bs=p($,"CODE",{});var Zp=l(Bs);no=e(Zp,"transition_states"),Zp.forEach(n),to=e($," and "),Gs=p($,"CODE",{});var al=l(Gs);eo=e(al,"ease_aes"),al.forEach(n),oo=e($,". Then, we pass it into the "),qs=p($,"CODE",{});var sl=l(qs);po=e(sl,"animate"),sl.forEach(n),lo=e($," function!"),$.forEach(n),Fn=u(a),da=p(a,"PRE",{class:!0});var Hl=l(da);Hl.forEach(n),Pn=u(a),Ds(ha.$$.fragment,a),Rn=u(a),_s=p(a,"P",{});var nl=l(_s);co=e(nl,"But in our case, we\u2019d like to include another GIF: a line chart of differences over time."),nl.forEach(n),Ln=u(a),_a=p(a,"PRE",{class:!0});var zl=l(_a);zl.forEach(n),An=u(a),Ds(ga.$$.fragment,a),Cn=u(a),C=p(a,"P",{});var ws=l(C);ro=e(ws,"Finally, we\u2019ll combine them using "),Ns=p(ws,"CODE",{});var tl=l(Ns);io=e(tl,"magick"),tl.forEach(n),uo=e(ws," (thanks to "),ba=p(ws,"A",{href:!0,rel:!0});var el=l(ba);ko=e(el,`this
post`),el.forEach(n),fo=e(ws,"):"),ws.forEach(n),Hn=u(a),va=p(a,"PRE",{class:!0});var jl=l(va);jl.forEach(n),zn=u(a),U=p(a,"P",{});var Un=l(U);mo=e(Un,"What\u2019s happening here? Essentially, we\u2019re using the power of "),Ws=p(Un,"CODE",{});var ol=l(Ws);ho=e(ol,"magick"),ol.forEach(n),_o=e(Un," to:"),Un.forEach(n),jn=u(a),H=p(a,"OL",{});var ys=l(H);q=p(ys,"LI",{});var Ts=l(q);go=e(Ts,"Read in all of the "),Ys=p(Ts,"EM",{});var pl=l(Ys);bo=e(pl,"individual images"),pl.forEach(n),vo=e(Ts," ("),Us=p(Ts,"CODE",{});var ll=l(Us);Eo=e(ll,"image_read"),ll.forEach(n),wo=e(Ts,") from each GIF (after all, a GIF is just a series of images!)."),Ts.forEach(n),yo=u(ys),Ea=p(ys,"LI",{});var Vn=l(Ea);To=e(Vn,"For the first frame, stack the two images on top of each other ("),Vs=p(Vn,"CODE",{});var cl=l(Vs);xo=e(cl,"image_append"),cl.forEach(n),Do=e(Vn,"), so plot 1 is above plot 2."),Vn.forEach(n),Io=u(ys),wa=p(ys,"LI",{});var Jn=l(wa);$o=e(Jn,"For the rest of the frames (in my case, the next 249, because my GIF had 250 frames), replicate this and combine it with the first frame (this is the "),Js=p(Jn,"CODE",{});var rl=l(Js);Fo=e(rl,"for"),rl.forEach(n),Po=e(Jn," loop)."),Jn.forEach(n),ys.forEach(n),On=u(a),D=p(a,"P",{});var K=l(D);Ro=e(K,"Here, we specify "),Ks=p(K,"CODE",{});var il=l(Ks);Lo=e(il,"stack = TRUE"),il.forEach(n),Ao=e(K," so that one plot is "),Qs=p(K,"STRONG",{});var ul=l(Qs);Co=e(ul,"above"),ul.forEach(n),Ho=e(K," the other. If you\u2019d like to place them side-by-side, specify "),Xs=p(K,"CODE",{});var kl=l(Xs);zo=e(kl,"stack = FALSE"),kl.forEach(n),jo=e(K,"."),K.forEach(n),Mn=u(a),gs=p(a,"P",{});var fl=l(gs);Oo=e(fl,"In combination, the process results in our final output:"),fl.forEach(n),Sn=u(a),Ds(ya.$$.fragment,a),Bn=u(a),V=p(a,"P",{});var Kn=l(V);Mo=e(Kn,"In this view, we can see the magnitude of the differences both relatively and absolutely (top chart), "),Zs=p(Kn,"EM",{});var ml=l(Zs);So=e(ml,"and"),ml.forEach(n),Bo=e(Kn," we can see how these differences change over time (bottom chart). The power of an animated, combined chart!"),Kn.forEach(n),this.h()},h(){k(Ia,"href","#environment-setup"),k(X,"id","environment-setup"),k(Z,"href","https://github.com/connorrothschild/cr"),k(Z,"rel","nofollow"),k(aa,"class","language-r"),k($a,"href","#load-and-clean-data"),k(sa,"id","load-and-clean-data"),k(na,"class","language-r"),k(ta,"class","language-r"),k(ea,"href","https://www.connorrothschild.com/post/dumbbell-plots/"),k(ea,"rel","nofollow"),k(oa,"class","language-r"),k(pa,"class","language-r"),k(la,"class","language-r"),k(Ca,"align","left"),k(Ha,"align","left"),k(za,"align","left"),k(ja,"align","left"),k(Oa,"align","left"),k(Ma,"align","left"),k(Sa,"align","left"),k(Ba,"align","left"),k(Ga,"align","left"),k(qa,"align","left"),k(Na,"align","left"),k(Wa,"align","left"),k(Ya,"align","left"),k(Ua,"align","left"),k(Va,"align","left"),k(Ja,"align","left"),k(Ka,"align","left"),k(Qa,"align","left"),k(Xa,"align","left"),k(Za,"align","left"),k(as,"align","left"),k(ss,"align","left"),k(ns,"align","left"),k(ts,"align","left"),k(es,"align","left"),k(os,"align","left"),k(ps,"align","left"),k(ls,"align","left"),k(cs,"align","left"),k(rs,"align","left"),k(is,"align","left"),k(us,"align","left"),k(ks,"align","left"),k(fs,"align","left"),k(ms,"align","left"),k(ca,"class","table-container"),k(ds,"href","#visualize"),k(ia,"id","visualize"),k(ua,"href","https://www.connorrothschild.com/post/dumbbell-plots/"),k(ua,"rel","nofollow"),k(ka,"class","language-r"),k(ma,"href","https://github.com/thomasp85/gganimate"),k(ma,"rel","nofollow"),k(da,"class","language-r"),k(_a,"class","language-r"),k(ba,"href","https://github.com/thomasp85/gganimate/wiki/Animation-Composition"),k(ba,"rel","nofollow"),k(va,"class","language-r")},m(a,c){r(a,f,c),s(f,F),r(a,P,c),r(a,d,c),s(d,m),s(d,g),s(g,xa),s(d,Qn),s(d,Rs),s(Rs,Xn),s(d,Zn),s(d,Ls),s(Ls,at),s(d,st),r(a,sn,c),r(a,Da,c),s(Da,nt),r(a,nn,c),Is(Q,a,c),r(a,tn,c),r(a,X,c),s(X,Ia),s(Ia,tt),r(a,en,c),r(a,R,c),s(R,et),s(R,Z),s(Z,ot),s(R,pt),s(R,As),s(As,lt),s(R,ct),r(a,on,c),r(a,aa,c),aa.innerHTML=gl,r(a,pn,c),r(a,sa,c),s(sa,$a),s($a,rt),r(a,ln,c),r(a,Fa,c),s(Fa,it),r(a,cn,c),r(a,Pa,c),s(Pa,ut),r(a,rn,c),r(a,na,c),na.innerHTML=bl,r(a,un,c),r(a,N,c),s(N,kt),s(N,Cs),s(Cs,ft),s(N,mt),r(a,kn,c),r(a,ta,c),ta.innerHTML=vl,r(a,fn,c),r(a,L,c),s(L,dt),s(L,Hs),s(Hs,ht),s(L,_t),s(L,ea),s(ea,gt),s(L,bt),r(a,mn,c),r(a,W,c),s(W,vt),s(W,zs),s(zs,Et),s(W,wt),r(a,dn,c),r(a,oa,c),oa.innerHTML=El,r(a,hn,c),r(a,Ra,c),s(Ra,yt),r(a,_n,c),r(a,pa,c),pa.innerHTML=wl,r(a,gn,c),r(a,La,c),s(La,Tt),r(a,bn,c),r(a,la,c),la.innerHTML=yl,r(a,vn,c),r(a,Aa,c),s(Aa,xt),r(a,En,c),r(a,ca,c),s(ca,ra),s(ra,js),s(js,b),s(b,Ca),s(Ca,Dt),s(b,It),s(b,Ha),s(Ha,$t),s(b,Ft),s(b,za),s(za,Pt),s(b,Rt),s(b,ja),s(ja,Lt),s(b,At),s(b,Oa),s(Oa,Ct),s(ra,Ht),s(ra,_),s(_,v),s(v,Ma),s(Ma,zt),s(v,jt),s(v,Sa),s(Sa,Ot),s(v,Mt),s(v,Ba),s(Ba,St),s(v,Bt),s(v,Ga),s(Ga,Gt),s(v,qt),s(v,qa),s(qa,Nt),s(_,Wt),s(_,E),s(E,Na),s(Na,Yt),s(E,Ut),s(E,Wa),s(Wa,Vt),s(E,Jt),s(E,Ya),s(Ya,Kt),s(E,Qt),s(E,Ua),s(Ua,Xt),s(E,Zt),s(E,Va),s(Va,ae),s(_,se),s(_,w),s(w,Ja),s(Ja,ne),s(w,te),s(w,Ka),s(Ka,ee),s(w,oe),s(w,Qa),s(Qa,pe),s(w,le),s(w,Xa),s(Xa,ce),s(w,re),s(w,Za),s(Za,ie),s(_,ue),s(_,y),s(y,as),s(as,ke),s(y,fe),s(y,ss),s(ss,me),s(y,de),s(y,ns),s(ns,he),s(y,_e),s(y,ts),s(ts,ge),s(y,be),s(y,es),s(es,ve),s(_,Ee),s(_,T),s(T,os),s(os,we),s(T,ye),s(T,ps),s(ps,Te),s(T,xe),s(T,ls),s(ls,De),s(T,Ie),s(T,cs),s(cs,$e),s(T,Fe),s(T,rs),s(rs,Pe),s(_,Re),s(_,x),s(x,is),s(is,Le),s(x,Ae),s(x,us),s(us,Ce),s(x,He),s(x,ks),s(ks,ze),s(x,je),s(x,fs),s(fs,Oe),s(x,Me),s(x,ms),s(ms,Se),r(a,wn,c),r(a,ia,c),s(ia,ds),s(ds,Be),r(a,yn,c),r(a,hs,c),s(hs,Ge),r(a,Tn,c),r(a,A,c),s(A,qe),s(A,Os),s(Os,Ne),s(A,We),s(A,ua),s(ua,Ye),s(A,Ue),r(a,xn,c),r(a,Y,c),s(Y,Ve),s(Y,Ms),s(Ms,Je),s(Y,Ke),r(a,Dn,c),r(a,ka,c),ka.innerHTML=Tl,r(a,In,c),Is(fa,a,c),r(a,$n,c),r(a,h,c),s(h,Qe),s(h,ma),s(ma,Xe),s(h,Ze),s(h,Ss),s(Ss,ao),s(h,so),s(h,Bs),s(Bs,no),s(h,to),s(h,Gs),s(Gs,eo),s(h,oo),s(h,qs),s(qs,po),s(h,lo),r(a,Fn,c),r(a,da,c),da.innerHTML=xl,r(a,Pn,c),Is(ha,a,c),r(a,Rn,c),r(a,_s,c),s(_s,co),r(a,Ln,c),r(a,_a,c),_a.innerHTML=Dl,r(a,An,c),Is(ga,a,c),r(a,Cn,c),r(a,C,c),s(C,ro),s(C,Ns),s(Ns,io),s(C,uo),s(C,ba),s(ba,ko),s(C,fo),r(a,Hn,c),r(a,va,c),va.innerHTML=Il,r(a,zn,c),r(a,U,c),s(U,mo),s(U,Ws),s(Ws,ho),s(U,_o),r(a,jn,c),r(a,H,c),s(H,q),s(q,go),s(q,Ys),s(Ys,bo),s(q,vo),s(q,Us),s(Us,Eo),s(q,wo),s(H,yo),s(H,Ea),s(Ea,To),s(Ea,Vs),s(Vs,xo),s(Ea,Do),s(H,Io),s(H,wa),s(wa,$o),s(wa,Js),s(Js,Fo),s(wa,Po),r(a,On,c),r(a,D,c),s(D,Ro),s(D,Ks),s(Ks,Lo),s(D,Ao),s(D,Qs),s(Qs,Co),s(D,Ho),s(D,Xs),s(Xs,zo),s(D,jo),r(a,Mn,c),r(a,gs,c),s(gs,Oo),r(a,Sn,c),Is(ya,a,c),r(a,Bn,c),r(a,V,c),s(V,Mo),s(V,Zs),s(Zs,So),s(V,Bo),Gn=!0},p:Gl,i(a){Gn||($s(Q.$$.fragment,a),$s(fa.$$.fragment,a),$s(ha.$$.fragment,a),$s(ga.$$.fragment,a),$s(ya.$$.fragment,a),Gn=!0)},o(a){Fs(Q.$$.fragment,a),Fs(fa.$$.fragment,a),Fs(ha.$$.fragment,a),Fs(ga.$$.fragment,a),Fs(ya.$$.fragment,a),Gn=!1},d(a){a&&n(f),a&&n(P),a&&n(d),a&&n(sn),a&&n(Da),a&&n(nn),Ps(Q,a),a&&n(tn),a&&n(X),a&&n(en),a&&n(R),a&&n(on),a&&n(aa),a&&n(pn),a&&n(sa),a&&n(ln),a&&n(Fa),a&&n(cn),a&&n(Pa),a&&n(rn),a&&n(na),a&&n(un),a&&n(N),a&&n(kn),a&&n(ta),a&&n(fn),a&&n(L),a&&n(mn),a&&n(W),a&&n(dn),a&&n(oa),a&&n(hn),a&&n(Ra),a&&n(_n),a&&n(pa),a&&n(gn),a&&n(La),a&&n(bn),a&&n(la),a&&n(vn),a&&n(Aa),a&&n(En),a&&n(ca),a&&n(wn),a&&n(ia),a&&n(yn),a&&n(hs),a&&n(Tn),a&&n(A),a&&n(xn),a&&n(Y),a&&n(Dn),a&&n(ka),a&&n(In),Ps(fa,a),a&&n($n),a&&n(h),a&&n(Fn),a&&n(da),a&&n(Pn),Ps(ha,a),a&&n(Rn),a&&n(_s),a&&n(Ln),a&&n(_a),a&&n(An),Ps(ga,a),a&&n(Cn),a&&n(C),a&&n(Hn),a&&n(va),a&&n(zn),a&&n(U),a&&n(jn),a&&n(H),a&&n(On),a&&n(D),a&&n(Mn),a&&n(gs),a&&n(Sn),Ps(ya,a),a&&n(Bn),a&&n(V)}}}function Wl(Ta){let f,F;const P=[Ta[0],_l];let d={$$slots:{default:[Nl]},$$scope:{ctx:Ta}};for(let m=0;m<P.length;m+=1)d=Go(d,P[m]);return f=new ql({props:d}),{c(){xs(f.$$.fragment)},l(m){Ds(f.$$.fragment,m)},m(m,g){Is(f,m,g),F=!0},p(m,[g]){const xa=g&1?Bl(P,[g&1&&dl(m[0]),g&0&&dl(_l)]):{};g&2&&(xa.$$scope={dirty:g,ctx:m}),f.$set(xa)},i(m){F||($s(f.$$.fragment,m),F=!0)},o(m){Fs(f.$$.fragment,m),F=!1},d(m){Ps(f,m)}}}const _l={layout:"blog",title:"How to Combine Animated Plots in R",description:"Leveraging the power of {gganimate} and {magick} to combine animated plots for your viewers.",date:"2019-10-09",image:"tidy-tuesday-powerlifting/header.png",archived:!0,tags:["r","tutorial"]};function Yl(Ta,f,F){return Ta.$$set=P=>{F(0,f=Go(Go({},f),hl(P)))},f=hl(f),[f]}class tc extends Ol{constructor(f){super();Ml(this,f,Yl,Wl,Sl,{})}}export{tc as default,_l as metadata};
